{
	"id": "617e3942f16a353bb63eb670afee5653",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/contracts/DAORegistry.sol": {
				"content": "/**\r\n *Submitted for verification at polygonscan.com on 2023-03-28\r\n*/\r\n\r\n/** \r\n *  SourceUnit: /home/mathias/Aragon/core/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\r\n*/\r\n            \r\n////// SPDX-License-Identifier-FLATTEN-SUPPRESS-WARNING: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC1967 implementation slot:\r\n * ```\r\n * contract ERC1967 {\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\r\n */\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/** \r\n *  SourceUnit: /home/mathias/Aragon/core/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\r\n*/\r\n            \r\n////// SPDX-License-Identifier-FLATTEN-SUPPRESS-WARNING: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [////IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * ////IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/** \r\n *  SourceUnit: /home/mathias/Aragon/core/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\r\n*/\r\n            \r\n////// SPDX-License-Identifier-FLATTEN-SUPPRESS-WARNING: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\r\n * proxy whose upgrades are fully controlled by the current implementation.\r\n */\r\ninterface IERC1822Proxiable {\r\n    /**\r\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\r\n     * address.\r\n     *\r\n     * ////IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\r\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\r\n     * function revert if invoked through a proxy.\r\n     */\r\n    function proxiableUUID() external view returns (bytes32);\r\n}\r\n\r\n\r\n\r\n\r\n/** \r\n *  SourceUnit: /home/mathias/Aragon/core/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\r\n*/\r\n            \r\n////// SPDX-License-Identifier-FLATTEN-SUPPRESS-WARNING: MIT\r\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\r\n */\r\ninterface IBeacon {\r\n    /**\r\n     * @dev Must return an address that can be used as a delegate call target.\r\n     *\r\n     * {BeaconProxy} will check that this address is a contract.\r\n     */\r\n    function implementation() external view returns (address);\r\n}\r\n\r\n\r\n\r\n\r\n/** \r\n *  SourceUnit: /home/mathias/Aragon/core/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\r\n*/\r\n            \r\n////// SPDX-License-Identifier-FLATTEN-SUPPRESS-WARNING: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\r\n\r\npragma solidity ^0.8.2;\r\n\r\n////import \"../beacon/IBeacon.sol\";\r\n////import \"../../interfaces/draft-IERC1822.sol\";\r\n////import \"../../utils/Address.sol\";\r\n////import \"../../utils/StorageSlot.sol\";\r\n\r\n/**\r\n * @dev This abstract contract provides getters and event emitting update functions for\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\r\n *\r\n * _Available since v4.1._\r\n *\r\n * @custom:oz-upgrades-unsafe-allow delegatecall\r\n */\r\nabstract contract ERC1967Upgrade {\r\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\r\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\r\n\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function _getImplementation() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 implementation slot.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeTo(address newImplementation) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade with additional setup call.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeToAndCall(\r\n        address newImplementation,\r\n        bytes memory data,\r\n        bool forceCall\r\n    ) internal {\r\n        _upgradeTo(newImplementation);\r\n        if (data.length > 0 || forceCall) {\r\n            Address.functionDelegateCall(newImplementation, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeToAndCallUUPS(\r\n        address newImplementation,\r\n        bytes memory data,\r\n        bool forceCall\r\n    ) internal {\r\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\r\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\r\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\r\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\r\n            _setImplementation(newImplementation);\r\n        } else {\r\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\r\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\r\n            } catch {\r\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\r\n            }\r\n            _upgradeToAndCall(newImplementation, data, forceCall);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Storage slot with the admin of the contract.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n     * @dev Emitted when the admin account has changed.\r\n     */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     */\r\n    function _getAdmin() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 admin slot.\r\n     */\r\n    function _setAdmin(address newAdmin) private {\r\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\r\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     *\r\n     * Emits an {AdminChanged} event.\r\n     */\r\n    function _changeAdmin(address newAdmin) internal {\r\n        emit AdminChanged(_getAdmin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\r\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\r\n     */\r\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\r\n\r\n    /**\r\n     * @dev Emitted when the beacon is upgraded.\r\n     */\r\n    event BeaconUpgraded(address indexed beacon);\r\n\r\n    /**\r\n     * @dev Returns the current beacon.\r\n     */\r\n    function _getBeacon() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\r\n     */\r\n    function _setBeacon(address newBeacon) private {\r\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\r\n        require(\r\n            Address.isContract(IBeacon(newBeacon).implementation()),\r\n            \"ERC1967: beacon implementation is not a contract\"\r\n        );\r\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\r\n    }\r\n\r\n    /**\r\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\r\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\r\n     *\r\n     * Emits a {BeaconUpgraded} event.\r\n     */\r\n    function _upgradeBeaconToAndCall(\r\n        address newBeacon,\r\n        bytes memory data,\r\n        bool forceCall\r\n    ) internal {\r\n        _setBeacon(newBeacon);\r\n        emit BeaconUpgraded(newBeacon);\r\n        if (data.length > 0 || forceCall) {\r\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/** \r\n *  SourceUnit: /home/mathias/Aragon/core/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\r\n*/\r\n            \r\n////// SPDX-License-Identifier-FLATTEN-SUPPRESS-WARNING: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\r\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\r\n * be specified by overriding the virtual {_implementation} function.\r\n *\r\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\r\n * different contract through the {_delegate} function.\r\n *\r\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\r\n */\r\nabstract contract Proxy {\r\n    /**\r\n     * @dev Delegates the current call to `implementation`.\r\n     *\r\n     * This function does not return to its internal call site, it will return directly to the external caller.\r\n     */\r\n    function _delegate(address implementation) internal virtual {\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 {\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                return(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\r\n     * and {_fallback} should delegate.\r\n     */\r\n    function _implementation() internal view virtual returns (address);\r\n\r\n    /**\r\n     * @dev Delegates the current call to the address returned by `_implementation()`.\r\n     *\r\n     * This function does not return to its internal call site, it will return directly to the external caller.\r\n     */\r\n    function _fallback() internal virtual {\r\n        _beforeFallback();\r\n        _delegate(_implementation());\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\r\n     * function in the contract matches the call data.\r\n     */\r\n    fallback() external payable virtual {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\r\n     * is empty.\r\n     */\r\n    receive() external payable virtual {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\r\n     * call, or as part of the Solidity `fallback` or `receive` functions.\r\n     *\r\n     * If overridden should call `super._beforeFallback()`.\r\n     */\r\n    function _beforeFallback() internal virtual {}\r\n}\r\n\r\n\r\n/** \r\n *  SourceUnit: /home/mathias/Aragon/core/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\r\n*/\r\n\r\n////// SPDX-License-Identifier-FLATTEN-SUPPRESS-WARNING: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n////import \"../Proxy.sol\";\r\n////import \"./ERC1967Upgrade.sol\";\r\n\r\n/**\r\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\r\n * implementation address that can be changed. This address is stored in storage in the location specified by\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\r\n * implementation behind the proxy.\r\n */\r\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\r\n    /**\r\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\r\n     *\r\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\r\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\r\n     */\r\n    constructor(address _logic, bytes memory _data) payable {\r\n        _upgradeToAndCall(_logic, _data, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function _implementation() internal view virtual override returns (address impl) {\r\n        return ERC1967Upgrade._getImplementation();\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"packages/contracts/DAORegistry.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/DAORegistry.sol\":3371:12578  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/DAORegistry.sol\":3371:12578  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203c6694c293ccd5ceecb9159c0c6924124352115a3f762f0ba2ac91df89fc1fbf64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c6694c293ccd5ceecb9159c0c6924124352115a3f762f0ba2ac91df89fc1fbf64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY PUSH7 0x94C293CCD5CEEC 0xB9 ISZERO SWAP13 0xC PUSH10 0x24124352115A3F762F0B LOG2 0xAC SWAP2 0xDF DUP10 0xFC 0x1F 0xBF PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3371:9207:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3371:9207:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c6694c293ccd5ceecb9159c0c6924124352115a3f762f0ba2ac91df89fc1fbf64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY PUSH7 0x94C293CCD5CEEC 0xB9 ISZERO SWAP13 0xC PUSH10 0x24124352115A3F762F0B LOG2 0xAC SWAP2 0xDF DUP10 0xFC 0x1F 0xBF PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3371:9207:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3371,
									"end": 12578,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c6694c293ccd5ceecb9159c0c6924124352115a3f762f0ba2ac91df89fc1fbf64736f6c63430008110033",
									".code": [
										{
											"begin": 3371,
											"end": 12578,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 12578,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 12578,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 12578,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3371,
											"end": 12578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 12578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 12578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 12578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 12578,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"packages/contracts/DAORegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/DAORegistry.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/DAORegistry.sol\":{\"keccak256\":\"0xc73d38cdf2c90c3e5f71c7fffe8d1966fd6d85459a73331b01cac6b2bb0c7f8b\",\"urls\":[\"bzz-raw://9c7fb5bc4d9cddfe00fdf2eeddcd0a29b30d2409b712f099c9a21d0e565a46ce\",\"dweb:/ipfs/Qmc8zPjtZxMcknYWCFivUKXfrG9nDLda4mXsvmXkUPLBnV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/DAORegistry.sol\":25430:26170  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  mstore(0x40, 0x80)\n    /* \"packages/contracts/DAORegistry.sol\":25828:25942  constructor(address _logic, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"packages/contracts/DAORegistry.sol\":25895:25934  _upgradeToAndCall(_logic, _data, false) */\n  tag_5\n    /* \"packages/contracts/DAORegistry.sol\":25913:25919  _logic */\n  dup3\n    /* \"packages/contracts/DAORegistry.sol\":25921:25926  _data */\n  dup3\n    /* \"packages/contracts/DAORegistry.sol\":25928:25933  false */\n  0x00\n    /* \"packages/contracts/DAORegistry.sol\":25895:25912  _upgradeToAndCall */\n  tag_6\n    /* \"packages/contracts/DAORegistry.sol\":25895:25934  _upgradeToAndCall(_logic, _data, false) */\n  jump\t// in\ntag_5:\n    /* \"packages/contracts/DAORegistry.sol\":25828:25942  constructor(address _logic, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"packages/contracts/DAORegistry.sol\":25430:26170  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  jump(tag_56)\n    /* \"packages/contracts/DAORegistry.sol\":16728:17032  function _upgradeToAndCall(... */\ntag_6:\n    /* \"packages/contracts/DAORegistry.sol\":16871:16900  _upgradeTo(newImplementation) */\n  tag_9\n    /* \"packages/contracts/DAORegistry.sol\":16882:16899  newImplementation */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":16871:16881  _upgradeTo */\n  tag_10\n    /* \"packages/contracts/DAORegistry.sol\":16871:16900  _upgradeTo(newImplementation) */\n  jump\t// in\ntag_9:\n    /* \"packages/contracts/DAORegistry.sol\":16929:16930  0 */\n  0x00\n    /* \"packages/contracts/DAORegistry.sol\":16915:16919  data */\n  dup3\n    /* \"packages/contracts/DAORegistry.sol\":16915:16926  data.length */\n  mload\n    /* \"packages/contracts/DAORegistry.sol\":16915:16930  data.length > 0 */\n  gt\n    /* \"packages/contracts/DAORegistry.sol\":16915:16943  data.length > 0 || forceCall */\n  dup1\n  tag_11\n  jumpi\n  pop\n    /* \"packages/contracts/DAORegistry.sol\":16934:16943  forceCall */\n  dup1\n    /* \"packages/contracts/DAORegistry.sol\":16915:16943  data.length > 0 || forceCall */\ntag_11:\n    /* \"packages/contracts/DAORegistry.sol\":16911:17025  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"packages/contracts/DAORegistry.sol\":16960:17013  Address.functionDelegateCall(newImplementation, data) */\n  tag_13\n    /* \"packages/contracts/DAORegistry.sol\":16989:17006  newImplementation */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":17008:17012  data */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":16960:16988  Address.functionDelegateCall */\n  or(tag_0_10, shl(0x20, tag_14))\n    /* \"packages/contracts/DAORegistry.sol\":16960:17013  Address.functionDelegateCall(newImplementation, data) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"packages/contracts/DAORegistry.sol\":16911:17025  if (data.length > 0 || forceCall) {... */\ntag_12:\n    /* \"packages/contracts/DAORegistry.sol\":16728:17032  function _upgradeToAndCall(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"packages/contracts/DAORegistry.sol\":16432:16587  function _upgradeTo(address newImplementation) internal {... */\ntag_10:\n    /* \"packages/contracts/DAORegistry.sol\":16499:16536  _setImplementation(newImplementation) */\n  tag_16\n    /* \"packages/contracts/DAORegistry.sol\":16518:16535  newImplementation */\n  dup2\n    /* \"packages/contracts/DAORegistry.sol\":16499:16517  _setImplementation */\n  tag_17\n    /* \"packages/contracts/DAORegistry.sol\":16499:16536  _setImplementation(newImplementation) */\n  jump\t// in\ntag_16:\n    /* \"packages/contracts/DAORegistry.sol\":16552:16579  Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"packages/contracts/DAORegistry.sol\":16432:16587  function _upgradeTo(address newImplementation) internal {... */\n  pop\n  jump\t// out\n    /* \"packages/contracts/DAORegistry.sol\":9815:10015  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_14:\n    /* \"packages/contracts/DAORegistry.sol\":9898:9910  bytes memory */\n  0x60\n    /* \"packages/contracts/DAORegistry.sol\":9930:10007  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_19\n    /* \"packages/contracts/DAORegistry.sol\":9951:9957  target */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":9959:9963  data */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":9930:10007  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"packages/contracts/DAORegistry.sol\":9930:9950  functionDelegateCall */\n  tag_20\n    /* \"packages/contracts/DAORegistry.sol\":9930:10007  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  jump\t// in\ntag_19:\n    /* \"packages/contracts/DAORegistry.sol\":9923:10007  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap4\n    /* \"packages/contracts/DAORegistry.sol\":9815:10015  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"packages/contracts/DAORegistry.sol\":16057:16319  function _setImplementation(address newImplementation) private {... */\ntag_17:\n    /* \"packages/contracts/DAORegistry.sol\":16139:16176  Address.isContract(newImplementation) */\n  tag_22\n    /* \"packages/contracts/DAORegistry.sol\":16158:16175  newImplementation */\n  dup2\n    /* \"packages/contracts/DAORegistry.sol\":16139:16157  Address.isContract */\n  or(tag_0_11, shl(0x20, tag_23))\n    /* \"packages/contracts/DAORegistry.sol\":16139:16176  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"packages/contracts/DAORegistry.sol\":16131:16226  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1671:1673   */\n  0x20\n    /* \"packages/contracts/DAORegistry.sol\":16131:16226  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1653:1674   */\n  mstore\n    /* \"#utility.yul\":1710:1712   */\n  0x2d\n    /* \"#utility.yul\":1690:1708   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1683:1713   */\n  mstore\n    /* \"#utility.yul\":1749:1783   */\n  0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n    /* \"#utility.yul\":1729:1747   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1722:1784   */\n  mstore\n  shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":1800:1818   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1793:1836   */\n  mstore\n    /* \"#utility.yul\":1853:1872   */\n  0x84\n  add\n    /* \"packages/contracts/DAORegistry.sol\":16131:16226  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"packages/contracts/DAORegistry.sol\":16294:16311  newImplementation */\n  dup1\n    /* \"packages/contracts/DAORegistry.sol\":16237:16285  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  tag_27\n    /* \"packages/contracts/DAORegistry.sol\":15538:15604  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"packages/contracts/DAORegistry.sol\":16264:16284  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"packages/contracts/DAORegistry.sol\":16237:16263  StorageSlot.getAddressSlot */\n  or(tag_0_12, shl(0x20, tag_28))\n    /* \"packages/contracts/DAORegistry.sol\":16237:16285  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"packages/contracts/DAORegistry.sol\":16237:16311  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"packages/contracts/DAORegistry.sol\":16057:16319  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"packages/contracts/DAORegistry.sol\":10209:10541  function functionDelegateCall(... */\ntag_20:\n    /* \"packages/contracts/DAORegistry.sol\":10354:10366  bytes memory */\n  0x60\n    /* \"packages/contracts/DAORegistry.sol\":10380:10392  bool success */\n  0x00\n    /* \"packages/contracts/DAORegistry.sol\":10394:10417  bytes memory returndata */\n  dup1\n    /* \"packages/contracts/DAORegistry.sol\":10421:10427  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"packages/contracts/DAORegistry.sol\":10421:10440  target.delegatecall */\n  and\n    /* \"packages/contracts/DAORegistry.sol\":10441:10445  data */\n  dup6\n    /* \"packages/contracts/DAORegistry.sol\":10421:10446  target.delegatecall(data) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_34\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_33)\ntag_34:\n  0x60\n  swap2\n  pop\ntag_33:\n  pop\n    /* \"packages/contracts/DAORegistry.sol\":10379:10446  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"packages/contracts/DAORegistry.sol\":10464:10533  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  tag_35\n    /* \"packages/contracts/DAORegistry.sol\":10491:10497  target */\n  dup7\n    /* \"packages/contracts/DAORegistry.sol\":10379:10446  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":10520:10532  errorMessage */\n  dup8\n    /* \"packages/contracts/DAORegistry.sol\":10464:10490  verifyCallResultFromTarget */\n  tag_36\n    /* \"packages/contracts/DAORegistry.sol\":10464:10533  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  jump\t// in\ntag_35:\n    /* \"packages/contracts/DAORegistry.sol\":10457:10533  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  swap7\n    /* \"packages/contracts/DAORegistry.sol\":10209:10541  function functionDelegateCall(... */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"packages/contracts/DAORegistry.sol\":4383:4709  function isContract(address account) internal view returns (bool) {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"packages/contracts/DAORegistry.sol\":4678:4697  account.code.length */\n  and\n  extcodesize\n    /* \"packages/contracts/DAORegistry.sol\":4678:4701  account.code.length > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"packages/contracts/DAORegistry.sol\":4383:4709  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"packages/contracts/DAORegistry.sol\":1903:2098  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_28:\n    /* \"packages/contracts/DAORegistry.sol\":2076:2080  slot */\n  swap1\n    /* \"packages/contracts/DAORegistry.sol\":1903:2098  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  jump\t// out\n    /* \"packages/contracts/DAORegistry.sol\":10837:11481  function verifyCallResultFromTarget(... */\ntag_36:\n    /* \"packages/contracts/DAORegistry.sol\":11022:11034  bytes memory */\n  0x60\n    /* \"packages/contracts/DAORegistry.sol\":11051:11058  success */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":11047:11474  if (success) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"packages/contracts/DAORegistry.sol\":11079:11089  returndata */\n  dup3\n    /* \"packages/contracts/DAORegistry.sol\":11079:11096  returndata.length */\n  mload\n    /* \"packages/contracts/DAORegistry.sol\":11100:11101  0 */\n  0x00\n    /* \"packages/contracts/DAORegistry.sol\":11079:11101  returndata.length == 0 */\n  sub\n    /* \"packages/contracts/DAORegistry.sol\":11075:11365  if (returndata.length == 0) {... */\n  tag_43\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"packages/contracts/DAORegistry.sol\":4678:4697  account.code.length */\n  dup6\n  and\n  extcodesize\n    /* \"packages/contracts/DAORegistry.sol\":11289:11349  require(isContract(target), \"Address: call to non-contract\") */\n  tag_43\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2377:2379   */\n  0x20\n    /* \"packages/contracts/DAORegistry.sol\":11289:11349  require(isContract(target), \"Address: call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2359:2380   */\n  mstore\n    /* \"#utility.yul\":2416:2418   */\n  0x1d\n    /* \"#utility.yul\":2396:2414   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2389:2419   */\n  mstore\n    /* \"#utility.yul\":2455:2486   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"#utility.yul\":2435:2453   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2428:2487   */\n  mstore\n    /* \"#utility.yul\":2504:2522   */\n  0x64\n  add\n    /* \"packages/contracts/DAORegistry.sol\":11289:11349  require(isContract(target), \"Address: call to non-contract\") */\n  tag_25\n    /* \"#utility.yul\":2175:2528   */\n  jump\n    /* \"packages/contracts/DAORegistry.sol\":11289:11349  require(isContract(target), \"Address: call to non-contract\") */\ntag_43:\n  pop\n    /* \"packages/contracts/DAORegistry.sol\":11386:11396  returndata */\n  dup2\n    /* \"packages/contracts/DAORegistry.sol\":11379:11396  return returndata */\n  jump(tag_47)\n    /* \"packages/contracts/DAORegistry.sol\":11047:11474  if (success) {... */\ntag_40:\n    /* \"packages/contracts/DAORegistry.sol\":11429:11462  _revert(returndata, errorMessage) */\n  tag_47\n    /* \"packages/contracts/DAORegistry.sol\":11437:11447  returndata */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":11449:11461  errorMessage */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":11429:11436  _revert */\n  tag_48\n    /* \"packages/contracts/DAORegistry.sol\":11429:11462  _revert(returndata, errorMessage) */\n  jump\t// in\ntag_47:\n    /* \"packages/contracts/DAORegistry.sol\":10837:11481  function verifyCallResultFromTarget(... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"packages/contracts/DAORegistry.sol\":12023:12575  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\ntag_48:\n    /* \"packages/contracts/DAORegistry.sol\":12184:12201  returndata.length */\n  dup2\n  mload\n    /* \"packages/contracts/DAORegistry.sol\":12184:12205  returndata.length > 0 */\n  iszero\n    /* \"packages/contracts/DAORegistry.sol\":12180:12568  if (returndata.length > 0) {... */\n  tag_50\n  jumpi\n    /* \"packages/contracts/DAORegistry.sol\":12416:12426  returndata */\n  dup2\n    /* \"packages/contracts/DAORegistry.sol\":12410:12427  mload(returndata) */\n  mload\n    /* \"packages/contracts/DAORegistry.sol\":12473:12488  returndata_size */\n  dup1\n    /* \"packages/contracts/DAORegistry.sol\":12460:12470  returndata */\n  dup4\n    /* \"packages/contracts/DAORegistry.sol\":12456:12458  32 */\n  0x20\n    /* \"packages/contracts/DAORegistry.sol\":12452:12471  add(32, returndata) */\n  add\n    /* \"packages/contracts/DAORegistry.sol\":12445:12489  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"packages/contracts/DAORegistry.sol\":12180:12568  if (returndata.length > 0) {... */\ntag_50:\n    /* \"packages/contracts/DAORegistry.sol\":12543:12555  errorMessage */\n  dup1\n    /* \"packages/contracts/DAORegistry.sol\":12536:12556  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_53\n  jump\t// in\n    /* \"#utility.yul\":14:141   */\ntag_54:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:396   */\ntag_55:\n    /* \"#utility.yul\":231:232   */\n  0x00\n    /* \"#utility.yul\":241:354   */\ntag_59:\n    /* \"#utility.yul\":255:261   */\n  dup4\n    /* \"#utility.yul\":252:253   */\n  dup2\n    /* \"#utility.yul\":249:262   */\n  lt\n    /* \"#utility.yul\":241:354   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":331:342   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":325:343   */\n  mload\n    /* \"#utility.yul\":312:323   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":305:344   */\n  mstore\n    /* \"#utility.yul\":277:279   */\n  0x20\n    /* \"#utility.yul\":270:280   */\n  add\n    /* \"#utility.yul\":241:354   */\n  jump(tag_59)\ntag_61:\n  pop\n  pop\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":370:386   */\n  swap2\n  add\n    /* \"#utility.yul\":363:390   */\n  mstore\n    /* \"#utility.yul\":146:396   */\n  jump\t// out\n    /* \"#utility.yul\":401:1464   */\ntag_2:\n    /* \"#utility.yul\":489:495   */\n  0x00\n    /* \"#utility.yul\":497:503   */\n  dup1\n    /* \"#utility.yul\":550:552   */\n  0x40\n    /* \"#utility.yul\":538:547   */\n  dup4\n    /* \"#utility.yul\":529:536   */\n  dup6\n    /* \"#utility.yul\":525:548   */\n  sub\n    /* \"#utility.yul\":521:553   */\n  slt\n    /* \"#utility.yul\":518:570   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":518:570   */\ntag_63:\n    /* \"#utility.yul\":592:608   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":637:668   */\n  dup2\n  and\n    /* \"#utility.yul\":627:669   */\n  dup2\n  eq\n    /* \"#utility.yul\":617:687   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":683:684   */\n  0x00\n    /* \"#utility.yul\":680:681   */\n  dup1\n    /* \"#utility.yul\":673:685   */\n  revert\n    /* \"#utility.yul\":617:687   */\ntag_64:\n    /* \"#utility.yul\":755:757   */\n  0x20\n    /* \"#utility.yul\":740:758   */\n  dup5\n  add\n    /* \"#utility.yul\":734:759   */\n  mload\n    /* \"#utility.yul\":706:711   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":808:822   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":805:839   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":835:836   */\n  0x00\n    /* \"#utility.yul\":832:833   */\n  dup1\n    /* \"#utility.yul\":825:837   */\n  revert\n    /* \"#utility.yul\":805:839   */\ntag_65:\n    /* \"#utility.yul\":873:879   */\n  dup2\n    /* \"#utility.yul\":862:871   */\n  dup6\n    /* \"#utility.yul\":858:880   */\n  add\n    /* \"#utility.yul\":848:880   */\n  swap2\n  pop\n    /* \"#utility.yul\":918:925   */\n  dup6\n    /* \"#utility.yul\":911:915   */\n  0x1f\n    /* \"#utility.yul\":907:909   */\n  dup4\n    /* \"#utility.yul\":903:916   */\n  add\n    /* \"#utility.yul\":899:926   */\n  slt\n    /* \"#utility.yul\":889:944   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":940:941   */\n  0x00\n    /* \"#utility.yul\":937:938   */\n  dup1\n    /* \"#utility.yul\":930:942   */\n  revert\n    /* \"#utility.yul\":889:944   */\ntag_66:\n    /* \"#utility.yul\":969:971   */\n  dup2\n    /* \"#utility.yul\":963:972   */\n  mload\n    /* \"#utility.yul\":991:993   */\n  dup2\n    /* \"#utility.yul\":987:989   */\n  dup2\n    /* \"#utility.yul\":984:994   */\n  gt\n    /* \"#utility.yul\":981:1017   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":997:1015   */\n  tag_68\n  tag_54\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1072:1074   */\n  0x40\n    /* \"#utility.yul\":1066:1075   */\n  mload\n    /* \"#utility.yul\":1040:1042   */\n  0x1f\n    /* \"#utility.yul\":1126:1139   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1122:1144   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1146:1148   */\n  0x3f\n    /* \"#utility.yul\":1118:1149   */\n  add\n    /* \"#utility.yul\":1114:1154   */\n  and\n    /* \"#utility.yul\":1102:1155   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1170:1188   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1190:1212   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1167:1213   */\n  or\n    /* \"#utility.yul\":1164:1236   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1216:1234   */\n  tag_70\n  tag_54\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1256:1266   */\n  dup2\n    /* \"#utility.yul\":1252:1254   */\n  0x40\n    /* \"#utility.yul\":1245:1267   */\n  mstore\n    /* \"#utility.yul\":1291:1293   */\n  dup3\n    /* \"#utility.yul\":1283:1289   */\n  dup2\n    /* \"#utility.yul\":1276:1294   */\n  mstore\n    /* \"#utility.yul\":1331:1338   */\n  dup9\n    /* \"#utility.yul\":1326:1328   */\n  0x20\n    /* \"#utility.yul\":1321:1323   */\n  dup5\n    /* \"#utility.yul\":1317:1319   */\n  dup8\n    /* \"#utility.yul\":1313:1324   */\n  add\n    /* \"#utility.yul\":1309:1329   */\n  add\n    /* \"#utility.yul\":1306:1339   */\n  gt\n    /* \"#utility.yul\":1303:1356   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1349:1350   */\n  dup1\n    /* \"#utility.yul\":1342:1354   */\n  revert\n    /* \"#utility.yul\":1303:1356   */\ntag_71:\n    /* \"#utility.yul\":1365:1433   */\n  tag_72\n    /* \"#utility.yul\":1430:1432   */\n  dup4\n    /* \"#utility.yul\":1425:1427   */\n  0x20\n    /* \"#utility.yul\":1417:1423   */\n  dup4\n    /* \"#utility.yul\":1413:1428   */\n  add\n    /* \"#utility.yul\":1408:1410   */\n  0x20\n    /* \"#utility.yul\":1404:1406   */\n  dup9\n    /* \"#utility.yul\":1400:1411   */\n  add\n    /* \"#utility.yul\":1365:1433   */\n  tag_55\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1452:1458   */\n  dup1\n    /* \"#utility.yul\":1442:1458   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":401:1464   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1883:2170   */\ntag_31:\n    /* \"#utility.yul\":2012:2015   */\n  0x00\n    /* \"#utility.yul\":2050:2056   */\n  dup3\n    /* \"#utility.yul\":2044:2057   */\n  mload\n    /* \"#utility.yul\":2066:2132   */\n  tag_75\n    /* \"#utility.yul\":2125:2131   */\n  dup2\n    /* \"#utility.yul\":2120:2123   */\n  dup5\n    /* \"#utility.yul\":2113:2117   */\n  0x20\n    /* \"#utility.yul\":2105:2111   */\n  dup8\n    /* \"#utility.yul\":2101:2118   */\n  add\n    /* \"#utility.yul\":2066:2132   */\n  tag_55\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2148:2164   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":1883:2170   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2533:2929   */\ntag_53:\n    /* \"#utility.yul\":2682:2684   */\n  0x20\n    /* \"#utility.yul\":2671:2680   */\n  dup2\n    /* \"#utility.yul\":2664:2685   */\n  mstore\n    /* \"#utility.yul\":2645:2649   */\n  0x00\n    /* \"#utility.yul\":2714:2720   */\n  dup3\n    /* \"#utility.yul\":2708:2721   */\n  mload\n    /* \"#utility.yul\":2757:2763   */\n  dup1\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2741:2750   */\n  dup5\n    /* \"#utility.yul\":2737:2755   */\n  add\n    /* \"#utility.yul\":2730:2764   */\n  mstore\n    /* \"#utility.yul\":2773:2852   */\n  tag_78\n    /* \"#utility.yul\":2845:2851   */\n  dup2\n    /* \"#utility.yul\":2840:2842   */\n  0x40\n    /* \"#utility.yul\":2829:2838   */\n  dup6\n    /* \"#utility.yul\":2825:2843   */\n  add\n    /* \"#utility.yul\":2820:2822   */\n  0x20\n    /* \"#utility.yul\":2812:2818   */\n  dup8\n    /* \"#utility.yul\":2808:2823   */\n  add\n    /* \"#utility.yul\":2773:2852   */\n  tag_55\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2913:2915   */\n  0x1f\n    /* \"#utility.yul\":2892:2907   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":2888:2917   */\n  and\n    /* \"#utility.yul\":2873:2918   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":2920:2922   */\n  0x40\n    /* \"#utility.yul\":2869:2923   */\n  add\n  swap3\n    /* \"#utility.yul\":2533:2929   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_56:\n    /* \"packages/contracts/DAORegistry.sol\":25430:26170  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"packages/contracts/DAORegistry.sol\":25430:26170  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"packages/contracts/DAORegistry.sol\":24325:24336  _fallback() */\n      tag_5\n        /* \"packages/contracts/DAORegistry.sol\":24325:24334  _fallback */\n      tag_6\n        /* \"packages/contracts/DAORegistry.sol\":24325:24336  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"packages/contracts/DAORegistry.sol\":25430:26170  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n      stop\n    tag_2:\n        /* \"packages/contracts/DAORegistry.sol\":24094:24105  _fallback() */\n      tag_5\n        /* \"packages/contracts/DAORegistry.sol\":23731:23844  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"packages/contracts/DAORegistry.sol\":23808:23836  _delegate(_implementation()) */\n      tag_16\n        /* \"packages/contracts/DAORegistry.sol\":23818:23835  _implementation() */\n      tag_17\n        /* \"packages/contracts/DAORegistry.sol\":23818:23833  _implementation */\n      tag_18\n        /* \"packages/contracts/DAORegistry.sol\":23818:23835  _implementation() */\n      jump\t// in\n    tag_17:\n        /* \"packages/contracts/DAORegistry.sol\":23808:23817  _delegate */\n      tag_19\n        /* \"packages/contracts/DAORegistry.sol\":23808:23836  _delegate(_implementation()) */\n      jump\t// in\n    tag_16:\n        /* \"packages/contracts/DAORegistry.sol\":23731:23844  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"packages/contracts/DAORegistry.sol\":9815:10015  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_10:\n        /* \"packages/contracts/DAORegistry.sol\":9898:9910  bytes memory */\n      0x60\n        /* \"packages/contracts/DAORegistry.sol\":9930:10007  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_21\n        /* \"packages/contracts/DAORegistry.sol\":9951:9957  target */\n      dup4\n        /* \"packages/contracts/DAORegistry.sol\":9959:9963  data */\n      dup4\n        /* \"packages/contracts/DAORegistry.sol\":9930:10007  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"packages/contracts/DAORegistry.sol\":9930:9950  functionDelegateCall */\n      tag_22\n        /* \"packages/contracts/DAORegistry.sol\":9930:10007  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_21:\n        /* \"packages/contracts/DAORegistry.sol\":9923:10007  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"packages/contracts/DAORegistry.sol\":9815:10015  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/DAORegistry.sol\":4383:4709  function isContract(address account) internal view returns (bool) {... */\n    tag_11:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/DAORegistry.sol\":4678:4697  account.code.length */\n      and\n      extcodesize\n        /* \"packages/contracts/DAORegistry.sol\":4678:4701  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"packages/contracts/DAORegistry.sol\":4383:4709  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"packages/contracts/DAORegistry.sol\":1903:2098  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_12:\n        /* \"packages/contracts/DAORegistry.sol\":2076:2080  slot */\n      swap1\n        /* \"packages/contracts/DAORegistry.sol\":1903:2098  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      jump\t// out\n        /* \"packages/contracts/DAORegistry.sol\":26025:26167  function _implementation() internal view virtual override returns (address impl) {... */\n    tag_18:\n        /* \"packages/contracts/DAORegistry.sol\":26092:26104  address impl */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":26124:26159  ERC1967Upgrade._getImplementation() */\n      tag_27\n        /* \"packages/contracts/DAORegistry.sol\":15538:15604  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"packages/contracts/DAORegistry.sol\":15899:15953  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"packages/contracts/DAORegistry.sol\":15819:15961  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"packages/contracts/DAORegistry.sol\":26124:26159  ERC1967Upgrade._getImplementation() */\n    tag_27:\n        /* \"packages/contracts/DAORegistry.sol\":26117:26159  return ERC1967Upgrade._getImplementation() */\n      swap1\n      pop\n        /* \"packages/contracts/DAORegistry.sol\":26025:26167  function _implementation() internal view virtual override returns (address impl) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/DAORegistry.sol\":22321:23239  function _delegate(address implementation) internal virtual {... */\n    tag_19:\n        /* \"packages/contracts/DAORegistry.sol\":22664:22678  calldatasize() */\n      calldatasize\n        /* \"packages/contracts/DAORegistry.sol\":22661:22662  0 */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":22658:22659  0 */\n      dup1\n        /* \"packages/contracts/DAORegistry.sol\":22645:22679  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"packages/contracts/DAORegistry.sol\":22882:22883  0 */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":22879:22880  0 */\n      dup1\n        /* \"packages/contracts/DAORegistry.sol\":22863:22877  calldatasize() */\n      calldatasize\n        /* \"packages/contracts/DAORegistry.sol\":22860:22861  0 */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":22844:22858  implementation */\n      dup5\n        /* \"packages/contracts/DAORegistry.sol\":22837:22842  gas() */\n      gas\n        /* \"packages/contracts/DAORegistry.sol\":22824:22884  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"packages/contracts/DAORegistry.sol\":22961:22977  returndatasize() */\n      returndatasize\n        /* \"packages/contracts/DAORegistry.sol\":22958:22959  0 */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":22955:22956  0 */\n      dup1\n        /* \"packages/contracts/DAORegistry.sol\":22940:22978  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"packages/contracts/DAORegistry.sol\":23001:23007  result */\n      dup1\n        /* \"packages/contracts/DAORegistry.sol\":23070:23138  case 0 {... */\n      dup1\n      iszero\n      tag_31\n      jumpi\n        /* \"packages/contracts/DAORegistry.sol\":23189:23205  returndatasize() */\n      returndatasize\n        /* \"packages/contracts/DAORegistry.sol\":23186:23187  0 */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":23179:23206  return(0, returndatasize()) */\n      return\n        /* \"packages/contracts/DAORegistry.sol\":23070:23138  case 0 {... */\n    tag_31:\n        /* \"packages/contracts/DAORegistry.sol\":23106:23122  returndatasize() */\n      returndatasize\n        /* \"packages/contracts/DAORegistry.sol\":23103:23104  0 */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":23096:23123  revert(0, returndatasize()) */\n      revert\n        /* \"packages/contracts/DAORegistry.sol\":10209:10541  function functionDelegateCall(... */\n    tag_22:\n        /* \"packages/contracts/DAORegistry.sol\":10354:10366  bytes memory */\n      0x60\n        /* \"packages/contracts/DAORegistry.sol\":10380:10392  bool success */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":10394:10417  bytes memory returndata */\n      dup1\n        /* \"packages/contracts/DAORegistry.sol\":10421:10427  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/DAORegistry.sol\":10421:10440  target.delegatecall */\n      and\n        /* \"packages/contracts/DAORegistry.sol\":10441:10445  data */\n      dup6\n        /* \"packages/contracts/DAORegistry.sol\":10421:10446  target.delegatecall(data) */\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_37\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_36)\n    tag_37:\n      0x60\n      swap2\n      pop\n    tag_36:\n      pop\n        /* \"packages/contracts/DAORegistry.sol\":10379:10446  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"packages/contracts/DAORegistry.sol\":10464:10533  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_38\n        /* \"packages/contracts/DAORegistry.sol\":10491:10497  target */\n      dup7\n        /* \"packages/contracts/DAORegistry.sol\":10499:10506  success */\n      dup4\n        /* \"packages/contracts/DAORegistry.sol\":10508:10518  returndata */\n      dup4\n        /* \"packages/contracts/DAORegistry.sol\":10520:10532  errorMessage */\n      dup8\n        /* \"packages/contracts/DAORegistry.sol\":10464:10490  verifyCallResultFromTarget */\n      tag_39\n        /* \"packages/contracts/DAORegistry.sol\":10464:10533  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_38:\n        /* \"packages/contracts/DAORegistry.sol\":10457:10533  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"packages/contracts/DAORegistry.sol\":10209:10541  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/DAORegistry.sol\":10837:11481  function verifyCallResultFromTarget(... */\n    tag_39:\n        /* \"packages/contracts/DAORegistry.sol\":11022:11034  bytes memory */\n      0x60\n        /* \"packages/contracts/DAORegistry.sol\":11051:11058  success */\n      dup4\n        /* \"packages/contracts/DAORegistry.sol\":11047:11474  if (success) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"packages/contracts/DAORegistry.sol\":11079:11089  returndata */\n      dup3\n        /* \"packages/contracts/DAORegistry.sol\":11079:11096  returndata.length */\n      mload\n        /* \"packages/contracts/DAORegistry.sol\":11100:11101  0 */\n      0x00\n        /* \"packages/contracts/DAORegistry.sol\":11079:11101  returndata.length == 0 */\n      sub\n        /* \"packages/contracts/DAORegistry.sol\":11075:11365  if (returndata.length == 0) {... */\n      tag_46\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/DAORegistry.sol\":4678:4697  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"packages/contracts/DAORegistry.sol\":11289:11349  require(isContract(target), \"Address: call to non-contract\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":763:765   */\n      0x20\n        /* \"packages/contracts/DAORegistry.sol\":11289:11349  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":745:766   */\n      mstore\n        /* \"#utility.yul\":802:804   */\n      0x1d\n        /* \"#utility.yul\":782:800   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":775:805   */\n      mstore\n        /* \"#utility.yul\":841:872   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":821:839   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":814:873   */\n      mstore\n        /* \"#utility.yul\":890:908   */\n      0x64\n      add\n        /* \"packages/contracts/DAORegistry.sol\":11289:11349  require(isContract(target), \"Address: call to non-contract\") */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n      pop\n        /* \"packages/contracts/DAORegistry.sol\":11386:11396  returndata */\n      dup2\n        /* \"packages/contracts/DAORegistry.sol\":11379:11396  return returndata */\n      jump(tag_50)\n        /* \"packages/contracts/DAORegistry.sol\":11047:11474  if (success) {... */\n    tag_43:\n        /* \"packages/contracts/DAORegistry.sol\":11429:11462  _revert(returndata, errorMessage) */\n      tag_50\n        /* \"packages/contracts/DAORegistry.sol\":11437:11447  returndata */\n      dup4\n        /* \"packages/contracts/DAORegistry.sol\":11449:11461  errorMessage */\n      dup4\n        /* \"packages/contracts/DAORegistry.sol\":11429:11436  _revert */\n      tag_51\n        /* \"packages/contracts/DAORegistry.sol\":11429:11462  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_50:\n        /* \"packages/contracts/DAORegistry.sol\":10837:11481  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/DAORegistry.sol\":12023:12575  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_51:\n        /* \"packages/contracts/DAORegistry.sol\":12184:12201  returndata.length */\n      dup2\n      mload\n        /* \"packages/contracts/DAORegistry.sol\":12184:12205  returndata.length > 0 */\n      iszero\n        /* \"packages/contracts/DAORegistry.sol\":12180:12568  if (returndata.length > 0) {... */\n      tag_53\n      jumpi\n        /* \"packages/contracts/DAORegistry.sol\":12416:12426  returndata */\n      dup2\n        /* \"packages/contracts/DAORegistry.sol\":12410:12427  mload(returndata) */\n      mload\n        /* \"packages/contracts/DAORegistry.sol\":12473:12488  returndata_size */\n      dup1\n        /* \"packages/contracts/DAORegistry.sol\":12460:12470  returndata */\n      dup4\n        /* \"packages/contracts/DAORegistry.sol\":12456:12458  32 */\n      0x20\n        /* \"packages/contracts/DAORegistry.sol\":12452:12471  add(32, returndata) */\n      add\n        /* \"packages/contracts/DAORegistry.sol\":12445:12489  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"packages/contracts/DAORegistry.sol\":12180:12568  if (returndata.length > 0) {... */\n    tag_53:\n        /* \"packages/contracts/DAORegistry.sol\":12543:12555  errorMessage */\n      dup1\n        /* \"packages/contracts/DAORegistry.sol\":12536:12556  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"#utility.yul\":14:264   */\n    tag_57:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_60:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_60)\n    tag_62:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:556   */\n    tag_34:\n        /* \"#utility.yul\":398:401   */\n      0x00\n        /* \"#utility.yul\":436:442   */\n      dup3\n        /* \"#utility.yul\":430:443   */\n      mload\n        /* \"#utility.yul\":452:518   */\n      tag_64\n        /* \"#utility.yul\":511:517   */\n      dup2\n        /* \"#utility.yul\":506:509   */\n      dup5\n        /* \"#utility.yul\":499:503   */\n      0x20\n        /* \"#utility.yul\":491:497   */\n      dup8\n        /* \"#utility.yul\":487:504   */\n      add\n        /* \"#utility.yul\":452:518   */\n      tag_57\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":534:550   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":269:556   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":919:1315   */\n    tag_56:\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1057:1066   */\n      dup2\n        /* \"#utility.yul\":1050:1071   */\n      mstore\n        /* \"#utility.yul\":1031:1035   */\n      0x00\n        /* \"#utility.yul\":1100:1106   */\n      dup3\n        /* \"#utility.yul\":1094:1107   */\n      mload\n        /* \"#utility.yul\":1143:1149   */\n      dup1\n        /* \"#utility.yul\":1138:1140   */\n      0x20\n        /* \"#utility.yul\":1127:1136   */\n      dup5\n        /* \"#utility.yul\":1123:1141   */\n      add\n        /* \"#utility.yul\":1116:1150   */\n      mstore\n        /* \"#utility.yul\":1159:1238   */\n      tag_67\n        /* \"#utility.yul\":1231:1237   */\n      dup2\n        /* \"#utility.yul\":1226:1228   */\n      0x40\n        /* \"#utility.yul\":1215:1224   */\n      dup6\n        /* \"#utility.yul\":1211:1229   */\n      add\n        /* \"#utility.yul\":1206:1208   */\n      0x20\n        /* \"#utility.yul\":1198:1204   */\n      dup8\n        /* \"#utility.yul\":1194:1209   */\n      add\n        /* \"#utility.yul\":1159:1238   */\n      tag_57\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1299:1301   */\n      0x1f\n        /* \"#utility.yul\":1278:1293   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1274:1303   */\n      and\n        /* \"#utility.yul\":1259:1304   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1306:1308   */\n      0x40\n        /* \"#utility.yul\":1255:1309   */\n      add\n      swap3\n        /* \"#utility.yul\":919:1315   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220cc252a9703ac28aa0b6116dcb4a868489669495662bb38f6dc8460a9ede7e6f964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_387": {
									"entryPoint": 693,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_457": {
									"entryPoint": 215,
									"id": 457,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_502": {
									"entryPoint": 53,
									"id": 502,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_472": {
									"entryPoint": 107,
									"id": 472,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_275": {
									"entryPoint": 171,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_304": {
									"entryPoint": 425,
									"id": 304,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_25": {
									"entryPoint": 561,
									"id": 25,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_76": {
									"entryPoint": 546,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_343": {
									"entryPoint": 564,
									"id": 343,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2931:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "222:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "231:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "226:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "316:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "321:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "312:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "312:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "335:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "340:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "331:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "331:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "325:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "325:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "252:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "255:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "249:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "263:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "265:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "274:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "265:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "245:3:1",
																"statements": []
															},
															"src": "241:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "374:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "370:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "388:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "363:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "190:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "195:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "200:6:1",
														"type": ""
													}
												],
												"src": "146:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "508:956:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "554:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "563:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "566:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "556:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "556:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "556:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "529:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "525:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:32:1"
															},
															"nodeType": "YulIf",
															"src": "518:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "579:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "583:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "671:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "683:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "673:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "673:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "630:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "641:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "656:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "661:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "652:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "652:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "665:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "648:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "648:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:50:1"
															},
															"nodeType": "YulIf",
															"src": "617:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "696:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "706:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "720:39:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "744:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "755:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "734:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:25:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "724:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "768:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "786:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "790:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "772:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "823:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "832:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "835:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "825:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "825:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "819:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "808:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:14:1"
															},
															"nodeType": "YulIf",
															"src": "805:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "848:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "862:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "873:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "852:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "928:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "937:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "940:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "930:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "930:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "930:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "907:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "911:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "903:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "903:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "918:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:35:1"
															},
															"nodeType": "YulIf",
															"src": "889:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "953:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "969:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "963:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:9:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "957:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "995:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "997:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "997:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "997:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "987:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "991:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "984:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:10:1"
															},
															"nodeType": "YulIf",
															"src": "981:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1026:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1030:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1052:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1072:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1066:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1056:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1084:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1106:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1130:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1134:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1126:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1126:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1141:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1122:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1122:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1146:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1118:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1118:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1151:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1114:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1102:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1088:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1214:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1216:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1216:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1216:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1173:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1185:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1170:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1170:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1193:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1205:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1190:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1190:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1167:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:46:1"
															},
															"nodeType": "YulIf",
															"src": "1164:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1252:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1256:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1283:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1291:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1276:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1317:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1321:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1313:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1313:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1309:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1331:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1306:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:33:1"
															},
															"nodeType": "YulIf",
															"src": "1303:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1404:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1408:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1417:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1425:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1413:15:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1430:2:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1365:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:68:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1365:68:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1442:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1452:6:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "466:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "477:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "489:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "497:6:1",
														"type": ""
													}
												],
												"src": "401:1063:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1643:235:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1660:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1653:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1694:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1705:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1690:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:2:1",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1683:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1733:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1744:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1729:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1729:18:1"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1749:34:1",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1722:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1815:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1800:18:1"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1820:15:1",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1845:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1857:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1868:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1845:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1620:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1634:4:1",
														"type": ""
													}
												],
												"src": "1469:409:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:150:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2050:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2044:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2034:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2105:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2113:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2125:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2066:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2066:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2141:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2152:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2157:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2141:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1996:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2001:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2012:3:1",
														"type": ""
													}
												],
												"src": "1883:287:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2349:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2366:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2377:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2359:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2400:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2411:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2416:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2389:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2450:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2455:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2428:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2508:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2496:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2326:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2340:4:1",
														"type": ""
													}
												],
												"src": "2175:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2664:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2664:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2694:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2714:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2708:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2708:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2698:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2752:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2737:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2757:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2730:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2730:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2820:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2829:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2840:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2825:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2825:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2845:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2773:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2773:79:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2861:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2877:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2896:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2904:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2892:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2892:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2913:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2909:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2909:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2888:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2888:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2873:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2920:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2869:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2861:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2634:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2645:4:1",
														"type": ""
													}
												],
												"src": "2533:396:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405161072738038061072783398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610700602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b6102bb806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025f602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516100e0919061020f565b600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101318683838761013b565b9695505050505050565b606083156101af5782516000036101a8576001600160a01b0385163b6101a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b50816101b9565b6101b983836101c1565b949350505050565b8151156101d15781518083602001fd5b8060405162461bcd60e51b815260040161019f919061022b565b60005b838110156102065781810151838201526020016101ee565b50506000910152565b600082516102218184602087016101eb565b9190910192915050565b602081526000825180602084015261024a8160408501602087016101eb565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cc252a9703ac28aa0b6116dcb4a868489669495662bb38f6dc8460a9ede7e6f964736f6c63430008110033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x727 CODESIZE SUB DUP1 PUSH2 0x727 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x436 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x700 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEA DUP2 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x188 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x231 PUSH1 0x20 SHL PUSH2 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x218 DUP7 DUP4 DUP4 DUP8 PUSH2 0x234 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST POP DUP2 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2AD DUP4 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2C5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x422 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BB DUP1 PUSH2 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x131 DUP7 DUP4 DUP4 DUP8 PUSH2 0x13B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1AF JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1B9 DUP4 DUP4 PUSH2 0x1C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1D1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x221 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x24A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220CC252A SWAP8 SUB 0xAC 0x28 0xAA SIGNEXTEND PUSH2 0x16DC 0xB4 0xA8 PUSH9 0x489669495662BB38F6 0xDC DUP5 PUSH1 0xA9 0xED 0xE7 0xE6 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ",
							"sourceMap": "25430:740:0:-:0;;;25828:114;;;;;;;;;;;;;;;;;;:::i;:::-;25895:39;25913:6;25921:5;25928;25895:17;:39::i;:::-;25828:114;;25430:740;;16728:304;16871:29;16882:17;16871:10;:29::i;:::-;16929:1;16915:4;:11;:15;:28;;;;16934:9;16915:28;16911:114;;;16960:53;16989:17;17008:4;16960:28;;;;;:53;;:::i;:::-;;16911:114;16728:304;;;:::o;16432:155::-;16499:37;16518:17;16499:18;:37::i;:::-;16552:27;;-1:-1:-1;;;;;16552:27:0;;;;;;;;16432:155;:::o;9815:200::-;9898:12;9930:77;9951:6;9959:4;9930:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;9923:84;9815:200;-1:-1:-1;;;9815:200:0:o;16057:262::-;16139:37;16158:17;16139:18;;;;;:37;;:::i;:::-;16131:95;;;;-1:-1:-1;;;16131:95:0;;1671:2:1;16131:95:0;;;1653:21:1;1710:2;1690:18;;;1683:30;1749:34;1729:18;;;1722:62;-1:-1:-1;;;1800:18:1;;;1793:43;1853:19;;16131:95:0;;;;;;;;;16294:17;16237:48;15538:66;16264:20;;16237:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;16237:74:0;-1:-1:-1;;;;;16237:74:0;;;;;;;;;;-1:-1:-1;16057:262:0:o;10209:332::-;10354:12;10380;10394:23;10421:6;-1:-1:-1;;;;;10421:19:0;10441:4;10421:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10379:67:0;;-1:-1:-1;10379:67:0;-1:-1:-1;10464:69:0;10491:6;10379:67;;10520:12;10464:26;:69::i;:::-;10457:76;10209:332;-1:-1:-1;;;;;;10209:332:0:o;4383:326::-;-1:-1:-1;;;;;4678:19:0;;:23;;;4383:326::o;1903:195::-;2076:4;1903:195::o;10837:644::-;11022:12;11051:7;11047:427;;;11079:10;:17;11100:1;11079:22;11075:290;;-1:-1:-1;;;;;4678:19:0;;;11289:60;;;;-1:-1:-1;;;11289:60:0;;2377:2:1;11289:60:0;;;2359:21:1;2416:2;2396:18;;;2389:30;2455:31;2435:18;;;2428:59;2504:18;;11289:60:0;2175:353:1;11289:60:0;-1:-1:-1;11386:10:0;11379:17;;11047:427;11429:33;11437:10;11449:12;11429:7;:33::i;:::-;10837:644;;;;;;:::o;12023:552::-;12184:17;;:21;12180:388;;12416:10;12410:17;12473:15;12460:10;12456:2;12452:19;12445:44;12180:388;12543:12;12536:20;;-1:-1:-1;;;12536:20:0;;;;;;;;:::i;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:1;370:16;;363:27;146:250::o;401:1063::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:1;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;808:14:1;;;805:34;;;835:1;832;825:12;805:34;873:6;862:9;858:22;848:32;;918:7;911:4;907:2;903:13;899:27;889:55;;940:1;937;930:12;889:55;969:2;963:9;991:2;987;984:10;981:36;;;997:18;;:::i;:::-;1072:2;1066:9;1040:2;1126:13;;-1:-1:-1;;1122:22:1;;;1146:2;1118:31;1114:40;1102:53;;;1170:18;;;1190:22;;;1167:46;1164:72;;;1216:18;;:::i;:::-;1256:10;1252:2;1245:22;1291:2;1283:6;1276:18;1331:7;1326:2;1321;1317;1313:11;1309:20;1306:33;1303:53;;;1352:1;1349;1342:12;1303:53;1365:68;1430:2;1425;1417:6;1413:15;1408:2;1404;1400:11;1365:68;:::i;:::-;1452:6;1442:16;;;;;;;401:1063;;;;;:::o;1883:287::-;2012:3;2050:6;2044:13;2066:66;2125:6;2120:3;2113:4;2105:6;2101:17;2066:66;:::i;:::-;2148:16;;;;;1883:287;-1:-1:-1;;1883:287:1:o;2533:396::-;2682:2;2671:9;2664:21;2645:4;2714:6;2708:13;2757:6;2752:2;2741:9;2737:18;2730:34;2773:79;2845:6;2840:2;2829:9;2825:18;2820:2;2812:6;2808:15;2773:79;:::i;:::-;2913:2;2892:15;-1:-1:-1;;2888:29:1;2873:45;;;;2920:2;2869:54;;2533:396;-1:-1:-1;;2533:396:1:o;:::-;25430:740:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_756": {
									"entryPoint": null,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_764": {
									"entryPoint": null,
									"id": 764,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_769": {
									"entryPoint": null,
									"id": 769,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_729": {
									"entryPoint": 159,
									"id": 729,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_748": {
									"entryPoint": 23,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getImplementation_433": {
									"entryPoint": null,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_803": {
									"entryPoint": 103,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_387": {
									"entryPoint": 449,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionDelegateCall_275": {
									"entryPoint": 41,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_304": {
									"entryPoint": 195,
									"id": 304,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_25": {
									"entryPoint": 100,
									"id": 25,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_76": {
									"entryPoint": 85,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_343": {
									"entryPoint": 315,
									"id": 343,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1317:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "99:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "94:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "159:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "131:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "133:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "113:3:1",
																"statements": []
															},
															"src": "109:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "58:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "63:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:1",
														"type": ""
													}
												],
												"src": "14:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:150:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "416:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "436:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "430:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "430:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "420:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "491:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "499:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "506:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "452:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "452:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "527:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "538:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "543:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "527:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "382:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "387:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "398:3:1",
														"type": ""
													}
												],
												"src": "269:287:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "763:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "797:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "802:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "775:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "836:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "821:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "841:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "814:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "814:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "882:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "894:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "890:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "882:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "712:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "726:4:1",
														"type": ""
													}
												],
												"src": "561:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1057:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1080:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1100:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1094:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1084:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1127:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1138:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1143:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1116:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1198:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1206:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1215:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1226:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1231:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1159:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:79:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1247:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1263:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1282:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1290:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1278:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1278:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1299:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1295:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1295:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1274:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1274:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1259:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1247:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1009:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1020:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1031:4:1",
														"type": ""
													}
												],
												"src": "919:396:1"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025f602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516100e0919061020f565b600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101318683838761013b565b9695505050505050565b606083156101af5782516000036101a8576001600160a01b0385163b6101a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b50816101b9565b6101b983836101c1565b949350505050565b8151156101d15781518083602001fd5b8060405162461bcd60e51b815260040161019f919061022b565b60005b838110156102065781810151838201526020016101ee565b50506000910152565b600082516102218184602087016101eb565b9190910192915050565b602081526000825180602084015261024a8160408501602087016101eb565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cc252a9703ac28aa0b6116dcb4a868489669495662bb38f6dc8460a9ede7e6f964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x131 DUP7 DUP4 DUP4 DUP8 PUSH2 0x13B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1AF JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1B9 DUP4 DUP4 PUSH2 0x1C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1D1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x221 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x24A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220CC252A SWAP8 SUB 0xAC 0x28 0xAA SIGNEXTEND PUSH2 0x16DC 0xB4 0xA8 PUSH9 0x489669495662BB38F6 0xDC DUP5 PUSH1 0xA9 0xED 0xE7 0xE6 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "25430:740:0:-:0;;;;;;24325:11;:9;:11::i;:::-;25430:740;;24094:11;23731:113;23808:28;23818:17;:15;:17::i;:::-;23808:9;:28::i;:::-;23731:113::o;9815:200::-;9898:12;9930:77;9951:6;9959:4;9930:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;9923:84;9815:200;-1:-1:-1;;;9815:200:0:o;4383:326::-;-1:-1:-1;;;;;4678:19:0;;:23;;;4383:326::o;1903:195::-;2076:4;1903:195::o;26025:142::-;26092:12;26124:35;15538:66;15899:54;-1:-1:-1;;;;;15899:54:0;;15819:142;26124:35;26117:42;;26025:142;:::o;22321:918::-;22664:14;22661:1;22658;22645:34;22882:1;22879;22863:14;22860:1;22844:14;22837:5;22824:60;22961:16;22958:1;22955;22940:38;23001:6;23070:68;;;;23189:16;23186:1;23179:27;23070:68;23106:16;23103:1;23096:27;10209:332;10354:12;10380;10394:23;10421:6;-1:-1:-1;;;;;10421:19:0;10441:4;10421:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10379:67;;;;10464:69;10491:6;10499:7;10508:10;10520:12;10464:26;:69::i;:::-;10457:76;10209:332;-1:-1:-1;;;;;;10209:332:0:o;10837:644::-;11022:12;11051:7;11047:427;;;11079:10;:17;11100:1;11079:22;11075:290;;-1:-1:-1;;;;;4678:19:0;;;11289:60;;;;-1:-1:-1;;;11289:60:0;;763:2:1;11289:60:0;;;745:21:1;802:2;782:18;;;775:30;841:31;821:18;;;814:59;890:18;;11289:60:0;;;;;;;;;-1:-1:-1;11386:10:0;11379:17;;11047:427;11429:33;11437:10;11449:12;11429:7;:33::i;:::-;10837:644;;;;;;:::o;12023:552::-;12184:17;;:21;12180:388;;12416:10;12410:17;12473:15;12460:10;12456:2;12452:19;12445:44;12180:388;12543:12;12536:20;;-1:-1:-1;;;12536:20:0;;;;;;;;:::i;14:250:1:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:1;238:16;;231:27;14:250::o;269:287::-;398:3;436:6;430:13;452:66;511:6;506:3;499:4;491:6;487:17;452:66;:::i;:::-;534:16;;;;;269:287;-1:-1:-1;;269:287:1:o;919:396::-;1068:2;1057:9;1050:21;1031:4;1100:6;1094:13;1143:6;1138:2;1127:9;1123:18;1116:34;1159:79;1231:6;1226:2;1215:9;1211:18;1206:2;1198:6;1194:15;1159:79;:::i;:::-;1299:2;1278:15;-1:-1:-1;;1274:29:1;1259:45;;;;1306:2;1255:54;;919:396;-1:-1:-1;;919:396:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "139800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2156"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25430,
									"end": 26170,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25828,
									"end": 25942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25895,
									"end": 25934,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25913,
									"end": 25919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25921,
									"end": 25926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25928,
									"end": 25933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25895,
									"end": 25912,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25895,
									"end": 25934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25895,
									"end": 25934,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25895,
									"end": 25934,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25828,
									"end": 25942,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 17032,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 16728,
									"end": 17032,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16871,
									"end": 16900,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16882,
									"end": 16899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16871,
									"end": 16881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 16871,
									"end": 16900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16871,
									"end": 16900,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16871,
									"end": 16900,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16929,
									"end": 16930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16915,
									"end": 16919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16915,
									"end": 16926,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16915,
									"end": 16930,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 16915,
									"end": 16943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16915,
									"end": 16943,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 16915,
									"end": 16943,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16915,
									"end": 16943,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16934,
									"end": 16943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16915,
									"end": 16943,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 16915,
									"end": 16943,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16911,
									"end": 17025,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16911,
									"end": 17025,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 16911,
									"end": 17025,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16960,
									"end": 17013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 16989,
									"end": 17006,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17008,
									"end": 17012,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16960,
									"end": 16988,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 16960,
									"end": 16988,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16960,
									"end": 16988,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 16960,
									"end": 16988,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551626"
								},
								{
									"begin": 16960,
									"end": 16988,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16960,
									"end": 17013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16960,
									"end": 17013,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 16960,
									"end": 17013,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16960,
									"end": 17013,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 16960,
									"end": 17013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16960,
									"end": 17013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16911,
									"end": 17025,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 16911,
									"end": 17025,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 17032,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 17032,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 17032,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 17032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16432,
									"end": 16587,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 16432,
									"end": 16587,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16499,
									"end": 16536,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 16518,
									"end": 16535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16499,
									"end": 16517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 16499,
									"end": 16536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16499,
									"end": 16536,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 16499,
									"end": 16536,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "PUSH",
									"source": 0,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16552,
									"end": 16579,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 16432,
									"end": 16587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16432,
									"end": 16587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9815,
									"end": 10015,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 9815,
									"end": 10015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9898,
									"end": 9910,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9951,
									"end": 9957,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9959,
									"end": 9963,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "PUSH data",
									"source": 0,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9930,
									"end": 10007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9930,
									"end": 10007,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9923,
									"end": 10007,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 9815,
									"end": 10015,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9815,
									"end": 10015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16057,
									"end": 16319,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 16057,
									"end": 16319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16139,
									"end": 16176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 16158,
									"end": 16175,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16139,
									"end": 16157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 16139,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16139,
									"end": 16157,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 16139,
									"end": 16157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551627"
								},
								{
									"begin": 16139,
									"end": 16157,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16139,
									"end": 16176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16139,
									"end": 16176,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 16139,
									"end": 16176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16139,
									"end": 16176,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 16139,
									"end": 16176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1671,
									"end": 1673,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1653,
									"end": 1674,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1712,
									"name": "PUSH",
									"source": 1,
									"value": "2D"
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1683,
									"end": 1713,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1749,
									"end": 1783,
									"name": "PUSH",
									"source": 1,
									"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1784,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1BDD08184818DBDB9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1800,
									"end": 1818,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1800,
									"end": 1818,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1818,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1836,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16131,
									"end": 16226,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16294,
									"end": 16311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 15538,
									"end": 15604,
									"name": "PUSH",
									"source": 0,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 16264,
									"end": 16284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16264,
									"end": 16284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16237,
									"end": 16263,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16237,
									"end": 16263,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551628"
								},
								{
									"begin": 16237,
									"end": 16263,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16285,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16237,
									"end": 16285,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16285,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16285,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 16237,
									"end": 16285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16311,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16057,
									"end": 16319,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10209,
									"end": 10541,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10209,
									"end": 10541,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10354,
									"end": 10366,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 10380,
									"end": 10392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10394,
									"end": 10417,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10427,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10421,
									"end": 10440,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10441,
									"end": 10445,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 10421,
									"end": 10446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DELEGATECALL",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 10421,
									"end": 10446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10379,
									"end": 10446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10379,
									"end": 10446,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10379,
									"end": 10446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10464,
									"end": 10533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 10491,
									"end": 10497,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 10379,
									"end": 10446,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10379,
									"end": 10446,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10520,
									"end": 10532,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 10464,
									"end": 10490,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 10464,
									"end": 10533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10464,
									"end": 10533,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 10464,
									"end": 10533,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10457,
									"end": 10533,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 10209,
									"end": 10541,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10209,
									"end": 10541,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4383,
									"end": 4709,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 4383,
									"end": 4709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4678,
									"end": 4697,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4678,
									"end": 4697,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 4678,
									"end": 4701,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4678,
									"end": 4701,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4678,
									"end": 4701,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4383,
									"end": 4709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1903,
									"end": 2098,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1903,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2076,
									"end": 2080,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1903,
									"end": 2098,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10837,
									"end": 11481,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 10837,
									"end": 11481,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11022,
									"end": 11034,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 11051,
									"end": 11058,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11047,
									"end": 11474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11047,
									"end": 11474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11047,
									"end": 11474,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11079,
									"end": 11089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11079,
									"end": 11096,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11100,
									"end": 11101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11079,
									"end": 11101,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11075,
									"end": 11365,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 11075,
									"end": 11365,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4678,
									"end": 4697,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 4678,
									"end": 4697,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4678,
									"end": 4697,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2377,
									"end": 2379,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2359,
									"end": 2380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2416,
									"end": 2418,
									"name": "PUSH",
									"source": 1,
									"value": "1D"
								},
								{
									"begin": 2396,
									"end": 2414,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2396,
									"end": 2414,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2414,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2389,
									"end": 2419,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2455,
									"end": 2486,
									"name": "PUSH",
									"source": 1,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 2435,
									"end": 2453,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2435,
									"end": 2453,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2453,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2487,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2504,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 2175,
									"end": 2528,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 11289,
									"end": 11349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11386,
									"end": 11396,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11379,
									"end": 11396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 11379,
									"end": 11396,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11047,
									"end": 11474,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11047,
									"end": 11474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11429,
									"end": 11462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 11437,
									"end": 11447,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11449,
									"end": 11461,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11429,
									"end": 11436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 11429,
									"end": 11462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11429,
									"end": 11462,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 11429,
									"end": 11462,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10837,
									"end": 11481,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 10837,
									"end": 11481,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10837,
									"end": 11481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10837,
									"end": 11481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10837,
									"end": 11481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10837,
									"end": 11481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10837,
									"end": 11481,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12023,
									"end": 12575,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 12023,
									"end": 12575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12184,
									"end": 12201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12184,
									"end": 12201,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12184,
									"end": 12205,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12180,
									"end": 12568,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 12180,
									"end": 12568,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12416,
									"end": 12426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12410,
									"end": 12427,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12473,
									"end": 12488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12460,
									"end": 12470,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12456,
									"end": 12458,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12452,
									"end": 12471,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12445,
									"end": 12489,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12180,
									"end": 12568,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 12180,
									"end": 12568,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12543,
									"end": 12555,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12556,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 12536,
									"end": 12556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 396,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 146,
									"end": 396,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 231,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 255,
									"end": 261,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 252,
									"end": 253,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 249,
									"end": 262,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 241,
									"end": 354,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 331,
									"end": 342,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 325,
									"end": 343,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 312,
									"end": 323,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 305,
									"end": 344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 270,
									"end": 280,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 386,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 370,
									"end": 386,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 363,
									"end": 390,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 146,
									"end": 396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 489,
									"end": 495,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 538,
									"end": 547,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 529,
									"end": 536,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 525,
									"end": 548,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 521,
									"end": 553,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 518,
									"end": 570,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 518,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 518,
									"end": 570,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 592,
									"end": 608,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 592,
									"end": 608,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 637,
									"end": 668,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 627,
									"end": 669,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 669,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 617,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 683,
									"end": 684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 681,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 673,
									"end": 685,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 617,
									"end": 687,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 755,
									"end": 757,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 740,
									"end": 758,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 734,
									"end": 759,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 808,
									"end": 822,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 808,
									"end": 822,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 808,
									"end": 822,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 805,
									"end": 839,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 805,
									"end": 839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 805,
									"end": 839,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 835,
									"end": 836,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 833,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 825,
									"end": 837,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 805,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 805,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 873,
									"end": 879,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 862,
									"end": 871,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 858,
									"end": 880,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 848,
									"end": 880,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 848,
									"end": 880,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 918,
									"end": 925,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 911,
									"end": 915,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 907,
									"end": 909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 903,
									"end": 916,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 899,
									"end": 926,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 889,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 889,
									"end": 944,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 940,
									"end": 941,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 938,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 930,
									"end": 942,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 889,
									"end": 944,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 889,
									"end": 944,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 969,
									"end": 971,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 963,
									"end": 972,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 991,
									"end": 993,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 984,
									"end": 994,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 981,
									"end": 1017,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 981,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 981,
									"end": 1017,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 997,
									"end": 1015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1074,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1075,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1126,
									"end": 1139,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1139,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1122,
									"end": 1144,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1144,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1144,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1146,
									"end": 1148,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 1118,
									"end": 1149,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1154,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1155,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1155,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1155,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1190,
									"end": 1212,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1190,
									"end": 1212,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1190,
									"end": 1212,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1213,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1236,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1164,
									"end": 1236,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1216,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1216,
									"end": 1234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1234,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1216,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1252,
									"end": 1254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1293,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1289,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1294,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1338,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1328,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 1323,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1317,
									"end": 1319,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1324,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1329,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1306,
									"end": 1339,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1349,
									"end": 1350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1365,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1430,
									"end": 1432,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1417,
									"end": 1423,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1428,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1408,
									"end": 1410,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1406,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1400,
									"end": 1411,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1365,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1365,
									"end": 1433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1365,
									"end": 1433,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1365,
									"end": 1433,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1458,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 1464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 2170,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1883,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2050,
									"end": 2056,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2066,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2125,
									"end": 2131,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2120,
									"end": 2123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2117,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2105,
									"end": 2111,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2101,
									"end": 2118,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2066,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2066,
									"end": 2132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2066,
									"end": 2132,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2066,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 2170,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1883,
									"end": 2170,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2682,
									"end": 2684,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2671,
									"end": 2680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2685,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2645,
									"end": 2649,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2714,
									"end": 2720,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2708,
									"end": 2721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2757,
									"end": 2763,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2741,
									"end": 2750,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2737,
									"end": 2755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2730,
									"end": 2764,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2773,
									"end": 2852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2845,
									"end": 2851,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2840,
									"end": 2842,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2829,
									"end": 2838,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2825,
									"end": 2843,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2820,
									"end": 2822,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2812,
									"end": 2818,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2808,
									"end": 2823,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2773,
									"end": 2852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2773,
									"end": 2852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2773,
									"end": 2852,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2773,
									"end": 2852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2913,
									"end": 2915,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2892,
									"end": 2907,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2888,
									"end": 2917,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2873,
									"end": 2918,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2873,
									"end": 2918,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2873,
									"end": 2918,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2873,
									"end": 2918,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2920,
									"end": 2922,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2923,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2869,
									"end": 2923,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2533,
									"end": 2929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25430,
									"end": 26170,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc252a9703ac28aa0b6116dcb4a868489669495662bb38f6dc8460a9ede7e6f964736f6c63430008110033",
									".code": [
										{
											"begin": 25430,
											"end": 26170,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25430,
											"end": 26170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25430,
											"end": 26170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25430,
											"end": 26170,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25430,
											"end": 26170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25430,
											"end": 26170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24325,
											"end": 24334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24325,
											"end": 24336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24336,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24325,
											"end": 24336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25430,
											"end": 26170,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25430,
											"end": 26170,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25430,
											"end": 26170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24094,
											"end": 24105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23731,
											"end": 23844,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23731,
											"end": 23844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23808,
											"end": 23836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23818,
											"end": 23835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23818,
											"end": 23833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23818,
											"end": 23835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23818,
											"end": 23835,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23818,
											"end": 23835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23808,
											"end": 23817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23808,
											"end": 23836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23808,
											"end": 23836,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23808,
											"end": 23836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23731,
											"end": 23844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 10015,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9815,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9898,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9959,
											"end": 9963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "PUSH data",
											"source": 0,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9930,
											"end": 10007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9930,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9923,
											"end": 10007,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 10015,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9815,
											"end": 10015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4709,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4383,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4678,
											"end": 4697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4697,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 2098,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1903,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26025,
											"end": 26167,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26025,
											"end": 26167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 26104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26124,
											"end": 26159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15538,
											"end": 15604,
											"name": "PUSH",
											"source": 0,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 15899,
											"end": 15953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15899,
											"end": 15953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15819,
											"end": 15961,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26124,
											"end": 26159,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26124,
											"end": 26159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26117,
											"end": 26159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26117,
											"end": 26159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26025,
											"end": 26167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26025,
											"end": 26167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22321,
											"end": 23239,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22321,
											"end": 23239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22664,
											"end": 22678,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22661,
											"end": 22662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22658,
											"end": 22659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22645,
											"end": 22679,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 22882,
											"end": 22883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22879,
											"end": 22880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22863,
											"end": 22877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22860,
											"end": 22861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22844,
											"end": 22858,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22837,
											"end": 22842,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22824,
											"end": 22884,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 22961,
											"end": 22977,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22958,
											"end": 22959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22955,
											"end": 22956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22978,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23001,
											"end": 23007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23070,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23070,
											"end": 23138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23070,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23070,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23189,
											"end": 23205,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23186,
											"end": 23187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23070,
											"end": 23138,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23070,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23122,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23103,
											"end": 23104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23096,
											"end": 23123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10541,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10209,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10366,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10380,
											"end": 10392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10427,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10445,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10421,
											"end": 10446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10379,
											"end": 10446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10379,
											"end": 10446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10379,
											"end": 10446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10379,
											"end": 10446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10464,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10491,
											"end": 10497,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10499,
											"end": 10506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10520,
											"end": 10532,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10464,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10464,
											"end": 10533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10464,
											"end": 10533,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10464,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10533,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10541,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 11481,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10837,
											"end": 11481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11022,
											"end": 11034,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11051,
											"end": 11058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11047,
											"end": 11474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11100,
											"end": 11101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11075,
											"end": 11365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4678,
											"end": 4697,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4697,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 763,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 802,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 782,
											"end": 800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 775,
											"end": 805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 841,
											"end": 872,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 821,
											"end": 839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 814,
											"end": 873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 890,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11289,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11386,
											"end": 11396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 11379,
											"end": 11396,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11474,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11047,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 11437,
											"end": 11447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11461,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11429,
											"end": 11462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11462,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 11429,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 11481,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 11481,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 11481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 11481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 11481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 11481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 11481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12575,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12023,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12184,
											"end": 12201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12184,
											"end": 12201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12184,
											"end": 12205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12180,
											"end": 12568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12416,
											"end": 12426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12473,
											"end": 12488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12452,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12568,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12180,
											"end": 12568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12543,
											"end": 12555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12536,
											"end": 12556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 269,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 269,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 398,
											"end": 401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 430,
											"end": 443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 452,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 499,
											"end": 503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 487,
											"end": 504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 452,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 452,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 518,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 452,
											"end": 518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 534,
											"end": 550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 269,
											"end": 556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 919,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1159,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1278,
											"end": 1293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							},
							"sourceList": [
								"packages/contracts/DAORegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/DAORegistry.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/DAORegistry.sol\":{\"keccak256\":\"0xc73d38cdf2c90c3e5f71c7fffe8d1966fd6d85459a73331b01cac6b2bb0c7f8b\",\"urls\":[\"bzz-raw://9c7fb5bc4d9cddfe00fdf2eeddcd0a29b30d2409b712f099c9a21d0e565a46ce\",\"dweb:/ipfs/Qmc8zPjtZxMcknYWCFivUKXfrG9nDLda4mXsvmXkUPLBnV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "delegatecall",
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is upgraded."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/DAORegistry.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/DAORegistry.sol\":{\"keccak256\":\"0xc73d38cdf2c90c3e5f71c7fffe8d1966fd6d85459a73331b01cac6b2bb0c7f8b\",\"urls\":[\"bzz-raw://9c7fb5bc4d9cddfe00fdf2eeddcd0a29b30d2409b712f099c9a21d0e565a46ce\",\"dweb:/ipfs/Qmc8zPjtZxMcknYWCFivUKXfrG9nDLda4mXsvmXkUPLBnV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/DAORegistry.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/DAORegistry.sol\":{\"keccak256\":\"0xc73d38cdf2c90c3e5f71c7fffe8d1966fd6d85459a73331b01cac6b2bb0c7f8b\",\"urls\":[\"bzz-raw://9c7fb5bc4d9cddfe00fdf2eeddcd0a29b30d2409b712f099c9a21d0e565a46ce\",\"dweb:/ipfs/Qmc8zPjtZxMcknYWCFivUKXfrG9nDLda4mXsvmXkUPLBnV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. ////IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. ////IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/DAORegistry.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/DAORegistry.sol\":{\"keccak256\":\"0xc73d38cdf2c90c3e5f71c7fffe8d1966fd6d85459a73331b01cac6b2bb0c7f8b\",\"urls\":[\"bzz-raw://9c7fb5bc4d9cddfe00fdf2eeddcd0a29b30d2409b712f099c9a21d0e565a46ce\",\"dweb:/ipfs/Qmc8zPjtZxMcknYWCFivUKXfrG9nDLda4mXsvmXkUPLBnV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/DAORegistry.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/DAORegistry.sol\":{\"keccak256\":\"0xc73d38cdf2c90c3e5f71c7fffe8d1966fd6d85459a73331b01cac6b2bb0c7f8b\",\"urls\":[\"bzz-raw://9c7fb5bc4d9cddfe00fdf2eeddcd0a29b30d2409b712f099c9a21d0e565a46ce\",\"dweb:/ipfs/Qmc8zPjtZxMcknYWCFivUKXfrG9nDLda4mXsvmXkUPLBnV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/DAORegistry.sol\":1548:2995  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/DAORegistry.sol\":1548:2995  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e273f979604b61a274d46e564f528f5157819852a9c069af11252fe3c571ed1d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e273f979604b61a274d46e564f528f5157819852a9c069af11252fe3c571ed1d64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH20 0xF979604B61A274D46E564F528F5157819852A9C0 PUSH10 0xAF11252FE3C571ED1D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "1548:1447:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1548:1447:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e273f979604b61a274d46e564f528f5157819852a9c069af11252fe3c571ed1d64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH20 0xF979604B61A274D46E564F528F5157819852A9C0 PUSH10 0xAF11252FE3C571ED1D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "1548:1447:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 2995,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e273f979604b61a274d46e564f528f5157819852a9c069af11252fe3c571ed1d64736f6c63430008110033",
									".code": [
										{
											"begin": 1548,
											"end": 2995,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 2995,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 2995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 2995,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1548,
											"end": 2995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 2995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 2995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 2995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 2995,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"packages/contracts/DAORegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/DAORegistry.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/DAORegistry.sol\":{\"keccak256\":\"0xc73d38cdf2c90c3e5f71c7fffe8d1966fd6d85459a73331b01cac6b2bb0c7f8b\",\"urls\":[\"bzz-raw://9c7fb5bc4d9cddfe00fdf2eeddcd0a29b30d2409b712f099c9a21d0e565a46ce\",\"dweb:/ipfs/Qmc8zPjtZxMcknYWCFivUKXfrG9nDLda4mXsvmXkUPLBnV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> packages/contracts/DAORegistry.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "packages/contracts/DAORegistry.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"packages/contracts/DAORegistry.sol": {
				"ast": {
					"absolutePath": "packages/contracts/DAORegistry.sol",
					"exportedSymbols": {
						"Address": [
							388
						],
						"ERC1967Proxy": [
							804
						],
						"ERC1967Upgrade": [
							719
						],
						"IBeacon": [
							406
						],
						"IERC1822Proxiable": [
							397
						],
						"Proxy": [
							770
						],
						"StorageSlot": [
							59
						]
					},
					"id": 805,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "346:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "373:1173:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "StorageSlot",
							"nameLocation": "1556:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1613:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "1605:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1605:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1582:11:0",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "1575:51:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1669:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "1664:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 6,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1664:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1641:11:0",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "1634:48:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1728:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "1720:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 9,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1720:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1697:11:0",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "1690:51:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1787:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "1779:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 12,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1779:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1756:11:0",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "1749:51:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1987:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2051:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2066:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2076:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2066:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "2066:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "2076:4:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "2042:49:0"
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "1808:89:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1912:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1935:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1927:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1926:14:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1984:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1964:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "AddressSlot",
														"nameLocations": [
															"1964:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1964:11:0"
													},
													"referencedDeclaration": 5,
													"src": "1964:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:23:0"
									},
									"scope": 59,
									"src": "1903:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "2285:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2349:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2364:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2374:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 32,
														"isOffset": false,
														"isSlot": true,
														"src": "2364:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 28,
														"isOffset": false,
														"isSlot": false,
														"src": "2374:4:0",
														"valueSize": 1
													}
												],
												"id": 34,
												"nodeType": "InlineAssembly",
												"src": "2340:49:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "2106:89:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2210:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2233:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "2225:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 27,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:14:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2282:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "2262:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$8_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 31,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 30,
														"name": "BooleanSlot",
														"nameLocations": [
															"2262:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "2262:11:0"
													},
													"referencedDeclaration": 8,
													"src": "2262:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$8_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:23:0"
									},
									"scope": 59,
									"src": "2201:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "2583:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2647:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2662:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2672:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 43,
														"isOffset": false,
														"isSlot": true,
														"src": "2662:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 39,
														"isOffset": false,
														"isSlot": false,
														"src": "2672:4:0",
														"valueSize": 1
													}
												],
												"id": 45,
												"nodeType": "InlineAssembly",
												"src": "2638:49:0"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "2404:89:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2508:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2531:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2523:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 38,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2522:14:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2560:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$11_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 42,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 41,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2560:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 11,
														"src": "2560:11:0"
													},
													"referencedDeclaration": 11,
													"src": "2560:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$11_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:23:0"
									},
									"scope": 59,
									"src": "2499:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "2881:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2945:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2960:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2970:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2960:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 54,
														"isOffset": false,
														"isSlot": true,
														"src": "2960:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 50,
														"isOffset": false,
														"isSlot": false,
														"src": "2970:4:0",
														"valueSize": 1
													}
												],
												"id": 56,
												"nodeType": "InlineAssembly",
												"src": "2936:49:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2702:89:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2806:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2829:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2821:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 49,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:14:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2878:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2858:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$14_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 53,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 52,
														"name": "Uint256Slot",
														"nameLocations": [
															"2858:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "2858:11:0"
													},
													"referencedDeclaration": 14,
													"src": "2858:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$14_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:23:0"
									},
									"scope": 59,
									"src": "2797:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 805,
							"src": "1548:1447:0",
							"usedErrors": []
						},
						{
							"id": 60,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "3273:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 61,
								"nodeType": "StructuredDocumentation",
								"src": "3300:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "Address",
							"nameLocation": "3379:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "4449:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 69,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "4678:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4686:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4678:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4691:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4678:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4700:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4678:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 68,
												"id": 74,
												"nodeType": "Return",
												"src": "4671:30:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3394:983:0",
										"text": " @dev Returns true if `account` is a contract.\n [////IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "4392:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4411:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "4403:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4402:17:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "4443:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4443:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:6:0"
									},
									"scope": 388,
									"src": "4383:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "5719:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 87,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5746:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$388",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$388",
																				"typeString": "library Address"
																			}
																		],
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5738:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 85,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5738:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5738:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5752:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5738:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 90,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "5763:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5738:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5771:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5730:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "5730:73:0"
											},
											{
												"assignments": [
													96,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 96,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5822:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "5817:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 95,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 103,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5865:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 97,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "5835:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5845:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5835:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 99,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "5857:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5835:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5835:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5816:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 105,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "5887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5896:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5879:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5879:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "5879:78:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "4717:925:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n ////IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "5657:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5683:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5667:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5667:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5666:43:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5719:0:0"
									},
									"scope": 388,
									"src": "5648:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "6816:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "6856:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 122,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "6864:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6870:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6873:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 120,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															168,
															212
														],
														"referencedDeclaration": 212,
														"src": "6834:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 119,
												"id": 126,
												"nodeType": "Return",
												"src": "6827:79:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "5973:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "6736:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6765:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6765:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6748:35:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6802:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6801:14:0"
									},
									"scope": 388,
									"src": "6727:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "7295:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 141,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "7335:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "7343:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7349:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 144,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "7352:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 140,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															168,
															212
														],
														"referencedDeclaration": 212,
														"src": "7313:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7313:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 139,
												"id": 146,
												"nodeType": "Return",
												"src": "7306:59:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6922:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "7153:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7184:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "7176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7214:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "7201:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7243:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "7229:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7165:97:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "7281:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7280:14:0"
									},
									"scope": 388,
									"src": "7144:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "7895:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "7935:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 162,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "7943:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 163,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "7949:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7956:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 160,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															168,
															212
														],
														"referencedDeclaration": 212,
														"src": "7913:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7913:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 159,
												"id": 166,
												"nodeType": "Return",
												"src": "7906:94:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "7381:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "7757:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7797:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "7789:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7827:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "7814:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7814:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7850:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "7842:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7778:84:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "7881:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7881:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7880:14:0"
									},
									"scope": 388,
									"src": "7748:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "8448:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 185,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8475:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$388",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$388",
																				"typeString": "library Address"
																			}
																		],
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8467:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 183,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8467:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8467:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8481:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8467:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 188,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "8492:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8467:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8499:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8459:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "8459:81:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8557:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "8552:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "8579:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "8566:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8566:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "8619:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 197,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "8593:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8600:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8593:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 199,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "8612:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8593:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8593:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8551:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 205,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "8669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "8677:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "8686:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "8698:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 204,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "8642:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 181,
												"id": 210,
												"nodeType": "Return",
												"src": "8635:76:0"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "8016:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8273:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8343:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8330:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 172,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8366:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8358:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8396:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8382:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8382:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8294:121:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8434:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8433:14:0"
									},
									"scope": 388,
									"src": "8264:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "9004:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "9041:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "9049:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9055:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 222,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															258
														],
														"referencedDeclaration": 258,
														"src": "9022:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9022:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "9015:80:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8727:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "8913:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8940:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8932:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8961:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8948:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8931:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8990:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8990:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8989:14:0"
									},
									"scope": 388,
									"src": "8904:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "9457:171:0",
										"statements": [
											{
												"assignments": [
													242,
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9474:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "9469:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 241,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9469:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9496:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "9483:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 243,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9483:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "9528:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "9510:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9517:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "9510:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9510:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9468:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "9578:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "9586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 253,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "9595:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 254,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "9607:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 250,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "9551:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9551:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 256,
												"nodeType": "Return",
												"src": "9544:76:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "9111:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9304:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9341:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "9333:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9371:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "9358:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9358:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9400:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "9386:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9322:97:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "9443:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9443:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9442:14:0"
									},
									"scope": 388,
									"src": "9295:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "9912:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 269,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "9951:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "9959:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9965:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 268,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															275,
															304
														],
														"referencedDeclaration": 304,
														"src": "9930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9930:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 267,
												"id": 273,
												"nodeType": "Return",
												"src": "9923:84:0"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "9636:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "9824:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9874:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9861:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9861:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9844:35:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9898:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9898:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9897:14:0"
									},
									"scope": 388,
									"src": "9815:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "10368:173:0",
										"statements": [
											{
												"assignments": [
													288,
													290
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10385:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "10380:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 287,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10380:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 290,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10407:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "10394:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 289,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"arguments": [
														{
															"id": 293,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "10441:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 291,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "10421:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10428:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "10421:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10421:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10379:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 297,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "10491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "10499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 299,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "10508:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 300,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "10520:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 296,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "10464:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10464:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 286,
												"id": 302,
												"nodeType": "Return",
												"src": "10457:76:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "10023:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10218:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10257:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "10249:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10287:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "10274:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10316:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "10302:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10302:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10238:97:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "10354:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10353:14:0"
									},
									"scope": 388,
									"src": "10209:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "11036:445:0",
										"statements": [
											{
												"condition": {
													"id": 318,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 309,
													"src": "11051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "11414:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 336,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "11437:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 337,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "11449:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 335,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "11429:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11429:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 339,
															"nodeType": "ExpressionStatement",
															"src": "11429:33:0"
														}
													]
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "11047:427:0",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "11060:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 319,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "11079:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11090:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11079:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11100:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11079:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 331,
															"nodeType": "IfStatement",
															"src": "11075:290:0",
															"trueBody": {
																"id": 330,
																"nodeType": "Block",
																"src": "11103:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 325,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 307,
																							"src": "11308:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 324,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 76,
																						"src": "11297:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11297:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 327,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11317:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 323,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11289:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11289:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 329,
																		"nodeType": "ExpressionStatement",
																		"src": "11289:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 332,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "11386:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 317,
															"id": 333,
															"nodeType": "Return",
															"src": "11379:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "10549:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "10846:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10891:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "10883:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "10913:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "10908:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "10944:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "10931:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10931:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10979:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "10965:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10965:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10872:126:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "11022:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11022:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11021:14:0"
									},
									"scope": 388,
									"src": "10837:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "11874:141:0",
										"statements": [
											{
												"condition": {
													"id": 355,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 346,
													"src": "11889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "11948:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 360,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "11971:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 361,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "11983:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 359,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "11963:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11963:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 363,
															"nodeType": "ExpressionStatement",
															"src": "11963:33:0"
														}
													]
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "11885:123:0",
												"trueBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "11898:44:0",
													"statements": [
														{
															"expression": {
																"id": 356,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "11920:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 354,
															"id": 357,
															"nodeType": "Return",
															"src": "11913:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "11489:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "11719:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "11746:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "11782:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "11769:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11817:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "11803:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11803:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11735:101:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "11860:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11860:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11859:14:0"
									},
									"scope": 388,
									"src": "11710:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "12106:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 374,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "12184:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12195:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12184:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12204:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12184:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 384,
													"nodeType": "Block",
													"src": "12521:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 381,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "12543:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 380,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "12536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12536:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 383,
															"nodeType": "ExpressionStatement",
															"src": "12536:20:0"
														}
													]
												},
												"id": 385,
												"nodeType": "IfStatement",
												"src": "12180:388:0",
												"trueBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "12207:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "12368:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12387:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "12416:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12410:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12410:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "12391:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12456:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "12460:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12452:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12452:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "12473:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12445:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12445:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12445:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 369,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12416:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 369,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12460:10:0",
																	"valueSize": 1
																}
															],
															"id": 378,
															"nodeType": "InlineAssembly",
															"src": "12359:145:0"
														}
													]
												}
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "12032:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "12053:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "12040:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12040:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12079:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "12065:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12065:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12039:53:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12106:0:0"
									},
									"scope": 388,
									"src": "12023:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "3371:9207:0",
							"usedErrors": []
						},
						{
							"id": 389,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12868:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 390,
								"nodeType": "StructuredDocumentation",
								"src": "12895:206:0",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 397,
							"linearizedBaseContracts": [
								397
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "13113:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "13138:449:0",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n ////IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "13602:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13615:2:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "13641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 393,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13640:9:0"
									},
									"scope": 397,
									"src": "13593:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 805,
							"src": "13103:550:0",
							"usedErrors": []
						},
						{
							"id": 398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13923:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 399,
								"nodeType": "StructuredDocumentation",
								"src": "13950:81:0",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "IBeacon",
							"nameLocation": "14043:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "14058:166:0",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "14239:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14253:2:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "14279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14278:9:0"
									},
									"scope": 406,
									"src": "14230:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 805,
							"src": "14033:258:0",
							"usedErrors": []
						},
						{
							"id": 407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "14584:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC1967Upgrade",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 408,
								"nodeType": "StructuredDocumentation",
								"src": "14783:243:0",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"
							},
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "15046:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 411,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "15173:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "15148:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 409,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "15148:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 410,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15190:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "15265:218:0",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 415,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "15515:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "15489:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 413,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "15489:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 414,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15538:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "15613:70:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 420,
									"name": "Upgraded",
									"nameLocation": "15695:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "15720:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "15704:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15703:32:0"
									},
									"src": "15689:47:0"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "15881:80:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 428,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "15926:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 426,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "15899:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$59_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15911:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "15899:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15899:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15948:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "15899:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 425,
												"id": 431,
												"nodeType": "Return",
												"src": "15892:61:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "15744:69:0",
										"text": " @dev Returns the current implementation address."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "15828:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15846:2:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "15872:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15871:9:0"
									},
									"scope": 719,
									"src": "15819:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "16120:199:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 442,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "16158:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "16139:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$388_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16147:10:0",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "16139:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16139:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16178:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16131:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "16131:95:0"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 450,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "16264:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 447,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "16237:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$59_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16249:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 25,
																"src": "16237:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16237:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16286:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "16237:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 453,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "16294:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16237:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "16237:74:0"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "15969:82:0",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "16066:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "16093:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "16085:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16084:27:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16120:0:0"
									},
									"scope": 719,
									"src": "16057:262:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "16488:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "16518:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 463,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16499:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16499:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "16499:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 468,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "16561:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 467,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "16552:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16552:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "EmitStatement",
												"src": "16547:32:0"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "16327:99:0",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "16441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "16460:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "16452:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16451:27:0"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16488:0:0"
									},
									"scope": 719,
									"src": "16432:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "16860:172:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 483,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "16882:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 482,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "16871:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16871:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "16871:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 486,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "16915:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16920:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "16915:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16929:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16915:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 490,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "16934:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16915:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "16911:114:0",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "16945:80:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "16989:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 496,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "17008:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 492,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "16960:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$388_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16968:20:0",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 275,
																	"src": "16960:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16960:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 498,
															"nodeType": "ExpressionStatement",
															"src": "16960:53:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "16595:127:0",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "16737:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "16773:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "16765:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16814:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "16801:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16801:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "16834:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "16829:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16754:96:0"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16860:0:0"
									},
									"scope": 719,
									"src": "16728:304:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "17347:834:0",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 514,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "17692:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 512,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "17665:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$59_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17677:14:0",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "17665:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$8_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17665:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$8_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot storage pointer"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17708:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 7,
													"src": "17665:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "17785:389:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 537,
																		"nodeType": "Block",
																		"src": "17880:117:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 533,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 531,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 528,
																								"src": "17907:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 532,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 415,
																								"src": "17915:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "17907:28:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 534,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17937:43:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 530,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "17899:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 535,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17899:82:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 536,
																				"nodeType": "ExpressionStatement",
																				"src": "17899:82:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 538,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 529,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 528,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "17874:4:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 538,
																				"src": "17866:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 527,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "17866:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17865:14:0"
																	},
																	"src": "17857:140:0"
																},
																{
																	"block": {
																		"id": 543,
																		"nodeType": "Block",
																		"src": "18004:91:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 540,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "18030:48:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 539,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "18023:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18023:56:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "18023:56:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 544,
																	"nodeType": "TryCatchClause",
																	"src": "17998:97:0"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 523,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "17822:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 522,
																			"name": "IERC1822Proxiable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "17804:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$397_$",
																				"typeString": "type(contract IERC1822Proxiable)"
																			}
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17804:36:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822Proxiable_$397",
																			"typeString": "contract IERC1822Proxiable"
																		}
																	},
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17841:13:0",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 396,
																	"src": "17804:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17804:52:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 545,
															"nodeType": "TryStatement",
															"src": "17800:295:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 547,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "18127:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 548,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "18146:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 549,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "18152:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 546,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "18109:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18109:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "18109:53:0"
														}
													]
												},
												"id": 553,
												"nodeType": "IfStatement",
												"src": "17661:513:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17715:64:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 518,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "17749:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 517,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "17730:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17730:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17730:37:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "17040:165:0",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "17220:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "17260:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "17252:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17301:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "17288:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17288:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "17321:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "17316:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17316:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17241:96:0"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17347:0:0"
									},
									"scope": 719,
									"src": "17211:970:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "18189:193:0",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 559,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "18414:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "18388:106:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 557,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "18388:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 558,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18428:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "18503:69:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 566,
									"name": "AdminChanged",
									"nameLocation": "18584:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "18605:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "18597:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "18628:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "18620:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18596:41:0"
									},
									"src": "18578:60:0"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "18757:71:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 574,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "18802:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 572,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "18775:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$59_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18787:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "18775:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18775:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18815:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "18775:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 571,
												"id": 577,
												"nodeType": "Return",
												"src": "18768:52:0"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "18646:52:0",
										"text": " @dev Returns the current admin."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "18713:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18722:2:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "18748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18747:9:0"
									},
									"scope": 719,
									"src": "18704:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "18960:159:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 586,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "18979:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18999:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 587,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18991:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18991:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18979:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19003:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18971:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18971:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "18971:73:0"
											},
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 598,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "19082:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "19055:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$59_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19067:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 25,
																"src": "19055:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19055:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19095:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "19055:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 601,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "19103:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19055:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "19055:56:0"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "18836:73:0",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "18924:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "18942:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "18934:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18933:18:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18960:0:0"
									},
									"scope": 719,
									"src": "18915:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "19286:89:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 612,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "19315:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19315:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "19328:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 611,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "19302:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19302:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "EmitStatement",
												"src": "19297:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "19358:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 617,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "19348:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19348:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "19348:19:0"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "19127:104:0",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "19246:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "19267:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "19259:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19258:18:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19286:0:0"
									},
									"scope": 719,
									"src": "19237:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "19383:235:0",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 626,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "19650:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "19624:107:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 624,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "19624:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 625,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "19665:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "19740:62:0",
										"text": " @dev Emitted when the beacon is upgraded."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 631,
									"name": "BeaconUpgraded",
									"nameLocation": "19814:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "19845:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "19829:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19828:24:0"
									},
									"src": "19808:45:0"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19974:72:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 639,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "20019:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 637,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "19992:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$59_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "20004:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "19992:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19992:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20033:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "19992:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 636,
												"id": 642,
												"nodeType": "Return",
												"src": "19985:53:0"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "19861:53:0",
										"text": " @dev Returns the current beacon."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "19929:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19939:2:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19965:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19964:9:0"
									},
									"scope": 719,
									"src": "19920:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "20180:331:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 653,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "20218:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 651,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "20199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$388_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20207:10:0",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "20199:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20199:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20230:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20191:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "20191:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 662,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "20330:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 661,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 406,
																				"src": "20322:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$406_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20322:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$406",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20341:14:0",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 405,
																		"src": "20322:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20322:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 659,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "20303:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$388_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20311:10:0",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "20303:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20303:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20373:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20281:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20281:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "20281:153:0"
											},
											{
												"expression": {
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 673,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "20472:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 670,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "20445:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$59_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20457:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 25,
																"src": "20445:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20445:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "20486:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "20445:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 676,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "20494:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20445:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "20445:58:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "20054:73:0",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "20142:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "20161:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "20153:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20152:19:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20180:0:0"
									},
									"scope": 719,
									"src": "20133:378:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "20952:223:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "20974:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 690,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "20963:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20963:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "20963:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 695,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "21015:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 694,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "21000:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21000:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "EmitStatement",
												"src": "20995:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 698,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "21040:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21045:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "21040:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21054:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "21040:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 702,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "21059:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "21040:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "21036:132:0",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "21070:98:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 708,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 683,
																						"src": "21122:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 707,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 406,
																					"src": "21114:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$406_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21114:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$406",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "21133:14:0",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 405,
																			"src": "21114:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21114:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 712,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "21151:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 704,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "21085:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$388_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "21093:20:0",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 275,
																	"src": "21085:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21085:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 714,
															"nodeType": "ExpressionStatement",
															"src": "21085:71:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "20519:297:0",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "20831:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "20873:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20865:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20893:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "20926:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20854:88:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20952:0:0"
									},
									"scope": 719,
									"src": "20822:353:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 805,
							"src": "15028:6150:0",
							"usedErrors": []
						},
						{
							"id": 720,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21454:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "21481:607:0",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 770,
							"linearizedBaseContracts": [
								770
							],
							"name": "Proxy",
							"nameLocation": "22108:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "22381:858:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22401:831:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22658:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22661:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "22664:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22664:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "22645:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22645:34:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22645:34:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22810:74:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "22837:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22837:5:0"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "22844:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22860:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "22863:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22863:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22879:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22882:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "22824:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22824:60:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "22814:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22955:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22958:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "22961:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22961:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "22940:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22940:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22940:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "23077:61:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "23103:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "23106:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "23106:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "23096:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23096:27:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "23096:27:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "23070:68:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23075:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "23160:61:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "23186:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "23189:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "23189:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "23179:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23179:27:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "23179:27:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "23152:69:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "23001:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "22994:227:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 724,
														"isOffset": false,
														"isSlot": false,
														"src": "22844:14:0",
														"valueSize": 1
													}
												],
												"id": 727,
												"nodeType": "InlineAssembly",
												"src": "22392:840:0"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "22121:194:0",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "22330:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "22348:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "22340:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22339:24:0"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22381:0:0"
									},
									"scope": 770,
									"src": "22321:918:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "23247:176:0",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "23438:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23453:2:0"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "23487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23486:9:0"
									},
									"scope": 770,
									"src": "23429:67:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "23769:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 739,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "23780:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23780:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "23780:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 743,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "23818:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23818:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 742,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "23808:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23808:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "23808:28:0"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "23504:221:0",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "23740:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23749:2:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23769:0:0"
									},
									"scope": 770,
									"src": "23731:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "24083:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 752,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "24094:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24094:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "24094:11:0"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "23852:189:0",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 756,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24055:2:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24083:0:0"
									},
									"scope": 770,
									"src": "24047:66:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "24314:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 760,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "24325:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24325:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "24325:11:0"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "24121:152:0",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 764,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24286:2:0"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24314:0:0"
									},
									"scope": 770,
									"src": "24279:65:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "24678:2:0",
										"statements": []
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "24352:276:0",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "24643:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24658:2:0"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24678:0:0"
									},
									"scope": 770,
									"src": "24634:46:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 805,
							"src": "22090:2593:0",
							"usedErrors": []
						},
						{
							"id": 771,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24958:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 773,
										"name": "Proxy",
										"nameLocations": [
											"25455:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 770,
										"src": "25455:5:0"
									},
									"id": 774,
									"nodeType": "InheritanceSpecifier",
									"src": "25455:5:0"
								},
								{
									"baseName": {
										"id": 775,
										"name": "ERC1967Upgrade",
										"nameLocations": [
											"25462:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 719,
										"src": "25462:14:0"
									},
									"id": 776,
									"nodeType": "InheritanceSpecifier",
									"src": "25462:14:0"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 772,
								"nodeType": "StructuredDocumentation",
								"src": "25051:377:0",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804,
								719,
								770
							],
							"name": "ERC1967Proxy",
							"nameLocation": "25439:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "25884:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "25913:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "25921:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 784,
														"name": "_upgradeToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "25895:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25895:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "25895:39:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "25484:338:0",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."
									},
									"id": 791,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "25848:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "25840:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "25869:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "25856:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 780,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25839:36:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25884:0:0"
									},
									"scope": 804,
									"src": "25828:114:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										735
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "26106:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 798,
															"name": "ERC1967Upgrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "26124:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$719_$",
																"typeString": "type(contract ERC1967Upgrade)"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26139:18:0",
														"memberName": "_getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 433,
														"src": "26124:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26124:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 797,
												"id": 801,
												"nodeType": "Return",
												"src": "26117:42:0"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "25950:69:0",
										"text": " @dev Returns the current implementation address."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "26034:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 794,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26074:8:0"
									},
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26049:2:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "26100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "26092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26091:14:0"
									},
									"scope": 804,
									"src": "26025:142:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 805,
							"src": "25430:740:0",
							"usedErrors": []
						}
					],
					"src": "346:25824:0"
				},
				"id": 0
			}
		}
	}
}