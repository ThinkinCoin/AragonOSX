{
	"id": "4c24615b146785948cef3bab5d16bbc6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./UUPSUpgradeableMockUpgradeable.sol\";\r\nimport \"../../proxy/utils/initializable.sol\";\r\n\r\n// This contract implements the pre-4.5 UUPS upgrade function with a rollback test.\r\n// It's used to test that newer UUPS contracts are considered valid upgrades by older UUPS contracts.\r\ncontract UUPSUpgradeableLegacyMockUpgradeable is Initializable, UUPSUpgradeableMockUpgradeable {\r\n    // Inlined from ERC1967Upgrade\r\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\r\n\r\n    function __UUPSUpgradeableLegacyMock_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __UUPSUpgradeableLegacyMock_init_unchained() internal onlyInitializing {\r\n    }\r\n    // ERC1967Upgrade._setImplementation is private so we reproduce it here.\r\n    // An extra underscore prevents a name clash error.\r\n    function __setImplementation(address newImplementation) private {\r\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n    }\r\n\r\n    function _upgradeToAndCallSecureLegacyV1(address newImplementation, bytes memory data, bool forceCall) internal {\r\n        address oldImplementation = _getImplementation();\r\n\r\n        // Initial upgrade and setup call\r\n        __setImplementation(newImplementation);\r\n        if (data.length > 0 || forceCall) {\r\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\r\n        }\r\n\r\n        // Perform rollback test if not already in progress\r\n        StorageSlotUpgradeable.BooleanSlot storage rollbackTesting = StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT);\r\n        if (!rollbackTesting.value) {\r\n            // Trigger rollback using upgradeTo from the new implementation\r\n            rollbackTesting.value = true;\r\n            AddressUpgradeable.functionDelegateCall(\r\n                newImplementation,\r\n                abi.encodeWithSignature(\"upgradeTo(address)\", oldImplementation)\r\n            );\r\n            rollbackTesting.value = false;\r\n            // Check rollback was effective\r\n            require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\");\r\n            // Finally reset to the new implementation and log the upgrade\r\n            _upgradeTo(newImplementation);\r\n        }\r\n    }\r\n\r\n    // hooking into the old mechanism\r\n    function upgradeTo(address newImplementation) public override {\r\n        _upgradeToAndCallSecureLegacyV1(newImplementation, bytes(\"\"), false);\r\n    }\r\n\r\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable override {\r\n        _upgradeToAndCallSecureLegacyV1(newImplementation, data, false);\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[50] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/proxy/utils/initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/initializable.sol)\r\n\r\npragma solidity ^0.8.2;\r\n\r\nimport \"../../utils/AddressUpgradeable.sol\";\r\n\r\n/**\r\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\r\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\r\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\r\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\r\n *\r\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\r\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\r\n * case an upgrade adds a module that needs to be initialized.\r\n *\r\n * For example:\r\n *\r\n * [.hljs-theme-light.nopadding]\r\n * ```solidity\r\n * contract MyToken is ERC20Upgradeable {\r\n *     function initialize() initializer public {\r\n *         __ERC20_init(\"MyToken\", \"MTK\");\r\n *     }\r\n * }\r\n *\r\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\r\n *     function initializeV2() reinitializer(2) public {\r\n *         __ERC20Permit_init(\"MyToken\");\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\r\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\r\n *\r\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\r\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\r\n *\r\n * [CAUTION]\r\n * ====\r\n * Avoid leaving a contract uninitialized.  \r\n *\r\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\r\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\r\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\r\n *\r\n * [.hljs-theme-light.nopadding]\r\n * ```\r\n * /// @custom:oz-upgrades-unsafe-allow constructor\r\n * constructor() {\r\n *     _disableInitializers();\r\n * }\r\n * ```\r\n * ====\r\n */\r\nabstract contract Initializable {\r\n    /**\r\n     * @dev Indicates that the contract has been initialized.\r\n     * @custom:oz-retyped-from bool\r\n     */\r\n    uint8 private _initialized;\r\n\r\n    /**\r\n     * @dev Indicates that the contract is in the process of being initialized.\r\n     */\r\n    bool private _initializing;\r\n\r\n    /**\r\n     * @dev Triggered when the contract has been initialized or reinitialized.\r\n     */\r\n    event Initialized(uint8 version);\r\n\r\n    /**\r\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\r\n     * `onlyInitializing` functions can be used to initialize parent contracts.\r\n     *\r\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\r\n     * constructor.\r\n     *\r\n     * Emits an {Initialized} event.\r\n     */\r\n    modifier initializer() {\r\n        bool isTopLevelCall = !_initializing;\r\n        require(\r\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\r\n            \"Initializable: contract is already initialized\"\r\n        );\r\n        _initialized = 1;\r\n        if (isTopLevelCall) {\r\n            _initializing = true;\r\n        }\r\n        _;\r\n        if (isTopLevelCall) {\r\n            _initializing = false;\r\n            emit Initialized(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\r\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\r\n     * used to initialize parent contracts.\r\n     *\r\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\r\n     * are added through upgrades and that require initialization.\r\n     *\r\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\r\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\r\n     *\r\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\r\n     * a contract, executing them in the right order is up to the developer or operator.\r\n     *\r\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\r\n     *\r\n     * Emits an {Initialized} event.\r\n     */\r\n    modifier reinitializer(uint8 version) {\r\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\r\n        _initialized = version;\r\n        _initializing = true;\r\n        _;\r\n        _initializing = false;\r\n        emit Initialized(version);\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\r\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\r\n     */\r\n    modifier onlyInitializing() {\r\n        require(_initializing, \"Initializable: contract is not initializing\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\r\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\r\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\r\n     * through proxies.\r\n     *\r\n     * Emits an {Initialized} event the first time it is successfully executed.\r\n     */\r\n    function _disableInitializers() internal virtual {\r\n        require(!_initializing, \"Initializable: contract is initializing\");\r\n        if (_initialized != type(uint8).max) {\r\n            _initialized = type(uint8).max;\r\n            emit Initialized(type(uint8).max);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\r\n     */\r\n    function _getInitializedVersion() internal view returns (uint8) {\r\n        return _initialized;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\r\n     */\r\n    function _isInitializing() internal view returns (bool) {\r\n        return _initializing;\r\n    }\r\n}"
			},
			"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"../../utils/CountersUpgradeable.sol\";\r\nimport \"../../proxy/utils/initializable.sol\";\r\n\r\ncontract NonUpgradeableMockUpgradeable is Initializable {\r\n    CountersUpgradeable.Counter internal _counter;\r\n\r\n    function __NonUpgradeableMock_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __NonUpgradeableMock_init_unchained() internal onlyInitializing {\r\n    }\r\n    function current() external view returns (uint256) {\r\n        return CountersUpgradeable.current(_counter);\r\n    }\r\n\r\n    function increment() external {\r\n        return CountersUpgradeable.increment(_counter);\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[49] private __gap;\r\n}\r\n\r\ncontract UUPSUpgradeableMockUpgradeable is Initializable, NonUpgradeableMockUpgradeable, UUPSUpgradeable {\r\n    function __UUPSUpgradeableMock_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __UUPSUpgradeableMock_init_unchained() internal onlyInitializing {\r\n    }\r\n    // Not having any checks in this function is dangerous! Do not do this outside tests!\r\n    function _authorizeUpgrade(address) internal override {}\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[50] private __gap;\r\n}\r\n\r\ncontract UUPSUpgradeableUnsafeMockUpgradeable is Initializable, UUPSUpgradeableMockUpgradeable {\r\n    function __UUPSUpgradeableUnsafeMock_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __UUPSUpgradeableUnsafeMock_init_unchained() internal onlyInitializing {\r\n    }\r\n    function upgradeTo(address newImplementation) public override {\r\n        ERC1967UpgradeUpgradeable._upgradeToAndCall(newImplementation, bytes(\"\"), false);\r\n    }\r\n\r\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable override {\r\n        ERC1967UpgradeUpgradeable._upgradeToAndCall(newImplementation, data, false);\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[50] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary AddressUpgradeable {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}"
			},
			"packages/contracts/src/utils/CountersUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n */\r\nlibrary CountersUpgradeable {\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        unchecked {\r\n            counter._value += 1;\r\n        }\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        uint256 value = counter._value;\r\n        require(value > 0, \"Counter: decrement overflow\");\r\n        unchecked {\r\n            counter._value = value - 1;\r\n        }\r\n    }\r\n\r\n    function reset(Counter storage counter) internal {\r\n        counter._value = 0;\r\n    }\r\n}"
			},
			"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\r\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\r\nimport \"./initializable.sol\";\r\n\r\n/**\r\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\r\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\r\n *\r\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\r\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\r\n * `UUPSUpgradeable` with a custom implementation of upgrades.\r\n *\r\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\r\n *\r\n * _Available since v4.1._\r\n */\r\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\r\n    function __UUPSUpgradeable_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\r\n    }\r\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\r\n    address private immutable __self = address(this);\r\n\r\n    /**\r\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\r\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\r\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\r\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\r\n     * fail.\r\n     */\r\n    modifier onlyProxy() {\r\n        require(address(this) != __self, \"Function must be called through delegatecall\");\r\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\r\n     * callable on the implementing contract but not through proxies.\r\n     */\r\n    modifier notDelegated() {\r\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\r\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\r\n     *\r\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\r\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\r\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\r\n     */\r\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\r\n        return _IMPLEMENTATION_SLOT;\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\r\n     *\r\n     * Calls {_authorizeUpgrade}.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     *\r\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\r\n     */\r\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\r\n        _authorizeUpgrade(newImplementation);\r\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\r\n     * encoded in `data`.\r\n     *\r\n     * Calls {_authorizeUpgrade}.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     *\r\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\r\n     */\r\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\r\n        _authorizeUpgrade(newImplementation);\r\n        _upgradeToAndCallUUPS(newImplementation, data, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\r\n     * {upgradeTo} and {upgradeToAndCall}.\r\n     *\r\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\r\n     *\r\n     * ```solidity\r\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\r\n     * ```\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal virtual;\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[50] private __gap;\r\n}"
			},
			"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\r\n\r\npragma solidity ^0.8.2;\r\n\r\nimport \"../beacon/IBeaconUpgradeable.sol\";\r\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\r\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\r\nimport \"../../utils/AddressUpgradeable.sol\";\r\nimport \"../../utils/StorageSlotUpgradeable.sol\";\r\nimport \"../utils/initializable.sol\";\r\n\r\n/**\r\n * @dev This abstract contract provides getters and event emitting update functions for\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\r\n *\r\n * _Available since v4.1._\r\n */\r\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\r\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\r\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\r\n\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    function __ERC1967Upgrade_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\r\n    }\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function _getImplementation() internal view returns (address) {\r\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 implementation slot.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeTo(address newImplementation) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade with additional setup call.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\r\n        _upgradeTo(newImplementation);\r\n        if (data.length > 0 || forceCall) {\r\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\r\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\r\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\r\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\r\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\r\n            _setImplementation(newImplementation);\r\n        } else {\r\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\r\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\r\n            } catch {\r\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\r\n            }\r\n            _upgradeToAndCall(newImplementation, data, forceCall);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Storage slot with the admin of the contract.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     */\r\n    function _getAdmin() internal view returns (address) {\r\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 admin slot.\r\n     */\r\n    function _setAdmin(address newAdmin) private {\r\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\r\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     *\r\n     * Emits an {AdminChanged} event.\r\n     */\r\n    function _changeAdmin(address newAdmin) internal {\r\n        emit AdminChanged(_getAdmin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\r\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\r\n     */\r\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\r\n\r\n    /**\r\n     * @dev Returns the current beacon.\r\n     */\r\n    function _getBeacon() internal view returns (address) {\r\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\r\n     */\r\n    function _setBeacon(address newBeacon) private {\r\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\r\n        require(\r\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\r\n            \"ERC1967: beacon implementation is not a contract\"\r\n        );\r\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\r\n    }\r\n\r\n    /**\r\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\r\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\r\n     *\r\n     * Emits a {BeaconUpgraded} event.\r\n     */\r\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\r\n        _setBeacon(newBeacon);\r\n        emit BeaconUpgraded(newBeacon);\r\n        if (data.length > 0 || forceCall) {\r\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[50] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\r\n * proxy whose upgrades are fully controlled by the current implementation.\r\n */\r\ninterface IERC1822ProxiableUpgradeable {\r\n    /**\r\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\r\n     * address.\r\n     *\r\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\r\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\r\n     * function revert if invoked through a proxy.\r\n     */\r\n    function proxiableUUID() external view returns (bytes32);\r\n}"
			},
			"packages/contracts/src/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\r\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC1967 implementation slot:\r\n * ```solidity\r\n * contract ERC1967 {\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\r\n * _Available since v4.9 for `string`, `bytes`._\r\n */\r\nlibrary StorageSlotUpgradeable {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    struct StringSlot {\r\n        string value;\r\n    }\r\n\r\n    struct BytesSlot {\r\n        bytes value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\r\n     */\r\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\r\n     */\r\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\r\n     */\r\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n}\r\n"
			},
			"packages/contracts/src/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\r\n *\r\n * _Available since v4.8.3._\r\n */\r\ninterface IERC1967Upgradeable {\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Emitted when the admin account has changed.\r\n     */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n     * @dev Emitted when the beacon is changed.\r\n     */\r\n    event BeaconUpgraded(address indexed beacon);\r\n}\r\n"
			},
			"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\r\n */\r\ninterface IBeaconUpgradeable {\r\n    /**\r\n     * @dev Must return an address that can be used as a delegate call target.\r\n     *\r\n     * {BeaconProxy} will check that this address is a contract.\r\n     */\r\n    function implementation() external view returns (address);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"packages/contracts/src/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x6b5e5998dfb73f62c234da6e9dad1a31003305137592a43af6d19f8ac245dc5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df912ba99e2dfcb3168db20e11babc4388cfce8499dc3d8e89b145d5fae2651\",\"dweb:/ipfs/QmNZzLNMEEa4kZFMm7aqGs54ZY5LNzWVbo7m3eUGY88Mrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x61706721037716b2adaeff508f6bab91f9e8725edab306d0b0aae01fa12bce7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62613904df36214b9660ac2ce946eadce67ee7bafcf169e22e93d567cf2496ca\",\"dweb:/ipfs/QmXNZKPYz5XfswUTcWSzjnMNnhPtM33oMLZEjathPes1NV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol": {
				"UUPSUpgradeableLegacyMockUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "current",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":347:3172  contract UUPSUpgradeableLegacyMockUpgradeable is Initializable, UUPSUpgradeableMockUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1360:1364  this */\n  address\n    /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1317:1365  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":347:3172  contract UUPSUpgradeableLegacyMockUpgradeable is Initializable, UUPSUpgradeableMockUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":347:3172  contract UUPSUpgradeableLegacyMockUpgradeable is Initializable, UUPSUpgradeableMockUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9fa6a6e3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2536:2685  function upgradeTo(address newImplementation) public override {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2693:2871  function upgradeToAndCall(address newImplementation, bytes memory data) public payable override {... */\n    tag_3:\n      tag_8\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":1661:1686   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1649:1651   */\n      0x20\n        /* \"#utility.yul\":1634:1652   */\n      add\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_17\n      tag_23\n      jump\t// in\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_8\n      tag_28\n      jump\t// in\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2536:2685  function upgradeTo(address newImplementation) public override {... */\n    tag_11:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2609:2677  _upgradeToAndCallSecureLegacyV1(newImplementation, bytes(\"\"), false) */\n      tag_30\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2641:2658  newImplementation */\n      dup2\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2660:2669  bytes(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2671:2676  false */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2609:2640  _upgradeToAndCallSecureLegacyV1 */\n      tag_31\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2609:2677  _upgradeToAndCallSecureLegacyV1(newImplementation, bytes(\"\"), false) */\n      jump\t// in\n    tag_30:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2536:2685  function upgradeTo(address newImplementation) public override {... */\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2693:2871  function upgradeToAndCall(address newImplementation, bytes memory data) public payable override {... */\n    tag_15:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2800:2863  _upgradeToAndCallSecureLegacyV1(newImplementation, data, false) */\n      tag_33\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2832:2849  newImplementation */\n      dup3\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2851:2855  data */\n      dup3\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2857:2862  false */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2800:2831  _upgradeToAndCallSecureLegacyV1 */\n      tag_31\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2800:2863  _upgradeToAndCallSecureLegacyV1(newImplementation, data, false) */\n      jump\t// in\n    tag_33:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2693:2871  function upgradeToAndCall(address newImplementation, bytes memory data) public payable override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_18:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3144:3151  bytes32 */\n      0x00\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2372:2376  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2381:2387  __self */\n      immutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2364:2387  address(this) == __self */\n      and\n      eq\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2063:2084   */\n      mstore\n        /* \"#utility.yul\":2120:2122   */\n      0x38\n        /* \"#utility.yul\":2100:2118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2093:2123   */\n      mstore\n        /* \"#utility.yul\":2159:2193   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":2139:2157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2132:2194   */\n      mstore\n        /* \"#utility.yul\":2230:2256   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":2210:2228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2203:2257   */\n      mstore\n        /* \"#utility.yul\":2274:2293   */\n      0x84\n      add\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n    tag_23:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":532:539  uint256 */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":559:596  CountersUpgradeable.current(_counter) */\n      tag_40\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":587:595  _counter */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":951:965  counter._value */\n      sload\n      swap1\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":859:973  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":559:596  CountersUpgradeable.current(_counter) */\n    tag_40:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":552:596  return CountersUpgradeable.current(_counter) */\n      swap1\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n    tag_28:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":660:699  CountersUpgradeable.increment(_counter) */\n      tag_43\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":690:698  _counter */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1070:1089  counter._value += 1 */\n      dup1\n      sload\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1088:1089  1 */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1070:1089  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":981:1108  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":660:699  CountersUpgradeable.increment(_counter) */\n    tag_43:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1210:2489  function _upgradeToAndCallSecureLegacyV1(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_31:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1333:1358  address oldImplementation */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1361:1381  _getImplementation() */\n      tag_46\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1574:1639  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1494:1647  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1361:1381  _getImplementation() */\n    tag_46:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1333:1381  address oldImplementation = _getImplementation() */\n      swap1\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1437:1475  __setImplementation(newImplementation) */\n      tag_48\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1457:1474  newImplementation */\n      dup5\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1437:1456  __setImplementation */\n      tag_49\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1437:1475  __setImplementation(newImplementation) */\n      jump\t// in\n    tag_48:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1504:1505  0 */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1490:1494  data */\n      dup4\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1490:1501  data.length */\n      mload\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1490:1505  data.length > 0 */\n      gt\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1490:1518  data.length > 0 || forceCall */\n      dup1\n      tag_50\n      jumpi\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1509:1518  forceCall */\n      dup2\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1490:1518  data.length > 0 || forceCall */\n    tag_50:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1486:1611  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_51\n      jumpi\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1535:1599  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      tag_52\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1575:1592  newImplementation */\n      dup5\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1594:1598  data */\n      dup5\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1535:1574  AddressUpgradeable.functionDelegateCall */\n      tag_53\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1535:1599  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_52:\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1486:1611  if (data.length > 0 || forceCall) {... */\n    tag_51:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":527:593  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1814:1835  rollbackTesting.value */\n      dup1\n      sload\n      0xff\n      and\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1809:2482  if (!rollbackTesting.value) {... */\n      tag_64\n      jumpi\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1929:1957  rollbackTesting.value = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1953:1957  true */\n      0x01\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1929:1957  rollbackTesting.value = true */\n      or\n      dup2\n      sstore\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2066:2130  abi.encodeWithSignature(\"upgradeTo(address)\", oldImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2468:2500   */\n      dup4\n      and\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2066:2130  abi.encodeWithSignature(\"upgradeTo(address)\", oldImplementation) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2450:2501   */\n      mstore\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1972:2145  AddressUpgradeable.functionDelegateCall(... */\n      tag_57\n      swap1\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2030:2047  newImplementation */\n      dup7\n      swap1\n        /* \"#utility.yul\":2423:2441   */\n      0x44\n      add\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2066:2130  abi.encodeWithSignature(\"upgradeTo(address)\", oldImplementation) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe1, 0x1b2ce7f3)\n      or\n      swap1\n      mstore\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1972:2011  AddressUpgradeable.functionDelegateCall */\n      tag_53\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1972:2145  AddressUpgradeable.functionDelegateCall(... */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2160:2189  rollbackTesting.value = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1574:1639  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2257:2298  oldImplementation == _getImplementation() */\n      dup4\n      dup2\n      and\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1574:1639  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      swap2\n      and\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2257:2298  oldImplementation == _getImplementation() */\n      eq\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2249:2350  require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2714:2716   */\n      0x20\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2249:2350  require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2696:2717   */\n      mstore\n        /* \"#utility.yul\":2753:2755   */\n      0x2f\n        /* \"#utility.yul\":2733:2751   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2726:2756   */\n      mstore\n        /* \"#utility.yul\":2792:2826   */\n      0x45524331393637557067726164653a207570677261646520627265616b732066\n        /* \"#utility.yul\":2772:2790   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2765:2827   */\n      mstore\n      shl(0x88, 0x757274686572207570677261646573)\n        /* \"#utility.yul\":2843:2861   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2836:2881   */\n      mstore\n        /* \"#utility.yul\":2898:2917   */\n      0x84\n      add\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2249:2350  require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\") */\n      tag_36\n        /* \"#utility.yul\":2512:2923   */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2249:2350  require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\") */\n    tag_61:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2441:2470  _upgradeTo(newImplementation) */\n      tag_64\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2452:2469  newImplementation */\n      dup6\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2441:2451  _upgradeTo */\n      tag_65\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":2441:2470  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_64:\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1322:2489  {... */\n      pop\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1210:2489  function _upgradeToAndCallSecureLegacyV1(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":917:1202  function __setImplementation(address newImplementation) private {... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":1757:1776  account.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":992:1098  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":992:1098  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3112:3133   */\n      mstore\n        /* \"#utility.yul\":3169:3171   */\n      0x2d\n        /* \"#utility.yul\":3149:3167   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3142:3172   */\n      mstore\n        /* \"#utility.yul\":3208:3242   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":3188:3206   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3181:3243   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":3259:3277   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3252:3295   */\n      mstore\n        /* \"#utility.yul\":3312:3331   */\n      0x84\n      add\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":992:1098  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_36\n        /* \"#utility.yul\":2928:3337   */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":992:1098  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_74:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":1109:1194  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":917:1202  function __setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6854:7054  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_53:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6937:6949  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_79\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6990:6996  target */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6998:7002  data */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:6989  functionDelegateCall */\n      tag_80\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_79:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6962:7046  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6854:7054  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2140:2295  function _upgradeTo(address newImplementation) internal {... */\n    tag_65:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2244  _setImplementation(newImplementation) */\n      tag_83\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2226:2243  newImplementation */\n      dup2\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2225  _setImplementation */\n      tag_49\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2244  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_83:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2260:2287  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2140:2295  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7248:7580  function functionDelegateCall(... */\n    tag_80:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7393:7405  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7419:7431  bool success */\n      0x00\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7433:7456  bytes memory returndata */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7466  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7479  target.delegatecall */\n      and\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7480:7484  data */\n      dup6\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7485  target.delegatecall(data) */\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_92\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_91)\n    tag_92:\n      0x60\n      swap2\n      pop\n    tag_91:\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7418:7485  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7572  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_93\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7530:7536  target */\n      dup7\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7538:7545  success */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7547:7557  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7559:7571  errorMessage */\n      dup8\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7529  verifyCallResultFromTarget */\n      tag_94\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7572  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_93:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7496:7572  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7248:7580  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7876:8520  function verifyCallResultFromTarget(... */\n    tag_94:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8061:8073  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8090:8097  success */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8086:8513  if (success) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8128  returndata */\n      dup3\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8135  returndata.length */\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8139:8140  0 */\n      0x00\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8140  returndata.length == 0 */\n      sub\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8114:8404  if (returndata.length == 0) {... */\n      tag_104\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":1757:1776  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4091:4093   */\n      0x20\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4073:4094   */\n      mstore\n        /* \"#utility.yul\":4130:4132   */\n      0x1d\n        /* \"#utility.yul\":4110:4128   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4103:4133   */\n      mstore\n        /* \"#utility.yul\":4169:4200   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":4149:4167   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4142:4201   */\n      mstore\n        /* \"#utility.yul\":4218:4236   */\n      0x64\n      add\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      tag_36\n        /* \"#utility.yul\":3889:4242   */\n      jump\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n    tag_104:\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8425:8435  returndata */\n      dup2\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8418:8435  return returndata */\n      jump(tag_108)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8086:8513  if (success) {... */\n    tag_101:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8501  _revert(returndata, errorMessage) */\n      tag_108\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8476:8486  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8488:8500  errorMessage */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8475  _revert */\n      tag_109\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8501  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_108:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7876:8520  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9062:9614  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_109:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9223:9240  returndata.length */\n      dup2\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9223:9244  returndata.length > 0 */\n      iszero\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9219:9607  if (returndata.length > 0) {... */\n      tag_111\n      jumpi\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9455:9465  returndata */\n      dup2\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9449:9466  mload(returndata) */\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9512:9527  returndata_size */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9499:9509  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9495:9497  32 */\n      0x20\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9491:9510  add(32, returndata) */\n      add\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9484:9528  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9219:9607  if (returndata.length > 0) {... */\n    tag_111:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9582:9594  errorMessage */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9575:9595  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_115:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_120:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_10:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_122:\n        /* \"#utility.yul\":343:372   */\n      tag_79\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_115\n      jump\t// in\n        /* \"#utility.yul\":383:510   */\n    tag_116:\n        /* \"#utility.yul\":444:454   */\n      0x4e487b71\n        /* \"#utility.yul\":439:442   */\n      0xe0\n        /* \"#utility.yul\":435:455   */\n      shl\n        /* \"#utility.yul\":432:433   */\n      0x00\n        /* \"#utility.yul\":425:456   */\n      mstore\n        /* \"#utility.yul\":475:479   */\n      0x41\n        /* \"#utility.yul\":472:473   */\n      0x04\n        /* \"#utility.yul\":465:480   */\n      mstore\n        /* \"#utility.yul\":499:503   */\n      0x24\n        /* \"#utility.yul\":496:497   */\n      0x00\n        /* \"#utility.yul\":489:504   */\n      revert\n        /* \"#utility.yul\":515:1510   */\n    tag_14:\n        /* \"#utility.yul\":592:598   */\n      0x00\n        /* \"#utility.yul\":600:606   */\n      dup1\n        /* \"#utility.yul\":653:655   */\n      0x40\n        /* \"#utility.yul\":641:650   */\n      dup4\n        /* \"#utility.yul\":632:639   */\n      dup6\n        /* \"#utility.yul\":628:651   */\n      sub\n        /* \"#utility.yul\":624:656   */\n      slt\n        /* \"#utility.yul\":621:673   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":669:670   */\n      0x00\n        /* \"#utility.yul\":666:667   */\n      dup1\n        /* \"#utility.yul\":659:671   */\n      revert\n        /* \"#utility.yul\":621:673   */\n    tag_126:\n        /* \"#utility.yul\":692:721   */\n      tag_127\n        /* \"#utility.yul\":711:720   */\n      dup4\n        /* \"#utility.yul\":692:721   */\n      tag_115\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":682:721   */\n      swap2\n      pop\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup4\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":744:776   */\n      calldataload\n        /* \"#utility.yul\":795:813   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":836:838   */\n      dup1\n        /* \"#utility.yul\":828:834   */\n      dup3\n        /* \"#utility.yul\":825:839   */\n      gt\n        /* \"#utility.yul\":822:856   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":849:850   */\n      dup1\n        /* \"#utility.yul\":842:854   */\n      revert\n        /* \"#utility.yul\":822:856   */\n    tag_128:\n        /* \"#utility.yul\":890:896   */\n      dup2\n        /* \"#utility.yul\":879:888   */\n      dup6\n        /* \"#utility.yul\":875:897   */\n      add\n        /* \"#utility.yul\":865:897   */\n      swap2\n      pop\n        /* \"#utility.yul\":935:942   */\n      dup6\n        /* \"#utility.yul\":928:932   */\n      0x1f\n        /* \"#utility.yul\":924:926   */\n      dup4\n        /* \"#utility.yul\":920:933   */\n      add\n        /* \"#utility.yul\":916:943   */\n      slt\n        /* \"#utility.yul\":906:961   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":957:958   */\n      0x00\n        /* \"#utility.yul\":954:955   */\n      dup1\n        /* \"#utility.yul\":947:959   */\n      revert\n        /* \"#utility.yul\":906:961   */\n    tag_129:\n        /* \"#utility.yul\":993:995   */\n      dup2\n        /* \"#utility.yul\":980:996   */\n      calldataload\n        /* \"#utility.yul\":1015:1017   */\n      dup2\n        /* \"#utility.yul\":1011:1013   */\n      dup2\n        /* \"#utility.yul\":1008:1018   */\n      gt\n        /* \"#utility.yul\":1005:1041   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":1021:1039   */\n      tag_131\n      tag_116\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1096:1098   */\n      0x40\n        /* \"#utility.yul\":1090:1099   */\n      mload\n        /* \"#utility.yul\":1064:1066   */\n      0x1f\n        /* \"#utility.yul\":1150:1163   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1146:1168   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1170:1172   */\n      0x3f\n        /* \"#utility.yul\":1142:1173   */\n      add\n        /* \"#utility.yul\":1138:1178   */\n      and\n        /* \"#utility.yul\":1126:1179   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1194:1212   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1214:1236   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1191:1237   */\n      or\n        /* \"#utility.yul\":1188:1260   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1240:1258   */\n      tag_133\n      tag_116\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1280:1290   */\n      dup2\n        /* \"#utility.yul\":1276:1278   */\n      0x40\n        /* \"#utility.yul\":1269:1291   */\n      mstore\n        /* \"#utility.yul\":1315:1317   */\n      dup3\n        /* \"#utility.yul\":1307:1313   */\n      dup2\n        /* \"#utility.yul\":1300:1318   */\n      mstore\n        /* \"#utility.yul\":1355:1362   */\n      dup9\n        /* \"#utility.yul\":1350:1352   */\n      0x20\n        /* \"#utility.yul\":1345:1347   */\n      dup5\n        /* \"#utility.yul\":1341:1343   */\n      dup8\n        /* \"#utility.yul\":1337:1348   */\n      add\n        /* \"#utility.yul\":1333:1353   */\n      add\n        /* \"#utility.yul\":1330:1363   */\n      gt\n        /* \"#utility.yul\":1327:1380   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1376:1377   */\n      0x00\n        /* \"#utility.yul\":1373:1374   */\n      dup1\n        /* \"#utility.yul\":1366:1378   */\n      revert\n        /* \"#utility.yul\":1327:1380   */\n    tag_134:\n        /* \"#utility.yul\":1432:1434   */\n      dup3\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1423:1425   */\n      dup7\n        /* \"#utility.yul\":1419:1430   */\n      add\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1406:1412   */\n      dup4\n        /* \"#utility.yul\":1402:1417   */\n      add\n        /* \"#utility.yul\":1389:1435   */\n      calldatacopy\n        /* \"#utility.yul\":1477:1478   */\n      0x00\n        /* \"#utility.yul\":1472:1474   */\n      0x20\n        /* \"#utility.yul\":1467:1469   */\n      dup5\n        /* \"#utility.yul\":1459:1465   */\n      dup4\n        /* \"#utility.yul\":1455:1470   */\n      add\n        /* \"#utility.yul\":1451:1475   */\n      add\n        /* \"#utility.yul\":1444:1479   */\n      mstore\n        /* \"#utility.yul\":1498:1504   */\n      dup1\n        /* \"#utility.yul\":1488:1504   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":515:1510   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3592   */\n    tag_117:\n        /* \"#utility.yul\":3427:3428   */\n      0x00\n        /* \"#utility.yul\":3437:3550   */\n    tag_142:\n        /* \"#utility.yul\":3451:3457   */\n      dup4\n        /* \"#utility.yul\":3448:3449   */\n      dup2\n        /* \"#utility.yul\":3445:3458   */\n      lt\n        /* \"#utility.yul\":3437:3550   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":3527:3538   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3521:3539   */\n      mload\n        /* \"#utility.yul\":3508:3519   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3501:3540   */\n      mstore\n        /* \"#utility.yul\":3473:3475   */\n      0x20\n        /* \"#utility.yul\":3466:3476   */\n      add\n        /* \"#utility.yul\":3437:3550   */\n      jump(tag_142)\n    tag_144:\n      pop\n      pop\n        /* \"#utility.yul\":3584:3585   */\n      0x00\n        /* \"#utility.yul\":3566:3582   */\n      swap2\n      add\n        /* \"#utility.yul\":3559:3586   */\n      mstore\n        /* \"#utility.yul\":3342:3592   */\n      jump\t// out\n        /* \"#utility.yul\":3597:3884   */\n    tag_89:\n        /* \"#utility.yul\":3726:3729   */\n      0x00\n        /* \"#utility.yul\":3764:3770   */\n      dup3\n        /* \"#utility.yul\":3758:3771   */\n      mload\n        /* \"#utility.yul\":3780:3846   */\n      tag_146\n        /* \"#utility.yul\":3839:3845   */\n      dup2\n        /* \"#utility.yul\":3834:3837   */\n      dup5\n        /* \"#utility.yul\":3827:3831   */\n      0x20\n        /* \"#utility.yul\":3819:3825   */\n      dup8\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3780:3846   */\n      tag_117\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3862:3878   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3597:3884   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4247:4643   */\n    tag_114:\n        /* \"#utility.yul\":4396:4398   */\n      0x20\n        /* \"#utility.yul\":4385:4394   */\n      dup2\n        /* \"#utility.yul\":4378:4399   */\n      mstore\n        /* \"#utility.yul\":4359:4363   */\n      0x00\n        /* \"#utility.yul\":4428:4434   */\n      dup3\n        /* \"#utility.yul\":4422:4435   */\n      mload\n        /* \"#utility.yul\":4471:4477   */\n      dup1\n        /* \"#utility.yul\":4466:4468   */\n      0x20\n        /* \"#utility.yul\":4455:4464   */\n      dup5\n        /* \"#utility.yul\":4451:4469   */\n      add\n        /* \"#utility.yul\":4444:4478   */\n      mstore\n        /* \"#utility.yul\":4487:4566   */\n      tag_149\n        /* \"#utility.yul\":4559:4565   */\n      dup2\n        /* \"#utility.yul\":4554:4556   */\n      0x40\n        /* \"#utility.yul\":4543:4552   */\n      dup6\n        /* \"#utility.yul\":4539:4557   */\n      add\n        /* \"#utility.yul\":4534:4536   */\n      0x20\n        /* \"#utility.yul\":4526:4532   */\n      dup8\n        /* \"#utility.yul\":4522:4537   */\n      add\n        /* \"#utility.yul\":4487:4566   */\n      tag_117\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4627:4629   */\n      0x1f\n        /* \"#utility.yul\":4606:4621   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4602:4631   */\n      and\n        /* \"#utility.yul\":4587:4632   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4634:4636   */\n      0x40\n        /* \"#utility.yul\":4583:4637   */\n      add\n      swap3\n        /* \"#utility.yul\":4247:4643   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220260cde48365b1accefa39796c08d48b81e9d6976e84db52c41ccec968cd55fd864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523060805234801561001457600080fd5b50608051610769610030600039600061011001526107696000f3fe60806040526004361061004a5760003560e01c80633659cfe61461004f5780634f1ef2861461007157806352d1902d146100845780639fa6a6e3146100ab578063d09de08a146100c0575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610586565b6100d5565b005b61006f61007f3660046105b7565b6100f3565b34801561009057600080fd5b50610099610103565b60405190815260200160405180910390f35b3480156100b757600080fd5b506100996101bb565b3480156100cc57600080fd5b5061006f6101cb565b6100f0816040518060200160405280600081525060006101db565b50565b6100ff828260006101db565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101a85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084015b60405180910390fd5b506000805160206106ed83398151915290565b60006101c660015490565b905090565b6101d9600180546001019055565b565b60006101fc6000805160206106ed833981519152546001600160a01b031690565b90506102078461033f565b6000835111806102145750815b156102255761022384846103db565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661033857805460ff191660011781556040516001600160a01b03831660248201526102a490869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526103db565b50805460ff191681556000805160206106ed833981519152546001600160a01b0383811691161461032f5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b606482015260840161019f565b61033885610407565b5050505050565b6001600160a01b0381163b6103ac5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161019f565b6000805160206106ed83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060610400838360405180606001604052806027815260200161070d60279139610447565b9392505050565b6104108161033f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060600080856001600160a01b031685604051610464919061069d565b600060405180830381855af49150503d806000811461049f576040519150601f19603f3d011682016040523d82523d6000602084013e6104a4565b606091505b50915091506104b5868383876104bf565b9695505050505050565b6060831561052e578251600003610527576001600160a01b0385163b6105275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161019f565b5081610538565b6105388383610540565b949350505050565b8151156105505781518083602001fd5b8060405162461bcd60e51b815260040161019f91906106b9565b80356001600160a01b038116811461058157600080fd5b919050565b60006020828403121561059857600080fd5b6104008261056a565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156105ca57600080fd5b6105d38361056a565b9150602083013567ffffffffffffffff808211156105f057600080fd5b818501915085601f83011261060457600080fd5b813581811115610616576106166105a1565b604051601f8201601f19908116603f0116810190838211818310171561063e5761063e6105a1565b8160405282815288602084870101111561065757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561069457818101518382015260200161067c565b50506000910152565b600082516106af818460208701610679565b9190910192915050565b60208152600082518060208401526106d8816040850160208701610679565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220260cde48365b1accefa39796c08d48b81e9d6976e84db52c41ccec968cd55fd864736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x769 PUSH2 0x30 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x110 ADD MSTORE PUSH2 0x769 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x9FA6A6E3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x586 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0xF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x1BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xF0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x1DB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFF DUP3 DUP3 PUSH1 0x0 PUSH2 0x1DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x207 DUP5 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0x214 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x225 JUMPI PUSH2 0x223 DUP5 DUP5 PUSH2 0x3DB JUMP JUMPDEST POP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x338 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A4 SWAP1 DUP7 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL OR SWAP1 MSTORE PUSH2 0x3DB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A207570677261646520627265616B732066 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x757274686572207570677261646573 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19F JUMP JUMPDEST PUSH2 0x338 DUP6 PUSH2 0x407 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x400 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x70D PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x447 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x410 DUP2 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4B5 DUP7 DUP4 DUP4 DUP8 PUSH2 0x4BF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x52E JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x527 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST POP DUP2 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x538 DUP4 DUP4 PUSH2 0x540 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x550 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x400 DUP3 PUSH2 0x56A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D3 DUP4 PUSH2 0x56A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x616 JUMPI PUSH2 0x616 PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x63E JUMPI PUSH2 0x63E PUSH2 0x5A1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x694 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x67C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x6AF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x679 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x6D8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x679 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122026 0xC 0xDE BASEFEE CALLDATASIZE JUMPDEST BYTE 0xCC 0xEF LOG3 SWAP8 SWAP7 0xC0 DUP14 BASEFEE 0xB8 0x1E SWAP14 PUSH10 0x76E84DB52C41CCEC968C 0xD5 0x5F 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "347:2825:2:-:0;;;1360:4:6;1317:48;;347:2825:2;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__setImplementation_76": {
									"entryPoint": 831,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getImplementation_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1301": {
									"entryPoint": 1344,
									"id": 1301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_402": {
									"entryPoint": null,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallSecureLegacyV1_160": {
									"entryPoint": 475,
									"id": 160,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_417": {
									"entryPoint": 1031,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1320": {
									"entryPoint": null,
									"id": 1320,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_230": {
									"entryPoint": 443,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_1189": {
									"entryPoint": 987,
									"id": 1189,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1218": {
									"entryPoint": 1095,
									"id": 1218,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_1408": {
									"entryPoint": null,
									"id": 1408,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1419": {
									"entryPoint": null,
									"id": 1419,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1334": {
									"entryPoint": null,
									"id": 1334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_239": {
									"entryPoint": 459,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_990": {
									"entryPoint": null,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@proxiableUUID_748": {
									"entryPoint": 259,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@upgradeToAndCall_191": {
									"entryPoint": 243,
									"id": 191,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_176": {
									"entryPoint": 213,
									"id": 176,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1257": {
									"entryPoint": 1215,
									"id": 1257,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4645:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:11"
															},
															"nodeType": "YulIf",
															"src": "111:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "14:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:11"
															},
															"nodeType": "YulIf",
															"src": "272:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:11",
														"type": ""
													}
												],
												"src": "192:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "415:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "432:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "444:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "435:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "435:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "425:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "425:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "472:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "465:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "465:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "499:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "489:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "383:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:899:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "657:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "666:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "669:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "659:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "659:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "659:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "632:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "641:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "628:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "628:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "653:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "624:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:32:11"
															},
															"nodeType": "YulIf",
															"src": "621:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "682:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "711:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "692:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "730:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "761:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "772:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "757:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "744:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "734:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "785:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "795:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "789:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "840:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "849:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "852:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "842:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "842:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "842:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "836:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "825:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:14:11"
															},
															"nodeType": "YulIf",
															"src": "822:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "865:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "879:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "869:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "945:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "954:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "957:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "947:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "947:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "924:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "928:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "920:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "935:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "916:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:35:11"
															},
															"nodeType": "YulIf",
															"src": "906:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "970:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "993:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:16:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "974:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1019:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1021:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1021:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1011:2:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1015:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1008:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1008:10:11"
															},
															"nodeType": "YulIf",
															"src": "1005:36:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1050:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1060:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:7:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1054:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1076:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1090:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1080:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1108:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1130:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1154:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1158:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1150:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1150:13:11"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1165:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1146:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1146:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1170:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1142:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1142:31:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1175:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1138:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1138:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1126:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1112:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1238:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1240:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1240:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1240:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1197:10:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1209:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1194:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1217:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1214:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1214:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1191:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:46:11"
															},
															"nodeType": "YulIf",
															"src": "1188:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1280:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1269:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1300:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1300:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1364:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1373:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1376:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1366:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1366:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1366:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1341:2:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1345:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1337:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1337:11:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1350:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1355:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1330:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:33:11"
															},
															"nodeType": "YulIf",
															"src": "1327:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1406:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1423:2:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1427:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1419:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:11:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1432:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1389:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1459:6:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1467:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1455:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1455:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1472:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1451:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1451:24:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1477:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1444:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1488:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1498:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "569:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "580:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "592:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "600:6:11",
														"type": ""
													}
												],
												"src": "515:995:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1626:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1638:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1649:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1634:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1626:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1668:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1679:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1585:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1596:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1607:4:11",
														"type": ""
													}
												],
												"src": "1515:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1798:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1808:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1820:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1808:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1778:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1789:4:11",
														"type": ""
													}
												],
												"src": "1697:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2053:246:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2063:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2063:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2104:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2115:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2100:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2100:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:11",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2143:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2139:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:18:11"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2159:34:11",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2132:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2214:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2225:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2210:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:18:11"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2230:26:11",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:54:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2266:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2289:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2274:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2266:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2030:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2044:4:11",
														"type": ""
													}
												],
												"src": "1879:420:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2405:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2415:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2427:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2438:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2423:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2423:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2415:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2457:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2472:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2488:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2493:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2484:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2484:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2497:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2480:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2480:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2468:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2468:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2450:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2374:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2385:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2396:4:11",
														"type": ""
													}
												],
												"src": "2304:203:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2686:237:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2703:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2714:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2696:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2696:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2737:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2748:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2733:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:2:11",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2726:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2776:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2787:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2772:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2772:18:11"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a207570677261646520627265616b732066",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2792:34:11",
																		"type": "",
																		"value": "ERC1967Upgrade: upgrade breaks f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2765:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2765:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2847:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2858:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2843:18:11"
																	},
																	{
																		"hexValue": "757274686572207570677261646573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2863:17:11",
																		"type": "",
																		"value": "urther upgrades"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2836:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2836:45:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2890:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2902:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2913:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2898:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2890:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2663:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2677:4:11",
														"type": ""
													}
												],
												"src": "2512:411:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3102:235:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3119:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3112:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3112:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3153:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3164:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3142:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3192:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3203:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3188:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3188:18:11"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3208:34:11",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3181:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3263:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3274:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3259:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:18:11"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3279:15:11",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3252:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3252:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3304:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3316:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3312:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3304:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3079:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3093:4:11",
														"type": ""
													}
												],
												"src": "2928:409:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3408:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3418:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3427:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3422:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3487:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3512:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3517:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3508:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3508:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3531:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3536:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3527:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3527:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3521:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3521:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3501:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3501:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3501:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3448:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3445:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3459:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3461:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3470:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3473:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3466:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3466:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3461:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3441:3:11",
																"statements": []
															},
															"src": "3437:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3570:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3575:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3566:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3566:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3559:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3559:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3386:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3391:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3396:6:11",
														"type": ""
													}
												],
												"src": "3342:250:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3734:150:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3744:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3764:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3758:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3748:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3819:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3827:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3834:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3839:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3780:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3855:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3866:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3871:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3862:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3862:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3710:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3715:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3726:3:11",
														"type": ""
													}
												],
												"src": "3597:287:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4063:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4080:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4091:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4073:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4130:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4153:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4164:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4149:18:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4169:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4142:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4142:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4210:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4222:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4233:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4218:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4218:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4210:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4040:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4054:4:11",
														"type": ""
													}
												],
												"src": "3889:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4368:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4385:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4378:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4378:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4408:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4428:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4422:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4412:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4455:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4466:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4451:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4451:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4471:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4444:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4444:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4444:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4534:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4522:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4543:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4554:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4539:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4539:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4559:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4487:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:79:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:79:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4575:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4591:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4610:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4618:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4606:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4606:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4627:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4623:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4623:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4602:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4602:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4587:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:45:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4583:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4575:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4337:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4348:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4359:4:11",
														"type": ""
													}
												],
												"src": "4247:396:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"698": [
									{
										"length": 32,
										"start": 272
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633659cfe61461004f5780634f1ef2861461007157806352d1902d146100845780639fa6a6e3146100ab578063d09de08a146100c0575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610586565b6100d5565b005b61006f61007f3660046105b7565b6100f3565b34801561009057600080fd5b50610099610103565b60405190815260200160405180910390f35b3480156100b757600080fd5b506100996101bb565b3480156100cc57600080fd5b5061006f6101cb565b6100f0816040518060200160405280600081525060006101db565b50565b6100ff828260006101db565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101a85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084015b60405180910390fd5b506000805160206106ed83398151915290565b60006101c660015490565b905090565b6101d9600180546001019055565b565b60006101fc6000805160206106ed833981519152546001600160a01b031690565b90506102078461033f565b6000835111806102145750815b156102255761022384846103db565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661033857805460ff191660011781556040516001600160a01b03831660248201526102a490869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526103db565b50805460ff191681556000805160206106ed833981519152546001600160a01b0383811691161461032f5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b606482015260840161019f565b61033885610407565b5050505050565b6001600160a01b0381163b6103ac5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161019f565b6000805160206106ed83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060610400838360405180606001604052806027815260200161070d60279139610447565b9392505050565b6104108161033f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060600080856001600160a01b031685604051610464919061069d565b600060405180830381855af49150503d806000811461049f576040519150601f19603f3d011682016040523d82523d6000602084013e6104a4565b606091505b50915091506104b5868383876104bf565b9695505050505050565b6060831561052e578251600003610527576001600160a01b0385163b6105275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161019f565b5081610538565b6105388383610540565b949350505050565b8151156105505781518083602001fd5b8060405162461bcd60e51b815260040161019f91906106b9565b80356001600160a01b038116811461058157600080fd5b919050565b60006020828403121561059857600080fd5b6104008261056a565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156105ca57600080fd5b6105d38361056a565b9150602083013567ffffffffffffffff808211156105f057600080fd5b818501915085601f83011261060457600080fd5b813581811115610616576106166105a1565b604051601f8201601f19908116603f0116810190838211818310171561063e5761063e6105a1565b8160405282815288602084870101111561065757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561069457818101518382015260200161067c565b50506000910152565b600082516106af818460208701610679565b9190910192915050565b60208152600082518060208401526106d8816040850160208701610679565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220260cde48365b1accefa39796c08d48b81e9d6976e84db52c41ccec968cd55fd864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x9FA6A6E3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x586 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0xF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x1BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xF0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x1DB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFF DUP3 DUP3 PUSH1 0x0 PUSH2 0x1DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x207 DUP5 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0x214 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x225 JUMPI PUSH2 0x223 DUP5 DUP5 PUSH2 0x3DB JUMP JUMPDEST POP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x338 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A4 SWAP1 DUP7 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL OR SWAP1 MSTORE PUSH2 0x3DB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A207570677261646520627265616B732066 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x757274686572207570677261646573 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19F JUMP JUMPDEST PUSH2 0x338 DUP6 PUSH2 0x407 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x400 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x70D PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x447 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x410 DUP2 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4B5 DUP7 DUP4 DUP4 DUP8 PUSH2 0x4BF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x52E JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x527 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST POP DUP2 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x538 DUP4 DUP4 PUSH2 0x540 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x550 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x400 DUP3 PUSH2 0x56A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D3 DUP4 PUSH2 0x56A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x616 JUMPI PUSH2 0x616 PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x63E JUMPI PUSH2 0x63E PUSH2 0x5A1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x694 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x67C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x6AF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x679 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x6D8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x679 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122026 0xC 0xDE BASEFEE CALLDATASIZE JUMPDEST BYTE 0xCC 0xEF LOG3 SWAP8 SWAP7 0xC0 DUP14 BASEFEE 0xB8 0x1E SWAP14 PUSH10 0x76E84DB52C41CCEC968C 0xD5 0x5F 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "347:2825:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:149;;;;;;;;;;-1:-1:-1;2536:149:2;;;;;:::i;:::-;;:::i;:::-;;2693:178;;;;;;:::i;:::-;;:::i;3066:133:6:-;;;;;;;;;;;;;:::i;:::-;;;1661:25:11;;;1649:2;1634:18;3066:133:6;;;;;;;490:114:3;;;;;;;;;;;;;:::i;612:95::-;;;;;;;;;;;;;:::i;2536:149:2:-;2609:68;2641:17;2660:9;;;;;;;;;;;;2671:5;2609:31;:68::i;:::-;2536:149;:::o;2693:178::-;2800:63;2832:17;2851:4;2857:5;2800:31;:63::i;:::-;2693:178;;:::o;3066:133:6:-;3144:7;2372:4;-1:-1:-1;;;;;2381:6:6;2364:23;;2356:92;;;;-1:-1:-1;;;2356:92:6;;2081:2:11;2356:92:6;;;2063:21:11;2120:2;2100:18;;;2093:30;2159:34;2139:18;;;2132:62;2230:26;2210:18;;;2203:54;2274:19;;2356:92:6;;;;;;;;;-1:-1:-1;;;;;;;;;;;;3066:133:6;:::o;490:114:3:-;532:7;559:37;587:8;951:14:9;;859:114;559:37:3;552:44;;490:114;:::o;612:95::-;660:39;690:8;1070:19:9;;1088:1;1070:19;;;981:127;660:39:3;612:95::o;1210:1279:2:-;1333:25;1361:20;-1:-1:-1;;;;;;;;;;;1574:65:4;-1:-1:-1;;;;;1574:65:4;;1494:153;1361:20:2;1333:48;;1437:38;1457:17;1437:19;:38::i;:::-;1504:1;1490:4;:11;:15;:28;;;;1509:9;1490:28;1486:125;;;1535:64;1575:17;1594:4;1535:39;:64::i;:::-;;1486:125;527:66;1814:21;;;;1809:673;;1929:28;;-1:-1:-1;;1929:28:2;1953:4;1929:28;;;2066:64;;-1:-1:-1;;;;;2468:32:11;;2066:64:2;;;2450:51:11;1972:173:2;;2030:17;;2423:18:11;;2066:64:2;;;-1:-1:-1;;2066:64:2;;;;;;;;;;;;;;-1:-1:-1;;;;;2066:64:2;-1:-1:-1;;;2066:64:2;;;1972:39;:173::i;:::-;-1:-1:-1;2160:29:2;;-1:-1:-1;;2160:29:2;;;-1:-1:-1;;;;;;;;;;;1574:65:4;-1:-1:-1;;;;;2257:41:2;;;1574:65:4;;2257:41:2;2249:101;;;;-1:-1:-1;;;2249:101:2;;2714:2:11;2249:101:2;;;2696:21:11;2753:2;2733:18;;;2726:30;2792:34;2772:18;;;2765:62;-1:-1:-1;;;2843:18:11;;;2836:45;2898:19;;2249:101:2;2512:411:11;2249:101:2;2441:29;2452:17;2441:10;:29::i;:::-;1322:1167;;1210:1279;;;:::o;917:285::-;-1:-1:-1;;;;;1757:19:8;;;992:106:2;;;;-1:-1:-1;;;992:106:2;;3130:2:11;992:106:2;;;3112:21:11;3169:2;3149:18;;;3142:30;3208:34;3188:18;;;3181:62;-1:-1:-1;;;3259:18:11;;;3252:43;3312:19;;992:106:2;2928:409:11;992:106:2;-1:-1:-1;;;;;;;;;;;1109:85:2;;-1:-1:-1;;;;;;1109:85:2;-1:-1:-1;;;;;1109:85:2;;;;;;;;;;917:285::o;6854:200:8:-;6937:12;6969:77;6990:6;6998:4;6969:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6962:84;6854:200;-1:-1:-1;;;6854:200:8:o;2140:155:4:-;2207:37;2226:17;2207:18;:37::i;:::-;2260:27;;-1:-1:-1;;;;;2260:27:4;;;;;;;;2140:155;:::o;7248:332:8:-;7393:12;7419;7433:23;7460:6;-1:-1:-1;;;;;7460:19:8;7480:4;7460:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7418:67;;;;7503:69;7530:6;7538:7;7547:10;7559:12;7503:26;:69::i;:::-;7496:76;7248:332;-1:-1:-1;;;;;;7248:332:8:o;7876:644::-;8061:12;8090:7;8086:427;;;8118:10;:17;8139:1;8118:22;8114:290;;-1:-1:-1;;;;;1757:19:8;;;8328:60;;;;-1:-1:-1;;;8328:60:8;;4091:2:11;8328:60:8;;;4073:21:11;4130:2;4110:18;;;4103:30;4169:31;4149:18;;;4142:59;4218:18;;8328:60:8;3889:353:11;8328:60:8;-1:-1:-1;8425:10:8;8418:17;;8086:427;8468:33;8476:10;8488:12;8468:7;:33::i;:::-;7876:644;;;;;;:::o;9062:552::-;9223:17;;:21;9219:388;;9455:10;9449:17;9512:15;9499:10;9495:2;9491:19;9484:44;9219:388;9582:12;9575:20;;-1:-1:-1;;;9575:20:8;;;;;;;;:::i;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:995;592:6;600;653:2;641:9;632:7;628:23;624:32;621:52;;;669:1;666;659:12;621:52;692:29;711:9;692:29;:::i;:::-;682:39;;772:2;761:9;757:18;744:32;795:18;836:2;828:6;825:14;822:34;;;852:1;849;842:12;822:34;890:6;879:9;875:22;865:32;;935:7;928:4;924:2;920:13;916:27;906:55;;957:1;954;947:12;906:55;993:2;980:16;1015:2;1011;1008:10;1005:36;;;1021:18;;:::i;:::-;1096:2;1090:9;1064:2;1150:13;;-1:-1:-1;;1146:22:11;;;1170:2;1142:31;1138:40;1126:53;;;1194:18;;;1214:22;;;1191:46;1188:72;;;1240:18;;:::i;:::-;1280:10;1276:2;1269:22;1315:2;1307:6;1300:18;1355:7;1350:2;1345;1341;1337:11;1333:20;1330:33;1327:53;;;1376:1;1373;1366:12;1327:53;1432:2;1427;1423;1419:11;1414:2;1406:6;1402:15;1389:46;1477:1;1472:2;1467;1459:6;1455:15;1451:24;1444:35;1498:6;1488:16;;;;;;;515:995;;;;;:::o;3342:250::-;3427:1;3437:113;3451:6;3448:1;3445:13;3437:113;;;3527:11;;;3521:18;3508:11;;;3501:39;3473:2;3466:10;3437:113;;;-1:-1:-1;;3584:1:11;3566:16;;3559:27;3342:250::o;3597:287::-;3726:3;3764:6;3758:13;3780:66;3839:6;3834:3;3827:4;3819:6;3815:17;3780:66;:::i;:::-;3862:16;;;;;3597:287;-1:-1:-1;;3597:287:11:o;4247:396::-;4396:2;4385:9;4378:21;4359:4;4428:6;4422:13;4471:6;4466:2;4455:9;4451:18;4444:34;4487:79;4559:6;4554:2;4543:9;4539:18;4534:2;4526:6;4522:15;4487:79;:::i;:::-;4627:2;4606:15;-1:-1:-1;;4602:29:11;4587:45;;;;4634:2;4583:54;;4247:396;-1:-1:-1;;4247:396:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "379400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"current()": "2362",
								"increment()": "24437",
								"proxiableUUID()": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"__UUPSUpgradeableLegacyMock_init()": "infinite",
								"__UUPSUpgradeableLegacyMock_init_unchained()": "infinite",
								"__setImplementation(address)": "infinite",
								"_upgradeToAndCallSecureLegacyV1(address,bytes memory,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1365,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1317,
									"end": 1365,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "698"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 3172,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220260cde48365b1accefa39796c08d48b81e9d6976e84db52c41ccec968cd55fd864736f6c63430008110033",
									".code": [
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "3659CFE6"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "4F1EF286"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "9FA6A6E3"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "D09DE08A"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 3172,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2536,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2536,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2693,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2693,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3066,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1649,
											"end": 1651,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 612,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2641,
											"end": 2658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2609,
											"end": 2677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2677,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2609,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2800,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2863,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2800,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2376,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "698"
										},
										{
											"begin": 2364,
											"end": 2387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2387,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2193,
											"name": "PUSH",
											"source": 11,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2194,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2257,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 532,
											"end": 539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 951,
											"end": 965,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 951,
											"end": 965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 973,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 559,
											"end": 596,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 660,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 690,
											"end": 698,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1108,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 660,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 660,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 2489,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1210,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1647,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1361,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1457,
											"end": 1474,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1437,
											"end": 1475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1475,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1437,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1505,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1611,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1486,
											"end": 1611,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1575,
											"end": 1592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1598,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1535,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1535,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1611,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1486,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 527,
											"end": 593,
											"name": "PUSH",
											"source": 2,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1809,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1809,
											"end": 2482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1957,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2501,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1972,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1972,
											"end": 2145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B2CE7F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1972,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2145,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1972,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2160,
											"end": 2189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2189,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2160,
											"end": 2189,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2189,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2257,
											"end": 2298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2716,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2717,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2755,
											"name": "PUSH",
											"source": 11,
											"value": "2F"
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "PUSH",
											"source": 11,
											"value": "45524331393637557067726164653A207570677261646520627265616B732066"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2765,
											"end": 2827,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "757274686572207570677261646573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2881,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 2917,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2898,
											"end": 2917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2512,
											"end": 2923,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2249,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2452,
											"end": 2469,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 2489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 2489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 2489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 2489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 2489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 2489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1202,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 917,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3133,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3171,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 3149,
											"end": 3167,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3149,
											"end": 3167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3142,
											"end": 3172,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3208,
											"end": 3242,
											"name": "PUSH",
											"source": 11,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3181,
											"end": 3243,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3252,
											"end": 3295,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3331,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3312,
											"end": 3331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2928,
											"end": 3337,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 992,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1194,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 6949,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6998,
											"end": 7002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH data",
											"source": 8,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6969,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6962,
											"end": 7046,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6854,
											"end": 7054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2207,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7393,
											"end": 7405,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7419,
											"end": 7431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7460,
											"end": 7479,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7480,
											"end": 7484,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 7460,
											"end": 7485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7557,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 7503,
											"end": 7572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7496,
											"end": 7572,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8073,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8090,
											"end": 8097,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8135,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8140,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 8114,
											"end": 8404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4093,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4073,
											"end": 4094,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4133,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4201,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3889,
											"end": 4242,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8425,
											"end": 8435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8418,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 8418,
											"end": 8435,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 8476,
											"end": 8486,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 8468,
											"end": 8501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9614,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 9062,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9240,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9244,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9455,
											"end": 9465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9512,
											"end": 9527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9499,
											"end": 9509,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9497,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9484,
											"end": 9528,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9582,
											"end": 9594,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 9575,
											"end": 9595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 383,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 383,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 444,
											"end": 454,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 456,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 475,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 472,
											"end": 473,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 480,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 499,
											"end": 503,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 504,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 598,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 632,
											"end": 639,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 628,
											"end": 651,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 621,
											"end": 673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 669,
											"end": 670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 667,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 659,
											"end": 671,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 621,
											"end": 673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 711,
											"end": 720,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 692,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 692,
											"end": 721,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 682,
											"end": 721,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 682,
											"end": 721,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 744,
											"end": 776,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 795,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 838,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 825,
											"end": 839,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 822,
											"end": 856,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 850,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 842,
											"end": 854,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 822,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 875,
											"end": 897,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 897,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 942,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 928,
											"end": 932,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 924,
											"end": 926,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 920,
											"end": 933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 916,
											"end": 943,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 906,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 906,
											"end": 961,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 957,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 947,
											"end": 959,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 906,
											"end": 961,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 906,
											"end": 961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 993,
											"end": 995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 980,
											"end": 996,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1008,
											"end": 1018,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1021,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 1142,
											"end": 1173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1191,
											"end": 1237,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1240,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1278,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1362,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1352,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1341,
											"end": 1343,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1363,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1378,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1425,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1435,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1470,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3342,
											"end": 3592,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3342,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3445,
											"end": 3458,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3519,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3519,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3540,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3466,
											"end": 3476,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3437,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3582,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3566,
											"end": 3582,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3559,
											"end": 3586,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3342,
											"end": 3592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3884,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3597,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3729,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3771,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3780,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3837,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3780,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3780,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3780,
											"end": 3846,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3780,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3884,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4247,
											"end": 4643,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4247,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4378,
											"end": 4399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4435,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4466,
											"end": 4468,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4444,
											"end": 4478,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4556,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4552,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4534,
											"end": 4536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4522,
											"end": 4537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 4487,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4566,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4487,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4606,
											"end": 4621,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4583,
											"end": 4637,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4637,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4247,
											"end": 4643,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4247,
											"end": 4643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
								"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
								"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
								"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
								"packages/contracts/src/proxy/utils/initializable.sol",
								"packages/contracts/src/utils/AddressUpgradeable.sol",
								"packages/contracts/src/utils/CountersUpgradeable.sol",
								"packages/contracts/src/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"current()": "9fa6a6e3",
							"increment()": "d09de08a",
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"current\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":\"UUPSUpgradeableLegacyMockUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x6b5e5998dfb73f62c234da6e9dad1a31003305137592a43af6d19f8ac245dc5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df912ba99e2dfcb3168db20e11babc4388cfce8499dc3d8e89b145d5fae2651\",\"dweb:/ipfs/QmNZzLNMEEa4kZFMm7aqGs54ZY5LNzWVbo7m3eUGY88Mrd\"]},\"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x61706721037716b2adaeff508f6bab91f9e8725edab306d0b0aae01fa12bce7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62613904df36214b9660ac2ce946eadce67ee7bafcf169e22e93d567cf2496ca\",\"dweb:/ipfs/QmXNZKPYz5XfswUTcWSzjnMNnhPtM33oMLZEjathPes1NV\"]},\"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol\":{\"keccak256\":\"0x52ae4b04074b5470c065575dc3f689e45515e0d2595b771f2585dc77e9826090\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82f04379d3e32595f8e31f3fcb47c2cb57ac1269d3eeb09138de2697e9da7103\",\"dweb:/ipfs/QmW8gCjmNLXqgdVPRCiKY62ayvnQqckgaCw5hSpr6D8TJS\"]},\"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":{\"keccak256\":\"0xc0594ed6d765bd8760103be584128e3e393f02eeafd7138d14dc358a1e5dd86f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f7bb3d275e25e36c33dbedc76ad2f8d278e0272c95652b6172fe1c10559a169\",\"dweb:/ipfs/Qme4Nxz3BzFbFRkDBHvTSs1QEGpytRcNX6or4jJuNPZXJH\"]},\"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xa8a2fcf2ff612fe3fab80263d2091a4cb1c29133a7691776fd3cefae78a68ac0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3a5ea02ea618ad7d0f72c60dee94a77b49e3b3a6a77df774172d66247f591b1\",\"dweb:/ipfs/QmZPBf7vawtQqiHowEAro8qF8kL3CYhykjDUzK9qPm97g4\"]},\"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786\",\"dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V\"]},\"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6d498ade4115a51deb4d221f0c0f5db94b4ad8e9a143a572d6ecd929dbc4ae44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51ddc887ca2c7295a3abefe8eda9a4965d0d2859c2347bc617a08ad890352e2\",\"dweb:/ipfs/QmVoAVzSBqD6rosYhrMuykxi94jqJA2mDrbCDd8xVV5g9N\"]},\"packages/contracts/src/proxy/utils/initializable.sol\":{\"keccak256\":\"0x1c9fa831fc19df735b11f56a5e8af717e3feb0fbba4423234d6a3d6f3e76010c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dccf3e7461c8888f4423781d24939f32b3cd3bf7628c36d947c4ddfad1e33090\",\"dweb:/ipfs/QmTESPA5kL5aTGCLRsJGVCS831iyDN6SSD5q5Tv69TWBK1\"]},\"packages/contracts/src/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xca6075c066d8541c7a862e6dbeaa9243bb9fafc444f42d0f9a3f14583e26208f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b3fb9987745b03f883f175f3c9578cb4415e9e30e0643f840768e7f7e6c58\",\"dweb:/ipfs/QmVRi2tFZ75YmwYP5KQMyerGo8GCXAZSRQP7NZTgHhv7kj\"]},\"packages/contracts/src/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x361d9aa91f000b5e1d5c79e38d1c2f57f58e85152992336f0ff5fe37384d7706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a60bb30feaabb7e02769eac5796887fcf3973bb76a496e1e48ba0a97f12c8e36\",\"dweb:/ipfs/Qmaq3v1kDciR6wfkhVJtStVu1Mn3eLNZiskgwxrEfwNMWm\"]},\"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc9c2d01301d9b4cf1a75372a4f870fe5fcf2b723fea6af41f5a0dc2b942e944f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf4019b6af56e6cee4a4727d3df42d838ee59594bca4c67363ebe076ef2cd2b\",\"dweb:/ipfs/QmarC69mwy7NRkJdBAn1XjXAWzt3FWJnmsM2e1RDPe72jM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 810,
								"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 813,
								"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 207,
								"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
								"label": "_counter",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1308_storage"
							},
							{
								"astId": 244,
								"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 656,
								"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 802,
								"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 275,
								"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 196,
								"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "201",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_struct(Counter)1308_storage": {
								"encoding": "inplace",
								"label": "struct CountersUpgradeable.Counter",
								"members": [
									{
										"astId": 1307,
										"contract": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol:UUPSUpgradeableLegacyMockUpgradeable",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol": {
				"NonUpgradeableMockUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "current",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":207:1008  contract NonUpgradeableMockUpgradeable is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":207:1008  contract NonUpgradeableMockUpgradeable is Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9fa6a6e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n    tag_6:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":532:539  uint256 */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":559:596  CountersUpgradeable.current(_counter) */\n      tag_12\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":587:595  _counter */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":951:965  counter._value */\n      sload\n      swap1\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":859:973  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":559:596  CountersUpgradeable.current(_counter) */\n    tag_12:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":552:596  return CountersUpgradeable.current(_counter) */\n      swap1\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n    tag_10:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":660:699  CountersUpgradeable.increment(_counter) */\n      tag_15\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":690:698  _counter */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1070:1089  counter._value += 1 */\n      dup1\n      sload\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1088:1089  1 */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1070:1089  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":981:1108  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":660:699  CountersUpgradeable.increment(_counter) */\n    tag_15:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122072cb360b0d4363369573f9266337a0b2f79d54116d315ca6f808c77ddc42c0bc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060ab8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80639fa6a6e3146037578063d09de08a14604f575b600080fd5b603d6057565b60405190815260200160405180910390f35b60556066565b005b6000606160015490565b905090565b6073600180546001019055565b56fea264697066735822122072cb360b0d4363369573f9266337a0b2f79d54116d315ca6f808c77ddc42c0bc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xAB DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FA6A6E3 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x55 PUSH1 0x66 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x61 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x73 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xCB360B0D4363369573F9266337A0B2F79D5411 PUSH14 0x315CA6F808C77DDC42C0BC64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "207:801:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@current_1320": {
									"entryPoint": null,
									"id": 1320,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_230": {
									"entryPoint": 87,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_1334": {
									"entryPoint": null,
									"id": 1334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_239": {
									"entryPoint": 102,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:193:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80639fa6a6e3146037578063d09de08a14604f575b600080fd5b603d6057565b60405190815260200160405180910390f35b60556066565b005b6000606160015490565b905090565b6073600180546001019055565b56fea264697066735822122072cb360b0d4363369573f9266337a0b2f79d54116d315ca6f808c77ddc42c0bc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FA6A6E3 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x55 PUSH1 0x66 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x61 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x73 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xCB360B0D4363369573F9266337A0B2F79D5411 PUSH14 0x315CA6F808C77DDC42C0BC64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "207:801:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;490:114;;;:::i;:::-;;;160:25:11;;;148:2;133:18;490:114:3;;;;;;;612:95;;;:::i;:::-;;490:114;532:7;559:37;587:8;951:14:9;;859:114;559:37:3;552:44;;490:114;:::o;612:95::-;660:39;690:8;1070:19:9;;1088:1;1070:19;;;981:127;660:39:3;612:95::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "34200",
								"executionCost": "87",
								"totalCost": "34287"
							},
							"external": {
								"current()": "2296",
								"increment()": "24371"
							},
							"internal": {
								"__NonUpgradeableMock_init()": "infinite",
								"__NonUpgradeableMock_init_unchained()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 207,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 1008,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072cb360b0d4363369573f9266337a0b2f79d54116d315ca6f808c77ddc42c0bc64736f6c63430008110033",
									".code": [
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "9FA6A6E3"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "D09DE08A"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 207,
											"end": 1008,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 612,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 532,
											"end": 539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 587,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 951,
											"end": 965,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 951,
											"end": 965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 973,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 559,
											"end": 596,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 559,
											"end": 596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 660,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 698,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1108,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 660,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 660,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
								"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
								"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
								"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
								"packages/contracts/src/proxy/utils/initializable.sol",
								"packages/contracts/src/utils/AddressUpgradeable.sol",
								"packages/contracts/src/utils/CountersUpgradeable.sol",
								"packages/contracts/src/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"current()": "9fa6a6e3",
							"increment()": "d09de08a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"current\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":\"NonUpgradeableMockUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x6b5e5998dfb73f62c234da6e9dad1a31003305137592a43af6d19f8ac245dc5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df912ba99e2dfcb3168db20e11babc4388cfce8499dc3d8e89b145d5fae2651\",\"dweb:/ipfs/QmNZzLNMEEa4kZFMm7aqGs54ZY5LNzWVbo7m3eUGY88Mrd\"]},\"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x61706721037716b2adaeff508f6bab91f9e8725edab306d0b0aae01fa12bce7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62613904df36214b9660ac2ce946eadce67ee7bafcf169e22e93d567cf2496ca\",\"dweb:/ipfs/QmXNZKPYz5XfswUTcWSzjnMNnhPtM33oMLZEjathPes1NV\"]},\"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":{\"keccak256\":\"0xc0594ed6d765bd8760103be584128e3e393f02eeafd7138d14dc358a1e5dd86f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f7bb3d275e25e36c33dbedc76ad2f8d278e0272c95652b6172fe1c10559a169\",\"dweb:/ipfs/Qme4Nxz3BzFbFRkDBHvTSs1QEGpytRcNX6or4jJuNPZXJH\"]},\"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xa8a2fcf2ff612fe3fab80263d2091a4cb1c29133a7691776fd3cefae78a68ac0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3a5ea02ea618ad7d0f72c60dee94a77b49e3b3a6a77df774172d66247f591b1\",\"dweb:/ipfs/QmZPBf7vawtQqiHowEAro8qF8kL3CYhykjDUzK9qPm97g4\"]},\"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786\",\"dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V\"]},\"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6d498ade4115a51deb4d221f0c0f5db94b4ad8e9a143a572d6ecd929dbc4ae44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51ddc887ca2c7295a3abefe8eda9a4965d0d2859c2347bc617a08ad890352e2\",\"dweb:/ipfs/QmVoAVzSBqD6rosYhrMuykxi94jqJA2mDrbCDd8xVV5g9N\"]},\"packages/contracts/src/proxy/utils/initializable.sol\":{\"keccak256\":\"0x1c9fa831fc19df735b11f56a5e8af717e3feb0fbba4423234d6a3d6f3e76010c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dccf3e7461c8888f4423781d24939f32b3cd3bf7628c36d947c4ddfad1e33090\",\"dweb:/ipfs/QmTESPA5kL5aTGCLRsJGVCS831iyDN6SSD5q5Tv69TWBK1\"]},\"packages/contracts/src/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xca6075c066d8541c7a862e6dbeaa9243bb9fafc444f42d0f9a3f14583e26208f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b3fb9987745b03f883f175f3c9578cb4415e9e30e0643f840768e7f7e6c58\",\"dweb:/ipfs/QmVRi2tFZ75YmwYP5KQMyerGo8GCXAZSRQP7NZTgHhv7kj\"]},\"packages/contracts/src/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x361d9aa91f000b5e1d5c79e38d1c2f57f58e85152992336f0ff5fe37384d7706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a60bb30feaabb7e02769eac5796887fcf3973bb76a496e1e48ba0a97f12c8e36\",\"dweb:/ipfs/Qmaq3v1kDciR6wfkhVJtStVu1Mn3eLNZiskgwxrEfwNMWm\"]},\"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc9c2d01301d9b4cf1a75372a4f870fe5fcf2b723fea6af41f5a0dc2b942e944f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf4019b6af56e6cee4a4727d3df42d838ee59594bca4c67363ebe076ef2cd2b\",\"dweb:/ipfs/QmarC69mwy7NRkJdBAn1XjXAWzt3FWJnmsM2e1RDPe72jM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 810,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:NonUpgradeableMockUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 813,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:NonUpgradeableMockUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 207,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:NonUpgradeableMockUpgradeable",
								"label": "_counter",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1308_storage"
							},
							{
								"astId": 244,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:NonUpgradeableMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_struct(Counter)1308_storage": {
								"encoding": "inplace",
								"label": "struct CountersUpgradeable.Counter",
								"members": [
									{
										"astId": 1307,
										"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:NonUpgradeableMockUpgradeable",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UUPSUpgradeableMockUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "current",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":1012:1740  contract UUPSUpgradeableMockUpgradeable is Initializable, NonUpgradeableMockUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1360:1364  this */\n  address\n    /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1317:1365  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":1012:1740  contract UUPSUpgradeableMockUpgradeable is Initializable, NonUpgradeableMockUpgradeable, UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":1012:1740  contract UUPSUpgradeableMockUpgradeable is Initializable, NonUpgradeableMockUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9fa6a6e3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3460:3658  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3989:4212  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_3:\n      tag_8\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":1661:1686   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1649:1651   */\n      0x20\n        /* \"#utility.yul\":1634:1652   */\n      add\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_17\n      tag_23\n      jump\t// in\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_8\n      tag_28\n      jump\t// in\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3460:3658  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_11:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1936:1942  __self */\n      immutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1919:1942  address(this) != __self */\n      and\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1927:1931  this */\n      address\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1919:1942  address(this) != __self */\n      sub\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1911:1991  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2034:2040  __self */\n      immutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2010:2040  _getImplementation() == __self */\n      and\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2010:2030  _getImplementation() */\n      tag_33\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1574:1639  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1494:1647  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2010:2030  _getImplementation() */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2010:2040  _getImplementation() == __self */\n      and\n      eq\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2002:2089  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_37\n      jump\t// in\n    tag_35:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3630:3642  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3640:3641  0 */\n      0x00\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3630:3642  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3589:3650  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_41\n      swap2\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3611:3628  newImplementation */\n      dup4\n      swap2\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3630:3642  new bytes(0) */\n      swap1\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3589:3610  _upgradeToAndCallUUPS */\n      tag_46\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3589:3650  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_41:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3460:3658  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3989:4212  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_15:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1936:1942  __self */\n      immutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1919:1942  address(this) != __self */\n      and\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1927:1931  this */\n      address\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1919:1942  address(this) != __self */\n      sub\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1911:1991  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2034:2040  __self */\n      immutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2010:2040  _getImplementation() == __self */\n      and\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2010:2030  _getImplementation() */\n      tag_50\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1574:1639  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1494:1647  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2010:2030  _getImplementation() */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2010:2040  _getImplementation() == __self */\n      and\n      eq\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2002:2089  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_37\n      jump\t// in\n    tag_51:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":4152:4204  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_55\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":4174:4191  newImplementation */\n      dup3\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":4193:4197  data */\n      dup3\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":4199:4203  true */\n      0x01\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":4152:4173  _upgradeToAndCallUUPS */\n      tag_46\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":4152:4204  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_55:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3989:4212  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_18:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3144:3151  bytes32 */\n      0x00\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2372:2376  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2381:2387  __self */\n      immutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2364:2387  address(this) == __self */\n      and\n      eq\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2907:2909   */\n      0x20\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2889:2910   */\n      mstore\n        /* \"#utility.yul\":2946:2948   */\n      0x38\n        /* \"#utility.yul\":2926:2944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2919:2949   */\n      mstore\n        /* \"#utility.yul\":2985:3019   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":2965:2983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2958:3020   */\n      mstore\n        /* \"#utility.yul\":3056:3082   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":3036:3054   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3029:3083   */\n      mstore\n        /* \"#utility.yul\":3100:3119   */\n      0x84\n      add\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_31\n        /* \"#utility.yul\":2705:3125   */\n      jump\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_57:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n    tag_23:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":532:539  uint256 */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":559:596  CountersUpgradeable.current(_counter) */\n      tag_62\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":587:595  _counter */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":951:965  counter._value */\n      sload\n      swap1\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":859:973  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":559:596  CountersUpgradeable.current(_counter) */\n    tag_62:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":552:596  return CountersUpgradeable.current(_counter) */\n      swap1\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n    tag_28:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":660:699  CountersUpgradeable.increment(_counter) */\n      tag_65\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":690:698  _counter */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1070:1089  counter._value += 1 */\n      dup1\n      sload\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1088:1089  1 */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1070:1089  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":981:1108  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":660:699  CountersUpgradeable.increment(_counter) */\n    tag_65:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n      jump\t// out\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2896:3854  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_46:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":838:904  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3316:3375  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      sload\n      0xff\n      and\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3312:3847  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_74\n      jumpi\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3392:3429  _setImplementation(newImplementation) */\n      tag_75\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3411:3428  newImplementation */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3392:3410  _setImplementation */\n      tag_76\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3392:3429  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_75:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2896:3854  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3312:3847  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_74:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3495:3512  newImplementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3466:3527  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3466:3529  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_78\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_79\n      swap2\n      dup2\n      add\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x01\n    tag_78:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3462:3768  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_81\n      jumpi\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3696:3752  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3521:3523   */\n      0x20\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3696:3752  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3503:3524   */\n      mstore\n        /* \"#utility.yul\":3560:3562   */\n      0x2e\n        /* \"#utility.yul\":3540:3558   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3533:3563   */\n      mstore\n        /* \"#utility.yul\":3599:3633   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":3579:3597   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3572:3634   */\n      mstore\n      shl(0x90, 0x6f6e206973206e6f742055555053)\n        /* \"#utility.yul\":3650:3668   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3643:3687   */\n      mstore\n        /* \"#utility.yul\":3704:3723   */\n      0x84\n      add\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3696:3752  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      tag_31\n        /* \"#utility.yul\":3319:3729   */\n      jump\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3462:3768  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_81:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3580:3608  slot == _IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3572:3654  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3572:3654  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3918:3939   */\n      mstore\n        /* \"#utility.yul\":3975:3977   */\n      0x29\n        /* \"#utility.yul\":3955:3973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3948:3978   */\n      mstore\n        /* \"#utility.yul\":4014:4048   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":3994:4012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3987:4049   */\n      mstore\n      shl(0xba, 0x1a58589b1955555251)\n        /* \"#utility.yul\":4065:4083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4058:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3572:3654  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_31\n        /* \"#utility.yul\":3734:4139   */\n      jump\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3572:3654  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n    tag_88:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3530:3670  returns (bytes32 slot) {... */\n      pop\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3782:3835  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_75\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3800:3817  newImplementation */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3819:3823  data */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3825:3834  forceCall */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3782:3799  _upgradeToAndCall */\n      tag_92\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3782:3835  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1743:2027  function _setImplementation(address newImplementation) private {... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":1757:1776  account.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1817:1923  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1817:1923  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x2d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4458   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4459   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":4475:4493   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4468:4511   */\n      mstore\n        /* \"#utility.yul\":4528:4547   */\n      0x84\n      add\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1817:1923  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_31\n        /* \"#utility.yul\":4144:4553   */\n      jump\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1817:1923  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_100:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1934:2019  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1743:2027  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2436:2717  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_92:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2545:2574  _upgradeTo(newImplementation) */\n      tag_105\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2556:2573  newImplementation */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2545:2555  _upgradeTo */\n      tag_106\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2545:2574  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_105:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2603:2604  0 */\n      0x00\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2593  data */\n      dup3\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2600  data.length */\n      mload\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2604  data.length > 0 */\n      gt\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2617  data.length > 0 || forceCall */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2608:2617  forceCall */\n      dup1\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2617  data.length > 0 || forceCall */\n    tag_107:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2585:2710  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2634:2698  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      tag_109\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2674:2691  newImplementation */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2693:2697  data */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2634:2673  AddressUpgradeable.functionDelegateCall */\n      tag_110\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2634:2698  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_109:\n      pop\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2436:2717  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2140:2295  function _upgradeTo(address newImplementation) internal {... */\n    tag_106:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2244  _setImplementation(newImplementation) */\n      tag_113\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2226:2243  newImplementation */\n      dup2\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2225  _setImplementation */\n      tag_76\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2244  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_113:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2260:2287  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2140:2295  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6854:7054  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_110:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6937:6949  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_115\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6990:6996  target */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6998:7002  data */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:6989  functionDelegateCall */\n      tag_116\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_115:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6962:7046  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6854:7054  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7248:7580  function functionDelegateCall(... */\n    tag_116:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7393:7405  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7419:7431  bool success */\n      0x00\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7433:7456  bytes memory returndata */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7466  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7479  target.delegatecall */\n      and\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7480:7484  data */\n      dup6\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7485  target.delegatecall(data) */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_122\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_121)\n    tag_122:\n      0x60\n      swap2\n      pop\n    tag_121:\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7418:7485  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7572  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_123\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7530:7536  target */\n      dup7\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7538:7545  success */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7547:7557  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7559:7571  errorMessage */\n      dup8\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7529  verifyCallResultFromTarget */\n      tag_124\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7572  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_123:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7496:7572  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7248:7580  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7876:8520  function verifyCallResultFromTarget(... */\n    tag_124:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8061:8073  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8090:8097  success */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8086:8513  if (success) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8128  returndata */\n      dup3\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8135  returndata.length */\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8139:8140  0 */\n      0x00\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8140  returndata.length == 0 */\n      sub\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8114:8404  if (returndata.length == 0) {... */\n      tag_129\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":1757:1776  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5307:5309   */\n      0x20\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5289:5310   */\n      mstore\n        /* \"#utility.yul\":5346:5348   */\n      0x1d\n        /* \"#utility.yul\":5326:5344   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5319:5349   */\n      mstore\n        /* \"#utility.yul\":5385:5416   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":5365:5383   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5358:5417   */\n      mstore\n        /* \"#utility.yul\":5434:5452   */\n      0x64\n      add\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      tag_31\n        /* \"#utility.yul\":5105:5458   */\n      jump\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n    tag_129:\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8425:8435  returndata */\n      dup2\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8418:8435  return returndata */\n      jump(tag_133)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8086:8513  if (success) {... */\n    tag_126:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8501  _revert(returndata, errorMessage) */\n      tag_133\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8476:8486  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8488:8500  errorMessage */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8475  _revert */\n      tag_134\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8501  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_133:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7876:8520  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9062:9614  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_134:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9223:9240  returndata.length */\n      dup2\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9223:9244  returndata.length > 0 */\n      iszero\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9219:9607  if (returndata.length > 0) {... */\n      tag_136\n      jumpi\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9455:9465  returndata */\n      dup2\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9449:9466  mload(returndata) */\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9512:9527  returndata_size */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9499:9509  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9495:9497  32 */\n      0x20\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9491:9510  add(32, returndata) */\n      add\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9484:9528  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9219:9607  if (returndata.length > 0) {... */\n    tag_136:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9582:9594  errorMessage */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9575:9595  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_140:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_144:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_10:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_146:\n        /* \"#utility.yul\":343:372   */\n      tag_115\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_140\n      jump\t// in\n        /* \"#utility.yul\":383:510   */\n    tag_44:\n        /* \"#utility.yul\":444:454   */\n      0x4e487b71\n        /* \"#utility.yul\":439:442   */\n      0xe0\n        /* \"#utility.yul\":435:455   */\n      shl\n        /* \"#utility.yul\":432:433   */\n      0x00\n        /* \"#utility.yul\":425:456   */\n      mstore\n        /* \"#utility.yul\":475:479   */\n      0x41\n        /* \"#utility.yul\":472:473   */\n      0x04\n        /* \"#utility.yul\":465:480   */\n      mstore\n        /* \"#utility.yul\":499:503   */\n      0x24\n        /* \"#utility.yul\":496:497   */\n      0x00\n        /* \"#utility.yul\":489:504   */\n      revert\n        /* \"#utility.yul\":515:1510   */\n    tag_14:\n        /* \"#utility.yul\":592:598   */\n      0x00\n        /* \"#utility.yul\":600:606   */\n      dup1\n        /* \"#utility.yul\":653:655   */\n      0x40\n        /* \"#utility.yul\":641:650   */\n      dup4\n        /* \"#utility.yul\":632:639   */\n      dup6\n        /* \"#utility.yul\":628:651   */\n      sub\n        /* \"#utility.yul\":624:656   */\n      slt\n        /* \"#utility.yul\":621:673   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":669:670   */\n      0x00\n        /* \"#utility.yul\":666:667   */\n      dup1\n        /* \"#utility.yul\":659:671   */\n      revert\n        /* \"#utility.yul\":621:673   */\n    tag_150:\n        /* \"#utility.yul\":692:721   */\n      tag_151\n        /* \"#utility.yul\":711:720   */\n      dup4\n        /* \"#utility.yul\":692:721   */\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":682:721   */\n      swap2\n      pop\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup4\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":744:776   */\n      calldataload\n        /* \"#utility.yul\":795:813   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":836:838   */\n      dup1\n        /* \"#utility.yul\":828:834   */\n      dup3\n        /* \"#utility.yul\":825:839   */\n      gt\n        /* \"#utility.yul\":822:856   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":849:850   */\n      dup1\n        /* \"#utility.yul\":842:854   */\n      revert\n        /* \"#utility.yul\":822:856   */\n    tag_152:\n        /* \"#utility.yul\":890:896   */\n      dup2\n        /* \"#utility.yul\":879:888   */\n      dup6\n        /* \"#utility.yul\":875:897   */\n      add\n        /* \"#utility.yul\":865:897   */\n      swap2\n      pop\n        /* \"#utility.yul\":935:942   */\n      dup6\n        /* \"#utility.yul\":928:932   */\n      0x1f\n        /* \"#utility.yul\":924:926   */\n      dup4\n        /* \"#utility.yul\":920:933   */\n      add\n        /* \"#utility.yul\":916:943   */\n      slt\n        /* \"#utility.yul\":906:961   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":957:958   */\n      0x00\n        /* \"#utility.yul\":954:955   */\n      dup1\n        /* \"#utility.yul\":947:959   */\n      revert\n        /* \"#utility.yul\":906:961   */\n    tag_153:\n        /* \"#utility.yul\":993:995   */\n      dup2\n        /* \"#utility.yul\":980:996   */\n      calldataload\n        /* \"#utility.yul\":1015:1017   */\n      dup2\n        /* \"#utility.yul\":1011:1013   */\n      dup2\n        /* \"#utility.yul\":1008:1018   */\n      gt\n        /* \"#utility.yul\":1005:1041   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1021:1039   */\n      tag_155\n      tag_44\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1096:1098   */\n      0x40\n        /* \"#utility.yul\":1090:1099   */\n      mload\n        /* \"#utility.yul\":1064:1066   */\n      0x1f\n        /* \"#utility.yul\":1150:1163   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1146:1168   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1170:1172   */\n      0x3f\n        /* \"#utility.yul\":1142:1173   */\n      add\n        /* \"#utility.yul\":1138:1178   */\n      and\n        /* \"#utility.yul\":1126:1179   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1194:1212   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1214:1236   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1191:1237   */\n      or\n        /* \"#utility.yul\":1188:1260   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1240:1258   */\n      tag_157\n      tag_44\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1280:1290   */\n      dup2\n        /* \"#utility.yul\":1276:1278   */\n      0x40\n        /* \"#utility.yul\":1269:1291   */\n      mstore\n        /* \"#utility.yul\":1315:1317   */\n      dup3\n        /* \"#utility.yul\":1307:1313   */\n      dup2\n        /* \"#utility.yul\":1300:1318   */\n      mstore\n        /* \"#utility.yul\":1355:1362   */\n      dup9\n        /* \"#utility.yul\":1350:1352   */\n      0x20\n        /* \"#utility.yul\":1345:1347   */\n      dup5\n        /* \"#utility.yul\":1341:1343   */\n      dup8\n        /* \"#utility.yul\":1337:1348   */\n      add\n        /* \"#utility.yul\":1333:1353   */\n      add\n        /* \"#utility.yul\":1330:1363   */\n      gt\n        /* \"#utility.yul\":1327:1380   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":1376:1377   */\n      0x00\n        /* \"#utility.yul\":1373:1374   */\n      dup1\n        /* \"#utility.yul\":1366:1378   */\n      revert\n        /* \"#utility.yul\":1327:1380   */\n    tag_158:\n        /* \"#utility.yul\":1432:1434   */\n      dup3\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1423:1425   */\n      dup7\n        /* \"#utility.yul\":1419:1430   */\n      add\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1406:1412   */\n      dup4\n        /* \"#utility.yul\":1402:1417   */\n      add\n        /* \"#utility.yul\":1389:1435   */\n      calldatacopy\n        /* \"#utility.yul\":1477:1478   */\n      0x00\n        /* \"#utility.yul\":1472:1474   */\n      0x20\n        /* \"#utility.yul\":1467:1469   */\n      dup5\n        /* \"#utility.yul\":1459:1465   */\n      dup4\n        /* \"#utility.yul\":1455:1470   */\n      add\n        /* \"#utility.yul\":1451:1475   */\n      add\n        /* \"#utility.yul\":1444:1479   */\n      mstore\n        /* \"#utility.yul\":1498:1504   */\n      dup1\n        /* \"#utility.yul\":1488:1504   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":515:1510   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1879:2287   */\n    tag_32:\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2063:2084   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2120:2122   */\n      0x2c\n        /* \"#utility.yul\":2100:2118   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2093:2123   */\n      mstore\n        /* \"#utility.yul\":2159:2193   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":2154:2156   */\n      0x40\n        /* \"#utility.yul\":2139:2157   */\n      dup3\n      add\n        /* \"#utility.yul\":2132:2194   */\n      mstore\n      shl(0xa2, 0x19195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":2225:2227   */\n      0x60\n        /* \"#utility.yul\":2210:2228   */\n      dup3\n      add\n        /* \"#utility.yul\":2203:2245   */\n      mstore\n        /* \"#utility.yul\":2277:2280   */\n      0x80\n        /* \"#utility.yul\":2262:2281   */\n      add\n      swap1\n        /* \"#utility.yul\":1879:2287   */\n      jump\t// out\n        /* \"#utility.yul\":2292:2700   */\n    tag_37:\n        /* \"#utility.yul\":2494:2496   */\n      0x20\n        /* \"#utility.yul\":2476:2497   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2533:2535   */\n      0x2c\n        /* \"#utility.yul\":2513:2531   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2506:2536   */\n      mstore\n        /* \"#utility.yul\":2572:2606   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":2567:2569   */\n      0x40\n        /* \"#utility.yul\":2552:2570   */\n      dup3\n      add\n        /* \"#utility.yul\":2545:2607   */\n      mstore\n      shl(0xa0, 0x6163746976652070726f7879)\n        /* \"#utility.yul\":2638:2640   */\n      0x60\n        /* \"#utility.yul\":2623:2641   */\n      dup3\n      add\n        /* \"#utility.yul\":2616:2658   */\n      mstore\n        /* \"#utility.yul\":2690:2693   */\n      0x80\n        /* \"#utility.yul\":2675:2694   */\n      add\n      swap1\n        /* \"#utility.yul\":2292:2700   */\n      jump\t// out\n        /* \"#utility.yul\":3130:3314   */\n    tag_80:\n        /* \"#utility.yul\":3200:3206   */\n      0x00\n        /* \"#utility.yul\":3253:3255   */\n      0x20\n        /* \"#utility.yul\":3241:3250   */\n      dup3\n        /* \"#utility.yul\":3232:3239   */\n      dup5\n        /* \"#utility.yul\":3228:3251   */\n      sub\n        /* \"#utility.yul\":3224:3256   */\n      slt\n        /* \"#utility.yul\":3221:3273   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":3269:3270   */\n      0x00\n        /* \"#utility.yul\":3266:3267   */\n      dup1\n        /* \"#utility.yul\":3259:3271   */\n      revert\n        /* \"#utility.yul\":3221:3273   */\n    tag_165:\n      pop\n        /* \"#utility.yul\":3292:3308   */\n      mload\n      swap2\n        /* \"#utility.yul\":3130:3314   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4558:4808   */\n    tag_141:\n        /* \"#utility.yul\":4643:4644   */\n      0x00\n        /* \"#utility.yul\":4653:4766   */\n    tag_170:\n        /* \"#utility.yul\":4667:4673   */\n      dup4\n        /* \"#utility.yul\":4664:4665   */\n      dup2\n        /* \"#utility.yul\":4661:4674   */\n      lt\n        /* \"#utility.yul\":4653:4766   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":4743:4754   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4737:4755   */\n      mload\n        /* \"#utility.yul\":4724:4735   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4717:4756   */\n      mstore\n        /* \"#utility.yul\":4689:4691   */\n      0x20\n        /* \"#utility.yul\":4682:4692   */\n      add\n        /* \"#utility.yul\":4653:4766   */\n      jump(tag_170)\n    tag_172:\n      pop\n      pop\n        /* \"#utility.yul\":4800:4801   */\n      0x00\n        /* \"#utility.yul\":4782:4798   */\n      swap2\n      add\n        /* \"#utility.yul\":4775:4802   */\n      mstore\n        /* \"#utility.yul\":4558:4808   */\n      jump\t// out\n        /* \"#utility.yul\":4813:5100   */\n    tag_119:\n        /* \"#utility.yul\":4942:4945   */\n      0x00\n        /* \"#utility.yul\":4980:4986   */\n      dup3\n        /* \"#utility.yul\":4974:4987   */\n      mload\n        /* \"#utility.yul\":4996:5062   */\n      tag_174\n        /* \"#utility.yul\":5055:5061   */\n      dup2\n        /* \"#utility.yul\":5050:5053   */\n      dup5\n        /* \"#utility.yul\":5043:5047   */\n      0x20\n        /* \"#utility.yul\":5035:5041   */\n      dup8\n        /* \"#utility.yul\":5031:5048   */\n      add\n        /* \"#utility.yul\":4996:5062   */\n      tag_141\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5078:5094   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":4813:5100   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5463:5859   */\n    tag_139:\n        /* \"#utility.yul\":5612:5614   */\n      0x20\n        /* \"#utility.yul\":5601:5610   */\n      dup2\n        /* \"#utility.yul\":5594:5615   */\n      mstore\n        /* \"#utility.yul\":5575:5579   */\n      0x00\n        /* \"#utility.yul\":5644:5650   */\n      dup3\n        /* \"#utility.yul\":5638:5651   */\n      mload\n        /* \"#utility.yul\":5687:5693   */\n      dup1\n        /* \"#utility.yul\":5682:5684   */\n      0x20\n        /* \"#utility.yul\":5671:5680   */\n      dup5\n        /* \"#utility.yul\":5667:5685   */\n      add\n        /* \"#utility.yul\":5660:5694   */\n      mstore\n        /* \"#utility.yul\":5703:5782   */\n      tag_177\n        /* \"#utility.yul\":5775:5781   */\n      dup2\n        /* \"#utility.yul\":5770:5772   */\n      0x40\n        /* \"#utility.yul\":5759:5768   */\n      dup6\n        /* \"#utility.yul\":5755:5773   */\n      add\n        /* \"#utility.yul\":5750:5752   */\n      0x20\n        /* \"#utility.yul\":5742:5748   */\n      dup8\n        /* \"#utility.yul\":5738:5753   */\n      add\n        /* \"#utility.yul\":5703:5782   */\n      tag_141\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5843:5845   */\n      0x1f\n        /* \"#utility.yul\":5822:5837   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5818:5847   */\n      and\n        /* \"#utility.yul\":5803:5848   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5850:5852   */\n      0x40\n        /* \"#utility.yul\":5799:5853   */\n      add\n      swap3\n        /* \"#utility.yul\":5463:5859   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220290898b566edd2726fca5fc6f7fc398b4c30c40bb9361e2ef09c10167048f08564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523060805234801561001457600080fd5b506080516109c461004b6000396000818160df01528181610128015281816101be015281816101fe015261028801526109c46000f3fe60806040526004361061004a5760003560e01c80633659cfe61461004f5780634f1ef2861461007157806352d1902d146100845780639fa6a6e3146100ab578063d09de08a146100c0575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610730565b6100d5565b005b61006f61007f366004610761565b6101b4565b34801561009057600080fd5b5061009961027b565b60405190815260200160405180910390f35b3480156100b757600080fd5b5061009961032e565b3480156100cc57600080fd5b5061006f61033e565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101265760405162461bcd60e51b815260040161011d90610823565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661016f600080516020610948833981519152546001600160a01b031690565b6001600160a01b0316146101955760405162461bcd60e51b815260040161011d9061086f565b604080516000808252602082019092526101b19183919061034e565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101fc5760405162461bcd60e51b815260040161011d90610823565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610245600080516020610948833981519152546001600160a01b031690565b6001600160a01b03161461026b5760405162461bcd60e51b815260040161011d9061086f565b6102778282600161034e565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461031b5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161011d565b5060008051602061094883398151915290565b600061033960015490565b905090565b61034c600180546001019055565b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561038657610381836104be565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156103e0575060408051601f3d908101601f191682019092526103dd918101906108bb565b60015b6104435760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161011d565b60008051602061094883398151915281146104b25760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161011d565b5061038183838361055a565b6001600160a01b0381163b61052b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161011d565b60008051602061094883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61056383610585565b6000825111806105705750805b156103815761057f83836105c5565b50505050565b61058e816104be565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606105ea8383604051806060016040528060278152602001610968602791396105f1565b9392505050565b6060600080856001600160a01b03168560405161060e91906108f8565b600060405180830381855af49150503d8060008114610649576040519150601f19603f3d011682016040523d82523d6000602084013e61064e565b606091505b509150915061065f86838387610669565b9695505050505050565b606083156106d85782516000036106d1576001600160a01b0385163b6106d15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161011d565b50816106e2565b6106e283836106ea565b949350505050565b8151156106fa5781518083602001fd5b8060405162461bcd60e51b815260040161011d9190610914565b80356001600160a01b038116811461072b57600080fd5b919050565b60006020828403121561074257600080fd5b6105ea82610714565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561077457600080fd5b61077d83610714565b9150602083013567ffffffffffffffff8082111561079a57600080fd5b818501915085601f8301126107ae57600080fd5b8135818111156107c0576107c061074b565b604051601f8201601f19908116603f011681019083821181831017156107e8576107e861074b565b8160405282815288602084870101111561080157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156108cd57600080fd5b5051919050565b60005b838110156108ef5781810151838201526020016108d7565b50506000910152565b6000825161090a8184602087016108d4565b9190910192915050565b60208152600082518060208401526109338160408501602087016108d4565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220290898b566edd2726fca5fc6f7fc398b4c30c40bb9361e2ef09c10167048f08564736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x9C4 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xDF ADD MSTORE DUP2 DUP2 PUSH2 0x128 ADD MSTORE DUP2 DUP2 PUSH2 0x1BE ADD MSTORE DUP2 DUP2 PUSH2 0x1FE ADD MSTORE PUSH2 0x288 ADD MSTORE PUSH2 0x9C4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x9FA6A6E3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x32E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x33E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1B1 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x245 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x277 DUP3 DUP3 PUSH1 0x1 PUSH2 0x34E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x339 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x34C PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x386 JUMPI PUSH2 0x381 DUP4 PUSH2 0x4BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3E0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3DD SWAP2 DUP2 ADD SWAP1 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11D JUMP JUMPDEST POP PUSH2 0x381 DUP4 DUP4 DUP4 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x563 DUP4 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x570 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x381 JUMPI PUSH2 0x57F DUP4 DUP4 PUSH2 0x5C5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5EA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x968 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x5F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x65F DUP7 DUP4 DUP4 DUP8 PUSH2 0x669 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x6D8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x6D1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x11D JUMP JUMPDEST POP DUP2 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x6E2 DUP4 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x6FA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x914 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5EA DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x7E8 JUMPI PUSH2 0x7E8 PUSH2 0x74B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8EF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8D7 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x90A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x933 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122029 ADDMOD SWAP9 0xB5 PUSH7 0xEDD2726FCA5FC6 0xF7 0xFC CODECOPY DUP12 0x4C ADDRESS 0xC4 SIGNEXTEND 0xB9 CALLDATASIZE 0x1E 0x2E CREATE SWAP13 LT AND PUSH17 0x48F08564736F6C63430008110033000000 ",
							"sourceMap": "1012:728:3:-:0;;;1360:4:6;1317:48;;1012:728:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_authorizeUpgrade_270": {
									"entryPoint": null,
									"id": 270,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getImplementation_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1301": {
									"entryPoint": 1770,
									"id": 1301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_402": {
									"entryPoint": 1214,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_500": {
									"entryPoint": 846,
									"id": 500,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_447": {
									"entryPoint": 1370,
									"id": 447,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_417": {
									"entryPoint": 1413,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1320": {
									"entryPoint": null,
									"id": 1320,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_230": {
									"entryPoint": 814,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_1189": {
									"entryPoint": 1477,
									"id": 1189,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1218": {
									"entryPoint": 1521,
									"id": 1218,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_1408": {
									"entryPoint": null,
									"id": 1408,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1419": {
									"entryPoint": null,
									"id": 1419,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1334": {
									"entryPoint": null,
									"id": 1334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_239": {
									"entryPoint": 830,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_990": {
									"entryPoint": null,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@proxiableUUID_748": {
									"entryPoint": 635,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@upgradeToAndCall_791": {
									"entryPoint": 436,
									"id": 791,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_770": {
									"entryPoint": 213,
									"id": 770,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1257": {
									"entryPoint": 1641,
									"id": 1257,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5861:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:11"
															},
															"nodeType": "YulIf",
															"src": "111:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "14:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:11"
															},
															"nodeType": "YulIf",
															"src": "272:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:11",
														"type": ""
													}
												],
												"src": "192:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "415:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "432:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "444:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "435:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "435:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "425:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "425:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "472:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "465:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "465:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "499:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "489:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "383:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:899:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "657:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "666:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "669:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "659:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "659:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "659:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "632:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "641:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "628:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "628:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "653:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "624:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:32:11"
															},
															"nodeType": "YulIf",
															"src": "621:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "682:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "711:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "692:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "730:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "761:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "772:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "757:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "744:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "734:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "785:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "795:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "789:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "840:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "849:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "852:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "842:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "842:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "842:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "836:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "825:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:14:11"
															},
															"nodeType": "YulIf",
															"src": "822:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "865:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "879:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "869:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "945:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "954:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "957:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "947:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "947:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "924:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "928:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "920:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "935:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "916:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:35:11"
															},
															"nodeType": "YulIf",
															"src": "906:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "970:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "993:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:16:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "974:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1019:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1021:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1021:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1011:2:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1015:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1008:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1008:10:11"
															},
															"nodeType": "YulIf",
															"src": "1005:36:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1050:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1060:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:7:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1054:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1076:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1090:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1080:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1108:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1130:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1154:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1158:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1150:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1150:13:11"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1165:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1146:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1146:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1170:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1142:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1142:31:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1175:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1138:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1138:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1126:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1112:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1238:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1240:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1240:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1240:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1197:10:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1209:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1194:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1217:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1214:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1214:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1191:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:46:11"
															},
															"nodeType": "YulIf",
															"src": "1188:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1280:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1269:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1300:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1300:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1364:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1373:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1376:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1366:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1366:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1366:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1341:2:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1345:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1337:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1337:11:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1350:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1355:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1330:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:33:11"
															},
															"nodeType": "YulIf",
															"src": "1327:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1406:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1423:2:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1427:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1419:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:11:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1432:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1389:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1459:6:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1467:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1455:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1455:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1472:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1451:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1451:24:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1477:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1444:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1488:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1498:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "569:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "580:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "592:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "600:6:11",
														"type": ""
													}
												],
												"src": "515:995:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1626:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1638:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1649:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1634:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1626:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1668:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1679:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1585:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1596:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1607:4:11",
														"type": ""
													}
												],
												"src": "1515:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1798:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1808:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1820:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1808:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1778:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1789:4:11",
														"type": ""
													}
												],
												"src": "1697:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2053:234:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2063:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2063:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2104:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2115:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2100:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2100:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:11",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2143:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2139:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:18:11"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2159:34:11",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2132:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2214:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2225:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2210:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:18:11"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2230:14:11",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:42:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:42:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2254:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2266:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2277:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2254:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2030:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2044:4:11",
														"type": ""
													}
												],
												"src": "1879:408:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:234:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2483:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2494:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2476:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2476:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2476:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2517:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2528:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2513:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2513:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2533:2:11",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2506:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2556:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2567:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:18:11"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2572:34:11",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2545:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2638:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:18:11"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2643:14:11",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:42:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2616:42:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2667:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2675:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2667:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2443:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2457:4:11",
														"type": ""
													}
												],
												"src": "2292:408:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2879:246:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2896:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2907:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2889:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2889:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2930:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2941:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2926:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2926:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2946:2:11",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2919:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2919:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2969:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2980:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2965:18:11"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2985:34:11",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2958:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2958:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3040:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3051:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3036:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3036:18:11"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3056:26:11",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3029:54:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3092:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3104:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3115:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3100:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3092:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2856:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2870:4:11",
														"type": ""
													}
												],
												"src": "2705:420:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3211:103:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3257:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3266:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3269:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3259:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3259:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3259:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3232:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3241:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3253:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3224:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:32:11"
															},
															"nodeType": "YulIf",
															"src": "3221:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3282:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3298:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3292:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3282:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3177:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3188:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3200:6:11",
														"type": ""
													}
												],
												"src": "3130:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:236:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3510:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3544:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3555:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3540:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3540:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:2:11",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3533:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3533:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:11"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3599:34:11",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:11"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3670:16:11",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:44:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3696:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3708:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3719:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3704:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3704:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3696:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3470:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3484:4:11",
														"type": ""
													}
												],
												"src": "3319:410:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3908:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3918:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3975:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3948:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3948:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4009:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3994:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3994:18:11"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4014:34:11",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4069:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4065:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4065:18:11"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4085:11:11",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4058:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4058:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4106:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3885:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3899:4:11",
														"type": ""
													}
												],
												"src": "3734:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4318:235:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:11"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4424:34:11",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4397:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4397:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4479:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4490:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4475:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4475:18:11"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4495:15:11",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4468:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4468:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4520:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4532:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4543:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4520:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4295:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4309:4:11",
														"type": ""
													}
												],
												"src": "4144:409:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4634:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4643:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4638:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4703:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4728:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4733:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4724:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4724:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4747:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4752:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4743:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4743:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4737:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4737:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4717:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4717:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4717:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4664:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4667:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4661:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4675:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4677:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4686:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4689:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4682:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4682:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4677:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4657:3:11",
																"statements": []
															},
															"src": "4653:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4786:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4791:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4782:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4782:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4800:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4775:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4602:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4607:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4612:6:11",
														"type": ""
													}
												],
												"src": "4558:250:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4950:150:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4960:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4980:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4974:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4974:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4964:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5035:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5043:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5031:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5031:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5050:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5055:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4996:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4996:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5071:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5082:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5087:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5078:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5071:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4926:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4931:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4942:3:11",
														"type": ""
													}
												],
												"src": "4813:287:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5279:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5296:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5307:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5289:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5289:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5330:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5341:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5326:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5326:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5346:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5319:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5369:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5380:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5365:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5365:18:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5385:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5358:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5358:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5426:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5438:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5449:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5434:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5426:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5256:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5270:4:11",
														"type": ""
													}
												],
												"src": "5105:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5584:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5601:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5612:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5594:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5594:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5638:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5671:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5682:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5667:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5687:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5660:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5742:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5750:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5738:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5738:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5759:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5770:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5755:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5755:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5775:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5703:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5703:79:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5703:79:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5791:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5807:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5826:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5834:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5822:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5822:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5843:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5839:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5839:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5818:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5818:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5803:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5803:45:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5850:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5799:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5799:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5791:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5564:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5575:4:11",
														"type": ""
													}
												],
												"src": "5463:396:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"698": [
									{
										"length": 32,
										"start": 223
									},
									{
										"length": 32,
										"start": 296
									},
									{
										"length": 32,
										"start": 446
									},
									{
										"length": 32,
										"start": 510
									},
									{
										"length": 32,
										"start": 648
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633659cfe61461004f5780634f1ef2861461007157806352d1902d146100845780639fa6a6e3146100ab578063d09de08a146100c0575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610730565b6100d5565b005b61006f61007f366004610761565b6101b4565b34801561009057600080fd5b5061009961027b565b60405190815260200160405180910390f35b3480156100b757600080fd5b5061009961032e565b3480156100cc57600080fd5b5061006f61033e565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101265760405162461bcd60e51b815260040161011d90610823565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661016f600080516020610948833981519152546001600160a01b031690565b6001600160a01b0316146101955760405162461bcd60e51b815260040161011d9061086f565b604080516000808252602082019092526101b19183919061034e565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101fc5760405162461bcd60e51b815260040161011d90610823565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610245600080516020610948833981519152546001600160a01b031690565b6001600160a01b03161461026b5760405162461bcd60e51b815260040161011d9061086f565b6102778282600161034e565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461031b5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161011d565b5060008051602061094883398151915290565b600061033960015490565b905090565b61034c600180546001019055565b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561038657610381836104be565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156103e0575060408051601f3d908101601f191682019092526103dd918101906108bb565b60015b6104435760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161011d565b60008051602061094883398151915281146104b25760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161011d565b5061038183838361055a565b6001600160a01b0381163b61052b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161011d565b60008051602061094883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61056383610585565b6000825111806105705750805b156103815761057f83836105c5565b50505050565b61058e816104be565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606105ea8383604051806060016040528060278152602001610968602791396105f1565b9392505050565b6060600080856001600160a01b03168560405161060e91906108f8565b600060405180830381855af49150503d8060008114610649576040519150601f19603f3d011682016040523d82523d6000602084013e61064e565b606091505b509150915061065f86838387610669565b9695505050505050565b606083156106d85782516000036106d1576001600160a01b0385163b6106d15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161011d565b50816106e2565b6106e283836106ea565b949350505050565b8151156106fa5781518083602001fd5b8060405162461bcd60e51b815260040161011d9190610914565b80356001600160a01b038116811461072b57600080fd5b919050565b60006020828403121561074257600080fd5b6105ea82610714565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561077457600080fd5b61077d83610714565b9150602083013567ffffffffffffffff8082111561079a57600080fd5b818501915085601f8301126107ae57600080fd5b8135818111156107c0576107c061074b565b604051601f8201601f19908116603f011681019083821181831017156107e8576107e861074b565b8160405282815288602084870101111561080157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156108cd57600080fd5b5051919050565b60005b838110156108ef5781810151838201526020016108d7565b50506000910152565b6000825161090a8184602087016108d4565b9190910192915050565b60208152600082518060208401526109338160408501602087016108d4565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220290898b566edd2726fca5fc6f7fc398b4c30c40bb9361e2ef09c10167048f08564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x9FA6A6E3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x32E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x33E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1B1 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x245 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x277 DUP3 DUP3 PUSH1 0x1 PUSH2 0x34E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x339 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x34C PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x386 JUMPI PUSH2 0x381 DUP4 PUSH2 0x4BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3E0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3DD SWAP2 DUP2 ADD SWAP1 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11D JUMP JUMPDEST POP PUSH2 0x381 DUP4 DUP4 DUP4 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x948 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x563 DUP4 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x570 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x381 JUMPI PUSH2 0x57F DUP4 DUP4 PUSH2 0x5C5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5EA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x968 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x5F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x65F DUP7 DUP4 DUP4 DUP8 PUSH2 0x669 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x6D8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x6D1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x11D JUMP JUMPDEST POP DUP2 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x6E2 DUP4 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x6FA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x914 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5EA DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x7E8 JUMPI PUSH2 0x7E8 PUSH2 0x74B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8EF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8D7 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x90A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x933 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122029 ADDMOD SWAP9 0xB5 PUSH7 0xEDD2726FCA5FC6 0xF7 0xFC CODECOPY DUP12 0x4C ADDRESS 0xC4 SIGNEXTEND 0xB9 CALLDATASIZE 0x1E 0x2E CREATE SWAP13 LT AND PUSH17 0x48F08564736F6C63430008110033000000 ",
							"sourceMap": "1012:728:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3460:198:6;;;;;;;;;;-1:-1:-1;3460:198:6;;;;;:::i;:::-;;:::i;:::-;;3989:223;;;;;;:::i;:::-;;:::i;3066:133::-;;;;;;;;;;;;;:::i;:::-;;;1661:25:11;;;1649:2;1634:18;3066:133:6;;;;;;;490:114:3;;;;;;;;;;;;;:::i;612:95::-;;;;;;;;;;;;;:::i;3460:198:6:-;-1:-1:-1;;;;;1936:6:6;1919:23;1927:4;1919:23;1911:80;;;;-1:-1:-1;;;1911:80:6;;;;;;;:::i;:::-;;;;;;;;;2034:6;-1:-1:-1;;;;;2010:30:6;:20;-1:-1:-1;;;;;;;;;;;1574:65:4;-1:-1:-1;;;;;1574:65:4;;1494:153;2010:20:6;-1:-1:-1;;;;;2010:30:6;;2002:87;;;;-1:-1:-1;;;2002:87:6;;;;;;;:::i;:::-;3630:12:::1;::::0;;3640:1:::1;3630:12:::0;;;::::1;::::0;::::1;::::0;;;3589:61:::1;::::0;3611:17;;3630:12;3589:21:::1;:61::i;:::-;3460:198:::0;:::o;3989:223::-;-1:-1:-1;;;;;1936:6:6;1919:23;1927:4;1919:23;1911:80;;;;-1:-1:-1;;;1911:80:6;;;;;;;:::i;:::-;2034:6;-1:-1:-1;;;;;2010:30:6;:20;-1:-1:-1;;;;;;;;;;;1574:65:4;-1:-1:-1;;;;;1574:65:4;;1494:153;2010:20:6;-1:-1:-1;;;;;2010:30:6;;2002:87;;;;-1:-1:-1;;;2002:87:6;;;;;;;:::i;:::-;4152:52:::1;4174:17;4193:4;4199;4152:21;:52::i;:::-;3989:223:::0;;:::o;3066:133::-;3144:7;2372:4;-1:-1:-1;;;;;2381:6:6;2364:23;;2356:92;;;;-1:-1:-1;;;2356:92:6;;2907:2:11;2356:92:6;;;2889:21:11;2946:2;2926:18;;;2919:30;2985:34;2965:18;;;2958:62;3056:26;3036:18;;;3029:54;3100:19;;2356:92:6;2705:420:11;2356:92:6;-1:-1:-1;;;;;;;;;;;;3066:133:6;:::o;490:114:3:-;532:7;559:37;587:8;951:14:9;;859:114;559:37:3;552:44;;490:114;:::o;612:95::-;660:39;690:8;1070:19:9;;1088:1;1070:19;;;981:127;660:39:3;612:95::o;2896:958:4:-;838:66;3316:59;;;3312:535;;;3392:37;3411:17;3392:18;:37::i;:::-;2896:958;;;:::o;3312:535::-;3495:17;-1:-1:-1;;;;;3466:61:4;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3466:63:4;;;;;;;;-1:-1:-1;;3466:63:4;;;;;;;;;;;;:::i;:::-;;;3462:306;;3696:56;;-1:-1:-1;;;3696:56:4;;3521:2:11;3696:56:4;;;3503:21:11;3560:2;3540:18;;;3533:30;3599:34;3579:18;;;3572:62;-1:-1:-1;;;3650:18:11;;;3643:44;3704:19;;3696:56:4;3319:410:11;3462:306:4;-1:-1:-1;;;;;;;;;;;3580:28:4;;3572:82;;;;-1:-1:-1;;;3572:82:4;;3936:2:11;3572:82:4;;;3918:21:11;3975:2;3955:18;;;3948:30;4014:34;3994:18;;;3987:62;-1:-1:-1;;;4065:18:11;;;4058:39;4114:19;;3572:82:4;3734:405:11;3572:82:4;3530:140;3782:53;3800:17;3819:4;3825:9;3782:17;:53::i;1743:284::-;-1:-1:-1;;;;;1757:19:8;;;1817:106:4;;;;-1:-1:-1;;;1817:106:4;;4346:2:11;1817:106:4;;;4328:21:11;4385:2;4365:18;;;4358:30;4424:34;4404:18;;;4397:62;-1:-1:-1;;;4475:18:11;;;4468:43;4528:19;;1817:106:4;4144:409:11;1817:106:4;-1:-1:-1;;;;;;;;;;;1934:85:4;;-1:-1:-1;;;;;;1934:85:4;-1:-1:-1;;;;;1934:85:4;;;;;;;;;;1743:284::o;2436:281::-;2545:29;2556:17;2545:10;:29::i;:::-;2603:1;2589:4;:11;:15;:28;;;;2608:9;2589:28;2585:125;;;2634:64;2674:17;2693:4;2634:39;:64::i;:::-;;2436:281;;;:::o;2140:155::-;2207:37;2226:17;2207:18;:37::i;:::-;2260:27;;-1:-1:-1;;;;;2260:27:4;;;;;;;;2140:155;:::o;6854:200:8:-;6937:12;6969:77;6990:6;6998:4;6969:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6962:84;6854:200;-1:-1:-1;;;6854:200:8:o;7248:332::-;7393:12;7419;7433:23;7460:6;-1:-1:-1;;;;;7460:19:8;7480:4;7460:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7418:67;;;;7503:69;7530:6;7538:7;7547:10;7559:12;7503:26;:69::i;:::-;7496:76;7248:332;-1:-1:-1;;;;;;7248:332:8:o;7876:644::-;8061:12;8090:7;8086:427;;;8118:10;:17;8139:1;8118:22;8114:290;;-1:-1:-1;;;;;1757:19:8;;;8328:60;;;;-1:-1:-1;;;8328:60:8;;5307:2:11;8328:60:8;;;5289:21:11;5346:2;5326:18;;;5319:30;5385:31;5365:18;;;5358:59;5434:18;;8328:60:8;5105:353:11;8328:60:8;-1:-1:-1;8425:10:8;8418:17;;8086:427;8468:33;8476:10;8488:12;8468:7;:33::i;:::-;7876:644;;;;;;:::o;9062:552::-;9223:17;;:21;9219:388;;9455:10;9449:17;9512:15;9499:10;9495:2;9491:19;9484:44;9219:388;9582:12;9575:20;;-1:-1:-1;;;9575:20:8;;;;;;;;:::i;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:995;592:6;600;653:2;641:9;632:7;628:23;624:32;621:52;;;669:1;666;659:12;621:52;692:29;711:9;692:29;:::i;:::-;682:39;;772:2;761:9;757:18;744:32;795:18;836:2;828:6;825:14;822:34;;;852:1;849;842:12;822:34;890:6;879:9;875:22;865:32;;935:7;928:4;924:2;920:13;916:27;906:55;;957:1;954;947:12;906:55;993:2;980:16;1015:2;1011;1008:10;1005:36;;;1021:18;;:::i;:::-;1096:2;1090:9;1064:2;1150:13;;-1:-1:-1;;1146:22:11;;;1170:2;1142:31;1138:40;1126:53;;;1194:18;;;1214:22;;;1191:46;1188:72;;;1240:18;;:::i;:::-;1280:10;1276:2;1269:22;1315:2;1307:6;1300:18;1355:7;1350:2;1345;1341;1337:11;1333:20;1330:33;1327:53;;;1376:1;1373;1366:12;1327:53;1432:2;1427;1423;1419:11;1414:2;1406:6;1402:15;1389:46;1477:1;1472:2;1467;1459:6;1455:15;1451:24;1444:35;1498:6;1488:16;;;;;;;515:995;;;;;:::o;1879:408::-;2081:2;2063:21;;;2120:2;2100:18;;;2093:30;2159:34;2154:2;2139:18;;2132:62;-1:-1:-1;;;2225:2:11;2210:18;;2203:42;2277:3;2262:19;;1879:408::o;2292:::-;2494:2;2476:21;;;2533:2;2513:18;;;2506:30;2572:34;2567:2;2552:18;;2545:62;-1:-1:-1;;;2638:2:11;2623:18;;2616:42;2690:3;2675:19;;2292:408::o;3130:184::-;3200:6;3253:2;3241:9;3232:7;3228:23;3224:32;3221:52;;;3269:1;3266;3259:12;3221:52;-1:-1:-1;3292:16:11;;3130:184;-1:-1:-1;3130:184:11:o;4558:250::-;4643:1;4653:113;4667:6;4664:1;4661:13;4653:113;;;4743:11;;;4737:18;4724:11;;;4717:39;4689:2;4682:10;4653:113;;;-1:-1:-1;;4800:1:11;4782:16;;4775:27;4558:250::o;4813:287::-;4942:3;4980:6;4974:13;4996:66;5055:6;5050:3;5043:4;5035:6;5031:17;4996:66;:::i;:::-;5078:16;;;;;4813:287;-1:-1:-1;;4813:287:11:o;5463:396::-;5612:2;5601:9;5594:21;5575:4;5644:6;5638:13;5687:6;5682:2;5671:9;5667:18;5660:34;5703:79;5775:6;5770:2;5759:9;5755:18;5750:2;5742:6;5738:15;5703:79;:::i;:::-;5843:2;5822:15;-1:-1:-1;;5818:29:11;5803:45;;;;5850:2;5799:54;;5463:396;-1:-1:-1;;5463:396:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "500000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"current()": "2362",
								"increment()": "24437",
								"proxiableUUID()": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"__UUPSUpgradeableMock_init()": "infinite",
								"__UUPSUpgradeableMock_init_unchained()": "infinite",
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1365,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1317,
									"end": 1365,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "698"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1740,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220290898b566edd2726fca5fc6f7fc398b4c30c40bb9361e2ef09c10167048f08564736f6c63430008110033",
									".code": [
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "3659CFE6"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "4F1EF286"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "9FA6A6E3"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "D09DE08A"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1740,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3460,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3460,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3989,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3066,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1649,
											"end": 1651,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 612,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "698"
										},
										{
											"begin": 1919,
											"end": 1942,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1931,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1942,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1911,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "698"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1647,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2002,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3589,
											"end": 3650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3628,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3589,
											"end": 3650,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3589,
											"end": 3650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "698"
										},
										{
											"begin": 1919,
											"end": 1942,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1931,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1942,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1911,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1911,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "698"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1647,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2002,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4174,
											"end": 4191,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4197,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4152,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4152,
											"end": 4204,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4152,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2376,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "698"
										},
										{
											"begin": 2364,
											"end": 2387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2387,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2909,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "PUSH",
											"source": 11,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3020,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3056,
											"end": 3082,
											"name": "PUSH",
											"source": 11,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2705,
											"end": 3125,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 532,
											"end": 539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 587,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 951,
											"end": 965,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 951,
											"end": 965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 973,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 559,
											"end": 596,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 559,
											"end": 596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 660,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 690,
											"end": 698,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1108,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 660,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 660,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2896,
											"end": 3854,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2896,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 838,
											"end": 904,
											"name": "PUSH",
											"source": 4,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3316,
											"end": 3375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3375,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3316,
											"end": 3375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3847,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3312,
											"end": 3847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3411,
											"end": 3428,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3392,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3847,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3312,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3466,
											"end": 3527,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3527,
											"name": "PUSH",
											"source": 4,
											"value": "52D1902D"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3466,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3466,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3462,
											"end": 3768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3524,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "2E"
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3563,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3599,
											"end": 3633,
											"name": "PUSH",
											"source": 11,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E206973206E6F742055555053"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3319,
											"end": 3729,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3462,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3580,
											"end": 3608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3608,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3918,
											"end": 3939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3948,
											"end": 3978,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4014,
											"end": 4048,
											"name": "PUSH",
											"source": 11,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4049,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A58589B1955555251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3734,
											"end": 4139,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3572,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3800,
											"end": 3817,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3834,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3782,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 2027,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1743,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4424,
											"end": 4458,
											"name": "PUSH",
											"source": 11,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4459,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4511,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4144,
											"end": 4553,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 2027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2710,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2585,
											"end": 2710,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2674,
											"end": 2691,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2634,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2698,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2634,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2207,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 6949,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6998,
											"end": 7002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH data",
											"source": 8,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 6969,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6962,
											"end": 7046,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6854,
											"end": 7054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7393,
											"end": 7405,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7419,
											"end": 7431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7460,
											"end": 7479,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7480,
											"end": 7484,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 7460,
											"end": 7485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7557,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 7503,
											"end": 7572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7496,
											"end": 7572,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8073,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8090,
											"end": 8097,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8135,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8140,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8114,
											"end": 8404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5307,
											"end": 5309,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5289,
											"end": 5310,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5348,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5319,
											"end": 5349,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5385,
											"end": 5416,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 5365,
											"end": 5383,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5365,
											"end": 5383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5417,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 5105,
											"end": 5458,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8425,
											"end": 8435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8418,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 8418,
											"end": 8435,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 8476,
											"end": 8486,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 8468,
											"end": 8501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9614,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 9062,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9240,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9244,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9455,
											"end": 9465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9512,
											"end": 9527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9499,
											"end": 9509,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9497,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9484,
											"end": 9528,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9582,
											"end": 9594,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 9575,
											"end": 9595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 383,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 383,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 444,
											"end": 454,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 456,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 475,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 472,
											"end": 473,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 480,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 499,
											"end": 503,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 504,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 598,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 632,
											"end": 639,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 628,
											"end": 651,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 621,
											"end": 673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 669,
											"end": 670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 667,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 659,
											"end": 671,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 621,
											"end": 673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 711,
											"end": 720,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 692,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 692,
											"end": 721,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 682,
											"end": 721,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 682,
											"end": 721,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 744,
											"end": 776,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 795,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 838,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 825,
											"end": 839,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 822,
											"end": 856,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 850,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 842,
											"end": 854,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 822,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 875,
											"end": 897,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 897,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 942,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 928,
											"end": 932,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 924,
											"end": 926,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 920,
											"end": 933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 916,
											"end": 943,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 906,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 906,
											"end": 961,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 957,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 947,
											"end": 959,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 906,
											"end": 961,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 906,
											"end": 961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 993,
											"end": 995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 980,
											"end": 996,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1008,
											"end": 1018,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 1142,
											"end": 1173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1191,
											"end": 1237,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1240,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1278,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1362,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1352,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1341,
											"end": 1343,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1363,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1378,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1425,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1435,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1470,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 2287,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1879,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 11,
											"value": "2C"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2193,
											"name": "PUSH",
											"source": 11,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 2154,
											"end": 2156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2194,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2245,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2277,
											"end": 2280,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2262,
											"end": 2281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 2287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2700,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2292,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH",
											"source": 11,
											"value": "2C"
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "PUSH",
											"source": 11,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 2567,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2607,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6163746976652070726F7879"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2616,
											"end": 2658,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2693,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2675,
											"end": 2694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2675,
											"end": 2694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3314,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3130,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3255,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3239,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3251,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3256,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3269,
											"end": 3270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3292,
											"end": 3308,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3308,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3130,
											"end": 3314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4808,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 4558,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4664,
											"end": 4665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4661,
											"end": 4674,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4754,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4754,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4754,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4717,
											"end": 4756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4691,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4682,
											"end": 4692,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 4653,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4800,
											"end": 4801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4798,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4782,
											"end": 4798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5100,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 4813,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4974,
											"end": 4987,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4996,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5047,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4996,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 4996,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4996,
											"end": 5062,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4996,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 5100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5859,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 5463,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5601,
											"end": 5610,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5594,
											"end": 5615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5575,
											"end": 5579,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5651,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 5693,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5671,
											"end": 5680,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5775,
											"end": 5781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5770,
											"end": 5772,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5773,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5742,
											"end": 5748,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5738,
											"end": 5753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 5703,
											"end": 5782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5782,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5703,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5843,
											"end": 5845,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5822,
											"end": 5837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5818,
											"end": 5847,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5848,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5848,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5848,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5848,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5852,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5859,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5463,
											"end": 5859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
								"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
								"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
								"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
								"packages/contracts/src/proxy/utils/initializable.sol",
								"packages/contracts/src/utils/AddressUpgradeable.sol",
								"packages/contracts/src/utils/CountersUpgradeable.sol",
								"packages/contracts/src/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"current()": "9fa6a6e3",
							"increment()": "d09de08a",
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"current\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":\"UUPSUpgradeableMockUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x6b5e5998dfb73f62c234da6e9dad1a31003305137592a43af6d19f8ac245dc5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df912ba99e2dfcb3168db20e11babc4388cfce8499dc3d8e89b145d5fae2651\",\"dweb:/ipfs/QmNZzLNMEEa4kZFMm7aqGs54ZY5LNzWVbo7m3eUGY88Mrd\"]},\"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x61706721037716b2adaeff508f6bab91f9e8725edab306d0b0aae01fa12bce7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62613904df36214b9660ac2ce946eadce67ee7bafcf169e22e93d567cf2496ca\",\"dweb:/ipfs/QmXNZKPYz5XfswUTcWSzjnMNnhPtM33oMLZEjathPes1NV\"]},\"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":{\"keccak256\":\"0xc0594ed6d765bd8760103be584128e3e393f02eeafd7138d14dc358a1e5dd86f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f7bb3d275e25e36c33dbedc76ad2f8d278e0272c95652b6172fe1c10559a169\",\"dweb:/ipfs/Qme4Nxz3BzFbFRkDBHvTSs1QEGpytRcNX6or4jJuNPZXJH\"]},\"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xa8a2fcf2ff612fe3fab80263d2091a4cb1c29133a7691776fd3cefae78a68ac0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3a5ea02ea618ad7d0f72c60dee94a77b49e3b3a6a77df774172d66247f591b1\",\"dweb:/ipfs/QmZPBf7vawtQqiHowEAro8qF8kL3CYhykjDUzK9qPm97g4\"]},\"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786\",\"dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V\"]},\"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6d498ade4115a51deb4d221f0c0f5db94b4ad8e9a143a572d6ecd929dbc4ae44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51ddc887ca2c7295a3abefe8eda9a4965d0d2859c2347bc617a08ad890352e2\",\"dweb:/ipfs/QmVoAVzSBqD6rosYhrMuykxi94jqJA2mDrbCDd8xVV5g9N\"]},\"packages/contracts/src/proxy/utils/initializable.sol\":{\"keccak256\":\"0x1c9fa831fc19df735b11f56a5e8af717e3feb0fbba4423234d6a3d6f3e76010c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dccf3e7461c8888f4423781d24939f32b3cd3bf7628c36d947c4ddfad1e33090\",\"dweb:/ipfs/QmTESPA5kL5aTGCLRsJGVCS831iyDN6SSD5q5Tv69TWBK1\"]},\"packages/contracts/src/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xca6075c066d8541c7a862e6dbeaa9243bb9fafc444f42d0f9a3f14583e26208f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b3fb9987745b03f883f175f3c9578cb4415e9e30e0643f840768e7f7e6c58\",\"dweb:/ipfs/QmVRi2tFZ75YmwYP5KQMyerGo8GCXAZSRQP7NZTgHhv7kj\"]},\"packages/contracts/src/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x361d9aa91f000b5e1d5c79e38d1c2f57f58e85152992336f0ff5fe37384d7706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a60bb30feaabb7e02769eac5796887fcf3973bb76a496e1e48ba0a97f12c8e36\",\"dweb:/ipfs/Qmaq3v1kDciR6wfkhVJtStVu1Mn3eLNZiskgwxrEfwNMWm\"]},\"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc9c2d01301d9b4cf1a75372a4f870fe5fcf2b723fea6af41f5a0dc2b942e944f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf4019b6af56e6cee4a4727d3df42d838ee59594bca4c67363ebe076ef2cd2b\",\"dweb:/ipfs/QmarC69mwy7NRkJdBAn1XjXAWzt3FWJnmsM2e1RDPe72jM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 810,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableMockUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 813,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableMockUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 207,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableMockUpgradeable",
								"label": "_counter",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1308_storage"
							},
							{
								"astId": 244,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 656,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 802,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 275,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_struct(Counter)1308_storage": {
								"encoding": "inplace",
								"label": "struct CountersUpgradeable.Counter",
								"members": [
									{
										"astId": 1307,
										"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableMockUpgradeable",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UUPSUpgradeableUnsafeMockUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "current",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":1744:2686  contract UUPSUpgradeableUnsafeMockUpgradeable is Initializable, UUPSUpgradeableMockUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1360:1364  this */\n  address\n    /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":1317:1365  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":1744:2686  contract UUPSUpgradeableUnsafeMockUpgradeable is Initializable, UUPSUpgradeableMockUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":1744:2686  contract UUPSUpgradeableUnsafeMockUpgradeable is Initializable, UUPSUpgradeableMockUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9fa6a6e3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2026:2187  function upgradeTo(address newImplementation) public override {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2195:2385  function upgradeToAndCall(address newImplementation, bytes memory data) public payable override {... */\n    tag_3:\n      tag_8\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":1661:1686   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1649:1651   */\n      0x20\n        /* \"#utility.yul\":1634:1652   */\n      add\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_17\n      tag_23\n      jump\t// in\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_8\n      tag_28\n      jump\t// in\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2026:2187  function upgradeTo(address newImplementation) public override {... */\n    tag_11:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2099:2179  ERC1967UpgradeUpgradeable._upgradeToAndCall(newImplementation, bytes(\"\"), false) */\n      tag_30\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2143:2160  newImplementation */\n      dup2\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2162:2171  bytes(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2173:2178  false */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2099:2142  ERC1967UpgradeUpgradeable._upgradeToAndCall */\n      tag_31\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2099:2179  ERC1967UpgradeUpgradeable._upgradeToAndCall(newImplementation, bytes(\"\"), false) */\n      jump\t// in\n    tag_30:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2026:2187  function upgradeTo(address newImplementation) public override {... */\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2195:2385  function upgradeToAndCall(address newImplementation, bytes memory data) public payable override {... */\n    tag_15:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2302:2377  ERC1967UpgradeUpgradeable._upgradeToAndCall(newImplementation, data, false) */\n      tag_33\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2346:2363  newImplementation */\n      dup3\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2365:2369  data */\n      dup3\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2371:2376  false */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2302:2345  ERC1967UpgradeUpgradeable._upgradeToAndCall */\n      tag_31\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2302:2377  ERC1967UpgradeUpgradeable._upgradeToAndCall(newImplementation, data, false) */\n      jump\t// in\n    tag_33:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":2195:2385  function upgradeToAndCall(address newImplementation, bytes memory data) public payable override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_18:\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3144:3151  bytes32 */\n      0x00\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2372:2376  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2381:2387  __self */\n      immutable(\"0xc2c77dc624b4aac67a6e14132cf7e60e698350f9c72b88ffba77407546a8ee13\")\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2364:2387  address(this) == __self */\n      and\n      eq\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2063:2084   */\n      mstore\n        /* \"#utility.yul\":2120:2122   */\n      0x38\n        /* \"#utility.yul\":2100:2118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2093:2123   */\n      mstore\n        /* \"#utility.yul\":2159:2193   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":2139:2157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2132:2194   */\n      mstore\n        /* \"#utility.yul\":2230:2256   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":2210:2228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2203:2257   */\n      mstore\n        /* \"#utility.yul\":2274:2293   */\n      0x84\n      add\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":2356:2448  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n      pop\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1186:1252  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":3066:3199  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n    tag_23:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":532:539  uint256 */\n      0x00\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":559:596  CountersUpgradeable.current(_counter) */\n      tag_40\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":587:595  _counter */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":951:965  counter._value */\n      sload\n      swap1\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":859:973  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":559:596  CountersUpgradeable.current(_counter) */\n    tag_40:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":552:596  return CountersUpgradeable.current(_counter) */\n      swap1\n      pop\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":490:604  function current() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n    tag_28:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":660:699  CountersUpgradeable.increment(_counter) */\n      tag_43\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":690:698  _counter */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1070:1089  counter._value += 1 */\n      dup1\n      sload\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1088:1089  1 */\n      0x01\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":1070:1089  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":981:1108  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":660:699  CountersUpgradeable.increment(_counter) */\n    tag_43:\n        /* \"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":612:707  function increment() external {... */\n      jump\t// out\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2436:2717  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_31:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2545:2574  _upgradeTo(newImplementation) */\n      tag_46\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2556:2573  newImplementation */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2545:2555  _upgradeTo */\n      tag_47\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2545:2574  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_46:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2603:2604  0 */\n      0x00\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2593  data */\n      dup3\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2600  data.length */\n      mload\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2604  data.length > 0 */\n      gt\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2617  data.length > 0 || forceCall */\n      dup1\n      tag_48\n      jumpi\n      pop\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2608:2617  forceCall */\n      dup1\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2589:2617  data.length > 0 || forceCall */\n    tag_48:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2585:2710  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2634:2698  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      tag_50\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2674:2691  newImplementation */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2693:2697  data */\n      dup4\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2634:2673  AddressUpgradeable.functionDelegateCall */\n      tag_51\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2634:2698  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_50:\n      pop\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2585:2710  if (data.length > 0 || forceCall) {... */\n    tag_49:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2436:2717  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2140:2295  function _upgradeTo(address newImplementation) internal {... */\n    tag_47:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2244  _setImplementation(newImplementation) */\n      tag_55\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2226:2243  newImplementation */\n      dup2\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2225  _setImplementation */\n      tag_56\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2207:2244  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_55:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2260:2287  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2140:2295  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6854:7054  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_51:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6937:6949  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_58\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6990:6996  target */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6998:7002  data */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:6989  functionDelegateCall */\n      tag_59\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6969:7046  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_58:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6962:7046  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":6854:7054  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1743:2027  function _setImplementation(address newImplementation) private {... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":1757:1776  account.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1817:1923  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2506:2508   */\n      0x20\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1817:1923  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2488:2509   */\n      mstore\n        /* \"#utility.yul\":2545:2547   */\n      0x2d\n        /* \"#utility.yul\":2525:2543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2518:2548   */\n      mstore\n        /* \"#utility.yul\":2584:2618   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":2564:2582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2557:2619   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":2635:2653   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2628:2671   */\n      mstore\n        /* \"#utility.yul\":2688:2707   */\n      0x84\n      add\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1817:1923  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_36\n        /* \"#utility.yul\":2304:2713   */\n      jump\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1817:1923  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_63:\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1186:1252  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1934:2019  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1743:2027  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7248:7580  function functionDelegateCall(... */\n    tag_59:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7393:7405  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7419:7431  bool success */\n      0x00\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7433:7456  bytes memory returndata */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7466  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7479  target.delegatecall */\n      and\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7480:7484  data */\n      dup6\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7460:7485  target.delegatecall(data) */\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_73\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_72)\n    tag_73:\n      0x60\n      swap2\n      pop\n    tag_72:\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7418:7485  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7572  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_74\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7530:7536  target */\n      dup7\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7538:7545  success */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7547:7557  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7559:7571  errorMessage */\n      dup8\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7529  verifyCallResultFromTarget */\n      tag_75\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7503:7572  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_74:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7496:7572  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7248:7580  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7876:8520  function verifyCallResultFromTarget(... */\n    tag_75:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8061:8073  bytes memory */\n      0x60\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8090:8097  success */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8086:8513  if (success) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8128  returndata */\n      dup3\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8135  returndata.length */\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8139:8140  0 */\n      0x00\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8118:8140  returndata.length == 0 */\n      sub\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8114:8404  if (returndata.length == 0) {... */\n      tag_82\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":1757:1776  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3467:3469   */\n      0x20\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3449:3470   */\n      mstore\n        /* \"#utility.yul\":3506:3508   */\n      0x1d\n        /* \"#utility.yul\":3486:3504   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3479:3509   */\n      mstore\n        /* \"#utility.yul\":3545:3576   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":3525:3543   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3518:3577   */\n      mstore\n        /* \"#utility.yul\":3594:3612   */\n      0x64\n      add\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n      tag_36\n        /* \"#utility.yul\":3265:3618   */\n      jump\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8328:8388  require(isContract(target), \"Address: call to non-contract\") */\n    tag_82:\n      pop\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8425:8435  returndata */\n      dup2\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8418:8435  return returndata */\n      jump(tag_86)\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8086:8513  if (success) {... */\n    tag_79:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8501  _revert(returndata, errorMessage) */\n      tag_86\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8476:8486  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8488:8500  errorMessage */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8475  _revert */\n      tag_87\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":8468:8501  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_86:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":7876:8520  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9062:9614  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_87:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9223:9240  returndata.length */\n      dup2\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9223:9244  returndata.length > 0 */\n      iszero\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9219:9607  if (returndata.length > 0) {... */\n      tag_89\n      jumpi\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9455:9465  returndata */\n      dup2\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9449:9466  mload(returndata) */\n      mload\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9512:9527  returndata_size */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9499:9509  returndata */\n      dup4\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9495:9497  32 */\n      0x20\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9491:9510  add(32, returndata) */\n      add\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9484:9528  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9219:9607  if (returndata.length > 0) {... */\n    tag_89:\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9582:9594  errorMessage */\n      dup1\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":9575:9595  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_93:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_98\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_98:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_10:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_100:\n        /* \"#utility.yul\":343:372   */\n      tag_58\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_93\n      jump\t// in\n        /* \"#utility.yul\":383:510   */\n    tag_94:\n        /* \"#utility.yul\":444:454   */\n      0x4e487b71\n        /* \"#utility.yul\":439:442   */\n      0xe0\n        /* \"#utility.yul\":435:455   */\n      shl\n        /* \"#utility.yul\":432:433   */\n      0x00\n        /* \"#utility.yul\":425:456   */\n      mstore\n        /* \"#utility.yul\":475:479   */\n      0x41\n        /* \"#utility.yul\":472:473   */\n      0x04\n        /* \"#utility.yul\":465:480   */\n      mstore\n        /* \"#utility.yul\":499:503   */\n      0x24\n        /* \"#utility.yul\":496:497   */\n      0x00\n        /* \"#utility.yul\":489:504   */\n      revert\n        /* \"#utility.yul\":515:1510   */\n    tag_14:\n        /* \"#utility.yul\":592:598   */\n      0x00\n        /* \"#utility.yul\":600:606   */\n      dup1\n        /* \"#utility.yul\":653:655   */\n      0x40\n        /* \"#utility.yul\":641:650   */\n      dup4\n        /* \"#utility.yul\":632:639   */\n      dup6\n        /* \"#utility.yul\":628:651   */\n      sub\n        /* \"#utility.yul\":624:656   */\n      slt\n        /* \"#utility.yul\":621:673   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":669:670   */\n      0x00\n        /* \"#utility.yul\":666:667   */\n      dup1\n        /* \"#utility.yul\":659:671   */\n      revert\n        /* \"#utility.yul\":621:673   */\n    tag_104:\n        /* \"#utility.yul\":692:721   */\n      tag_105\n        /* \"#utility.yul\":711:720   */\n      dup4\n        /* \"#utility.yul\":692:721   */\n      tag_93\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":682:721   */\n      swap2\n      pop\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup4\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":744:776   */\n      calldataload\n        /* \"#utility.yul\":795:813   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":836:838   */\n      dup1\n        /* \"#utility.yul\":828:834   */\n      dup3\n        /* \"#utility.yul\":825:839   */\n      gt\n        /* \"#utility.yul\":822:856   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":849:850   */\n      dup1\n        /* \"#utility.yul\":842:854   */\n      revert\n        /* \"#utility.yul\":822:856   */\n    tag_106:\n        /* \"#utility.yul\":890:896   */\n      dup2\n        /* \"#utility.yul\":879:888   */\n      dup6\n        /* \"#utility.yul\":875:897   */\n      add\n        /* \"#utility.yul\":865:897   */\n      swap2\n      pop\n        /* \"#utility.yul\":935:942   */\n      dup6\n        /* \"#utility.yul\":928:932   */\n      0x1f\n        /* \"#utility.yul\":924:926   */\n      dup4\n        /* \"#utility.yul\":920:933   */\n      add\n        /* \"#utility.yul\":916:943   */\n      slt\n        /* \"#utility.yul\":906:961   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":957:958   */\n      0x00\n        /* \"#utility.yul\":954:955   */\n      dup1\n        /* \"#utility.yul\":947:959   */\n      revert\n        /* \"#utility.yul\":906:961   */\n    tag_107:\n        /* \"#utility.yul\":993:995   */\n      dup2\n        /* \"#utility.yul\":980:996   */\n      calldataload\n        /* \"#utility.yul\":1015:1017   */\n      dup2\n        /* \"#utility.yul\":1011:1013   */\n      dup2\n        /* \"#utility.yul\":1008:1018   */\n      gt\n        /* \"#utility.yul\":1005:1041   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1021:1039   */\n      tag_109\n      tag_94\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1096:1098   */\n      0x40\n        /* \"#utility.yul\":1090:1099   */\n      mload\n        /* \"#utility.yul\":1064:1066   */\n      0x1f\n        /* \"#utility.yul\":1150:1163   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1146:1168   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1170:1172   */\n      0x3f\n        /* \"#utility.yul\":1142:1173   */\n      add\n        /* \"#utility.yul\":1138:1178   */\n      and\n        /* \"#utility.yul\":1126:1179   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1194:1212   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1214:1236   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1191:1237   */\n      or\n        /* \"#utility.yul\":1188:1260   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1240:1258   */\n      tag_111\n      tag_94\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1280:1290   */\n      dup2\n        /* \"#utility.yul\":1276:1278   */\n      0x40\n        /* \"#utility.yul\":1269:1291   */\n      mstore\n        /* \"#utility.yul\":1315:1317   */\n      dup3\n        /* \"#utility.yul\":1307:1313   */\n      dup2\n        /* \"#utility.yul\":1300:1318   */\n      mstore\n        /* \"#utility.yul\":1355:1362   */\n      dup9\n        /* \"#utility.yul\":1350:1352   */\n      0x20\n        /* \"#utility.yul\":1345:1347   */\n      dup5\n        /* \"#utility.yul\":1341:1343   */\n      dup8\n        /* \"#utility.yul\":1337:1348   */\n      add\n        /* \"#utility.yul\":1333:1353   */\n      add\n        /* \"#utility.yul\":1330:1363   */\n      gt\n        /* \"#utility.yul\":1327:1380   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":1376:1377   */\n      0x00\n        /* \"#utility.yul\":1373:1374   */\n      dup1\n        /* \"#utility.yul\":1366:1378   */\n      revert\n        /* \"#utility.yul\":1327:1380   */\n    tag_112:\n        /* \"#utility.yul\":1432:1434   */\n      dup3\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1423:1425   */\n      dup7\n        /* \"#utility.yul\":1419:1430   */\n      add\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1406:1412   */\n      dup4\n        /* \"#utility.yul\":1402:1417   */\n      add\n        /* \"#utility.yul\":1389:1435   */\n      calldatacopy\n        /* \"#utility.yul\":1477:1478   */\n      0x00\n        /* \"#utility.yul\":1472:1474   */\n      0x20\n        /* \"#utility.yul\":1467:1469   */\n      dup5\n        /* \"#utility.yul\":1459:1465   */\n      dup4\n        /* \"#utility.yul\":1455:1470   */\n      add\n        /* \"#utility.yul\":1451:1475   */\n      add\n        /* \"#utility.yul\":1444:1479   */\n      mstore\n        /* \"#utility.yul\":1498:1504   */\n      dup1\n        /* \"#utility.yul\":1488:1504   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":515:1510   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2718:2968   */\n    tag_95:\n        /* \"#utility.yul\":2803:2804   */\n      0x00\n        /* \"#utility.yul\":2813:2926   */\n    tag_118:\n        /* \"#utility.yul\":2827:2833   */\n      dup4\n        /* \"#utility.yul\":2824:2825   */\n      dup2\n        /* \"#utility.yul\":2821:2834   */\n      lt\n        /* \"#utility.yul\":2813:2926   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":2903:2914   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2897:2915   */\n      mload\n        /* \"#utility.yul\":2884:2895   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2877:2916   */\n      mstore\n        /* \"#utility.yul\":2849:2851   */\n      0x20\n        /* \"#utility.yul\":2842:2852   */\n      add\n        /* \"#utility.yul\":2813:2926   */\n      jump(tag_118)\n    tag_120:\n      pop\n      pop\n        /* \"#utility.yul\":2960:2961   */\n      0x00\n        /* \"#utility.yul\":2942:2958   */\n      swap2\n      add\n        /* \"#utility.yul\":2935:2962   */\n      mstore\n        /* \"#utility.yul\":2718:2968   */\n      jump\t// out\n        /* \"#utility.yul\":2973:3260   */\n    tag_70:\n        /* \"#utility.yul\":3102:3105   */\n      0x00\n        /* \"#utility.yul\":3140:3146   */\n      dup3\n        /* \"#utility.yul\":3134:3147   */\n      mload\n        /* \"#utility.yul\":3156:3222   */\n      tag_122\n        /* \"#utility.yul\":3215:3221   */\n      dup2\n        /* \"#utility.yul\":3210:3213   */\n      dup5\n        /* \"#utility.yul\":3203:3207   */\n      0x20\n        /* \"#utility.yul\":3195:3201   */\n      dup8\n        /* \"#utility.yul\":3191:3208   */\n      add\n        /* \"#utility.yul\":3156:3222   */\n      tag_95\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3238:3254   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2973:3260   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:4019   */\n    tag_92:\n        /* \"#utility.yul\":3772:3774   */\n      0x20\n        /* \"#utility.yul\":3761:3770   */\n      dup2\n        /* \"#utility.yul\":3754:3775   */\n      mstore\n        /* \"#utility.yul\":3735:3739   */\n      0x00\n        /* \"#utility.yul\":3804:3810   */\n      dup3\n        /* \"#utility.yul\":3798:3811   */\n      mload\n        /* \"#utility.yul\":3847:3853   */\n      dup1\n        /* \"#utility.yul\":3842:3844   */\n      0x20\n        /* \"#utility.yul\":3831:3840   */\n      dup5\n        /* \"#utility.yul\":3827:3845   */\n      add\n        /* \"#utility.yul\":3820:3854   */\n      mstore\n        /* \"#utility.yul\":3863:3942   */\n      tag_125\n        /* \"#utility.yul\":3935:3941   */\n      dup2\n        /* \"#utility.yul\":3930:3932   */\n      0x40\n        /* \"#utility.yul\":3919:3928   */\n      dup6\n        /* \"#utility.yul\":3915:3933   */\n      add\n        /* \"#utility.yul\":3910:3912   */\n      0x20\n        /* \"#utility.yul\":3902:3908   */\n      dup8\n        /* \"#utility.yul\":3898:3913   */\n      add\n        /* \"#utility.yul\":3863:3942   */\n      tag_95\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4003:4005   */\n      0x1f\n        /* \"#utility.yul\":3982:3997   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3978:4007   */\n      and\n        /* \"#utility.yul\":3963:4008   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3959:4013   */\n      add\n      swap3\n        /* \"#utility.yul\":3623:4019   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220b2886c704b26180abd470b54c3d142e529e3b238ae41fe91706edea4d908355e64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523060805234801561001457600080fd5b50608051610635610030600039600061011001526106356000f3fe60806040526004361061004a5760003560e01c80633659cfe61461004f5780634f1ef2861461007157806352d1902d146100845780639fa6a6e3146100ab578063d09de08a146100c0575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610472565b6100d5565b005b61006f61007f3660046104a3565b6100f3565b34801561009057600080fd5b50610099610103565b60405190815260200160405180910390f35b3480156100b757600080fd5b506100996101cd565b3480156100cc57600080fd5b5061006f6101dd565b6100f0816040518060200160405280600081525060006101ed565b50565b6100ff828260006101ed565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101a85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084015b60405180910390fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60006101d860015490565b905090565b6101eb600180546001019055565b565b6101f683610219565b6000825111806102035750805b15610214576102128383610259565b505b505050565b61022281610285565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061027e83836040518060600160405280602781526020016105d960279139610333565b9392505050565b6001600160a01b0381163b6102f25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161019f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b0316856040516103509190610589565b600060405180830381855af49150503d806000811461038b576040519150601f19603f3d011682016040523d82523d6000602084013e610390565b606091505b50915091506103a1868383876103ab565b9695505050505050565b6060831561041a578251600003610413576001600160a01b0385163b6104135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161019f565b5081610424565b610424838361042c565b949350505050565b81511561043c5781518083602001fd5b8060405162461bcd60e51b815260040161019f91906105a5565b80356001600160a01b038116811461046d57600080fd5b919050565b60006020828403121561048457600080fd5b61027e82610456565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156104b657600080fd5b6104bf83610456565b9150602083013567ffffffffffffffff808211156104dc57600080fd5b818501915085601f8301126104f057600080fd5b8135818111156105025761050261048d565b604051601f8201601f19908116603f0116810190838211818310171561052a5761052a61048d565b8160405282815288602084870101111561054357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015610580578181015183820152602001610568565b50506000910152565b6000825161059b818460208701610565565b9190910192915050565b60208152600082518060208401526105c4816040850160208701610565565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b2886c704b26180abd470b54c3d142e529e3b238ae41fe91706edea4d908355e64736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x635 PUSH2 0x30 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x110 ADD MSTORE PUSH2 0x635 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x9FA6A6E3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x472 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0xF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x1CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1DD JUMP JUMPDEST PUSH2 0xF0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x1ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFF DUP3 DUP3 PUSH1 0x0 PUSH2 0x1ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F6 DUP4 PUSH2 0x219 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x203 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x214 JUMPI PUSH2 0x212 DUP4 DUP4 PUSH2 0x259 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x222 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x27E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5D9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x333 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19F JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x390 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3A1 DUP7 DUP4 DUP4 DUP8 PUSH2 0x3AB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x41A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x413 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST POP DUP2 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x424 DUP4 DUP4 PUSH2 0x42C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x43C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x5A5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27E DUP3 PUSH2 0x456 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BF DUP4 PUSH2 0x456 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x502 JUMPI PUSH2 0x502 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x52A JUMPI PUSH2 0x52A PUSH2 0x48D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x580 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x568 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x59B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x565 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5C4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B2886C PUSH17 0x4B26180ABD470B54C3D142E529E3B238AE COINBASE INVALID SWAP2 PUSH17 0x6EDEA4D908355E64736F6C634300081100 CALLER ",
							"sourceMap": "1744:942:3:-:0;;;1360:4:6;1317:48;;1744:942:3;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_revert_1301": {
									"entryPoint": 1068,
									"id": 1301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_402": {
									"entryPoint": 645,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_447": {
									"entryPoint": 493,
									"id": 447,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_417": {
									"entryPoint": 537,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1320": {
									"entryPoint": null,
									"id": 1320,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_230": {
									"entryPoint": 461,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_1189": {
									"entryPoint": 601,
									"id": 1189,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1218": {
									"entryPoint": 819,
									"id": 1218,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_1408": {
									"entryPoint": null,
									"id": 1408,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1334": {
									"entryPoint": null,
									"id": 1334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_239": {
									"entryPoint": 477,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_990": {
									"entryPoint": null,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@proxiableUUID_748": {
									"entryPoint": 259,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@upgradeToAndCall_327": {
									"entryPoint": 243,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_310": {
									"entryPoint": 213,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1257": {
									"entryPoint": 939,
									"id": 1257,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4021:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:11"
															},
															"nodeType": "YulIf",
															"src": "111:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "14:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:11"
															},
															"nodeType": "YulIf",
															"src": "272:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:11",
														"type": ""
													}
												],
												"src": "192:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "415:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "432:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "444:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "435:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "435:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "425:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "425:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "472:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "465:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "465:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "499:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "489:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "383:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:899:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "657:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "666:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "669:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "659:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "659:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "659:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "632:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "641:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "628:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "628:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "653:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "624:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:32:11"
															},
															"nodeType": "YulIf",
															"src": "621:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "682:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "711:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "692:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "730:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "761:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "772:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "757:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "744:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "734:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "785:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "795:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "789:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "840:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "849:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "852:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "842:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "842:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "842:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "836:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "825:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:14:11"
															},
															"nodeType": "YulIf",
															"src": "822:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "865:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "879:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "869:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "945:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "954:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "957:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "947:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "947:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "924:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "928:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "920:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "935:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "916:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:35:11"
															},
															"nodeType": "YulIf",
															"src": "906:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "970:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "993:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:16:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "974:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1019:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1021:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1021:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1011:2:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1015:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1008:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1008:10:11"
															},
															"nodeType": "YulIf",
															"src": "1005:36:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1050:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1060:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:7:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1054:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1076:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1090:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1080:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1108:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1130:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1154:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1158:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1150:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1150:13:11"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1165:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1146:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1146:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1170:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1142:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1142:31:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1175:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1138:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1138:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1126:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1112:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1238:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1240:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1240:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1240:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1197:10:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1209:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1194:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1217:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1214:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1214:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1191:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:46:11"
															},
															"nodeType": "YulIf",
															"src": "1188:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1280:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1269:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1300:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1300:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1364:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1373:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1376:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1366:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1366:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1366:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1341:2:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1345:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1337:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1337:11:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1350:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1355:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1330:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:33:11"
															},
															"nodeType": "YulIf",
															"src": "1327:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1406:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1423:2:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1427:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1419:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:11:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1432:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1389:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1459:6:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1467:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1455:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1455:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1472:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1451:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1451:24:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1477:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1444:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1488:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1498:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "569:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "580:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "592:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "600:6:11",
														"type": ""
													}
												],
												"src": "515:995:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1626:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1638:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1649:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1634:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1626:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1668:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1679:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1585:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1596:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1607:4:11",
														"type": ""
													}
												],
												"src": "1515:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1798:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1808:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1820:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1808:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1778:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1789:4:11",
														"type": ""
													}
												],
												"src": "1697:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2053:246:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2063:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2063:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2104:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2115:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2100:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2100:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:11",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2143:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2139:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:18:11"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2159:34:11",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2132:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2214:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2225:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2210:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:18:11"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2230:26:11",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:54:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2266:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2289:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2274:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2266:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2030:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2044:4:11",
														"type": ""
													}
												],
												"src": "1879:420:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2478:235:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2495:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2488:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2488:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2488:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2529:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2540:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2545:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2518:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2568:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2579:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2564:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2564:18:11"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2584:34:11",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2557:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2557:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2639:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2650:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2635:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2635:18:11"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2655:15:11",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2628:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2628:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2680:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2692:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2703:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2680:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2455:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2469:4:11",
														"type": ""
													}
												],
												"src": "2304:409:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2784:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2794:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2803:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2798:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2863:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2888:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2893:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2884:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2884:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2907:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2912:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2903:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2903:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2897:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2877:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2824:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2827:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2821:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2835:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2837:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2846:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2849:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2842:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2842:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2837:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2817:3:11",
																"statements": []
															},
															"src": "2813:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2946:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2951:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2942:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2942:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2960:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2935:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2935:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2762:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2767:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2772:6:11",
														"type": ""
													}
												],
												"src": "2718:250:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3110:150:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3120:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3140:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3134:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3124:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3195:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3203:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3191:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3191:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3210:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3215:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3156:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3156:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3156:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3231:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3242:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3247:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3238:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3231:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3086:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3091:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3102:3:11",
														"type": ""
													}
												],
												"src": "2973:287:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3439:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3456:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3467:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3449:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3449:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3490:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3501:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3486:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3486:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3479:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3479:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3540:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:18:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3545:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3586:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3598:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3594:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3586:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3416:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3430:4:11",
														"type": ""
													}
												],
												"src": "3265:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3744:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3761:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3772:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3754:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3784:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3804:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3798:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3788:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3847:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3902:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3910:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3898:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3898:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3919:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3930:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3935:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3863:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3863:79:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3863:79:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3951:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3967:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3986:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3994:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3982:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3982:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4003:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3999:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3999:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3978:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3978:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:45:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3951:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3713:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3724:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3735:4:11",
														"type": ""
													}
												],
												"src": "3623:396:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"698": [
									{
										"length": 32,
										"start": 272
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633659cfe61461004f5780634f1ef2861461007157806352d1902d146100845780639fa6a6e3146100ab578063d09de08a146100c0575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610472565b6100d5565b005b61006f61007f3660046104a3565b6100f3565b34801561009057600080fd5b50610099610103565b60405190815260200160405180910390f35b3480156100b757600080fd5b506100996101cd565b3480156100cc57600080fd5b5061006f6101dd565b6100f0816040518060200160405280600081525060006101ed565b50565b6100ff828260006101ed565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101a85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084015b60405180910390fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60006101d860015490565b905090565b6101eb600180546001019055565b565b6101f683610219565b6000825111806102035750805b15610214576102128383610259565b505b505050565b61022281610285565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061027e83836040518060600160405280602781526020016105d960279139610333565b9392505050565b6001600160a01b0381163b6102f25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161019f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b0316856040516103509190610589565b600060405180830381855af49150503d806000811461038b576040519150601f19603f3d011682016040523d82523d6000602084013e610390565b606091505b50915091506103a1868383876103ab565b9695505050505050565b6060831561041a578251600003610413576001600160a01b0385163b6104135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161019f565b5081610424565b610424838361042c565b949350505050565b81511561043c5781518083602001fd5b8060405162461bcd60e51b815260040161019f91906105a5565b80356001600160a01b038116811461046d57600080fd5b919050565b60006020828403121561048457600080fd5b61027e82610456565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156104b657600080fd5b6104bf83610456565b9150602083013567ffffffffffffffff808211156104dc57600080fd5b818501915085601f8301126104f057600080fd5b8135818111156105025761050261048d565b604051601f8201601f19908116603f0116810190838211818310171561052a5761052a61048d565b8160405282815288602084870101111561054357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015610580578181015183820152602001610568565b50506000910152565b6000825161059b818460208701610565565b9190910192915050565b60208152600082518060208401526105c4816040850160208701610565565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b2886c704b26180abd470b54c3d142e529e3b238ae41fe91706edea4d908355e64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x9FA6A6E3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x472 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0xF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x1CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1DD JUMP JUMPDEST PUSH2 0xF0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x1ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFF DUP3 DUP3 PUSH1 0x0 PUSH2 0x1ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F6 DUP4 PUSH2 0x219 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x203 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x214 JUMPI PUSH2 0x212 DUP4 DUP4 PUSH2 0x259 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x222 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x27E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5D9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x333 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19F JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x390 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3A1 DUP7 DUP4 DUP4 DUP8 PUSH2 0x3AB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x41A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x413 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST POP DUP2 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x424 DUP4 DUP4 PUSH2 0x42C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x43C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x5A5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27E DUP3 PUSH2 0x456 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BF DUP4 PUSH2 0x456 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x502 JUMPI PUSH2 0x502 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x52A JUMPI PUSH2 0x52A PUSH2 0x48D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x580 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x568 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x59B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x565 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5C4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B2886C PUSH17 0x4B26180ABD470B54C3D142E529E3B238AE COINBASE INVALID SWAP2 PUSH17 0x6EDEA4D908355E64736F6C634300081100 CALLER ",
							"sourceMap": "1744:942:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:161;;;;;;;;;;-1:-1:-1;2026:161:3;;;;;:::i;:::-;;:::i;:::-;;2195:190;;;;;;:::i;:::-;;:::i;3066:133:6:-;;;;;;;;;;;;;:::i;:::-;;;1661:25:11;;;1649:2;1634:18;3066:133:6;;;;;;;490:114:3;;;;;;;;;;;;;:::i;612:95::-;;;;;;;;;;;;;:::i;2026:161::-;2099:80;2143:17;2162:9;;;;;;;;;;;;2173:5;2099:43;:80::i;:::-;2026:161;:::o;2195:190::-;2302:75;2346:17;2365:4;2371:5;2302:43;:75::i;:::-;2195:190;;:::o;3066:133:6:-;3144:7;2372:4;-1:-1:-1;;;;;2381:6:6;2364:23;;2356:92;;;;-1:-1:-1;;;2356:92:6;;2081:2:11;2356:92:6;;;2063:21:11;2120:2;2100:18;;;2093:30;2159:34;2139:18;;;2132:62;2230:26;2210:18;;;2203:54;2274:19;;2356:92:6;;;;;;;;;-1:-1:-1;1186:66:4::1;3066:133:6::0;:::o;490:114:3:-;532:7;559:37;587:8;951:14:9;;859:114;559:37:3;552:44;;490:114;:::o;612:95::-;660:39;690:8;1070:19:9;;1088:1;1070:19;;;981:127;660:39:3;612:95::o;2436:281:4:-;2545:29;2556:17;2545:10;:29::i;:::-;2603:1;2589:4;:11;:15;:28;;;;2608:9;2589:28;2585:125;;;2634:64;2674:17;2693:4;2634:39;:64::i;:::-;;2585:125;2436:281;;;:::o;2140:155::-;2207:37;2226:17;2207:18;:37::i;:::-;2260:27;;-1:-1:-1;;;;;2260:27:4;;;;;;;;2140:155;:::o;6854:200:8:-;6937:12;6969:77;6990:6;6998:4;6969:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6962:84;6854:200;-1:-1:-1;;;6854:200:8:o;1743:284:4:-;-1:-1:-1;;;;;1757:19:8;;;1817:106:4;;;;-1:-1:-1;;;1817:106:4;;2506:2:11;1817:106:4;;;2488:21:11;2545:2;2525:18;;;2518:30;2584:34;2564:18;;;2557:62;-1:-1:-1;;;2635:18:11;;;2628:43;2688:19;;1817:106:4;2304:409:11;1817:106:4;1186:66;1934:85;;-1:-1:-1;;;;;;1934:85:4;-1:-1:-1;;;;;1934:85:4;;;;;;;;;;1743:284::o;7248:332:8:-;7393:12;7419;7433:23;7460:6;-1:-1:-1;;;;;7460:19:8;7480:4;7460:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7418:67;;;;7503:69;7530:6;7538:7;7547:10;7559:12;7503:26;:69::i;:::-;7496:76;7248:332;-1:-1:-1;;;;;;7248:332:8:o;7876:644::-;8061:12;8090:7;8086:427;;;8118:10;:17;8139:1;8118:22;8114:290;;-1:-1:-1;;;;;1757:19:8;;;8328:60;;;;-1:-1:-1;;;8328:60:8;;3467:2:11;8328:60:8;;;3449:21:11;3506:2;3486:18;;;3479:30;3545:31;3525:18;;;3518:59;3594:18;;8328:60:8;3265:353:11;8328:60:8;-1:-1:-1;8425:10:8;8418:17;;8086:427;8468:33;8476:10;8488:12;8468:7;:33::i;:::-;7876:644;;;;;;:::o;9062:552::-;9223:17;;:21;9219:388;;9455:10;9449:17;9512:15;9499:10;9495:2;9491:19;9484:44;9219:388;9582:12;9575:20;;-1:-1:-1;;;9575:20:8;;;;;;;;:::i;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:995;592:6;600;653:2;641:9;632:7;628:23;624:32;621:52;;;669:1;666;659:12;621:52;692:29;711:9;692:29;:::i;:::-;682:39;;772:2;761:9;757:18;744:32;795:18;836:2;828:6;825:14;822:34;;;852:1;849;842:12;822:34;890:6;879:9;875:22;865:32;;935:7;928:4;924:2;920:13;916:27;906:55;;957:1;954;947:12;906:55;993:2;980:16;1015:2;1011;1008:10;1005:36;;;1021:18;;:::i;:::-;1096:2;1090:9;1064:2;1150:13;;-1:-1:-1;;1146:22:11;;;1170:2;1142:31;1138:40;1126:53;;;1194:18;;;1214:22;;;1191:46;1188:72;;;1240:18;;:::i;:::-;1280:10;1276:2;1269:22;1315:2;1307:6;1300:18;1355:7;1350:2;1345;1341;1337:11;1333:20;1330:33;1327:53;;;1376:1;1373;1366:12;1327:53;1432:2;1427;1423;1419:11;1414:2;1406:6;1402:15;1389:46;1477:1;1472:2;1467;1459:6;1455:15;1451:24;1444:35;1498:6;1488:16;;;;;;;515:995;;;;;:::o;2718:250::-;2803:1;2813:113;2827:6;2824:1;2821:13;2813:113;;;2903:11;;;2897:18;2884:11;;;2877:39;2849:2;2842:10;2813:113;;;-1:-1:-1;;2960:1:11;2942:16;;2935:27;2718:250::o;2973:287::-;3102:3;3140:6;3134:13;3156:66;3215:6;3210:3;3203:4;3195:6;3191:17;3156:66;:::i;:::-;3238:16;;;;;2973:287;-1:-1:-1;;2973:287:11:o;3623:396::-;3772:2;3761:9;3754:21;3735:4;3804:6;3798:13;3847:6;3842:2;3831:9;3827:18;3820:34;3863:79;3935:6;3930:2;3919:9;3915:18;3910:2;3902:6;3898:15;3863:79;:::i;:::-;4003:2;3982:15;-1:-1:-1;;3978:29:11;3963:45;;;;4010:2;3959:54;;3623:396;-1:-1:-1;;3623:396:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "317800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"current()": "2362",
								"increment()": "24437",
								"proxiableUUID()": "infinite",
								"upgradeTo(address)": "28537",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"__UUPSUpgradeableUnsafeMock_init()": "infinite",
								"__UUPSUpgradeableUnsafeMock_init_unchained()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1365,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1317,
									"end": 1365,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "698"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1744,
									"end": 2686,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2886c704b26180abd470b54c3d142e529e3b238ae41fe91706edea4d908355e64736f6c63430008110033",
									".code": [
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "3659CFE6"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "4F1EF286"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "9FA6A6E3"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "D09DE08A"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 2686,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2026,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2026,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2195,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2195,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3066,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1661,
											"end": 1686,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1649,
											"end": 1651,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 612,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2143,
											"end": 2160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2099,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2179,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2099,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2346,
											"end": 2363,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2302,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2302,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2376,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "698"
										},
										{
											"begin": 2364,
											"end": 2387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2387,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2084,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2193,
											"name": "PUSH",
											"source": 11,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2194,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2257,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2356,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3066,
											"end": 3199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 532,
											"end": 539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 951,
											"end": 965,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 951,
											"end": 965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 973,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 559,
											"end": 596,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 612,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 660,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 690,
											"end": 698,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1108,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 660,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 660,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 612,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2589,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2710,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2585,
											"end": 2710,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2674,
											"end": 2691,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2634,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2698,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2634,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2710,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2585,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2207,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 6949,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6998,
											"end": 7002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH data",
											"source": 8,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 6969,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6969,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6962,
											"end": 7046,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 7054,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6854,
											"end": 7054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1743,
											"end": 2027,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1743,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2509,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2547,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2518,
											"end": 2548,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2618,
											"name": "PUSH",
											"source": 11,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2619,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2635,
											"end": 2653,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2635,
											"end": 2653,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2635,
											"end": 2653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2671,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2707,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2688,
											"end": 2707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2304,
											"end": 2713,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1817,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1252,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 2027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7393,
											"end": 7405,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7419,
											"end": 7431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7460,
											"end": 7479,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7480,
											"end": 7484,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 7460,
											"end": 7485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7557,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 7503,
											"end": 7572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 7503,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7496,
											"end": 7572,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 7248,
											"end": 7580,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8073,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8090,
											"end": 8097,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8135,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8140,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 8114,
											"end": 8404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3449,
											"end": 3470,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3479,
											"end": 3509,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3545,
											"end": 3576,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3265,
											"end": 3618,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 8328,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8425,
											"end": 8435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8418,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 8418,
											"end": 8435,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 8086,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 8476,
											"end": 8486,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 8468,
											"end": 8501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 8468,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9614,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 9062,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9240,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9223,
											"end": 9244,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9455,
											"end": 9465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9512,
											"end": 9527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9499,
											"end": 9509,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9497,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9484,
											"end": 9528,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 9219,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9582,
											"end": 9594,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 9575,
											"end": 9595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 383,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 383,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 444,
											"end": 454,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 456,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 475,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 472,
											"end": 473,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 480,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 499,
											"end": 503,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 504,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 598,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 632,
											"end": 639,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 628,
											"end": 651,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 621,
											"end": 673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 669,
											"end": 670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 667,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 659,
											"end": 671,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 673,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 621,
											"end": 673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 711,
											"end": 720,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 692,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 692,
											"end": 721,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 692,
											"end": 721,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 682,
											"end": 721,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 682,
											"end": 721,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 744,
											"end": 776,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 795,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 838,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 825,
											"end": 839,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 822,
											"end": 856,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 850,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 842,
											"end": 854,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 822,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 822,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 875,
											"end": 897,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 897,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 942,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 928,
											"end": 932,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 924,
											"end": 926,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 920,
											"end": 933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 916,
											"end": 943,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 906,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 906,
											"end": 961,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 957,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 947,
											"end": 959,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 906,
											"end": 961,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 906,
											"end": 961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 993,
											"end": 995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 980,
											"end": 996,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1008,
											"end": 1018,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1005,
											"end": 1041,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1021,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 1142,
											"end": 1173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1191,
											"end": 1237,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1188,
											"end": 1260,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1240,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1278,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1362,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1352,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1341,
											"end": 1343,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1363,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1378,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1327,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1425,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1435,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1470,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 1510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2968,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2718,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2804,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2833,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2821,
											"end": 2834,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2895,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2877,
											"end": 2916,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2851,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2852,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2813,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2960,
											"end": 2961,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2942,
											"end": 2958,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2935,
											"end": 2962,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2973,
											"end": 3260,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2973,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3156,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3222,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3156,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2973,
											"end": 3260,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2973,
											"end": 3260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 4019,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3623,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3761,
											"end": 3770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3754,
											"end": 3775,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3735,
											"end": 3739,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3811,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3847,
											"end": 3853,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3840,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3863,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3932,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3908,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3898,
											"end": 3913,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3863,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3863,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3863,
											"end": 3942,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3863,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4005,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3982,
											"end": 3997,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3963,
											"end": 4008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3963,
											"end": 4008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3963,
											"end": 4008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3963,
											"end": 4008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 4013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 4013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 4019,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3623,
											"end": 4019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
								"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
								"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
								"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
								"packages/contracts/src/proxy/utils/initializable.sol",
								"packages/contracts/src/utils/AddressUpgradeable.sol",
								"packages/contracts/src/utils/CountersUpgradeable.sol",
								"packages/contracts/src/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"current()": "9fa6a6e3",
							"increment()": "d09de08a",
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"current\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":\"UUPSUpgradeableUnsafeMockUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x6b5e5998dfb73f62c234da6e9dad1a31003305137592a43af6d19f8ac245dc5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df912ba99e2dfcb3168db20e11babc4388cfce8499dc3d8e89b145d5fae2651\",\"dweb:/ipfs/QmNZzLNMEEa4kZFMm7aqGs54ZY5LNzWVbo7m3eUGY88Mrd\"]},\"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x61706721037716b2adaeff508f6bab91f9e8725edab306d0b0aae01fa12bce7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62613904df36214b9660ac2ce946eadce67ee7bafcf169e22e93d567cf2496ca\",\"dweb:/ipfs/QmXNZKPYz5XfswUTcWSzjnMNnhPtM33oMLZEjathPes1NV\"]},\"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol\":{\"keccak256\":\"0xc0594ed6d765bd8760103be584128e3e393f02eeafd7138d14dc358a1e5dd86f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f7bb3d275e25e36c33dbedc76ad2f8d278e0272c95652b6172fe1c10559a169\",\"dweb:/ipfs/Qme4Nxz3BzFbFRkDBHvTSs1QEGpytRcNX6or4jJuNPZXJH\"]},\"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xa8a2fcf2ff612fe3fab80263d2091a4cb1c29133a7691776fd3cefae78a68ac0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3a5ea02ea618ad7d0f72c60dee94a77b49e3b3a6a77df774172d66247f591b1\",\"dweb:/ipfs/QmZPBf7vawtQqiHowEAro8qF8kL3CYhykjDUzK9qPm97g4\"]},\"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786\",\"dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V\"]},\"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6d498ade4115a51deb4d221f0c0f5db94b4ad8e9a143a572d6ecd929dbc4ae44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51ddc887ca2c7295a3abefe8eda9a4965d0d2859c2347bc617a08ad890352e2\",\"dweb:/ipfs/QmVoAVzSBqD6rosYhrMuykxi94jqJA2mDrbCDd8xVV5g9N\"]},\"packages/contracts/src/proxy/utils/initializable.sol\":{\"keccak256\":\"0x1c9fa831fc19df735b11f56a5e8af717e3feb0fbba4423234d6a3d6f3e76010c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dccf3e7461c8888f4423781d24939f32b3cd3bf7628c36d947c4ddfad1e33090\",\"dweb:/ipfs/QmTESPA5kL5aTGCLRsJGVCS831iyDN6SSD5q5Tv69TWBK1\"]},\"packages/contracts/src/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xca6075c066d8541c7a862e6dbeaa9243bb9fafc444f42d0f9a3f14583e26208f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b3fb9987745b03f883f175f3c9578cb4415e9e30e0643f840768e7f7e6c58\",\"dweb:/ipfs/QmVRi2tFZ75YmwYP5KQMyerGo8GCXAZSRQP7NZTgHhv7kj\"]},\"packages/contracts/src/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x361d9aa91f000b5e1d5c79e38d1c2f57f58e85152992336f0ff5fe37384d7706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a60bb30feaabb7e02769eac5796887fcf3973bb76a496e1e48ba0a97f12c8e36\",\"dweb:/ipfs/Qmaq3v1kDciR6wfkhVJtStVu1Mn3eLNZiskgwxrEfwNMWm\"]},\"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc9c2d01301d9b4cf1a75372a4f870fe5fcf2b723fea6af41f5a0dc2b942e944f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf4019b6af56e6cee4a4727d3df42d838ee59594bca4c67363ebe076ef2cd2b\",\"dweb:/ipfs/QmarC69mwy7NRkJdBAn1XjXAWzt3FWJnmsM2e1RDPe72jM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 810,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 813,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 207,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
								"label": "_counter",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1308_storage"
							},
							{
								"astId": 244,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 656,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 802,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 275,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 332,
								"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "201",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_struct(Counter)1308_storage": {
								"encoding": "inplace",
								"label": "struct CountersUpgradeable.Counter",
								"members": [
									{
										"astId": 1307,
										"contract": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol:UUPSUpgradeableUnsafeMockUpgradeable",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x6b5e5998dfb73f62c234da6e9dad1a31003305137592a43af6d19f8ac245dc5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df912ba99e2dfcb3168db20e11babc4388cfce8499dc3d8e89b145d5fae2651\",\"dweb:/ipfs/QmNZzLNMEEa4kZFMm7aqGs54ZY5LNzWVbo7m3eUGY88Mrd\"]},\"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x61706721037716b2adaeff508f6bab91f9e8725edab306d0b0aae01fa12bce7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62613904df36214b9660ac2ce946eadce67ee7bafcf169e22e93d567cf2496ca\",\"dweb:/ipfs/QmXNZKPYz5XfswUTcWSzjnMNnhPtM33oMLZEjathPes1NV\"]},\"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xa8a2fcf2ff612fe3fab80263d2091a4cb1c29133a7691776fd3cefae78a68ac0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3a5ea02ea618ad7d0f72c60dee94a77b49e3b3a6a77df774172d66247f591b1\",\"dweb:/ipfs/QmZPBf7vawtQqiHowEAro8qF8kL3CYhykjDUzK9qPm97g4\"]},\"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786\",\"dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V\"]},\"packages/contracts/src/proxy/utils/initializable.sol\":{\"keccak256\":\"0x1c9fa831fc19df735b11f56a5e8af717e3feb0fbba4423234d6a3d6f3e76010c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dccf3e7461c8888f4423781d24939f32b3cd3bf7628c36d947c4ddfad1e33090\",\"dweb:/ipfs/QmTESPA5kL5aTGCLRsJGVCS831iyDN6SSD5q5Tv69TWBK1\"]},\"packages/contracts/src/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xca6075c066d8541c7a862e6dbeaa9243bb9fafc444f42d0f9a3f14583e26208f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b3fb9987745b03f883f175f3c9578cb4415e9e30e0643f840768e7f7e6c58\",\"dweb:/ipfs/QmVRi2tFZ75YmwYP5KQMyerGo8GCXAZSRQP7NZTgHhv7kj\"]},\"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc9c2d01301d9b4cf1a75372a4f870fe5fcf2b723fea6af41f5a0dc2b942e944f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf4019b6af56e6cee4a4727d3df42d838ee59594bca4c67363ebe076ef2cd2b\",\"dweb:/ipfs/QmarC69mwy7NRkJdBAn1XjXAWzt3FWJnmsM2e1RDPe72jM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 810,
								"contract": "packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 813,
								"contract": "packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 656,
								"contract": "packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786\",\"dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x6b5e5998dfb73f62c234da6e9dad1a31003305137592a43af6d19f8ac245dc5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df912ba99e2dfcb3168db20e11babc4388cfce8499dc3d8e89b145d5fae2651\",\"dweb:/ipfs/QmNZzLNMEEa4kZFMm7aqGs54ZY5LNzWVbo7m3eUGY88Mrd\"]},\"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x61706721037716b2adaeff508f6bab91f9e8725edab306d0b0aae01fa12bce7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62613904df36214b9660ac2ce946eadce67ee7bafcf169e22e93d567cf2496ca\",\"dweb:/ipfs/QmXNZKPYz5XfswUTcWSzjnMNnhPtM33oMLZEjathPes1NV\"]},\"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xa8a2fcf2ff612fe3fab80263d2091a4cb1c29133a7691776fd3cefae78a68ac0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3a5ea02ea618ad7d0f72c60dee94a77b49e3b3a6a77df774172d66247f591b1\",\"dweb:/ipfs/QmZPBf7vawtQqiHowEAro8qF8kL3CYhykjDUzK9qPm97g4\"]},\"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786\",\"dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V\"]},\"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6d498ade4115a51deb4d221f0c0f5db94b4ad8e9a143a572d6ecd929dbc4ae44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51ddc887ca2c7295a3abefe8eda9a4965d0d2859c2347bc617a08ad890352e2\",\"dweb:/ipfs/QmVoAVzSBqD6rosYhrMuykxi94jqJA2mDrbCDd8xVV5g9N\"]},\"packages/contracts/src/proxy/utils/initializable.sol\":{\"keccak256\":\"0x1c9fa831fc19df735b11f56a5e8af717e3feb0fbba4423234d6a3d6f3e76010c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dccf3e7461c8888f4423781d24939f32b3cd3bf7628c36d947c4ddfad1e33090\",\"dweb:/ipfs/QmTESPA5kL5aTGCLRsJGVCS831iyDN6SSD5q5Tv69TWBK1\"]},\"packages/contracts/src/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xca6075c066d8541c7a862e6dbeaa9243bb9fafc444f42d0f9a3f14583e26208f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b3fb9987745b03f883f175f3c9578cb4415e9e30e0643f840768e7f7e6c58\",\"dweb:/ipfs/QmVRi2tFZ75YmwYP5KQMyerGo8GCXAZSRQP7NZTgHhv7kj\"]},\"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc9c2d01301d9b4cf1a75372a4f870fe5fcf2b723fea6af41f5a0dc2b942e944f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf4019b6af56e6cee4a4727d3df42d838ee59594bca4c67363ebe076ef2cd2b\",\"dweb:/ipfs/QmarC69mwy7NRkJdBAn1XjXAWzt3FWJnmsM2e1RDPe72jM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 810,
								"contract": "packages/contracts/src/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 813,
								"contract": "packages/contracts/src/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 656,
								"contract": "packages/contracts/src/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 802,
								"contract": "packages/contracts/src/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/proxy/utils/initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized.   An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized.   An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/proxy/utils/initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/proxy/utils/initializable.sol\":{\"keccak256\":\"0x1c9fa831fc19df735b11f56a5e8af717e3feb0fbba4423234d6a3d6f3e76010c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dccf3e7461c8888f4423781d24939f32b3cd3bf7628c36d947c4ddfad1e33090\",\"dweb:/ipfs/QmTESPA5kL5aTGCLRsJGVCS831iyDN6SSD5q5Tv69TWBK1\"]},\"packages/contracts/src/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xca6075c066d8541c7a862e6dbeaa9243bb9fafc444f42d0f9a3f14583e26208f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b3fb9987745b03f883f175f3c9578cb4415e9e30e0643f840768e7f7e6c58\",\"dweb:/ipfs/QmVRi2tFZ75YmwYP5KQMyerGo8GCXAZSRQP7NZTgHhv7kj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 810,
								"contract": "packages/contracts/src/proxy/utils/initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 813,
								"contract": "packages/contracts/src/proxy/utils/initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":202:9617  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/utils/AddressUpgradeable.sol\":202:9617  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122099b502d7effe976979cc2443c8df542ac2a26d62e92e6f53011f6692d451f53664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099b502d7effe976979cc2443c8df542ac2a26d62e92e6f53011f6692d451f53664736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xB5 MUL 0xD7 0xEF INVALID SWAP8 PUSH10 0x79CC2443C8DF542AC2A2 PUSH14 0x62E92E6F53011F6692D451F53664 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "202:9415:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:9415:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099b502d7effe976979cc2443c8df542ac2a26d62e92e6f53011f6692d451f53664736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xB5 MUL 0xD7 0xEF INVALID SWAP8 PUSH10 0x79CC2443C8DF542AC2A2 PUSH14 0x62E92E6F53011F6692D451F53664 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "202:9415:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 9617,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099b502d7effe976979cc2443c8df542ac2a26d62e92e6f53011f6692d451f53664736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 9617,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 9617,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 9617,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 202,
											"end": 9617,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 9617,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 9617,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 202,
											"end": 9617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 9617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 9617,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
								"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
								"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
								"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
								"packages/contracts/src/proxy/utils/initializable.sol",
								"packages/contracts/src/utils/AddressUpgradeable.sol",
								"packages/contracts/src/utils/CountersUpgradeable.sol",
								"packages/contracts/src/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xca6075c066d8541c7a862e6dbeaa9243bb9fafc444f42d0f9a3f14583e26208f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b3fb9987745b03f883f175f3c9578cb4415e9e30e0643f840768e7f7e6c58\",\"dweb:/ipfs/QmVRi2tFZ75YmwYP5KQMyerGo8GCXAZSRQP7NZTgHhv7kj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/CountersUpgradeable.sol": {
				"CountersUpgradeable": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":437:1448  library CountersUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/utils/CountersUpgradeable.sol\":437:1448  library CountersUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d381a0cd218f82b5c3c2e80d44e07fc531e1ad6fe6cd06229b6f126d425de61564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d381a0cd218f82b5c3c2e80d44e07fc531e1ad6fe6cd06229b6f126d425de61564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DUP2 LOG0 0xCD 0x21 DUP16 DUP3 0xB5 0xC3 0xC2 0xE8 0xD DIFFICULTY 0xE0 PUSH32 0xC531E1AD6FE6CD06229B6F126D425DE61564736F6C6343000811003300000000 ",
							"sourceMap": "437:1011:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;437:1011:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d381a0cd218f82b5c3c2e80d44e07fc531e1ad6fe6cd06229b6f126d425de61564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DUP2 LOG0 0xCD 0x21 DUP16 DUP3 0xB5 0xC3 0xC2 0xE8 0xD DIFFICULTY 0xE0 PUSH32 0xC531E1AD6FE6CD06229B6F126D425DE61564736F6C6343000811003300000000 ",
							"sourceMap": "437:1011:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"decrement(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"increment(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"reset(struct CountersUpgradeable.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d381a0cd218f82b5c3c2e80d44e07fc531e1ad6fe6cd06229b6f126d425de61564736f6c63430008110033",
									".code": [
										{
											"begin": 437,
											"end": 1448,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
								"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
								"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
								"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
								"packages/contracts/src/proxy/utils/initializable.sol",
								"packages/contracts/src/utils/AddressUpgradeable.sol",
								"packages/contracts/src/utils/CountersUpgradeable.sol",
								"packages/contracts/src/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x361d9aa91f000b5e1d5c79e38d1c2f57f58e85152992336f0ff5fe37384d7706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a60bb30feaabb7e02769eac5796887fcf3973bb76a496e1e48ba0a97f12c8e36\",\"dweb:/ipfs/Qmaq3v1kDciR6wfkhVJtStVu1Mn3eLNZiskgwxrEfwNMWm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":1453:4253  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":1453:4253  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220624f88f67935ec8fd2f44c522024c565faa126da4d5d782904359e26db22443a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220624f88f67935ec8fd2f44c522024c565faa126da4d5d782904359e26db22443a64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x4F88F6 PUSH26 0x35EC8FD2F44C522024C565FAA126DA4D5D782904359E26DB2244 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1453:2800:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1453:2800:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220624f88f67935ec8fd2f44c522024c565faa126da4d5d782904359e26db22443a64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x4F88F6 PUSH26 0x35EC8FD2F44C522024C565FAA126DA4D5D782904359E26DB2244 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1453:2800:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 4253,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220624f88f67935ec8fd2f44c522024c565faa126da4d5d782904359e26db22443a64736f6c63430008110033",
									".code": [
										{
											"begin": 1453,
											"end": 4253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 4253,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 4253,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 4253,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1453,
											"end": 4253,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 4253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 4253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 4253,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 4253,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
								"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol",
								"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
								"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
								"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
								"packages/contracts/src/proxy/utils/initializable.sol",
								"packages/contracts/src/utils/AddressUpgradeable.sol",
								"packages/contracts/src/utils/CountersUpgradeable.sol",
								"packages/contracts/src/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc9c2d01301d9b4cf1a75372a4f870fe5fcf2b723fea6af41f5a0dc2b942e944f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf4019b6af56e6cee4a4727d3df42d838ee59594bca4c67363ebe076ef2cd2b\",\"dweb:/ipfs/QmarC69mwy7NRkJdBAn1XjXAWzt3FWJnmsM2e1RDPe72jM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"packages/contracts/src/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							20
						]
					},
					"id": 21,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:137:0",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "286:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "313:70:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 7,
									"name": "Upgraded",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "420:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "404:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:32:0"
									},
									"src": "389:47:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "444:69:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 14,
									"name": "AdminChanged",
									"nameLocation": "525:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "546:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "538:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "569:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "561:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:41:0"
									},
									"src": "519:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "587:61:0",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 19,
									"name": "BeaconUpgraded",
									"nameLocation": "660:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "691:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "675:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:24:0"
									},
									"src": "654:45:0"
								}
							],
							"scope": 21,
							"src": "276:426:0",
							"usedErrors": []
						}
					],
					"src": "110:594:0"
				},
				"id": 0
			},
			"packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							30
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "143:206:1",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "361:28:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "397:445:1",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "857:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "870:2:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "896:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:9:1"
									},
									"scope": 30,
									"src": "848:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "351:557:1",
							"usedErrors": []
						}
					],
					"src": "116:792:1"
				},
				"id": 1
			},
			"packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/mocks/proxy/UUPSLegacyUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1302
						],
						"CountersUpgradeable": [
							1376
						],
						"ERC1967UpgradeUpgradeable": [
							657
						],
						"IBeaconUpgradeable": [
							667
						],
						"IERC1822ProxiableUpgradeable": [
							30
						],
						"IERC1967Upgradeable": [
							20
						],
						"Initializable": [
							972
						],
						"NonUpgradeableMockUpgradeable": [
							245
						],
						"StorageSlotUpgradeable": [
							1486
						],
						"UUPSUpgradeable": [
							803
						],
						"UUPSUpgradeableLegacyMockUpgradeable": [
							197
						],
						"UUPSUpgradeableMockUpgradeable": [
							276
						],
						"UUPSUpgradeableUnsafeMockUpgradeable": [
							333
						]
					},
					"id": 198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
							"file": "./UUPSUpgradeableMockUpgradeable.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 198,
							"sourceUnit": 334,
							"src": "62:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/proxy/utils/initializable.sol",
							"file": "../../proxy/utils/initializable.sol",
							"id": 34,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 198,
							"sourceUnit": 973,
							"src": "110:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 35,
										"name": "Initializable",
										"nameLocations": [
											"396:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "396:13:2"
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "396:13:2"
								},
								{
									"baseName": {
										"id": 37,
										"name": "UUPSUpgradeableMockUpgradeable",
										"nameLocations": [
											"411:30:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 276,
										"src": "411:30:2"
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "411:30:2"
								}
							],
							"canonicalName": "UUPSUpgradeableLegacyMockUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 197,
							"linearizedBaseContracts": [
								197,
								276,
								803,
								657,
								20,
								30,
								245,
								972
							],
							"name": "UUPSUpgradeableLegacyMockUpgradeable",
							"nameLocation": "356:36:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 41,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "510:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 197,
									"src": "485:108:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 39,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "485:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "527:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "672:8:2",
										"statements": []
									},
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 44,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 43,
												"name": "onlyInitializing",
												"nameLocations": [
													"655:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "655:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "655:16:2"
										}
									],
									"name": "__UUPSUpgradeableLegacyMock_init",
									"nameLocation": "611:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:2:2"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:0:2"
									},
									"scope": 197,
									"src": "602:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "768:8:2",
										"statements": []
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyInitializing",
												"nameLocations": [
													"751:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "751:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "751:16:2"
										}
									],
									"name": "__UUPSUpgradeableLegacyMock_init_unchained",
									"nameLocation": "697:42:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:2:2"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:0:2"
									},
									"scope": 197,
									"src": "688:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "981:221:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 61,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "1030:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 59,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "1000:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1019:10:2",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 990,
																"src": "1000:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1000:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1050:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "992:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "992:106:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "992:106:2"
											},
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 69,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "1147:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 66,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1109:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1132:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1408,
																"src": "1109:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1382_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1109:59:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1169:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1381,
														"src": "1109:65:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 72,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1177:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1109:85:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1109:85:2"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__setImplementation",
									"nameLocation": "926:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "954:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "946:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:27:2"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "981:0:2"
									},
									"scope": 197,
									"src": "917:285:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1322:1167:2",
										"statements": [
											{
												"assignments": [
													86
												],
												"declarations": [
													{
														"constant": false,
														"id": 86,
														"mutability": "mutable",
														"name": "oldImplementation",
														"nameLocation": "1341:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "1333:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 85,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1333:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 89,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 87,
														"name": "_getImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "1361:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1361:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1333:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 91,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1457:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "__setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1437:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1437:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1437:38:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 94,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1490:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1495:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1490:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1504:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1490:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 98,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1509:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1490:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 108,
												"nodeType": "IfStatement",
												"src": "1486:125:2",
												"trueBody": {
													"id": 107,
													"nodeType": "Block",
													"src": "1520:91:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 103,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 78,
																		"src": "1575:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 104,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "1594:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 100,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "1535:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1554:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1189,
																	"src": "1535:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1535:64:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 106,
															"nodeType": "ExpressionStatement",
															"src": "1535:64:2"
														}
													]
												}
											},
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"mutability": "mutable",
														"name": "rollbackTesting",
														"nameLocation": "1727:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "1684:58:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
														},
														"typeName": {
															"id": 112,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 111,
																"name": "StorageSlotUpgradeable.BooleanSlot",
																"nameLocations": [
																	"1684:22:2",
																	"1707:11:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1385,
																"src": "1684:34:2"
															},
															"referencedDeclaration": 1385,
															"src": "1684:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"arguments": [
														{
															"id": 116,
															"name": "_ROLLBACK_SLOT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1783:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 114,
															"name": "StorageSlotUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "1745:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																"typeString": "type(library StorageSlotUpgradeable)"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1768:14:2",
														"memberName": "getBooleanSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1419,
														"src": "1745:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1385_storage_ptr_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1745:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1684:114:2"
											},
											{
												"condition": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1813:22:2",
													"subExpression": {
														"expression": {
															"id": 119,
															"name": "rollbackTesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1814:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1830:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1384,
														"src": "1814:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "1809:673:2",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "1837:645:2",
													"statements": [
														{
															"expression": {
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 122,
																		"name": "rollbackTesting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "1929:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
																			"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1945:5:2",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "1929:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1953:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1929:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "1929:28:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 131,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 78,
																		"src": "2030:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "75706772616465546f286164647265737329",
																				"id": 134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2090:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_3659cfe672549963da205df855ebfb8672cda4801e0255183bd6a6f536855df7",
																					"typeString": "literal_string \"upgradeTo(address)\""
																				},
																				"value": "upgradeTo(address)"
																			},
																			{
																				"id": 135,
																				"name": "oldImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 86,
																				"src": "2112:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_3659cfe672549963da205df855ebfb8672cda4801e0255183bd6a6f536855df7",
																					"typeString": "literal_string \"upgradeTo(address)\""
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 132,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2066:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2070:19:2",
																			"memberName": "encodeWithSignature",
																			"nodeType": "MemberAccess",
																			"src": "2066:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (string memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2066:64:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 128,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "1972:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1991:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1189,
																	"src": "1972:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1972:173:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 138,
															"nodeType": "ExpressionStatement",
															"src": "1972:173:2"
														},
														{
															"expression": {
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 139,
																		"name": "rollbackTesting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "2160:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
																			"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
																		}
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2176:5:2",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "2160:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2184:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2160:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 144,
															"nodeType": "ExpressionStatement",
															"src": "2160:29:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 146,
																			"name": "oldImplementation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 86,
																			"src": "2257:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 147,
																				"name": "_getImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 378,
																				"src": "2278:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2278:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2257:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524331393637557067726164653a207570677261646520627265616b732066757274686572207570677261646573",
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2300:49:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																			"typeString": "literal_string \"ERC1967Upgrade: upgrade breaks further upgrades\""
																		},
																		"value": "ERC1967Upgrade: upgrade breaks further upgrades"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																			"typeString": "literal_string \"ERC1967Upgrade: upgrade breaks further upgrades\""
																		}
																	],
																	"id": 145,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:101:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 152,
															"nodeType": "ExpressionStatement",
															"src": "2249:101:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 154,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 78,
																		"src": "2452:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 153,
																	"name": "_upgradeTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "2441:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2441:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "ExpressionStatement",
															"src": "2441:29:2"
														}
													]
												}
											}
										]
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallSecureLegacyV1",
									"nameLocation": "1219:31:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1259:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1251:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1291:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1278:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1278:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "1302:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1297:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:62:2"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1322:0:2"
									},
									"scope": 197,
									"src": "1210:1279:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										770
									],
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "2598:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2641:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2666:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2660:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 168,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2660:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2660:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2671:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 166,
														"name": "_upgradeToAndCallSecureLegacyV1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2609:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2609:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "2609:68:2"
											}
										]
									},
									"functionSelector": "3659cfe6",
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeTo",
									"nameLocation": "2545:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 164,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2589:8:2"
									},
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2563:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "2555:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2555:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2554:27:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2598:0:2"
									},
									"scope": 197,
									"src": "2536:149:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										791
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "2789:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2832:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "2851:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2857:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 184,
														"name": "_upgradeToAndCallSecureLegacyV1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2800:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2800:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "2800:63:2"
											}
										]
									},
									"functionSelector": "4f1ef286",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2702:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2780:8:2"
									},
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2727:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "2719:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2759:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "2746:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2746:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:46:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2789:0:2"
									},
									"scope": 197,
									"src": "2693:178:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "2879:258:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 196,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3163:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 197,
									"src": "3143:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 193,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3143:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 195,
										"length": {
											"hexValue": "3530",
											"id": 194,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3151:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "3143:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 198,
							"src": "347:2825:2",
							"usedErrors": []
						}
					],
					"src": "35:3139:2"
				},
				"id": 2
			},
			"packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/mocks/proxy/UUPSUpgradeableMockUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1302
						],
						"CountersUpgradeable": [
							1376
						],
						"ERC1967UpgradeUpgradeable": [
							657
						],
						"IBeaconUpgradeable": [
							667
						],
						"IERC1822ProxiableUpgradeable": [
							30
						],
						"IERC1967Upgradeable": [
							20
						],
						"Initializable": [
							972
						],
						"NonUpgradeableMockUpgradeable": [
							245
						],
						"StorageSlotUpgradeable": [
							1486
						],
						"UUPSUpgradeable": [
							803
						],
						"UUPSUpgradeableMockUpgradeable": [
							276
						],
						"UUPSUpgradeableUnsafeMockUpgradeable": [
							333
						]
					},
					"id": 334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 199,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"absolutePath": "packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
							"file": "../../proxy/utils/UUPSUpgradeable.sol",
							"id": 200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 334,
							"sourceUnit": 804,
							"src": "62:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/utils/CountersUpgradeable.sol",
							"file": "../../utils/CountersUpgradeable.sol",
							"id": 201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 334,
							"sourceUnit": 1377,
							"src": "111:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/proxy/utils/initializable.sol",
							"file": "../../proxy/utils/initializable.sol",
							"id": 202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 334,
							"sourceUnit": 973,
							"src": "158:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 203,
										"name": "Initializable",
										"nameLocations": [
											"249:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "249:13:3"
									},
									"id": 204,
									"nodeType": "InheritanceSpecifier",
									"src": "249:13:3"
								}
							],
							"canonicalName": "NonUpgradeableMockUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 245,
							"linearizedBaseContracts": [
								245,
								972
							],
							"name": "NonUpgradeableMockUpgradeable",
							"nameLocation": "216:29:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_counter",
									"nameLocation": "307:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "270:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1308_storage",
										"typeString": "struct CountersUpgradeable.Counter"
									},
									"typeName": {
										"id": 206,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 205,
											"name": "CountersUpgradeable.Counter",
											"nameLocations": [
												"270:19:3",
												"290:7:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1308,
											"src": "270:27:3"
										},
										"referencedDeclaration": 1308,
										"src": "270:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
											"typeString": "struct CountersUpgradeable.Counter"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "387:8:3",
										"statements": []
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 209,
												"name": "onlyInitializing",
												"nameLocations": [
													"370:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "370:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "370:16:3"
										}
									],
									"name": "__NonUpgradeableMock_init",
									"nameLocation": "333:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:3"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:0:3"
									},
									"scope": 245,
									"src": "324:71:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "476:8:3",
										"statements": []
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 215,
												"name": "onlyInitializing",
												"nameLocations": [
													"459:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "459:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "459:16:3"
										}
									],
									"name": "__NonUpgradeableMock_init_unchained",
									"nameLocation": "412:35:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:3"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:0:3"
									},
									"scope": 245,
									"src": "403:81:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "541:63:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "_counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "587:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1308_storage",
																"typeString": "struct CountersUpgradeable.Counter storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Counter_$1308_storage",
																"typeString": "struct CountersUpgradeable.Counter storage ref"
															}
														],
														"expression": {
															"id": 224,
															"name": "CountersUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "559:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CountersUpgradeable_$1376_$",
																"typeString": "type(library CountersUpgradeable)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "579:7:3",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1320,
														"src": "559:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1308_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "559:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 228,
												"nodeType": "Return",
												"src": "552:44:3"
											}
										]
									},
									"functionSelector": "9fa6a6e3",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "499:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:2:3"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "532:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:9:3"
									},
									"scope": 245,
									"src": "490:114:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "642:65:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 235,
															"name": "_counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "690:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1308_storage",
																"typeString": "struct CountersUpgradeable.Counter storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Counter_$1308_storage",
																"typeString": "struct CountersUpgradeable.Counter storage ref"
															}
														],
														"expression": {
															"id": 233,
															"name": "CountersUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "660:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CountersUpgradeable_$1376_$",
																"typeString": "type(library CountersUpgradeable)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "680:9:3",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1334,
														"src": "660:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1308_storage_ptr_$returns$__$",
															"typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "660:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 232,
												"id": 237,
												"nodeType": "Return",
												"src": "653:46:3"
											}
										]
									},
									"functionSelector": "d09de08a",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "621:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:2:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:0:3"
									},
									"scope": 245,
									"src": "612:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "715:258:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 244,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "999:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "979:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 241,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "979:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 243,
										"length": {
											"hexValue": "3439",
											"id": 242,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "987:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "979:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 334,
							"src": "207:801:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 246,
										"name": "Initializable",
										"nameLocations": [
											"1055:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "1055:13:3"
									},
									"id": 247,
									"nodeType": "InheritanceSpecifier",
									"src": "1055:13:3"
								},
								{
									"baseName": {
										"id": 248,
										"name": "NonUpgradeableMockUpgradeable",
										"nameLocations": [
											"1070:29:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "1070:29:3"
									},
									"id": 249,
									"nodeType": "InheritanceSpecifier",
									"src": "1070:29:3"
								},
								{
									"baseName": {
										"id": 250,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"1101:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 803,
										"src": "1101:15:3"
									},
									"id": 251,
									"nodeType": "InheritanceSpecifier",
									"src": "1101:15:3"
								}
							],
							"canonicalName": "UUPSUpgradeableMockUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 276,
							"linearizedBaseContracts": [
								276,
								803,
								657,
								20,
								30,
								245,
								972
							],
							"name": "UUPSUpgradeableMockUpgradeable",
							"nameLocation": "1021:30:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "1188:8:3",
										"statements": []
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 253,
												"name": "onlyInitializing",
												"nameLocations": [
													"1171:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "1171:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1171:16:3"
										}
									],
									"name": "__UUPSUpgradeableMock_init",
									"nameLocation": "1133:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1159:2:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1188:0:3"
									},
									"scope": 276,
									"src": "1124:72:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "1278:8:3",
										"statements": []
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 259,
												"name": "onlyInitializing",
												"nameLocations": [
													"1261:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "1261:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1261:16:3"
										}
									],
									"name": "__UUPSUpgradeableMock_init_unchained",
									"nameLocation": "1213:36:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:2:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1278:0:3"
									},
									"scope": 276,
									"src": "1204:82:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										797
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "1437:2:3",
										"statements": []
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "1392:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1428:8:3"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1410:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:9:3"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 276,
									"src": "1383:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "1447:258:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 275,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1731:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 276,
									"src": "1711:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 272,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1711:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 274,
										"length": {
											"hexValue": "3530",
											"id": 273,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1719:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1711:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 334,
							"src": "1012:728:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 277,
										"name": "Initializable",
										"nameLocations": [
											"1793:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "1793:13:3"
									},
									"id": 278,
									"nodeType": "InheritanceSpecifier",
									"src": "1793:13:3"
								},
								{
									"baseName": {
										"id": 279,
										"name": "UUPSUpgradeableMockUpgradeable",
										"nameLocations": [
											"1808:30:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 276,
										"src": "1808:30:3"
									},
									"id": 280,
									"nodeType": "InheritanceSpecifier",
									"src": "1808:30:3"
								}
							],
							"canonicalName": "UUPSUpgradeableUnsafeMockUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 333,
							"linearizedBaseContracts": [
								333,
								276,
								803,
								657,
								20,
								30,
								245,
								972
							],
							"name": "UUPSUpgradeableUnsafeMockUpgradeable",
							"nameLocation": "1753:36:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "1916:8:3",
										"statements": []
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 282,
												"name": "onlyInitializing",
												"nameLocations": [
													"1899:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "1899:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1899:16:3"
										}
									],
									"name": "__UUPSUpgradeableUnsafeMock_init",
									"nameLocation": "1855:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1887:2:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:3"
									},
									"scope": 333,
									"src": "1846:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "2012:8:3",
										"statements": []
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 288,
												"name": "onlyInitializing",
												"nameLocations": [
													"1995:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "1995:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1995:16:3"
										}
									],
									"name": "__UUPSUpgradeableUnsafeMock_init_unchained",
									"nameLocation": "1941:42:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2012:0:3"
									},
									"scope": 333,
									"src": "1932:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										770
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2088:99:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "2143:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2168:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2162:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 302,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2162:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2162:9:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2173:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 298,
															"name": "ERC1967UpgradeUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "2099:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967UpgradeUpgradeable_$657_$",
																"typeString": "type(contract ERC1967UpgradeUpgradeable)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2125:17:3",
														"memberName": "_upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 447,
														"src": "2099:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:80:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2099:80:3"
											}
										]
									},
									"functionSelector": "3659cfe6",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeTo",
									"nameLocation": "2035:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 296,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2079:8:3"
									},
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2053:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2045:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:27:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2088:0:3"
									},
									"scope": 333,
									"src": "2026:161:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										791
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2291:94:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 321,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2346:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "2365:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 318,
															"name": "ERC1967UpgradeUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "2302:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967UpgradeUpgradeable_$657_$",
																"typeString": "type(contract ERC1967UpgradeUpgradeable)"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2328:17:3",
														"memberName": "_upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 447,
														"src": "2302:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "2302:75:3"
											}
										]
									},
									"functionSelector": "4f1ef286",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2204:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 316,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2282:8:3"
									},
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2229:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2221:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2261:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2248:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2248:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:46:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:0:3"
									},
									"scope": 333,
									"src": "2195:190:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "2393:258:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 332,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "2677:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "2657:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 329,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2657:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 331,
										"length": {
											"hexValue": "3530",
											"id": 330,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2665:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "2657:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 334,
							"src": "1744:942:3",
							"usedErrors": []
						}
					],
					"src": "35:2653:3"
				},
				"id": 3
			},
			"packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1302
						],
						"ERC1967UpgradeUpgradeable": [
							657
						],
						"IBeaconUpgradeable": [
							667
						],
						"IERC1822ProxiableUpgradeable": [
							30
						],
						"IERC1967Upgradeable": [
							20
						],
						"Initializable": [
							972
						],
						"StorageSlotUpgradeable": [
							1486
						]
					},
					"id": 658,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "119:23:4"
						},
						{
							"absolutePath": "packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 668,
							"src": "146:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 21,
							"src": "190:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 31,
							"src": "242:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 1303,
							"src": "300:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 1487,
							"src": "346:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/proxy/utils/initializable.sol",
							"file": "../utils/initializable.sol",
							"id": 341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 973,
							"src": "396:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 343,
										"name": "Initializable",
										"nameLocations": [
											"674:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "674:13:4"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "674:13:4"
								},
								{
									"baseName": {
										"id": 345,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"689:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "689:19:4"
									},
									"id": 346,
									"nodeType": "InheritanceSpecifier",
									"src": "689:19:4"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 342,
								"nodeType": "StructuredDocumentation",
								"src": "436:189:4",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 657,
							"linearizedBaseContracts": [
								657,
								20,
								972
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "645:25:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 349,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "821:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "796:108:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 347,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "796:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "838:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "913:218:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 353,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1163:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "1137:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 351,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1137:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1186:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1320:8:4",
										"statements": []
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 355,
												"name": "onlyInitializing",
												"nameLocations": [
													"1303:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "1303:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1303:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "1270:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:2:4"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:0:4"
									},
									"scope": 657,
									"src": "1261:67:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1405:8:4",
										"statements": []
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 362,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 361,
												"name": "onlyInitializing",
												"nameLocations": [
													"1388:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "1388:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1388:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "1345:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1376:2:4"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:0:4"
									},
									"scope": 657,
									"src": "1336:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1556:91:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 373,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "1612:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 371,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "1574:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1597:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "1574:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1382_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1574:59:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1634:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1381,
													"src": "1574:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 370,
												"id": 376,
												"nodeType": "Return",
												"src": "1567:72:4"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1419:69:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1503:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1521:2:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1547:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:9:4"
									},
									"scope": 657,
									"src": "1494:153:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "1806:221:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 387,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "1855:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 385,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "1825:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1844:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 990,
																"src": "1825:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1825:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1875:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1817:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1817:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "1817:106:4"
											},
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 395,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "1972:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 392,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1934:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1957:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1408,
																"src": "1934:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1382_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1934:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1994:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1381,
														"src": "1934:65:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 398,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "2002:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1934:85:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "1934:85:4"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1655:82:4",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1752:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1779:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1771:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:27:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1806:0:4"
									},
									"scope": 657,
									"src": "1743:284:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "2196:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 409,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2226:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 408,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "2207:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2207:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "2207:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 413,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2269:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 412,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2260:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "EmitStatement",
												"src": "2255:32:4"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "2035:99:4",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2149:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2168:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2160:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:27:4"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2196:0:4"
									},
									"scope": 657,
									"src": "2140:155:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "2534:183:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 428,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "2556:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 427,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "2545:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2545:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2545:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 431,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "2589:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2594:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2589:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2603:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2589:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 435,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2608:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2589:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "2585:125:4",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "2619:91:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "2674:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 441,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "2693:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 437,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "2634:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2653:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1189,
																	"src": "2634:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2634:64:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 443,
															"nodeType": "ExpressionStatement",
															"src": "2634:64:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "2303:127:4",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2445:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2471:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2463:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2463:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2503:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2490:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2490:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2514:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2509:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2509:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2462:62:4"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2534:0:4"
									},
									"scope": 657,
									"src": "2436:281:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2998:856:4",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 459,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "3354:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 457,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "3316:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3339:14:4",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1419,
															"src": "3316:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1385_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3316:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3370:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1384,
													"src": "3316:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "3447:400:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 482,
																		"nodeType": "Block",
																		"src": "3553:117:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 478,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 476,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 473,
																								"src": "3580:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 477,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 353,
																								"src": "3588:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3580:28:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 479,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3610:43:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 475,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3572:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 480,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3572:82:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 481,
																				"nodeType": "ExpressionStatement",
																				"src": "3572:82:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 483,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 474,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 473,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3547:4:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 483,
																				"src": "3539:12:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 472,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3539:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3538:14:4"
																	},
																	"src": "3530:140:4"
																},
																{
																	"block": {
																		"id": 488,
																		"nodeType": "Block",
																		"src": "3677:91:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 485,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3703:48:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 484,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3696:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3696:56:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 487,
																				"nodeType": "ExpressionStatement",
																				"src": "3696:56:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 489,
																	"nodeType": "TryCatchClause",
																	"src": "3671:97:4"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 468,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 450,
																				"src": "3495:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 467,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 30,
																			"src": "3466:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$30_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3466:47:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$30",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3514:13:4",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 29,
																	"src": "3466:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3466:63:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 490,
															"nodeType": "TryStatement",
															"src": "3462:306:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 492,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "3800:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 493,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "3819:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 494,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "3825:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 491,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "3782:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3782:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "3782:53:4"
														}
													]
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "3312:535:4",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "3377:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "3411:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 462,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "3392:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3392:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "3392:37:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "2725:165:4",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2905:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2935:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2927:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2927:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2967:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2954:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2954:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2978:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2973:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2973:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2926:62:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2998:0:4"
									},
									"scope": 657,
									"src": "2896:958:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "3862:193:4",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 504,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4087:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "4061:106:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 502,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4061:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 503,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4101:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "4287:82:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 512,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "4343:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 510,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "4305:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4328:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "4305:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1382_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4305:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4356:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1381,
													"src": "4305:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 509,
												"id": 515,
												"nodeType": "Return",
												"src": "4298:63:4"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "4176:52:4",
										"text": " @dev Returns the current admin."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4243:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4252:2:4"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4278:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4277:9:4"
									},
									"scope": 657,
									"src": "4234:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "4501:170:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 524,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "4520:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4540:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4532:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 525,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4532:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4532:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4520:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4544:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4512:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4512:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "4512:73:4"
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 536,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "4634:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 533,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "4596:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4619:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1408,
																"src": "4596:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1382_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4596:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4647:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1381,
														"src": "4596:56:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 539,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4655:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4596:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "4596:67:4"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "4377:73:4",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4465:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4483:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "4475:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4474:18:4"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4501:0:4"
									},
									"scope": 657,
									"src": "4456:215:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "4838:89:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 550,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "4867:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4867:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "4880:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 549,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "4854:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4854:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "EmitStatement",
												"src": "4849:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "4910:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 555,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4900:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "4900:19:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "4679:104:4",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4798:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4819:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "4811:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4811:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4810:18:4"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4838:0:4"
									},
									"scope": 657,
									"src": "4789:138:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "4935:235:4",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 564,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5202:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "5176:107:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 562,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5176:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5217:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "5405:83:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 572,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "5461:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 570,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "5423:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5446:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "5423:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1382_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5423:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5475:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1381,
													"src": "5423:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 569,
												"id": 575,
												"nodeType": "Return",
												"src": "5416:64:4"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "5292:53:4",
										"text": " @dev Returns the current beacon."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5360:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5370:2:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "5396:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5396:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5395:9:4"
									},
									"scope": 657,
									"src": "5351:137:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "5622:375:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 586,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5671:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 584,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "5641:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5660:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 990,
																"src": "5641:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5683:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5633:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5633:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "5633:90:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 595,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 580,
																					"src": "5805:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 594,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "5786:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$667_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5786:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$667",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5816:14:4",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 666,
																		"src": "5786:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5786:46:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 592,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "5756:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5775:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 990,
																"src": "5756:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5756:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5848:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5734:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5734:175:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "5734:175:4"
											},
											{
												"expression": {
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 606,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "5958:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 603,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "5920:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1486_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5943:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1408,
																"src": "5920:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1382_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5920:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5972:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1381,
														"src": "5920:57:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 609,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "5980:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5920:69:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "5920:69:4"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "5496:73:4",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5584:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5603:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5595:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5595:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5594:19:4"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5622:0:4"
									},
									"scope": 657,
									"src": "5575:422:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "6404:245:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6426:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 623,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "6415:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6415:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "6415:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 628,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6467:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 627,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "6452:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6452:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "EmitStatement",
												"src": "6447:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 631,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "6492:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6497:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6492:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6506:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6492:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 635,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "6511:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6492:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 649,
												"nodeType": "IfStatement",
												"src": "6488:154:4",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "6522:120:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 641,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 616,
																						"src": "6596:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 640,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "6577:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$667_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6577:29:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$667",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6607:14:4",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 666,
																			"src": "6577:44:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6577:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 645,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "6625:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 637,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "6537:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6556:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1189,
																	"src": "6537:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6537:93:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 647,
															"nodeType": "ExpressionStatement",
															"src": "6537:93:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "6005:297:4",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6317:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6349:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6341:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6341:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6373:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6360:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6360:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6384:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6379:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6379:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6340:54:4"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6404:0:4"
									},
									"scope": 657,
									"src": "6308:341:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "6657:258:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 656,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "6941:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "6921:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 653,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6921:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 655,
										"length": {
											"hexValue": "3530",
											"id": 654,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6929:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "6921:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 658,
							"src": "627:6323:4",
							"usedErrors": []
						}
					],
					"src": "119:6833:4"
				},
				"id": 4
			},
			"packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							667
						]
					},
					"id": 668,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 659,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "96:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 660,
								"nodeType": "StructuredDocumentation",
								"src": "123:81:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 667,
							"linearizedBaseContracts": [
								667
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "216:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "242:166:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "423:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:2:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "463:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:9:5"
									},
									"scope": 667,
									"src": "414:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 668,
							"src": "206:269:5",
							"usedErrors": []
						}
					],
					"src": "96:381:5"
				},
				"id": 5
			},
			"packages/contracts/src/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1302
						],
						"ERC1967UpgradeUpgradeable": [
							657
						],
						"IBeaconUpgradeable": [
							667
						],
						"IERC1822ProxiableUpgradeable": [
							30
						],
						"IERC1967Upgradeable": [
							20
						],
						"Initializable": [
							972
						],
						"StorageSlotUpgradeable": [
							1486
						],
						"UUPSUpgradeable": [
							803
						]
					},
					"id": 804,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 669,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:6"
						},
						{
							"absolutePath": "packages/contracts/src/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 804,
							"sourceUnit": 31,
							"src": "145:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 804,
							"sourceUnit": 658,
							"src": "203:50:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/proxy/utils/initializable.sol",
							"file": "./initializable.sol",
							"id": 672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 804,
							"sourceUnit": 973,
							"src": "255:29:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 674,
										"name": "Initializable",
										"nameLocations": [
											"986:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "986:13:6"
									},
									"id": 675,
									"nodeType": "InheritanceSpecifier",
									"src": "986:13:6"
								},
								{
									"baseName": {
										"id": 676,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"1001:28:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 30,
										"src": "1001:28:6"
									},
									"id": 677,
									"nodeType": "InheritanceSpecifier",
									"src": "1001:28:6"
								},
								{
									"baseName": {
										"id": 678,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1031:25:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 657,
										"src": "1031:25:6"
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "1031:25:6"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 673,
								"nodeType": "StructuredDocumentation",
								"src": "288:659:6",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 803,
							"linearizedBaseContracts": [
								803,
								657,
								20,
								30,
								972
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "967:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "1124:8:6",
										"statements": []
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 681,
												"name": "onlyInitializing",
												"nameLocations": [
													"1107:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "1107:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1107:16:6"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "1073:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1095:2:6"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:6"
									},
									"scope": 803,
									"src": "1064:68:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "1210:8:6",
										"statements": []
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 688,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 687,
												"name": "onlyInitializing",
												"nameLocations": [
													"1193:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "1193:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1193:16:6"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "1149:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:2:6"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:6"
									},
									"scope": 803,
									"src": "1140:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "1224:87:6",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 698,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1343:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 803,
									"src": "1317:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 693,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1317:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 696,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1360:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$803",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$803",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 695,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1352:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 694,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1352:7:6",
												"typeDescriptions": {}
											}
										},
										"id": 697,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1352:13:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1900:209:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 704,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1927:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$803",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$803",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1919:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 702,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1919:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1919:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 706,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "1936:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1919:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1944:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1911:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "1911:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 712,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "2010:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2010:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 714,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "2034:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2010:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2042:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2002:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2002:87:6"
											},
											{
												"id": 719,
												"nodeType": "PlaceholderStatement",
												"src": "2100:1:6"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1374:499:6",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 721,
									"name": "onlyProxy",
									"nameLocation": "1888:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:2:6"
									},
									"src": "1879:230:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2345:123:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 727,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2372:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$803",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$803",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2364:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 725,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2364:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2364:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 729,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "2381:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2364:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2389:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2356:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:92:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "2356:92:6"
											},
											{
												"id": 734,
												"nodeType": "PlaceholderStatement",
												"src": "2459:1:6"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "2117:198:6",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 736,
									"name": "notDelegated",
									"nameLocation": "2330:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:2:6"
									},
									"src": "2321:147:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										29
									],
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "3153:46:6",
										"statements": [
											{
												"expression": {
													"id": 745,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 353,
													"src": "3171:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 744,
												"id": 746,
												"nodeType": "Return",
												"src": "3164:27:6"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2476:584:6",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 740,
												"name": "notDelegated",
												"nameLocations": [
													"3122:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 736,
												"src": "3122:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3122:12:6"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3075:13:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 739,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3113:8:6"
									},
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3088:2:6"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3144:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3144:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3143:9:6"
									},
									"scope": 803,
									"src": "3066:133:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "3531:127:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 757,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "3560:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 756,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "3542:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3542:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "3542:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "3611:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3640:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3630:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 762,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3634:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3630:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3644:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 760,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3589:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3589:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "3589:61:6"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "3207:247:6",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "3659cfe6",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 754,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 753,
												"name": "onlyProxy",
												"nameLocations": [
													"3521:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "3521:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3521:9:6"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3469:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3487:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3479:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3479:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:27:6"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3531:0:6"
									},
									"scope": 803,
									"src": "3460:198:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "4094:118:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "4123:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 780,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4105:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4105:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "4105:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "4174:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "4193:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4199:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 784,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "4152:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4152:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "4152:52:6"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "3666:317:6",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 778,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 777,
												"name": "onlyProxy",
												"nameLocations": [
													"4084:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "4084:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4084:9:6"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3998:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4023:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4015:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4055:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4042:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4042:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:46:6"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4094:0:6"
									},
									"scope": 803,
									"src": "3989:223:6",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "4220:406:6",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4641:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4667:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4659:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4658:27:6"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4702:0:6"
									},
									"scope": 803,
									"src": "4632:71:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "4711:258:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 802,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4995:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 803,
									"src": "4975:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 799,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4975:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 801,
										"length": {
											"hexValue": "3530",
											"id": 800,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4983:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4975:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 804,
							"src": "949:4055:6",
							"usedErrors": []
						}
					],
					"src": "118:4886:6"
				},
				"id": 6
			},
			"packages/contracts/src/proxy/utils/initializable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/proxy/utils/initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1302
						],
						"Initializable": [
							972
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 805,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:7"
						},
						{
							"absolutePath": "packages/contracts/src/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1303,
							"src": "143:44:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "191:2260:7",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.  \n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972
							],
							"name": "Initializable",
							"nameLocation": "2471:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "2492:112:7",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 810,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2624:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "2610:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 809,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2610:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "2645:93:7",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 813,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2757:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "2744:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 812,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2744:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "2779:92:7",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 818,
									"name": "Initialized",
									"nameLocation": "2883:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2901:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2895:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 815,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2895:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:15:7"
									},
									"src": "2877:33:7"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "3354:498:7",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3370:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 873,
														"src": "3365:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 821,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3365:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3387:14:7",
													"subExpression": {
														"id": 823,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "3388:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3365:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 827,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "3435:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 828,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "3453:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3468:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3453:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3435:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 832,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3434:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3475:45:7",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 837,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3514:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$972",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$972",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 836,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3506:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 835,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3506:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 838,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3506:13:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 833,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1302,
																						"src": "3476:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1302_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 834,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3495:10:7",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 990,
																					"src": "3476:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3476:44:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 841,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "3524:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3540:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3524:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3475:66:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 845,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3474:68:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3434:108:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3557:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3412:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:204:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "3412:204:7"
											},
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 850,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3627:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3642:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3627:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "3627:16:7"
											},
											{
												"condition": {
													"id": 854,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 822,
													"src": "3658:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "3654:67:7",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "3674:47:7",
													"statements": [
														{
															"expression": {
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 855,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "3689:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3705:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3689:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "3689:20:7"
														}
													]
												}
											},
											{
												"id": 861,
												"nodeType": "PlaceholderStatement",
												"src": "3731:1:7"
											},
											{
												"condition": {
													"id": 862,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 822,
													"src": "3747:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "3743:102:7",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "3763:82:7",
													"statements": [
														{
															"expression": {
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 863,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "3778:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3794:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3778:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 866,
															"nodeType": "ExpressionStatement",
															"src": "3778:21:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3831:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 867,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "3819:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3819:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "EmitStatement",
															"src": "3814:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "2918:407:7",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 874,
									"name": "initializer",
									"nameLocation": "3340:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3351:2:7"
									},
									"src": "3331:521:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "4983:262:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5002:14:7",
																"subExpression": {
																	"id": 880,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "5003:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "5020:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 883,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "5035:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5020:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5002:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5044:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4994:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:99:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "4994:99:7"
											},
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 889,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "5104:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 890,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "5119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5104:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "5104:22:7"
											},
											{
												"expression": {
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 893,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "5137:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5153:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5137:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "5137:20:7"
											},
											{
												"id": 897,
												"nodeType": "PlaceholderStatement",
												"src": "5168:1:7"
											},
											{
												"expression": {
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 898,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "5180:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5196:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5180:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "5180:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 903,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "5229:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 902,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "5217:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "EmitStatement",
												"src": "5212:25:7"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "3860:1079:7",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 907,
									"name": "reinitializer",
									"nameLocation": "4954:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4974:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "4968:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 876,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4968:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4967:15:7"
									},
									"src": "4945:300:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "5489:100:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 911,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "5508:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5523:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5500:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5500:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "5500:69:7"
											},
											{
												"id": 915,
												"nodeType": "PlaceholderStatement",
												"src": "5580:1:7"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "5253:202:7",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 917,
									"name": "onlyInitializing",
									"nameLocation": "5470:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5486:2:7"
									},
									"src": "5461:128:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "6134:237:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6153:14:7",
															"subExpression": {
																"id": 922,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "6154:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6169:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6145:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "6145:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 927,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "6226:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6247:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6247:5:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 928,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6242:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6242:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6254:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6242:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6226:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "6222:142:7",
												"trueBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "6259:105:7",
													"statements": [
														{
															"expression": {
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 934,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "6274:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6294:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 936,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6294:5:7",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 935,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6289:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:11:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6301:3:7",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6289:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6274:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 941,
															"nodeType": "ExpressionStatement",
															"src": "6274:30:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 945,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6341:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 944,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6341:5:7",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 943,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6336:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6336:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6348:3:7",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6336:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 942,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "6324:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6324:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 949,
															"nodeType": "EmitStatement",
															"src": "6319:33:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "5597:482:7",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "6094:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6114:2:7"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6134:0:7"
									},
									"scope": 972,
									"src": "6085:286:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "6550:38:7",
										"statements": [
											{
												"expression": {
													"id": 959,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 810,
													"src": "6568:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 958,
												"id": 960,
												"nodeType": "Return",
												"src": "6561:19:7"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "6379:101:7",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6495:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6517:2:7"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "6543:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 956,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6543:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6542:7:7"
									},
									"scope": 972,
									"src": "6486:102:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "6765:39:7",
										"statements": [
											{
												"expression": {
													"id": 968,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 813,
													"src": "6783:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 967,
												"id": 969,
												"nodeType": "Return",
												"src": "6776:20:7"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "6596:107:7",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6718:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6733:2:7"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "6759:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6759:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6758:6:7"
									},
									"scope": 972,
									"src": "6709:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 973,
							"src": "2453:4354:7",
							"usedErrors": []
						}
					],
					"src": "116:6691:7"
				},
				"id": 7
			},
			"packages/contracts/src/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1302
						]
					},
					"id": 1303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 975,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1302,
							"linearizedBaseContracts": [
								1302
							],
							"name": "AddressUpgradeable",
							"nameLocation": "210:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "1528:260:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 983,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "1757:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1765:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1757:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1770:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1757:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1779:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1757:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 982,
												"id": 988,
												"nodeType": "Return",
												"src": "1750:30:8"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "236:1220:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1471:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1490:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1482:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:17:8"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1522:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 980,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1522:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1521:6:8"
									},
									"scope": 1302,
									"src": "1462:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "2792:246:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1001,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2819:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1302",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1302",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2811:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 999,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2811:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2811:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2825:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2811:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1004,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "2836:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2811:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2844:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2803:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2803:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "2803:73:8"
											},
											{
												"assignments": [
													1010,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2895:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1023,
														"src": "2890:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1009,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2890:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1017,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2938:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1011,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "2908:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2918:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2908:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1013,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "2930:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2908:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1019,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2960:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2969:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2952:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2952:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "2952:78:8"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1796:919:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2730:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2756:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2740:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2740:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2775:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2767:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:43:8"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2792:0:8"
									},
									"scope": 1302,
									"src": "2721:317:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "3889:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1035,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3929:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "3937:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3943:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3946:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1034,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1082,
															1126
														],
														"referencedDeclaration": 1126,
														"src": "3907:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3907:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1040,
												"nodeType": "Return",
												"src": "3900:79:8"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "3046:748:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3809:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3830:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "3822:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3851:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "3838:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3838:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3821:35:8"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "3875:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3875:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:14:8"
									},
									"scope": 1302,
									"src": "3800:187:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "4368:78:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1055,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "4408:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "4416:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4422:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1058,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "4425:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1054,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1082,
															1126
														],
														"referencedDeclaration": 1126,
														"src": "4386:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4386:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1060,
												"nodeType": "Return",
												"src": "4379:59:8"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "3995:216:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4226:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4257:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4249:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4249:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4287:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4274:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4274:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4316:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4302:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1048,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4302:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:97:8"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4354:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1051,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4354:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4353:14:8"
									},
									"scope": 1302,
									"src": "4217:229:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "4934:113:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "4974:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "4982:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1077,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "4988:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4995:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1074,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1082,
															1126
														],
														"referencedDeclaration": 1126,
														"src": "4952:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4952:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1080,
												"nodeType": "Return",
												"src": "4945:94:8"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "4454:361:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4830:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4860:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4852:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4852:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4881:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4868:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1066,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4868:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4895:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4887:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4851:50:8"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4920:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4920:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:14:8"
									},
									"scope": 1302,
									"src": "4821:226:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "5487:271:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1099,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5514:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1302",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1302",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5506:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1097,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5506:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5506:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5520:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5506:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1102,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "5531:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5506:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5538:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5498:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "5498:81:8"
											},
											{
												"assignments": [
													1108,
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5596:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "5591:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1107,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5591:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5618:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "5605:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1109,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5605:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"arguments": [
														{
															"id": 1115,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "5658:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1111,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "5632:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5639:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5632:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "5651:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5632:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5632:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5590:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1119,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "5708:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "5716:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1121,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "5725:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1122,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5737:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1118,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "5681:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5681:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1095,
												"id": 1124,
												"nodeType": "Return",
												"src": "5674:76:8"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "5055:242:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5312:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5352:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "5344:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5382:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "5369:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5369:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5405:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "5397:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5435:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "5421:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1090,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5421:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5333:121:8"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "5473:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5473:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:14:8"
									},
									"scope": 1302,
									"src": "5303:455:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "6043:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1137,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "6080:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "6088:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6094:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1136,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1143,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "6061:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6061:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1135,
												"id": 1141,
												"nodeType": "Return",
												"src": "6054:80:8"
											}
										]
									},
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "5766:171:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5952:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5979:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "5971:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6000:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "5987:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5987:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5970:35:8"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6029:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6029:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6028:14:8"
									},
									"scope": 1302,
									"src": "5943:199:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "6496:171:8",
										"statements": [
											{
												"assignments": [
													1156,
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6513:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1171,
														"src": "6508:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1155,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6508:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6535:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1171,
														"src": "6522:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1157,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6522:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"arguments": [
														{
															"id": 1161,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "6567:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1159,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "6549:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6556:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6549:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6507:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "6617:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "6625:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1167,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "6634:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1168,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "6646:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1164,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "6590:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6590:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1170,
												"nodeType": "Return",
												"src": "6583:76:8"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "6150:178:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6343:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6380:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "6372:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6372:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6410:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "6397:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6397:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6439:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "6425:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6425:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6361:97:8"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "6482:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6482:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6481:14:8"
									},
									"scope": 1302,
									"src": "6334:333:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "6951:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1183,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "6990:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1184,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "6998:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7004:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1182,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1189,
															1218
														],
														"referencedDeclaration": 1218,
														"src": "6969:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6969:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1181,
												"id": 1187,
												"nodeType": "Return",
												"src": "6962:84:8"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "6675:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6863:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6892:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "6884:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6884:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6913:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "6900:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6900:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6883:35:8"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "6937:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6937:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6936:14:8"
									},
									"scope": 1302,
									"src": "6854:200:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "7407:173:8",
										"statements": [
											{
												"assignments": [
													1202,
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7424:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "7419:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1201,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7419:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7446:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "7433:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1203,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7433:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1209,
												"initialValue": {
													"arguments": [
														{
															"id": 1207,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "7480:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1205,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "7460:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7467:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7460:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7460:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7418:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "7530:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "7538:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1213,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7547:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1214,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "7559:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1210,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "7503:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7503:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1216,
												"nodeType": "Return",
												"src": "7496:76:8"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "7062:180:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7257:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7296:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "7288:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7326:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "7313:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7313:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7355:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "7341:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7341:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7277:97:8"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "7393:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7393:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7392:14:8"
									},
									"scope": 1302,
									"src": "7248:332:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "8075:445:8",
										"statements": [
											{
												"condition": {
													"id": 1232,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1223,
													"src": "8090:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1254,
													"nodeType": "Block",
													"src": "8453:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1250,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "8476:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "8488:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1249,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "8468:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8468:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1253,
															"nodeType": "ExpressionStatement",
															"src": "8468:33:8"
														}
													]
												},
												"id": 1255,
												"nodeType": "IfStatement",
												"src": "8086:427:8",
												"trueBody": {
													"id": 1248,
													"nodeType": "Block",
													"src": "8099:348:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1233,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "8118:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8129:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8118:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8139:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8118:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1245,
															"nodeType": "IfStatement",
															"src": "8114:290:8",
															"trueBody": {
																"id": 1244,
																"nodeType": "Block",
																"src": "8142:262:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1239,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1221,
																							"src": "8347:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1238,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 990,
																						"src": "8336:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8336:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8356:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1237,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8328:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8328:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1243,
																		"nodeType": "ExpressionStatement",
																		"src": "8328:60:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1246,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "8425:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1231,
															"id": 1247,
															"nodeType": "Return",
															"src": "8418:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "7588:282:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7885:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7930:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "7922:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7922:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "7947:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7947:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7983:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "7970:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7970:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8018:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "8004:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8004:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7911:126:8"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "8061:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8061:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8060:14:8"
									},
									"scope": 1302,
									"src": "7876:644:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "8913:141:8",
										"statements": [
											{
												"condition": {
													"id": 1269,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1260,
													"src": "8928:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1278,
													"nodeType": "Block",
													"src": "8987:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1274,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "9010:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1275,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "9022:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1273,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "9002:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9002:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1277,
															"nodeType": "ExpressionStatement",
															"src": "9002:33:8"
														}
													]
												},
												"id": 1279,
												"nodeType": "IfStatement",
												"src": "8924:123:8",
												"trueBody": {
													"id": 1272,
													"nodeType": "Block",
													"src": "8937:44:8",
													"statements": [
														{
															"expression": {
																"id": 1270,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "8959:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1268,
															"id": 1271,
															"nodeType": "Return",
															"src": "8952:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "8528:215:8",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8758:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8790:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "8785:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8785:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8821:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "8808:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8808:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8856:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "8842:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8842:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8774:101:8"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "8899:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8899:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8898:14:8"
									},
									"scope": 1302,
									"src": "8749:305:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "9145:469:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1288,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "9223:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9234:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9223:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9243:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9223:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1298,
													"nodeType": "Block",
													"src": "9560:47:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1295,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "9582:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1294,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9575:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9575:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1297,
															"nodeType": "ExpressionStatement",
															"src": "9575:20:8"
														}
													]
												},
												"id": 1299,
												"nodeType": "IfStatement",
												"src": "9219:388:8",
												"trueBody": {
													"id": 1293,
													"nodeType": "Block",
													"src": "9246:308:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9407:136:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9426:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9455:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9449:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9449:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9430:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9495:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9499:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9491:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9491:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9512:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9484:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9484:44:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9484:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1283,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9455:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1283,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9499:10:8",
																	"valueSize": 1
																}
															],
															"id": 1292,
															"nodeType": "InlineAssembly",
															"src": "9398:145:8"
														}
													]
												}
											}
										]
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "9071:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "9092:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "9079:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9079:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9118:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "9104:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9104:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9078:53:8"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9145:0:8"
									},
									"scope": 1302,
									"src": "9062:552:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1303,
							"src": "202:9415:8",
							"usedErrors": []
						}
					],
					"src": "104:9513:8"
				},
				"id": 8
			},
			"packages/contracts/src/utils/CountersUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/CountersUpgradeable.sol",
					"exportedSymbols": {
						"CountersUpgradeable": [
							1376
						]
					},
					"id": 1377,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CountersUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1305,
								"nodeType": "StructuredDocumentation",
								"src": "117:318:9",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1376,
							"linearizedBaseContracts": [
								1376
							],
							"name": "CountersUpgradeable",
							"nameLocation": "445:19:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CountersUpgradeable.Counter",
									"id": 1308,
									"members": [
										{
											"constant": false,
											"id": 1307,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "823:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1308,
											"src": "815:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1306,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "815:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "479:7:9",
									"nodeType": "StructDefinition",
									"scope": 1376,
									"src": "472:379:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "933:40:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1316,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "951:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
															"typeString": "struct CountersUpgradeable.Counter storage pointer"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "959:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1307,
													"src": "951:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1318,
												"nodeType": "Return",
												"src": "944:21:9"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "868:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "892:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "876:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 1310,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1309,
														"name": "Counter",
														"nameLocations": [
															"876:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "876:7:9"
													},
													"referencedDeclaration": 1308,
													"src": "876:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:25:9"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "924:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:9:9"
									},
									"scope": 1376,
									"src": "859:114:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "1034:74:9",
										"statements": [
											{
												"id": 1332,
												"nodeType": "UncheckedBlock",
												"src": "1045:56:9",
												"statements": [
													{
														"expression": {
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1326,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "1070:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
																		"typeString": "struct CountersUpgradeable.Counter storage pointer"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1078:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1307,
																"src": "1070:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1088:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1070:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1331,
														"nodeType": "ExpressionStatement",
														"src": "1070:19:9"
													}
												]
											}
										]
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "990:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1016:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "1000:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 1322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1321,
														"name": "Counter",
														"nameLocations": [
															"1000:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "1000:7:9"
													},
													"referencedDeclaration": 1308,
													"src": "1000:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:25:9"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:9"
									},
									"scope": 1376,
									"src": "981:127:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "1169:182:9",
										"statements": [
											{
												"assignments": [
													1341
												],
												"declarations": [
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1188:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1361,
														"src": "1180:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1180:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"expression": {
														"id": 1342,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "1196:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
															"typeString": "struct CountersUpgradeable.Counter storage pointer"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1204:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1307,
													"src": "1196:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1180:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1346,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "1229:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1237:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1229:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1221:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "1221:49:9"
											},
											{
												"id": 1360,
												"nodeType": "UncheckedBlock",
												"src": "1281:63:9",
												"statements": [
													{
														"expression": {
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1352,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "1306:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
																		"typeString": "struct CountersUpgradeable.Counter storage pointer"
																	}
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1314:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1307,
																"src": "1306:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1355,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "1323:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1331:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1323:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1306:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1359,
														"nodeType": "ExpressionStatement",
														"src": "1306:26:9"
													}
												]
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1125:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1151:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1135:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 1336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1335,
														"name": "Counter",
														"nameLocations": [
															"1135:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "1135:7:9"
													},
													"referencedDeclaration": 1308,
													"src": "1135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:25:9"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1169:0:9"
									},
									"scope": 1376,
									"src": "1116:235:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "1408:37:9",
										"statements": [
											{
												"expression": {
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1368,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "1419:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
																"typeString": "struct CountersUpgradeable.Counter storage pointer"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1427:6:9",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1307,
														"src": "1419:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1436:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1419:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "1419:18:9"
											}
										]
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1368:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1390:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1374:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 1364,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1363,
														"name": "Counter",
														"nameLocations": [
															"1374:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "1374:7:9"
													},
													"referencedDeclaration": 1308,
													"src": "1374:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1308_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:25:9"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1408:0:9"
									},
									"scope": 1376,
									"src": "1359:86:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1377,
							"src": "437:1011:9",
							"usedErrors": []
						}
					],
					"src": "90:1358:9"
				},
				"id": 9
			},
			"packages/contracts/src/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1378,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "197:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1379,
								"nodeType": "StructuredDocumentation",
								"src": "224:1227:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1461:22:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 1382,
									"members": [
										{
											"constant": false,
											"id": 1381,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1529:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1382,
											"src": "1521:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1521:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1498:11:10",
									"nodeType": "StructDefinition",
									"scope": 1486,
									"src": "1491:51:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 1385,
									"members": [
										{
											"constant": false,
											"id": 1384,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1585:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1385,
											"src": "1580:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1383,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1580:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1557:11:10",
									"nodeType": "StructDefinition",
									"scope": 1486,
									"src": "1550:48:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 1388,
									"members": [
										{
											"constant": false,
											"id": 1387,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1644:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1388,
											"src": "1636:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1386,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1636:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1613:11:10",
									"nodeType": "StructDefinition",
									"scope": 1486,
									"src": "1606:51:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 1391,
									"members": [
										{
											"constant": false,
											"id": 1390,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1703:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "1695:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1389,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1695:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1672:11:10",
									"nodeType": "StructDefinition",
									"scope": 1486,
									"src": "1665:51:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.StringSlot",
									"id": 1394,
									"members": [
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1760:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1394,
											"src": "1753:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1392,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1753:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1731:10:10",
									"nodeType": "StructDefinition",
									"scope": 1486,
									"src": "1724:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BytesSlot",
									"id": 1397,
									"members": [
										{
											"constant": false,
											"id": 1396,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1815:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "1809:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1395,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1809:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1788:9:10",
									"nodeType": "StructDefinition",
									"scope": 1486,
									"src": "1781:47:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "2015:111:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2079:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2094:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2104:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1404,
														"isOffset": false,
														"isSlot": true,
														"src": "2094:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1400,
														"isOffset": false,
														"isSlot": false,
														"src": "2104:4:10",
														"valueSize": 1
													}
												],
												"id": 1406,
												"nodeType": "InlineAssembly",
												"src": "2070:49:10"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "1836:89:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1940:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1963:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "1955:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1399,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1954:14:10"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2012:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "1992:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 1403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1402,
														"name": "AddressSlot",
														"nameLocations": [
															"1992:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1382,
														"src": "1992:11:10"
													},
													"referencedDeclaration": 1382,
													"src": "1992:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1382_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:23:10"
									},
									"scope": 1486,
									"src": "1931:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "2313:111:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2377:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2392:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2402:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2392:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1415,
														"isOffset": false,
														"isSlot": true,
														"src": "2392:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1411,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:4:10",
														"valueSize": 1
													}
												],
												"id": 1417,
												"nodeType": "InlineAssembly",
												"src": "2368:49:10"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "2134:89:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2238:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2261:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2253:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:14:10"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2310:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2290:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 1414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1413,
														"name": "BooleanSlot",
														"nameLocations": [
															"2290:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1385,
														"src": "2290:11:10"
													},
													"referencedDeclaration": 1385,
													"src": "2290:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1385_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:23:10"
									},
									"scope": 1486,
									"src": "2229:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "2611:111:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2675:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2690:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2700:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1426,
														"isOffset": false,
														"isSlot": true,
														"src": "2690:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1422,
														"isOffset": false,
														"isSlot": false,
														"src": "2700:4:10",
														"valueSize": 1
													}
												],
												"id": 1428,
												"nodeType": "InlineAssembly",
												"src": "2666:49:10"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "2432:89:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2536:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2559:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "2551:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:14:10"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2608:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "2588:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1388_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2588:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1388,
														"src": "2588:11:10"
													},
													"referencedDeclaration": 1388,
													"src": "2588:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1388_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:23:10"
									},
									"scope": 1486,
									"src": "2527:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "2909:111:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2973:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2988:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2998:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2988:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1437,
														"isOffset": false,
														"isSlot": true,
														"src": "2988:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "2998:4:10",
														"valueSize": 1
													}
												],
												"id": 1439,
												"nodeType": "InlineAssembly",
												"src": "2964:49:10"
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "2730:89:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2834:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2857:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2849:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1432,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2848:14:10"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2906:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2886:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1391_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 1436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1435,
														"name": "Uint256Slot",
														"nameLocations": [
															"2886:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1391,
														"src": "2886:11:10"
													},
													"referencedDeclaration": 1391,
													"src": "2886:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1391_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:23:10"
									},
									"scope": 1486,
									"src": "2825:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "3204:111:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3268:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3283:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3293:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1448,
														"isOffset": false,
														"isSlot": true,
														"src": "3283:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1444,
														"isOffset": false,
														"isSlot": false,
														"src": "3293:4:10",
														"valueSize": 1
													}
												],
												"id": 1450,
												"nodeType": "InlineAssembly",
												"src": "3259:49:10"
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3028:88:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3131:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3153:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3145:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3144:14:10"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3201:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3182:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1394_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 1447,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1446,
														"name": "StringSlot",
														"nameLocations": [
															"3182:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1394,
														"src": "3182:10:10"
													},
													"referencedDeclaration": 1394,
													"src": "3182:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1394_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3181:22:10"
									},
									"scope": 1486,
									"src": "3122:193:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "3522:117:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3586:46:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3601:20:10",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3611:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3601:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1459,
														"isOffset": false,
														"isSlot": true,
														"src": "3601:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1455,
														"isOffset": false,
														"isSlot": true,
														"src": "3611:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1461,
												"nodeType": "InlineAssembly",
												"src": "3577:55:10"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "3323:103:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3441:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3470:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "3455:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3455:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:22:10"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3519:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "3500:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1394_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 1458,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1457,
														"name": "StringSlot",
														"nameLocations": [
															"3500:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1394,
														"src": "3500:10:10"
													},
													"referencedDeclaration": 1394,
													"src": "3500:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1394_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:22:10"
									},
									"scope": 1486,
									"src": "3432:207:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "3820:111:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3884:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3899:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3909:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3899:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1470,
														"isOffset": false,
														"isSlot": true,
														"src": "3899:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1466,
														"isOffset": false,
														"isSlot": false,
														"src": "3909:4:10",
														"valueSize": 1
													}
												],
												"id": 1472,
												"nodeType": "InlineAssembly",
												"src": "3875:49:10"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "3647:87:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3749:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3770:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3762:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3762:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:14:10"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3817:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3799:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1397_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 1469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1468,
														"name": "BytesSlot",
														"nameLocations": [
															"3799:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1397,
														"src": "3799:9:10"
													},
													"referencedDeclaration": 1397,
													"src": "3799:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1397_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3798:21:10"
									},
									"scope": 1486,
									"src": "3740:191:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "4133:117:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4197:46:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4212:20:10",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4222:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4212:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1481,
														"isOffset": false,
														"isSlot": true,
														"src": "4212:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1477,
														"isOffset": false,
														"isSlot": true,
														"src": "4222:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1483,
												"nodeType": "InlineAssembly",
												"src": "4188:55:10"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "3939:101:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4055:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4082:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4068:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4068:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4067:21:10"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4130:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4112:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1397_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 1480,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1479,
														"name": "BytesSlot",
														"nameLocations": [
															"4112:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1397,
														"src": "4112:9:10"
													},
													"referencedDeclaration": 1397,
													"src": "4112:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1397_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4111:21:10"
									},
									"scope": 1486,
									"src": "4046:204:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "1453:2800:10",
							"usedErrors": []
						}
					],
					"src": "197:4058:10"
				},
				"id": 10
			}
		}
	}
}