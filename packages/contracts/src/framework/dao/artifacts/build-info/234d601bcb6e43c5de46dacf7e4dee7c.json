{
	"id": "234d601bcb6e43c5de46dacf7e4dee7c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/contracts/src/framework/dao/DAORegistry.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {ProtocolVersion} from \"../../utils/protocol/ProtocolVersion.sol\";\r\nimport {IDAO} from \"../../core/dao/IDAO.sol\";\r\nimport {ENSSubdomainRegistrar} from \"../utils/ens/ENSSubdomainRegistrar.sol\";\r\nimport {InterfaceBasedRegistry} from \"../utils/InterfaceBasedRegistry.sol\";\r\nimport {isSubdomainValid} from \"../utils/RegistryUtils.sol\";\r\n\r\n/// @title Register your unique DAO subdomain\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice This contract provides the possibility to register a DAO.\r\n/// @custom:security-contact sirt@aragon.org\r\ncontract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {\r\n    /// @notice The ID of the permission required to call the `register` function.\r\n    bytes32 public constant REGISTER_DAO_PERMISSION_ID = keccak256(\"REGISTER_DAO_PERMISSION\");\r\n\r\n    /// @notice The ENS subdomain registrar registering the DAO subdomains.\r\n    ENSSubdomainRegistrar public subdomainRegistrar;\r\n\r\n    /// @notice Thrown if the DAO subdomain doesn't match the regex `[0-9a-z\\-]`\r\n    error InvalidDaoSubdomain(string subdomain);\r\n\r\n    /// @notice Emitted when a new DAO is registered.\r\n    /// @param dao The address of the DAO contract.\r\n    /// @param creator The address of the creator.\r\n    /// @param subdomain The DAO subdomain.\r\n    event DAORegistered(address indexed dao, address indexed creator, string subdomain);\r\n\r\n    /// @dev Used to disallow initializing the implementation contract by an attacker for extra safety.\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    /// @notice Initializes the contract.\r\n    /// @param _managingDao the managing DAO address.\r\n    /// @param _subdomainRegistrar The `ENSSubdomainRegistrar` where `ENS` subdomain will be registered.\r\n    function initialize(\r\n        IDAO _managingDao,\r\n        ENSSubdomainRegistrar _subdomainRegistrar\r\n    ) external initializer {\r\n        __InterfaceBasedRegistry_init(_managingDao, type(IDAO).interfaceId);\r\n        subdomainRegistrar = _subdomainRegistrar;\r\n    }\r\n\r\n    /// @notice Registers a DAO by its address. If a non-empty subdomain name is provided that is not taken already, the DAO becomes the owner of the ENS name.\r\n    /// @dev A subdomain is unique within the Aragon DAO framework and can get stored here.\r\n    /// @param dao The address of the DAO contract.\r\n    /// @param creator The address of the creator.\r\n    /// @param subdomain The DAO subdomain.\r\n    function register(\r\n        IDAO dao,\r\n        address creator,\r\n        string calldata subdomain\r\n    ) external auth(REGISTER_DAO_PERMISSION_ID) {\r\n        address daoAddr = address(dao);\r\n\r\n        _register(daoAddr);\r\n\r\n        if ((bytes(subdomain).length > 0)) {\r\n            if (!isSubdomainValid(subdomain)) {\r\n                revert InvalidDaoSubdomain({subdomain: subdomain});\r\n            }\r\n\r\n            bytes32 labelhash = keccak256(bytes(subdomain));\r\n\r\n            subdomainRegistrar.registerSubnode(labelhash, daoAddr);\r\n        }\r\n\r\n        emit DAORegistered(daoAddr, creator, subdomain);\r\n    }\r\n\r\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\r\n    uint256[49] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/framework/utils/RegistryUtils.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @notice Validates that a subdomain name is composed only from characters in the allowed character set:\r\n/// - the lowercase letters `a-z`\r\n/// - the digits `0-9`\r\n/// - the hyphen `-`\r\n/// @dev This function allows empty (zero-length) subdomains. If this should not be allowed, make sure to add a respective check when using this function in your code.\r\n/// @param subDomain The name of the DAO.\r\n/// @return `true` if the name is valid or `false` if at least one char is invalid.\r\n/// @dev Aborts on the first invalid char found.\r\n/// @custom:security-contact sirt@aragon.org\r\nfunction isSubdomainValid(string calldata subDomain) pure returns (bool) {\r\n    bytes calldata nameBytes = bytes(subDomain);\r\n    uint256 nameLength = nameBytes.length;\r\n    for (uint256 i; i < nameLength; i++) {\r\n        uint8 char = uint8(nameBytes[i]);\r\n\r\n        // if char is between a-z\r\n        if (char > 96 && char < 123) {\r\n            continue;\r\n        }\r\n\r\n        // if char is between 0-9\r\n        if (char > 47 && char < 58) {\r\n            continue;\r\n        }\r\n\r\n        // if char is -\r\n        if (char == 45) {\r\n            continue;\r\n        }\r\n\r\n        // invalid if one char doesn't work with the rules above\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n"
			},
			"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {ERC165CheckerUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\";\r\n\r\nimport {DaoAuthorizableUpgradeable} from \"../../core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\";\r\nimport {IDAO} from \"../../core/dao/IDAO.sol\";\r\n\r\n/// @title InterfaceBasedRegistry\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice An [ERC-165](https://eips.ethereum.org/EIPS/eip-165)-based registry for contracts.\r\n/// @custom:security-contact sirt@aragon.org\r\nabstract contract InterfaceBasedRegistry is UUPSUpgradeable, DaoAuthorizableUpgradeable {\r\n    using ERC165CheckerUpgradeable for address;\r\n\r\n    /// @notice The ID of the permission required to call the `_authorizeUpgrade` function.\r\n    bytes32 public constant UPGRADE_REGISTRY_PERMISSION_ID =\r\n        keccak256(\"UPGRADE_REGISTRY_PERMISSION\");\r\n\r\n    /// @notice The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support.\r\n    bytes4 public targetInterfaceId;\r\n\r\n    /// @notice The mapping containing the registry entries returning true for registered contract addresses.\r\n    mapping(address => bool) public entries;\r\n\r\n    /// @notice Thrown if the contract is already registered.\r\n    /// @param registrant The address of the contract to be registered.\r\n    error ContractAlreadyRegistered(address registrant);\r\n\r\n    /// @notice Thrown if the contract does not support the required interface.\r\n    /// @param registrant The address of the contract to be registered.\r\n    error ContractInterfaceInvalid(address registrant);\r\n\r\n    /// @notice Thrown if the contract does not support ERC165.\r\n    /// @param registrant The address of the contract.\r\n    error ContractERC165SupportInvalid(address registrant);\r\n\r\n    /// @notice Initializes the component.\r\n    /// @dev This is required for the UUPS upgradability pattern.\r\n    /// @param _managingDao The interface of the DAO managing the components permissions.\r\n    /// @param _targetInterfaceId The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface id of the contracts to be registered.\r\n    function __InterfaceBasedRegistry_init(\r\n        IDAO _managingDao,\r\n        bytes4 _targetInterfaceId\r\n    ) internal virtual onlyInitializing {\r\n        __DaoAuthorizableUpgradeable_init(_managingDao);\r\n\r\n        targetInterfaceId = _targetInterfaceId;\r\n    }\r\n\r\n    /// @notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\r\n    /// @dev The caller must have the `UPGRADE_REGISTRY_PERMISSION_ID` permission.\r\n    function _authorizeUpgrade(\r\n        address\r\n    ) internal virtual override auth(UPGRADE_REGISTRY_PERMISSION_ID) {}\r\n\r\n    /// @notice Register an [ERC-165](https://eips.ethereum.org/EIPS/eip-165) contract address.\r\n    /// @dev The managing DAO needs to grant REGISTER_PERMISSION_ID to registrar.\r\n    /// @param _registrant The address of an [ERC-165](https://eips.ethereum.org/EIPS/eip-165) contract.\r\n    function _register(address _registrant) internal {\r\n        if (entries[_registrant]) {\r\n            revert ContractAlreadyRegistered({registrant: _registrant});\r\n        }\r\n\r\n        // Will revert if address is not a contract or doesn't fully support targetInterfaceId + ERC165.\r\n        if (!_registrant.supportsInterface(targetInterfaceId)) {\r\n            revert ContractInterfaceInvalid(_registrant);\r\n        }\r\n\r\n        entries[_registrant] = true;\r\n    }\r\n\r\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\r\n    uint256[48] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport \"@ensdomains/ens-contracts/contracts/registry/ENS.sol\";\r\nimport \"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol\";\r\n\r\nimport {ProtocolVersion} from \"../../../utils/protocol/ProtocolVersion.sol\";\r\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {DaoAuthorizableUpgradeable} from \"../../../core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\";\r\nimport {IDAO} from \"../../../core/dao/IDAO.sol\";\r\n\r\n/// @title ENSSubdomainRegistrar\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice This contract registers ENS subdomains under a parent domain specified in the initialization process and maintains ownership of the subdomain since only the resolver address is set. This contract must either be the domain node owner or an approved operator of the node owner. The default resolver being used is the one specified in the parent domain.\r\n/// @custom:security-contact sirt@aragon.org\r\ncontract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {\r\n    /// @notice The ID of the permission required to call the `_authorizeUpgrade` function.\r\n    bytes32 public constant UPGRADE_REGISTRAR_PERMISSION_ID =\r\n        keccak256(\"UPGRADE_REGISTRAR_PERMISSION\");\r\n\r\n    /// @notice The ID of the permission required to call the `registerSubnode` and `setDefaultResolver` function.\r\n    bytes32 public constant REGISTER_ENS_SUBDOMAIN_PERMISSION_ID =\r\n        keccak256(\"REGISTER_ENS_SUBDOMAIN_PERMISSION\");\r\n\r\n    /// @notice The ENS registry contract\r\n    ENS public ens;\r\n\r\n    /// @notice The namehash of the domain on which subdomains are registered.\r\n    bytes32 public node;\r\n\r\n    /// @notice The address of the ENS resolver resolving the names to an address.\r\n    address public resolver;\r\n\r\n    /// @notice Thrown if the subnode is already registered.\r\n    /// @param subnode The subnode namehash.\r\n    /// @param nodeOwner The node owner address.\r\n    error AlreadyRegistered(bytes32 subnode, address nodeOwner);\r\n\r\n    /// @notice Thrown if node's resolver is invalid.\r\n    /// @param node The node namehash.\r\n    /// @param resolver The node resolver address.\r\n    error InvalidResolver(bytes32 node, address resolver);\r\n\r\n    /// @dev Used to disallow initializing the implementation contract by an attacker for extra safety.\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    /// @notice Initializes the component by\r\n    /// - checking that the contract is the domain node owner or an approved operator\r\n    /// - initializing the underlying component\r\n    /// - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID\r\n    /// - setting the ENS contract, the domain node hash, and resolver.\r\n    /// @param _managingDao The interface of the DAO managing the components permissions.\r\n    /// @param _ens The interface of the ENS registry to be used.\r\n    /// @param _node The ENS parent domain node under which the subdomains are to be registered.\r\n    function initialize(IDAO _managingDao, ENS _ens, bytes32 _node) external initializer {\r\n        __DaoAuthorizableUpgradeable_init(_managingDao);\r\n\r\n        ens = _ens;\r\n        node = _node;\r\n\r\n        address nodeResolver = ens.resolver(_node);\r\n\r\n        if (nodeResolver == address(0)) {\r\n            revert InvalidResolver({node: _node, resolver: nodeResolver});\r\n        }\r\n\r\n        resolver = nodeResolver;\r\n    }\r\n\r\n    /// @notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\r\n    /// @dev The caller must have the `UPGRADE_REGISTRAR_PERMISSION_ID` permission.\r\n    function _authorizeUpgrade(\r\n        address\r\n    ) internal virtual override auth(UPGRADE_REGISTRAR_PERMISSION_ID) {}\r\n\r\n    /// @notice Registers a new subdomain with this registrar as the owner and set the target address in the resolver.\r\n    /// @dev It reverts with no message if this contract isn't the owner nor an approved operator for the given node.\r\n    /// @param _label The labelhash of the subdomain name.\r\n    /// @param _targetAddress The address to which the subdomain resolves.\r\n    function registerSubnode(\r\n        bytes32 _label,\r\n        address _targetAddress\r\n    ) external auth(REGISTER_ENS_SUBDOMAIN_PERMISSION_ID) {\r\n        bytes32 subnode = keccak256(abi.encodePacked(node, _label));\r\n        address currentOwner = ens.owner(subnode);\r\n\r\n        if (currentOwner != address(0)) {\r\n            revert AlreadyRegistered(subnode, currentOwner);\r\n        }\r\n\r\n        ens.setSubnodeOwner(node, _label, address(this));\r\n        ens.setResolver(subnode, resolver);\r\n        Resolver(resolver).setAddr(subnode, _targetAddress);\r\n    }\r\n\r\n    /// @notice Sets the default resolver contract address that the subdomains being registered will use.\r\n    /// @param _resolver The resolver contract to be used.\r\n    function setDefaultResolver(\r\n        address _resolver\r\n    ) external auth(REGISTER_ENS_SUBDOMAIN_PERMISSION_ID) {\r\n        if (_resolver == address(0)) {\r\n            revert InvalidResolver({node: node, resolver: _resolver});\r\n        }\r\n\r\n        resolver = _resolver;\r\n    }\r\n\r\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\r\n    uint256[47] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @title IDAO\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice The interface required for DAOs within the Aragon App DAO framework.\r\n/// @custom:security-contact sirt@aragon.org\r\ninterface IDAO {\r\n    /// @notice The action struct to be consumed by the DAO's `execute` function resulting in an external call.\r\n    /// @param to The address to call.\r\n    /// @param value The native token value to be sent with the call.\r\n    /// @param data The bytes-encoded function selector and calldata for the call.\r\n    struct Action {\r\n        address to;\r\n        uint256 value;\r\n        bytes data;\r\n    }\r\n\r\n    /// @notice Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\r\n    /// @param _where The address of the contract.\r\n    /// @param _who The address of a EOA or contract to give the permissions.\r\n    /// @param _permissionId The permission identifier.\r\n    /// @param _data The optional data passed to the `PermissionCondition` registered.\r\n    /// @return Returns true if the address has permission, false if not.\r\n    function hasPermission(\r\n        address _where,\r\n        address _who,\r\n        bytes32 _permissionId,\r\n        bytes memory _data\r\n    ) external view returns (bool);\r\n\r\n    /// @notice Updates the DAO metadata (e.g., an IPFS hash).\r\n    /// @param _metadata The IPFS hash of the new metadata object.\r\n    function setMetadata(bytes calldata _metadata) external;\r\n\r\n    /// @notice Emitted when the DAO metadata is updated.\r\n    /// @param metadata The IPFS hash of the new metadata object.\r\n    event MetadataSet(bytes metadata);\r\n\r\n    /// @notice Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\r\n    /// @param _callId The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\r\n    /// @param _actions The array of actions.\r\n    /// @param _allowFailureMap A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\r\n    /// @return The array of results obtained from the executed actions in `bytes`.\r\n    /// @return The resulting failure map containing the actions have actually failed.\r\n    function execute(\r\n        bytes32 _callId,\r\n        Action[] memory _actions,\r\n        uint256 _allowFailureMap\r\n    ) external returns (bytes[] memory, uint256);\r\n\r\n    /// @notice Emitted when a proposal is executed.\r\n    /// @param actor The address of the caller.\r\n    /// @param callId The ID of the call.\r\n    /// @param actions The array of actions executed.\r\n    /// @param allowFailureMap The allow failure map encoding which actions are allowed to fail.\r\n    /// @param failureMap The failure map encoding which actions have failed.\r\n    /// @param execResults The array with the results of the executed actions.\r\n    /// @dev The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.\r\n    event Executed(\r\n        address indexed actor,\r\n        bytes32 callId,\r\n        Action[] actions,\r\n        uint256 allowFailureMap,\r\n        uint256 failureMap,\r\n        bytes[] execResults\r\n    );\r\n\r\n    /// @notice Emitted when a standard callback is registered.\r\n    /// @param interfaceId The ID of the interface.\r\n    /// @param callbackSelector The selector of the callback function.\r\n    /// @param magicNumber The magic number to be registered for the callback function selector.\r\n    event StandardCallbackRegistered(\r\n        bytes4 interfaceId,\r\n        bytes4 callbackSelector,\r\n        bytes4 magicNumber\r\n    );\r\n\r\n    /// @notice Deposits (native) tokens to the DAO contract with a reference string.\r\n    /// @param _token The address of the token or address(0) in case of the native token.\r\n    /// @param _amount The amount of tokens to deposit.\r\n    /// @param _reference The reference describing the deposit reason.\r\n    function deposit(address _token, uint256 _amount, string calldata _reference) external payable;\r\n\r\n    /// @notice Emitted when a token deposit has been made to the DAO.\r\n    /// @param sender The address of the sender.\r\n    /// @param token The address of the deposited token.\r\n    /// @param amount The amount of tokens deposited.\r\n    /// @param _reference The reference describing the deposit reason.\r\n    event Deposited(\r\n        address indexed sender,\r\n        address indexed token,\r\n        uint256 amount,\r\n        string _reference\r\n    );\r\n\r\n    /// @notice Emitted when a native token deposit has been made to the DAO.\r\n    /// @dev This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\r\n    /// @param sender The address of the sender.\r\n    /// @param amount The amount of native tokens deposited.\r\n    event NativeTokenDeposited(address sender, uint256 amount);\r\n\r\n    /// @notice Setter for the trusted forwarder verifying the meta transaction.\r\n    /// @param _trustedForwarder The trusted forwarder address.\r\n    function setTrustedForwarder(address _trustedForwarder) external;\r\n\r\n    /// @notice Getter for the trusted forwarder verifying the meta transaction.\r\n    /// @return The trusted forwarder address.\r\n    function getTrustedForwarder() external view returns (address);\r\n\r\n    /// @notice Emitted when a new TrustedForwarder is set on the DAO.\r\n    /// @param forwarder the new forwarder address.\r\n    event TrustedForwarderSet(address forwarder);\r\n\r\n    /// @notice Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\r\n    /// @param _hash The hash of the data to be signed.\r\n    /// @param _signature The signature byte array associated with `_hash`.\r\n    /// @return Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not.\r\n    function isValidSignature(bytes32 _hash, bytes memory _signature) external returns (bytes4);\r\n\r\n    /// @notice Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\r\n    /// @param _interfaceId The ID of the interface.\r\n    /// @param _callbackSelector The selector of the callback function.\r\n    /// @param _magicNumber The magic number to be registered for the function signature.\r\n    function registerStandardCallback(\r\n        bytes4 _interfaceId,\r\n        bytes4 _callbackSelector,\r\n        bytes4 _magicNumber\r\n    ) external;\r\n\r\n    /// @notice Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\r\n    /// @dev Introduced in v1.0.0. Removed in v1.4.0.\r\n    function setSignatureValidator(address) external;\r\n}\r\n"
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {IProtocolVersion} from \"./IProtocolVersion.sol\";\r\n\r\n/// @title ProtocolVersion\r\n/// @author Aragon Association - 2023\r\n/// @notice An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\r\n/// @dev Do not add any new variables to this contract that would shift down storage in the inheritance chain.\r\n/// @custom:security-contact sirt@aragon.org\r\nabstract contract ProtocolVersion is IProtocolVersion {\r\n    // IMPORTANT: Do not add any storage variable, see the above notice.\r\n\r\n    /// @inheritdoc IProtocolVersion\r\n    function protocolVersion() public pure returns (uint8[3] memory) {\r\n        return [1, 4, 0];\r\n    }\r\n}\r\n"
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @title IProtocolVersion\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice An interface defining the semantic Aragon OSx protocol version number.\r\n/// @custom:security-contact sirt@aragon.org\r\ninterface IProtocolVersion {\r\n    /// @notice Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\r\n    /// @return _version Returns the semantic Aragon OSx protocol version number.\r\n    /// @dev This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\r\n    function protocolVersion() external view returns (uint8[3] memory _version);\r\n}\r\n"
			},
			"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {ContextUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\r\n\r\nimport {IDAO} from \"../../dao/IDAO.sol\";\r\nimport {_auth} from \"../../utils/auth.sol\";\r\n\r\n/// @title DaoAuthorizableUpgradeable\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.\r\n/// @dev Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.\r\n/// @custom:security-contact sirt@aragon.org\r\nabstract contract DaoAuthorizableUpgradeable is ContextUpgradeable {\r\n    /// @notice The associated DAO managing the permissions of inheriting contracts.\r\n    IDAO private dao_;\r\n\r\n    /// @notice Initializes the contract by setting the associated DAO.\r\n    /// @param _dao The associated DAO address.\r\n    function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {\r\n        dao_ = _dao;\r\n    }\r\n\r\n    /// @notice Returns the DAO contract.\r\n    /// @return The DAO contract.\r\n    function dao() public view returns (IDAO) {\r\n        return dao_;\r\n    }\r\n\r\n    /// @notice A modifier to make functions on inheriting contracts authorized. Permissions to call the function are checked through the associated DAO's permission manager.\r\n    /// @param _permissionId The permission identifier required to call the method this modifier is applied to.\r\n    modifier auth(bytes32 _permissionId) {\r\n        _auth(dao_, address(this), _msgSender(), _permissionId, _msgData());\r\n        _;\r\n    }\r\n\r\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\r\n    uint256[49] private __gap;\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"./profiles/IABIResolver.sol\";\nimport \"./profiles/IAddressResolver.sol\";\nimport \"./profiles/IAddrResolver.sol\";\nimport \"./profiles/IContentHashResolver.sol\";\nimport \"./profiles/IDNSRecordResolver.sol\";\nimport \"./profiles/IDNSZoneResolver.sol\";\nimport \"./profiles/IInterfaceResolver.sol\";\nimport \"./profiles/INameResolver.sol\";\nimport \"./profiles/IPubkeyResolver.sol\";\nimport \"./profiles/ITextResolver.sol\";\nimport \"./profiles/IExtendedResolver.sol\";\n\n/**\n * A generic resolver interface which includes all the functions including the ones deprecated\n */\ninterface Resolver is\n    IERC165,\n    IABIResolver,\n    IAddressResolver,\n    IAddrResolver,\n    IContentHashResolver,\n    IDNSRecordResolver,\n    IDNSZoneResolver,\n    IInterfaceResolver,\n    INameResolver,\n    IPubkeyResolver,\n    ITextResolver,\n    IExtendedResolver\n{\n    /* Deprecated events */\n    event ContentChanged(bytes32 indexed node, bytes32 hash);\n\n    function setApprovalForAll(address, bool) external;\n\n    function approve(bytes32 node, address delegate, bool approved) external;\n\n    function isApprovedForAll(address account, address operator) external;\n\n    function isApprovedFor(\n        address owner,\n        bytes32 node,\n        address delegate\n    ) external;\n\n    function setABI(\n        bytes32 node,\n        uint256 contentType,\n        bytes calldata data\n    ) external;\n\n    function setAddr(bytes32 node, address addr) external;\n\n    function setAddr(bytes32 node, uint256 coinType, bytes calldata a) external;\n\n    function setContenthash(bytes32 node, bytes calldata hash) external;\n\n    function setDnsrr(bytes32 node, bytes calldata data) external;\n\n    function setName(bytes32 node, string calldata _name) external;\n\n    function setPubkey(bytes32 node, bytes32 x, bytes32 y) external;\n\n    function setText(\n        bytes32 node,\n        string calldata key,\n        string calldata value\n    ) external;\n\n    function setInterface(\n        bytes32 node,\n        bytes4 interfaceID,\n        address implementer\n    ) external;\n\n    function multicall(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n\n    function multicallWithNodeCheck(\n        bytes32 nodehash,\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n\n    /* Deprecated functions */\n    function content(bytes32 node) external view returns (bytes32);\n\n    function multihash(bytes32 node) external view returns (bytes memory);\n\n    function setContent(bytes32 node, bytes32 hash) external;\n\n    function setMultihash(bytes32 node, bytes calldata hash) external;\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/registry/ENS.sol": {
				"content": "pragma solidity >=0.8.4;\n\ninterface ENS {\n    // Logged when the owner of a node assigns a new owner to a subnode.\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n    // Logged when the owner of a node transfers ownership to a new account.\n    event Transfer(bytes32 indexed node, address owner);\n\n    // Logged when the resolver for a node changes.\n    event NewResolver(bytes32 indexed node, address resolver);\n\n    // Logged when the TTL of a node changes\n    event NewTTL(bytes32 indexed node, uint64 ttl);\n\n    // Logged when an operator is added or removed.\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    function setRecord(\n        bytes32 node,\n        address owner,\n        address resolver,\n        uint64 ttl\n    ) external;\n\n    function setSubnodeRecord(\n        bytes32 node,\n        bytes32 label,\n        address owner,\n        address resolver,\n        uint64 ttl\n    ) external;\n\n    function setSubnodeOwner(\n        bytes32 node,\n        bytes32 label,\n        address owner\n    ) external returns (bytes32);\n\n    function setResolver(bytes32 node, address resolver) external;\n\n    function setOwner(bytes32 node, address owner) external;\n\n    function setTTL(bytes32 node, uint64 ttl) external;\n\n    function setApprovalForAll(address operator, bool approved) external;\n\n    function owner(bytes32 node) external view returns (address);\n\n    function resolver(bytes32 node) external view returns (address);\n\n    function ttl(bytes32 node) external view returns (uint64);\n\n    function recordExists(bytes32 node) external view returns (bool);\n\n    function isApprovedForAll(\n        address owner,\n        address operator\n    ) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165CheckerUpgradeable {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"
			},
			"packages/contracts/src/core/utils/auth.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {IDAO} from \"../dao/IDAO.sol\";\r\n\r\n/// @notice Thrown if a call is unauthorized in the associated DAO.\r\n/// @param dao The associated DAO.\r\n/// @param where The context in which the authorization reverted.\r\n/// @param who The address (EOA or contract) missing the permission.\r\n/// @param permissionId The permission identifier.\r\nerror DaoUnauthorized(address dao, address where, address who, bytes32 permissionId);\r\n\r\n/// @notice A free function checking if a caller is granted permissions on a target contract via a permission identifier that redirects the approval to a `PermissionCondition` if this was specified in the setup.\r\n/// @param _where The address of the target contract for which `who` receives permission.\r\n/// @param _who The address (EOA or contract) owning the permission.\r\n/// @param _permissionId The permission identifier.\r\n/// @param _data The optional data passed to the `PermissionCondition` registered.\r\n/// @custom:security-contact sirt@aragon.org\r\nfunction _auth(\r\n    IDAO _dao,\r\n    address _where,\r\n    address _who,\r\n    bytes32 _permissionId,\r\n    bytes calldata _data\r\n) view {\r\n    if (!_dao.hasPermission(_where, _who, _permissionId, _data))\r\n        revert DaoUnauthorized({\r\n            dao: address(_dao),\r\n            where: _where,\r\n            who: _who,\r\n            permissionId: _permissionId\r\n        });\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ninterface IExtendedResolver {\n    function resolve(\n        bytes memory name,\n        bytes memory data\n    ) external view returns (bytes memory);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface ITextResolver {\n    event TextChanged(\n        bytes32 indexed node,\n        string indexed indexedKey,\n        string key,\n        string value\n    );\n\n    /**\n     * Returns the text data associated with an ENS node and key.\n     * @param node The ENS node to query.\n     * @param key The text data key to query.\n     * @return The associated text data.\n     */\n    function text(\n        bytes32 node,\n        string calldata key\n    ) external view returns (string memory);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IPubkeyResolver {\n    event PubkeyChanged(bytes32 indexed node, bytes32 x, bytes32 y);\n\n    /**\n     * Returns the SECP256k1 public key associated with an ENS node.\n     * Defined in EIP 619.\n     * @param node The ENS node to query\n     * @return x The X coordinate of the curve point for the public key.\n     * @return y The Y coordinate of the curve point for the public key.\n     */\n    function pubkey(bytes32 node) external view returns (bytes32 x, bytes32 y);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface INameResolver {\n    event NameChanged(bytes32 indexed node, string name);\n\n    /**\n     * Returns the name associated with an ENS node, for reverse records.\n     * Defined in EIP181.\n     * @param node The ENS node to query.\n     * @return The associated name.\n     */\n    function name(bytes32 node) external view returns (string memory);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IInterfaceResolver {\n    event InterfaceChanged(\n        bytes32 indexed node,\n        bytes4 indexed interfaceID,\n        address implementer\n    );\n\n    /**\n     * Returns the address of a contract that implements the specified interface for this name.\n     * If an implementer has not been set for this interfaceID and name, the resolver will query\n     * the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that\n     * contract implements EIP165 and returns `true` for the specified interfaceID, its address\n     * will be returned.\n     * @param node The ENS node to query.\n     * @param interfaceID The EIP 165 interface ID to check for.\n     * @return The address that implements this interface, or 0 if the interface is unsupported.\n     */\n    function interfaceImplementer(\n        bytes32 node,\n        bytes4 interfaceID\n    ) external view returns (address);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IDNSZoneResolver {\n    // DNSZonehashChanged is emitted whenever a given node's zone hash is updated.\n    event DNSZonehashChanged(\n        bytes32 indexed node,\n        bytes lastzonehash,\n        bytes zonehash\n    );\n\n    /**\n     * zonehash obtains the hash for the zone.\n     * @param node The ENS node to query.\n     * @return The associated contenthash.\n     */\n    function zonehash(bytes32 node) external view returns (bytes memory);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IDNSRecordResolver {\n    // DNSRecordChanged is emitted whenever a given node/name/resource's RRSET is updated.\n    event DNSRecordChanged(\n        bytes32 indexed node,\n        bytes name,\n        uint16 resource,\n        bytes record\n    );\n    // DNSRecordDeleted is emitted whenever a given node/name/resource's RRSET is deleted.\n    event DNSRecordDeleted(bytes32 indexed node, bytes name, uint16 resource);\n\n    /**\n     * Obtain a DNS record.\n     * @param node the namehash of the node for which to fetch the record\n     * @param name the keccak-256 hash of the fully-qualified name for which to fetch the record\n     * @param resource the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\n     * @return the DNS record in wire format if present, otherwise empty\n     */\n    function dnsRecord(\n        bytes32 node,\n        bytes32 name,\n        uint16 resource\n    ) external view returns (bytes memory);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IContentHashResolver {\n    event ContenthashChanged(bytes32 indexed node, bytes hash);\n\n    /**\n     * Returns the contenthash associated with an ENS node.\n     * @param node The ENS node to query.\n     * @return The associated contenthash.\n     */\n    function contenthash(bytes32 node) external view returns (bytes memory);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\n/**\n * Interface for the legacy (ETH-only) addr function.\n */\ninterface IAddrResolver {\n    event AddrChanged(bytes32 indexed node, address a);\n\n    /**\n     * Returns the address associated with an ENS node.\n     * @param node The ENS node to query.\n     * @return The associated address.\n     */\n    function addr(bytes32 node) external view returns (address payable);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\n/**\n * Interface for the new (multicoin) addr function.\n */\ninterface IAddressResolver {\n    event AddressChanged(\n        bytes32 indexed node,\n        uint256 coinType,\n        bytes newAddress\n    );\n\n    function addr(\n        bytes32 node,\n        uint256 coinType\n    ) external view returns (bytes memory);\n}\n"
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IABIResolver {\n    event ABIChanged(bytes32 indexed node, uint256 indexed contentType);\n\n    /**\n     * Returns the ABI associated with an ENS node.\n     * Defined in EIP205.\n     * @param node The ENS node to query\n     * @param contentTypes A bitwise OR of the ABI formats accepted by the caller.\n     * @return contentType The content type of the return value\n     * @return data The ABI data\n     */\n    function ABI(\n        bytes32 node,\n        uint256 contentTypes\n    ) external view returns (uint256, bytes memory);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@ensdomains/ens-contracts/contracts/registry/ENS.sol": {
				"ENS": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "NewOwner",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "NewResolver",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "NewTTL",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "recordExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "resolver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "setRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "setResolver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setSubnodeOwner",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "setSubnodeRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "setTTL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "ttl",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isApprovedForAll(address,address)": "e985e9c5",
							"owner(bytes32)": "02571be3",
							"recordExists(bytes32)": "f79fe538",
							"resolver(bytes32)": "0178b8bf",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setOwner(bytes32,address)": "5b0fc9c3",
							"setRecord(bytes32,address,address,uint64)": "cf408823",
							"setResolver(bytes32,address)": "1896f70a",
							"setSubnodeOwner(bytes32,bytes32,address)": "06ab5923",
							"setSubnodeRecord(bytes32,bytes32,address,address,uint64)": "5ef2c7f0",
							"setTTL(bytes32,uint64)": "14ab9038",
							"ttl(bytes32)": "16a25cbd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"NewTTL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"recordExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setSubnodeRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setTTL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"ttl\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\":\"ENS\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\":{\"keccak256\":\"0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda\",\"urls\":[\"bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314\",\"dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol": {
				"Resolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "contentType",
									"type": "uint256"
								}
							],
							"name": "ABIChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "a",
									"type": "address"
								}
							],
							"name": "AddrChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "newAddress",
									"type": "bytes"
								}
							],
							"name": "AddressChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "ContentChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "ContenthashChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "record",
									"type": "bytes"
								}
							],
							"name": "DNSRecordChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								}
							],
							"name": "DNSRecordDeleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "lastzonehash",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "zonehash",
									"type": "bytes"
								}
							],
							"name": "DNSZonehashChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "NameChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"name": "PubkeyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "indexedKey",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "key",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "TextChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "contentTypes",
									"type": "uint256"
								}
							],
							"name": "ABI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "content",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "contenthash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								}
							],
							"name": "dnsRecord",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "interfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "isApprovedFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "nodehash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicallWithNodeCheck",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "multihash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "pubkey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "resolve",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "contentType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "setABI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "a",
									"type": "bytes"
								}
							],
							"name": "setAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "setAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "setContent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "setContenthash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "setDnsrr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterface",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "setMultihash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "setName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"name": "setPubkey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "setText",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								}
							],
							"name": "text",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "zonehash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"ABI(bytes32,uint256)": {
								"params": {
									"contentTypes": "A bitwise OR of the ABI formats accepted by the caller.",
									"node": "The ENS node to query"
								},
								"returns": {
									"_0": "contentType The content type of the return value",
									"_1": "data The ABI data"
								}
							},
							"addr(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated address."
								}
							},
							"contenthash(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated contenthash."
								}
							},
							"dnsRecord(bytes32,bytes32,uint16)": {
								"params": {
									"name": "the keccak-256 hash of the fully-qualified name for which to fetch the record",
									"node": "the namehash of the node for which to fetch the record",
									"resource": "the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types"
								},
								"returns": {
									"_0": "the DNS record in wire format if present, otherwise empty"
								}
							},
							"interfaceImplementer(bytes32,bytes4)": {
								"params": {
									"interfaceID": "The EIP 165 interface ID to check for.",
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The address that implements this interface, or 0 if the interface is unsupported."
								}
							},
							"name(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated name."
								}
							},
							"pubkey(bytes32)": {
								"params": {
									"node": "The ENS node to query"
								},
								"returns": {
									"x": "The X coordinate of the curve point for the public key.",
									"y": "The Y coordinate of the curve point for the public key."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"text(bytes32,string)": {
								"params": {
									"key": "The text data key to query.",
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated text data."
								}
							},
							"zonehash(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated contenthash."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ABI(bytes32,uint256)": "2203ab56",
							"addr(bytes32)": "3b3b57de",
							"addr(bytes32,uint256)": "f1cb7e06",
							"approve(bytes32,address,bool)": "a4b91a01",
							"content(bytes32)": "2dff6941",
							"contenthash(bytes32)": "bc1c58d1",
							"dnsRecord(bytes32,bytes32,uint16)": "a8fa5682",
							"interfaceImplementer(bytes32,bytes4)": "124a319c",
							"isApprovedFor(address,bytes32,address)": "a9784b3e",
							"isApprovedForAll(address,address)": "e985e9c5",
							"multicall(bytes[])": "ac9650d8",
							"multicallWithNodeCheck(bytes32,bytes[])": "e32954eb",
							"multihash(bytes32)": "e89401a1",
							"name(bytes32)": "691f3431",
							"pubkey(bytes32)": "c8690233",
							"resolve(bytes,bytes)": "9061b923",
							"setABI(bytes32,uint256,bytes)": "623195b0",
							"setAddr(bytes32,address)": "d5fa2b00",
							"setAddr(bytes32,uint256,bytes)": "8b95dd71",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setContent(bytes32,bytes32)": "c3d014d6",
							"setContenthash(bytes32,bytes)": "304e6ade",
							"setDnsrr(bytes32,bytes)": "76196c88",
							"setInterface(bytes32,bytes4,address)": "e59d895d",
							"setMultihash(bytes32,bytes)": "aa4cb547",
							"setName(bytes32,string)": "77372213",
							"setPubkey(bytes32,bytes32,bytes32)": "29cd62ea",
							"setText(bytes32,string,string)": "10f13a8c",
							"supportsInterface(bytes4)": "01ffc9a7",
							"text(bytes32,string)": "59d1d43c",
							"zonehash(bytes32)": "5c98042b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"}],\"name\":\"ABIChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddrChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newAddress\",\"type\":\"bytes\"}],\"name\":\"AddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"ContentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"ContenthashChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"record\",\"type\":\"bytes\"}],\"name\":\"DNSRecordChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"DNSRecordDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"lastzonehash\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"zonehash\",\"type\":\"bytes\"}],\"name\":\"DNSZonehashChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"PubkeyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"indexedKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"TextChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contentTypes\",\"type\":\"uint256\"}],\"name\":\"ABI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"content\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"contenthash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"dnsRecord\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"interfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"isApprovedFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nodehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicallWithNodeCheck\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"multihash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"pubkey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setABI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"a\",\"type\":\"bytes\"}],\"name\":\"setAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"setContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"setContenthash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setDnsrr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterface\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"setMultihash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"setPubkey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setText\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"text\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"zonehash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ABI(bytes32,uint256)\":{\"params\":{\"contentTypes\":\"A bitwise OR of the ABI formats accepted by the caller.\",\"node\":\"The ENS node to query\"},\"returns\":{\"_0\":\"contentType The content type of the return value\",\"_1\":\"data The ABI data\"}},\"addr(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated address.\"}},\"contenthash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated contenthash.\"}},\"dnsRecord(bytes32,bytes32,uint16)\":{\"params\":{\"name\":\"the keccak-256 hash of the fully-qualified name for which to fetch the record\",\"node\":\"the namehash of the node for which to fetch the record\",\"resource\":\"the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\"},\"returns\":{\"_0\":\"the DNS record in wire format if present, otherwise empty\"}},\"interfaceImplementer(bytes32,bytes4)\":{\"params\":{\"interfaceID\":\"The EIP 165 interface ID to check for.\",\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The address that implements this interface, or 0 if the interface is unsupported.\"}},\"name(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated name.\"}},\"pubkey(bytes32)\":{\"params\":{\"node\":\"The ENS node to query\"},\"returns\":{\"x\":\"The X coordinate of the curve point for the public key.\",\"y\":\"The Y coordinate of the curve point for the public key.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"text(bytes32,string)\":{\"params\":{\"key\":\"The text data key to query.\",\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated text data.\"}},\"zonehash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated contenthash.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ABI(bytes32,uint256)\":{\"notice\":\"Returns the ABI associated with an ENS node. Defined in EIP205.\"},\"addr(bytes32)\":{\"notice\":\"Returns the address associated with an ENS node.\"},\"contenthash(bytes32)\":{\"notice\":\"Returns the contenthash associated with an ENS node.\"},\"dnsRecord(bytes32,bytes32,uint16)\":{\"notice\":\"Obtain a DNS record.\"},\"interfaceImplementer(bytes32,bytes4)\":{\"notice\":\"Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned.\"},\"name(bytes32)\":{\"notice\":\"Returns the name associated with an ENS node, for reverse records. Defined in EIP181.\"},\"pubkey(bytes32)\":{\"notice\":\"Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619.\"},\"text(bytes32,string)\":{\"notice\":\"Returns the text data associated with an ENS node and key.\"},\"zonehash(bytes32)\":{\"notice\":\"zonehash obtains the hash for the zone.\"}},\"notice\":\"A generic resolver interface which includes all the functions including the ones deprecated\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol\":\"Resolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol\":{\"keccak256\":\"0xfc77ab6b7c59c3ebfe1c720bdebf9b08c2488ff7ac9501a9aa056c5d6d5b50c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d472c5e0de753fe3b0ce8b37b3c10635ad7328fbd34e2b1be05e82aec73b7f7\",\"dweb:/ipfs/QmbPqW3BxytUNqJTxAXF6PngM3X7BNNnQwdSuSdHsKmRvH\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol\":{\"keccak256\":\"0x85b373d02d19374fe570af407f459768285704bf7f30ab17c30eabfb5a10e4c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046ce3d92d29806d7b447f7ab4227f19b0b2e5c75fd5b4a3fcaef7fe2442141\",\"dweb:/ipfs/QmRgnfWjFetrSJngkhU7Yui1ZcK1MeatvZDpvUTYNuYnND\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol\":{\"keccak256\":\"0x2ad7f2fc60ebe0f93745fe70247f6a854f66af732483fda2a3c5e055614445e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43922ba183ff20d87dce7fc5d715e626b26594151e36dcc8d7c6329b9a822963\",\"dweb:/ipfs/QmTg9uHTugTxzqddN68gnhNbGt4bGJBS9mQcss6GYggR4X\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol\":{\"keccak256\":\"0x411447c1e90c51e09702815a85ec725ffbbe37cf96e8cc4d2a8bd4ad8a59d73e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543aa2756447a428711b69aea79e9f4641c22f8330ba920b2a49fde8d9207f82\",\"dweb:/ipfs/QmTdpcYRWLH3BL7iytnqcSzRojTPe3YettKaTqeCvKPk54\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol\":{\"keccak256\":\"0xd95cd77684ba5752c428d7dceb4ecc6506ac94f4fbb910489637eb68dcd8e366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf1fee7770679bd935b8b5686789a4ecc532caeef5a9b8e1b60ae0c285e743e\",\"dweb:/ipfs/QmSaHBAqtDdbQLH6QN4EbupMrq2ah8g6fqE7fLX1u4cjMZ\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol\":{\"keccak256\":\"0xcfa52200edd337f2c6c5bf402352600584da033b21323603e53de33051a3e25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8355211d58db82660140191678ee342eb8a7ac46fa097ae8e03eef008f592e\",\"dweb:/ipfs/QmYDNiECPd4fJ7Vk9Xywfpg73rUvDpcYqas95ofGcpt7fM\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol\":{\"keccak256\":\"0xca1b3a16e7005533f2800a3e66fcdccf7c574deac7913d8c810f40aec1d58dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e38d5eb69e236c37e4a013628838070720c9e1923569650b01252868038c7a\",\"dweb:/ipfs/QmV397iZMRxtem79kJy5sueJadXoVL89gNViX2xciQHUrk\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol\":{\"keccak256\":\"0x5d81521cfae7d9a4475d27533cd8ed0d3475d369eb0674fd90ffbdbdf292faa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d244d15588785044b54c453ab6dc51c616ab70cb8b9e687d3e54565bcae97760\",\"dweb:/ipfs/QmXz4ZZBTFogdkdTV1mcE3ywvL2agKVZHLNNeRHCKVruYM\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol\":{\"keccak256\":\"0x390321fb58f7b927df9562450981e74b4be3907e7c09df321fd3b7409b63ae28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://045d12c6e0e4596b3672614751a9e75188183a89765a6abd938294e0294e9c56\",\"dweb:/ipfs/QmazngvagEoKe29s4M9Rv8KygWD5hrAtNPkYDPJ2pK13yx\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol\":{\"keccak256\":\"0x69748947093dd2fda9ddcebd0adf19a6d1e7600df1d4b1462a0417156caddca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2f86e50bd17c38fb10feb577d88d8970c585017a391ef10e3aaa3d50f81555\",\"dweb:/ipfs/QmaxLx2pqCUxf9W2dusfviZ9aSiTuVwuekGo73rjvmGifE\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol\":{\"keccak256\":\"0x7c5debb3c42cd9f5de2274ea7aa053f238608314b62db441c40e31cea2543fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e34ae2d84d542ffa6791486963f3fe04432a3ffd51877d441256dc2941914\",\"dweb:/ipfs/QmciS4mGAQ6KJtLiLcBFekHKhYAYMmubDWGkpZ3sUFtJPW\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ABI(bytes32,uint256)": {
								"notice": "Returns the ABI associated with an ENS node. Defined in EIP205."
							},
							"addr(bytes32)": {
								"notice": "Returns the address associated with an ENS node."
							},
							"contenthash(bytes32)": {
								"notice": "Returns the contenthash associated with an ENS node."
							},
							"dnsRecord(bytes32,bytes32,uint16)": {
								"notice": "Obtain a DNS record."
							},
							"interfaceImplementer(bytes32,bytes4)": {
								"notice": "Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned."
							},
							"name(bytes32)": {
								"notice": "Returns the name associated with an ENS node, for reverse records. Defined in EIP181."
							},
							"pubkey(bytes32)": {
								"notice": "Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619."
							},
							"text(bytes32,string)": {
								"notice": "Returns the text data associated with an ENS node and key."
							},
							"zonehash(bytes32)": {
								"notice": "zonehash obtains the hash for the zone."
							}
						},
						"notice": "A generic resolver interface which includes all the functions including the ones deprecated",
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol": {
				"IABIResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "contentType",
									"type": "uint256"
								}
							],
							"name": "ABIChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "contentTypes",
									"type": "uint256"
								}
							],
							"name": "ABI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"ABI(bytes32,uint256)": {
								"params": {
									"contentTypes": "A bitwise OR of the ABI formats accepted by the caller.",
									"node": "The ENS node to query"
								},
								"returns": {
									"_0": "contentType The content type of the return value",
									"_1": "data The ABI data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ABI(bytes32,uint256)": "2203ab56"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"}],\"name\":\"ABIChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contentTypes\",\"type\":\"uint256\"}],\"name\":\"ABI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ABI(bytes32,uint256)\":{\"params\":{\"contentTypes\":\"A bitwise OR of the ABI formats accepted by the caller.\",\"node\":\"The ENS node to query\"},\"returns\":{\"_0\":\"contentType The content type of the return value\",\"_1\":\"data The ABI data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ABI(bytes32,uint256)\":{\"notice\":\"Returns the ABI associated with an ENS node. Defined in EIP205.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol\":\"IABIResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol\":{\"keccak256\":\"0x85b373d02d19374fe570af407f459768285704bf7f30ab17c30eabfb5a10e4c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046ce3d92d29806d7b447f7ab4227f19b0b2e5c75fd5b4a3fcaef7fe2442141\",\"dweb:/ipfs/QmRgnfWjFetrSJngkhU7Yui1ZcK1MeatvZDpvUTYNuYnND\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ABI(bytes32,uint256)": {
								"notice": "Returns the ABI associated with an ENS node. Defined in EIP205."
							}
						},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol": {
				"IAddrResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "a",
									"type": "address"
								}
							],
							"name": "AddrChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addr(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated address."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addr(bytes32)": "3b3b57de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddrChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addr(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addr(bytes32)\":{\"notice\":\"Returns the address associated with an ENS node.\"}},\"notice\":\"Interface for the legacy (ETH-only) addr function.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol\":\"IAddrResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol\":{\"keccak256\":\"0x2ad7f2fc60ebe0f93745fe70247f6a854f66af732483fda2a3c5e055614445e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43922ba183ff20d87dce7fc5d715e626b26594151e36dcc8d7c6329b9a822963\",\"dweb:/ipfs/QmTg9uHTugTxzqddN68gnhNbGt4bGJBS9mQcss6GYggR4X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addr(bytes32)": {
								"notice": "Returns the address associated with an ENS node."
							}
						},
						"notice": "Interface for the legacy (ETH-only) addr function.",
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol": {
				"IAddressResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "newAddress",
									"type": "bytes"
								}
							],
							"name": "AddressChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addr(bytes32,uint256)": "f1cb7e06"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newAddress\",\"type\":\"bytes\"}],\"name\":\"AddressChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the new (multicoin) addr function.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol\":\"IAddressResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol\":{\"keccak256\":\"0x411447c1e90c51e09702815a85ec725ffbbe37cf96e8cc4d2a8bd4ad8a59d73e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543aa2756447a428711b69aea79e9f4641c22f8330ba920b2a49fde8d9207f82\",\"dweb:/ipfs/QmTdpcYRWLH3BL7iytnqcSzRojTPe3YettKaTqeCvKPk54\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the new (multicoin) addr function.",
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol": {
				"IContentHashResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "ContenthashChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "contenthash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"contenthash(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated contenthash."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"contenthash(bytes32)": "bc1c58d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"ContenthashChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"contenthash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"contenthash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated contenthash.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contenthash(bytes32)\":{\"notice\":\"Returns the contenthash associated with an ENS node.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol\":\"IContentHashResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol\":{\"keccak256\":\"0xd95cd77684ba5752c428d7dceb4ecc6506ac94f4fbb910489637eb68dcd8e366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf1fee7770679bd935b8b5686789a4ecc532caeef5a9b8e1b60ae0c285e743e\",\"dweb:/ipfs/QmSaHBAqtDdbQLH6QN4EbupMrq2ah8g6fqE7fLX1u4cjMZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"contenthash(bytes32)": {
								"notice": "Returns the contenthash associated with an ENS node."
							}
						},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol": {
				"IDNSRecordResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "record",
									"type": "bytes"
								}
							],
							"name": "DNSRecordChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								}
							],
							"name": "DNSRecordDeleted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								}
							],
							"name": "dnsRecord",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"dnsRecord(bytes32,bytes32,uint16)": {
								"params": {
									"name": "the keccak-256 hash of the fully-qualified name for which to fetch the record",
									"node": "the namehash of the node for which to fetch the record",
									"resource": "the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types"
								},
								"returns": {
									"_0": "the DNS record in wire format if present, otherwise empty"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dnsRecord(bytes32,bytes32,uint16)": "a8fa5682"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"record\",\"type\":\"bytes\"}],\"name\":\"DNSRecordChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"DNSRecordDeleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"dnsRecord\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"dnsRecord(bytes32,bytes32,uint16)\":{\"params\":{\"name\":\"the keccak-256 hash of the fully-qualified name for which to fetch the record\",\"node\":\"the namehash of the node for which to fetch the record\",\"resource\":\"the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\"},\"returns\":{\"_0\":\"the DNS record in wire format if present, otherwise empty\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dnsRecord(bytes32,bytes32,uint16)\":{\"notice\":\"Obtain a DNS record.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol\":\"IDNSRecordResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol\":{\"keccak256\":\"0xcfa52200edd337f2c6c5bf402352600584da033b21323603e53de33051a3e25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8355211d58db82660140191678ee342eb8a7ac46fa097ae8e03eef008f592e\",\"dweb:/ipfs/QmYDNiECPd4fJ7Vk9Xywfpg73rUvDpcYqas95ofGcpt7fM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"dnsRecord(bytes32,bytes32,uint16)": {
								"notice": "Obtain a DNS record."
							}
						},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol": {
				"IDNSZoneResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "lastzonehash",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "zonehash",
									"type": "bytes"
								}
							],
							"name": "DNSZonehashChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "zonehash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"zonehash(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated contenthash."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"zonehash(bytes32)": "5c98042b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"lastzonehash\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"zonehash\",\"type\":\"bytes\"}],\"name\":\"DNSZonehashChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"zonehash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"zonehash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated contenthash.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"zonehash(bytes32)\":{\"notice\":\"zonehash obtains the hash for the zone.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol\":\"IDNSZoneResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol\":{\"keccak256\":\"0xca1b3a16e7005533f2800a3e66fcdccf7c574deac7913d8c810f40aec1d58dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e38d5eb69e236c37e4a013628838070720c9e1923569650b01252868038c7a\",\"dweb:/ipfs/QmV397iZMRxtem79kJy5sueJadXoVL89gNViX2xciQHUrk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"zonehash(bytes32)": {
								"notice": "zonehash obtains the hash for the zone."
							}
						},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol": {
				"IExtendedResolver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "resolve",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"resolve(bytes,bytes)": "9061b923"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol\":\"IExtendedResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol\":{\"keccak256\":\"0x5d81521cfae7d9a4475d27533cd8ed0d3475d369eb0674fd90ffbdbdf292faa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d244d15588785044b54c453ab6dc51c616ab70cb8b9e687d3e54565bcae97760\",\"dweb:/ipfs/QmXz4ZZBTFogdkdTV1mcE3ywvL2agKVZHLNNeRHCKVruYM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol": {
				"IInterfaceResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "interfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"interfaceImplementer(bytes32,bytes4)": {
								"params": {
									"interfaceID": "The EIP 165 interface ID to check for.",
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The address that implements this interface, or 0 if the interface is unsupported."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"interfaceImplementer(bytes32,bytes4)": "124a319c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"interfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"interfaceImplementer(bytes32,bytes4)\":{\"params\":{\"interfaceID\":\"The EIP 165 interface ID to check for.\",\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The address that implements this interface, or 0 if the interface is unsupported.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"interfaceImplementer(bytes32,bytes4)\":{\"notice\":\"Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol\":\"IInterfaceResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol\":{\"keccak256\":\"0x390321fb58f7b927df9562450981e74b4be3907e7c09df321fd3b7409b63ae28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://045d12c6e0e4596b3672614751a9e75188183a89765a6abd938294e0294e9c56\",\"dweb:/ipfs/QmazngvagEoKe29s4M9Rv8KygWD5hrAtNPkYDPJ2pK13yx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"interfaceImplementer(bytes32,bytes4)": {
								"notice": "Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned."
							}
						},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol": {
				"INameResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "NameChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"name(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated name."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"name(bytes32)": "691f3431"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"name(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated name.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"name(bytes32)\":{\"notice\":\"Returns the name associated with an ENS node, for reverse records. Defined in EIP181.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol\":\"INameResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"name(bytes32)": {
								"notice": "Returns the name associated with an ENS node, for reverse records. Defined in EIP181."
							}
						},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol": {
				"IPubkeyResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"name": "PubkeyChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "pubkey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"pubkey(bytes32)": {
								"params": {
									"node": "The ENS node to query"
								},
								"returns": {
									"x": "The X coordinate of the curve point for the public key.",
									"y": "The Y coordinate of the curve point for the public key."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pubkey(bytes32)": "c8690233"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"PubkeyChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"pubkey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pubkey(bytes32)\":{\"params\":{\"node\":\"The ENS node to query\"},\"returns\":{\"x\":\"The X coordinate of the curve point for the public key.\",\"y\":\"The Y coordinate of the curve point for the public key.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pubkey(bytes32)\":{\"notice\":\"Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol\":\"IPubkeyResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol\":{\"keccak256\":\"0x69748947093dd2fda9ddcebd0adf19a6d1e7600df1d4b1462a0417156caddca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2f86e50bd17c38fb10feb577d88d8970c585017a391ef10e3aaa3d50f81555\",\"dweb:/ipfs/QmaxLx2pqCUxf9W2dusfviZ9aSiTuVwuekGo73rjvmGifE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"pubkey(bytes32)": {
								"notice": "Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619."
							}
						},
						"version": 1
					}
				}
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol": {
				"ITextResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "indexedKey",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "key",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "TextChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								}
							],
							"name": "text",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"text(bytes32,string)": {
								"params": {
									"key": "The text data key to query.",
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated text data."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"text(bytes32,string)": "59d1d43c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"indexedKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"TextChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"text\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"text(bytes32,string)\":{\"params\":{\"key\":\"The text data key to query.\",\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated text data.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"text(bytes32,string)\":{\"notice\":\"Returns the text data associated with an ENS node and key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol\":\"ITextResolver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol\":{\"keccak256\":\"0x7c5debb3c42cd9f5de2274ea7aa053f238608314b62db441c40e31cea2543fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e34ae2d84d542ffa6791486963f3fe04432a3ffd51877d441256dc2941914\",\"dweb:/ipfs/QmciS4mGAQ6KJtLiLcBFekHKhYAYMmubDWGkpZ3sUFtJPW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"text(bytes32,string)": {
								"notice": "Returns the text data associated with an ENS node and key."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol": {
				"ERC165CheckerUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":460:5114  library ERC165CheckerUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":460:5114  library ERC165CheckerUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122044bc3c6ff63b71066ead80346380a9f55b5a1253e343848409e68eb1d50e90dc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122044bc3c6ff63b71066ead80346380a9f55b5a1253e343848409e68eb1d50e90dc64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO 0xBC EXTCODECOPY PUSH16 0xF63B71066EAD80346380A9F55B5A1253 0xE3 NUMBER DUP5 DUP5 MULMOD 0xE6 DUP15 0xB1 0xD5 0xE SWAP1 0xDC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "460:4654:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;460:4654:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122044bc3c6ff63b71066ead80346380a9f55b5a1253e343848409e68eb1d50e90dc64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO 0xBC EXTCODECOPY PUSH16 0xF63B71066EAD80346380A9F55B5A1253 0xE3 NUMBER DUP5 DUP5 MULMOD 0xE6 DUP15 0xB1 0xD5 0xE SWAP1 0xDC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "460:4654:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getSupportedInterfaces(address,bytes4[] memory)": "infinite",
								"supportsAllInterfaces(address,bytes4[] memory)": "infinite",
								"supportsERC165(address)": "infinite",
								"supportsERC165InterfaceUnchecked(address,bytes4)": "infinite",
								"supportsInterface(address,bytes4)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044bc3c6ff63b71066ead80346380a9f55b5a1253e343848409e68eb1d50e90dc64736f6c63430008140033",
									".code": [
										{
											"begin": 460,
											"end": 5114,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/ens-contracts/contracts/registry/ENS.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":\"ERC165CheckerUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":{\"keccak256\":\"0x94edef8687cf1335a114f7e7267fa92cb0d9e61afde8d62589aceede6c245caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dbcc182503f671c6bb7e2c24fe5f13e4c7604389d6cfccd074bc1d9fa7b86df\",\"dweb:/ipfs/QmdioHDNmTsJx9xMcwBvA7QJhC4MzTmDmWHiWsZpbETLXx\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e3710a282757138a8941ec3cfa43c88cc4d7c6bd83e3ad39b5fabd4233dfa6f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e3710a282757138a8941ec3cfa43c88cc4d7c6bd83e3ad39b5fabd4233dfa6f64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 CALLDATACOPY LT LOG2 DUP3 PUSH22 0x7138A8941EC3CFA43C88CC4D7C6BD83E3AD39B5FABD4 0x23 RETURNDATASIZE STATICCALL PUSH16 0x64736F6C634300081400330000000000 ",
							"sourceMap": "449:6273:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:19;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e3710a282757138a8941ec3cfa43c88cc4d7c6bd83e3ad39b5fabd4233dfa6f64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 CALLDATACOPY LT LOG2 DUP3 PUSH22 0x7138A8941EC3CFA43C88CC4D7C6BD83E3AD39B5FABD4 0x23 RETURNDATASIZE STATICCALL PUSH16 0x64736F6C634300081400330000000000 ",
							"sourceMap": "449:6273:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e3710a282757138a8941ec3cfa43c88cc4d7c6bd83e3ad39b5fabd4233dfa6f64736f6c63430008140033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/ens-contracts/contracts/registry/ENS.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122002e65738ff1e7fbaaa6128be4e2773543d224601dc6a6a540e798a20390ba49764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122002e65738ff1e7fbaaa6128be4e2773543d224601dc6a6a540e798a20390ba49764736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xE6 JUMPI CODESIZE SELFDESTRUCT 0x1E PUSH32 0xBAAA6128BE4E2773543D224601DC6A6A540E798A20390BA49764736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "195:6066:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:21;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122002e65738ff1e7fbaaa6128be4e2773543d224601dc6a6a540e798a20390ba49764736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xE6 JUMPI CODESIZE SELFDESTRUCT 0x1E PUSH32 0xBAAA6128BE4E2773543D224601DC6A6A540E798A20390BA49764736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "195:6066:21:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 21
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002e65738ff1e7fbaaa6128be4e2773543d224601dc6a6a540e798a20390ba49764736f6c63430008140033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 21
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/ens-contracts/contracts/registry/ENS.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f606af2673c6a5035d2c2ebd2bf43be7bfb3805ba652cfd9bfe90bdc6baadba64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208f606af2673c6a5035d2c2ebd2bf43be7bfb3805ba652cfd9bfe90bdc6baadba64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH1 0x6A CALLCODE PUSH8 0x3C6A5035D2C2EBD2 0xBF NUMBER 0xBE PUSH28 0xFB3805BA652CFD9BFE90BDC6BAADBA64736F6C634300081400330000 ",
							"sourceMap": "1245:2685:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:22;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208f606af2673c6a5035d2c2ebd2bf43be7bfb3805ba652cfd9bfe90bdc6baadba64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH1 0x6A CALLCODE PUSH8 0x3C6A5035D2C2EBD2 0xBF NUMBER 0xBE PUSH28 0xFB3805BA652CFD9BFE90BDC6BAADBA64736F6C634300081400330000 ",
							"sourceMap": "1245:2685:22:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 22
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f606af2673c6a5035d2c2ebd2bf43be7bfb3805ba652cfd9bfe90bdc6baadba64736f6c63430008140033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 22
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 22
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 22
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/ens-contracts/contracts/registry/ENS.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"IDAO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_reference",
									"type": "string"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "actor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "callId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"indexed": false,
									"internalType": "struct IDAO.Action[]",
									"name": "actions",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allowFailureMap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "failureMap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes[]",
									"name": "execResults",
									"type": "bytes[]"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "metadata",
									"type": "bytes"
								}
							],
							"name": "MetadataSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NativeTokenDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "callbackSelector",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "magicNumber",
									"type": "bytes4"
								}
							],
							"name": "StandardCallbackRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "TrustedForwarderSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_reference",
									"type": "string"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_callId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IDAO.Action[]",
									"name": "_actions",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_allowFailureMap",
									"type": "uint256"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "",
									"type": "bytes[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_permissionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "hasPermission",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								},
								{
									"internalType": "bytes4",
									"name": "_callbackSelector",
									"type": "bytes4"
								},
								{
									"internalType": "bytes4",
									"name": "_magicNumber",
									"type": "bytes4"
								}
							],
							"name": "registerStandardCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_metadata",
									"type": "bytes"
								}
							],
							"name": "setMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setSignatureValidator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedForwarder",
									"type": "address"
								}
							],
							"name": "setTrustedForwarder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"events": {
							"Deposited(address,address,uint256,string)": {
								"params": {
									"_reference": "The reference describing the deposit reason.",
									"amount": "The amount of tokens deposited.",
									"sender": "The address of the sender.",
									"token": "The address of the deposited token."
								}
							},
							"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])": {
								"details": "The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.",
								"params": {
									"actions": "The array of actions executed.",
									"actor": "The address of the caller.",
									"allowFailureMap": "The allow failure map encoding which actions are allowed to fail.",
									"callId": "The ID of the call.",
									"execResults": "The array with the results of the executed actions.",
									"failureMap": "The failure map encoding which actions have failed."
								}
							},
							"MetadataSet(bytes)": {
								"params": {
									"metadata": "The IPFS hash of the new metadata object."
								}
							},
							"NativeTokenDeposited(address,uint256)": {
								"details": "This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).",
								"params": {
									"amount": "The amount of native tokens deposited.",
									"sender": "The address of the sender."
								}
							},
							"StandardCallbackRegistered(bytes4,bytes4,bytes4)": {
								"params": {
									"callbackSelector": "The selector of the callback function.",
									"interfaceId": "The ID of the interface.",
									"magicNumber": "The magic number to be registered for the callback function selector."
								}
							},
							"TrustedForwarderSet(address)": {
								"params": {
									"forwarder": "the new forwarder address."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256,string)": {
								"params": {
									"_amount": "The amount of tokens to deposit.",
									"_reference": "The reference describing the deposit reason.",
									"_token": "The address of the token or address(0) in case of the native token."
								}
							},
							"execute(bytes32,(address,uint256,bytes)[],uint256)": {
								"params": {
									"_actions": "The array of actions.",
									"_allowFailureMap": "A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.",
									"_callId": "The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce."
								},
								"returns": {
									"_0": "The array of results obtained from the executed actions in `bytes`.",
									"_1": "The resulting failure map containing the actions have actually failed."
								}
							},
							"getTrustedForwarder()": {
								"returns": {
									"_0": "The trusted forwarder address."
								}
							},
							"hasPermission(address,address,bytes32,bytes)": {
								"params": {
									"_data": "The optional data passed to the `PermissionCondition` registered.",
									"_permissionId": "The permission identifier.",
									"_where": "The address of the contract.",
									"_who": "The address of a EOA or contract to give the permissions."
								},
								"returns": {
									"_0": "Returns true if the address has permission, false if not."
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"params": {
									"_hash": "The hash of the data to be signed.",
									"_signature": "The signature byte array associated with `_hash`."
								},
								"returns": {
									"_0": "Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not."
								}
							},
							"registerStandardCallback(bytes4,bytes4,bytes4)": {
								"params": {
									"_callbackSelector": "The selector of the callback function.",
									"_interfaceId": "The ID of the interface.",
									"_magicNumber": "The magic number to be registered for the function signature."
								}
							},
							"setMetadata(bytes)": {
								"params": {
									"_metadata": "The IPFS hash of the new metadata object."
								}
							},
							"setSignatureValidator(address)": {
								"details": "Introduced in v1.0.0. Removed in v1.4.0."
							},
							"setTrustedForwarder(address)": {
								"params": {
									"_trustedForwarder": "The trusted forwarder address."
								}
							}
						},
						"title": "IDAO",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(address,uint256,string)": "bfe07da6",
							"execute(bytes32,(address,uint256,bytes)[],uint256)": "c71bf324",
							"getTrustedForwarder()": "ce1b815f",
							"hasPermission(address,address,bytes32,bytes)": "fdef9106",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"registerStandardCallback(bytes4,bytes4,bytes4)": "c4a50145",
							"setMetadata(bytes)": "ee57e36f",
							"setSignatureValidator(address)": "3e2ab0d9",
							"setTrustedForwarder(address)": "da742228"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IDAO.Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowFailureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"execResults\",\"type\":\"bytes[]\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"callbackSelector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"magicNumber\",\"type\":\"bytes4\"}],\"name\":\"StandardCallbackRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"TrustedForwarderSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IDAO.Action[]\",\"name\":\"_actions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_allowFailureMap\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_permissionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"_callbackSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"_magicNumber\",\"type\":\"bytes4\"}],\"name\":\"registerStandardCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"setMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setSignatureValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"events\":{\"Deposited(address,address,uint256,string)\":{\"params\":{\"_reference\":\"The reference describing the deposit reason.\",\"amount\":\"The amount of tokens deposited.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"details\":\"The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.\",\"params\":{\"actions\":\"The array of actions executed.\",\"actor\":\"The address of the caller.\",\"allowFailureMap\":\"The allow failure map encoding which actions are allowed to fail.\",\"callId\":\"The ID of the call.\",\"execResults\":\"The array with the results of the executed actions.\",\"failureMap\":\"The failure map encoding which actions have failed.\"}},\"MetadataSet(bytes)\":{\"params\":{\"metadata\":\"The IPFS hash of the new metadata object.\"}},\"NativeTokenDeposited(address,uint256)\":{\"details\":\"This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\",\"params\":{\"amount\":\"The amount of native tokens deposited.\",\"sender\":\"The address of the sender.\"}},\"StandardCallbackRegistered(bytes4,bytes4,bytes4)\":{\"params\":{\"callbackSelector\":\"The selector of the callback function.\",\"interfaceId\":\"The ID of the interface.\",\"magicNumber\":\"The magic number to be registered for the callback function selector.\"}},\"TrustedForwarderSet(address)\":{\"params\":{\"forwarder\":\"the new forwarder address.\"}}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,string)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit.\",\"_reference\":\"The reference describing the deposit reason.\",\"_token\":\"The address of the token or address(0) in case of the native token.\"}},\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"params\":{\"_actions\":\"The array of actions.\",\"_allowFailureMap\":\"A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\",\"_callId\":\"The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\"},\"returns\":{\"_0\":\"The array of results obtained from the executed actions in `bytes`.\",\"_1\":\"The resulting failure map containing the actions have actually failed.\"}},\"getTrustedForwarder()\":{\"returns\":{\"_0\":\"The trusted forwarder address.\"}},\"hasPermission(address,address,bytes32,bytes)\":{\"params\":{\"_data\":\"The optional data passed to the `PermissionCondition` registered.\",\"_permissionId\":\"The permission identifier.\",\"_where\":\"The address of the contract.\",\"_who\":\"The address of a EOA or contract to give the permissions.\"},\"returns\":{\"_0\":\"Returns true if the address has permission, false if not.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_hash\":\"The hash of the data to be signed.\",\"_signature\":\"The signature byte array associated with `_hash`.\"},\"returns\":{\"_0\":\"Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not.\"}},\"registerStandardCallback(bytes4,bytes4,bytes4)\":{\"params\":{\"_callbackSelector\":\"The selector of the callback function.\",\"_interfaceId\":\"The ID of the interface.\",\"_magicNumber\":\"The magic number to be registered for the function signature.\"}},\"setMetadata(bytes)\":{\"params\":{\"_metadata\":\"The IPFS hash of the new metadata object.\"}},\"setSignatureValidator(address)\":{\"details\":\"Introduced in v1.0.0. Removed in v1.4.0.\"},\"setTrustedForwarder(address)\":{\"params\":{\"_trustedForwarder\":\"The trusted forwarder address.\"}}},\"title\":\"IDAO\",\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256,string)\":{\"notice\":\"Emitted when a token deposit has been made to the DAO.\"},\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"notice\":\"Emitted when a proposal is executed.\"},\"MetadataSet(bytes)\":{\"notice\":\"Emitted when the DAO metadata is updated.\"},\"NativeTokenDeposited(address,uint256)\":{\"notice\":\"Emitted when a native token deposit has been made to the DAO.\"},\"StandardCallbackRegistered(bytes4,bytes4,bytes4)\":{\"notice\":\"Emitted when a standard callback is registered.\"},\"TrustedForwarderSet(address)\":{\"notice\":\"Emitted when a new TrustedForwarder is set on the DAO.\"}},\"kind\":\"user\",\"methods\":{\"deposit(address,uint256,string)\":{\"notice\":\"Deposits (native) tokens to the DAO contract with a reference string.\"},\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"notice\":\"Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\"},\"getTrustedForwarder()\":{\"notice\":\"Getter for the trusted forwarder verifying the meta transaction.\"},\"hasPermission(address,address,bytes32,bytes)\":{\"notice\":\"Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\"},\"registerStandardCallback(bytes4,bytes4,bytes4)\":{\"notice\":\"Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\"},\"setMetadata(bytes)\":{\"notice\":\"Updates the DAO metadata (e.g., an IPFS hash).\"},\"setSignatureValidator(address)\":{\"notice\":\"Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\"},\"setTrustedForwarder(address)\":{\"notice\":\"Setter for the trusted forwarder verifying the meta transaction.\"}},\"notice\":\"The interface required for DAOs within the Aragon App DAO framework.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/core/dao/IDAO.sol\":\"IDAO\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposited(address,address,uint256,string)": {
								"notice": "Emitted when a token deposit has been made to the DAO."
							},
							"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])": {
								"notice": "Emitted when a proposal is executed."
							},
							"MetadataSet(bytes)": {
								"notice": "Emitted when the DAO metadata is updated."
							},
							"NativeTokenDeposited(address,uint256)": {
								"notice": "Emitted when a native token deposit has been made to the DAO."
							},
							"StandardCallbackRegistered(bytes4,bytes4,bytes4)": {
								"notice": "Emitted when a standard callback is registered."
							},
							"TrustedForwarderSet(address)": {
								"notice": "Emitted when a new TrustedForwarder is set on the DAO."
							}
						},
						"kind": "user",
						"methods": {
							"deposit(address,uint256,string)": {
								"notice": "Deposits (native) tokens to the DAO contract with a reference string."
							},
							"execute(bytes32,(address,uint256,bytes)[],uint256)": {
								"notice": "Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted."
							},
							"getTrustedForwarder()": {
								"notice": "Getter for the trusted forwarder verifying the meta transaction."
							},
							"hasPermission(address,address,bytes32,bytes)": {
								"notice": "Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process."
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271)."
							},
							"registerStandardCallback(bytes4,bytes4,bytes4)": {
								"notice": "Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature."
							},
							"setMetadata(bytes)": {
								"notice": "Updates the DAO metadata (e.g., an IPFS hash)."
							},
							"setSignatureValidator(address)": {
								"notice": "Removed function being left here to not corrupt the IDAO interface ID. Any call will revert."
							},
							"setTrustedForwarder(address)": {
								"notice": "Setter for the trusted forwarder verifying the meta transaction."
							}
						},
						"notice": "The interface required for DAOs within the Aragon App DAO framework.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol": {
				"DaoAuthorizableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "dao",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"details": "Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"dao()": {
								"returns": {
									"_0": "The DAO contract."
								}
							}
						},
						"title": "DaoAuthorizableUpgradeable",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dao()": "4162169f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"details\":\"Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}}},\"title\":\"DaoAuthorizableUpgradeable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dao()\":{\"notice\":\"Returns the DAO contract.\"}},\"notice\":\"An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":\"DaoAuthorizableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x47c5afa465d550714567ecab77b2dfe15616a92abea5c1e62cb9b74d13308706\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://77d398359d385c36c94fb8504a85e70a0bf790a01ea7673ebff39f9daa46af05\",\"dweb:/ipfs/Qmcso9HQMv8GS2VXE3ZrDWDVpfLQkmc4aH6XD8M5kJbWCF\"]},\"packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x214d611471514ee8c3a21de59447101f1cba44090ee078fa2ba758a2ea5016cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7e51fe2ff30eb754d8ed0a1e4512b35f31d3b7fd1817e277cbfc8721d87fbbf\",\"dweb:/ipfs/QmdLQ1SW4EjRjXMD4pdtJPTDHeZaieYEN3EeiyaV4dDYRX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2103,
								"contract": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol:DaoAuthorizableUpgradeable",
								"label": "dao_",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDAO)2088"
							},
							{
								"astId": 2152,
								"contract": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol:DaoAuthorizableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IDAO)2088": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"dao()": {
								"notice": "Returns the DAO contract."
							}
						},
						"notice": "An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/framework/dao/DAORegistry.sol": {
				"DAORegistry": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractAlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractERC165SupportInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractInterfaceInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dao",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "permissionId",
									"type": "bytes32"
								}
							],
							"name": "DaoUnauthorized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "subdomain",
									"type": "string"
								}
							],
							"name": "InvalidDaoSubdomain",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "subdomain",
									"type": "string"
								}
							],
							"name": "DAORegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REGISTER_DAO_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_REGISTRY_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dao",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "entries",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IDAO",
									"name": "_managingDao",
									"type": "address"
								},
								{
									"internalType": "contract ENSSubdomainRegistrar",
									"name": "_subdomainRegistrar",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IDAO",
									"name": "dao",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "subdomain",
									"type": "string"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "subdomainRegistrar",
							"outputs": [
								{
									"internalType": "contract ENSSubdomainRegistrar",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetInterfaceId",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ContractAlreadyRegistered(address)": [
								{
									"params": {
										"registrant": "The address of the contract to be registered."
									}
								}
							],
							"ContractERC165SupportInvalid(address)": [
								{
									"params": {
										"registrant": "The address of the contract."
									}
								}
							],
							"ContractInterfaceInvalid(address)": [
								{
									"params": {
										"registrant": "The address of the contract to be registered."
									}
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"params": {
										"dao": "The associated DAO.",
										"permissionId": "The permission identifier.",
										"where": "The context in which the authorization reverted.",
										"who": "The address (EOA or contract) missing the permission."
									}
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"DAORegistered(address,address,string)": {
								"params": {
									"creator": "The address of the creator.",
									"dao": "The address of the DAO contract.",
									"subdomain": "The DAO subdomain."
								}
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor",
								"details": "Used to disallow initializing the implementation contract by an attacker for extra safety."
							},
							"dao()": {
								"returns": {
									"_0": "The DAO contract."
								}
							},
							"initialize(address,address)": {
								"params": {
									"_managingDao": "the managing DAO address.",
									"_subdomainRegistrar": "The `ENSSubdomainRegistrar` where `ENS` subdomain will be registered."
								}
							},
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_0": "Returns the semantic Aragon OSx protocol version number."
								}
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"register(address,address,string)": {
								"details": "A subdomain is unique within the Aragon DAO framework and can get stored here.",
								"params": {
									"creator": "The address of the creator.",
									"dao": "The address of the DAO contract.",
									"subdomain": "The DAO subdomain."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"title": "Register your unique DAO subdomain",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":626:3477  contract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1602:1657  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1627:1649  _disableInitializers() */\n  tag_4\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1627:1647  _disableInitializers */\n  tag_5\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1627:1649  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":626:3477  contract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":626:3477  contract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xfd1753e5062fc84b796e3e4549282ff123bc8efd827793b2908817313a959dbe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":626:3477  contract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x52d1902d\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x74574eb7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa2298b4b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xede49739\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf29ee125\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x077393\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2ae9c600\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4162169f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x44162ef8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":956:1003  ENSSubdomainRegistrar public subdomainRegistrar */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      sload(0x64)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":190:241   */\n      dup2\n      mstore\n        /* \"#utility.yul\":178:180   */\n      0x20\n        /* \"#utility.yul\":163:181   */\n      add\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":956:1003  ENSSubdomainRegistrar public subdomainRegistrar */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1193:1265  function dao() public view returns (IDAO) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1229:1233  IDAO */\n      0x00\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1253:1257  dao_ */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1193:1265  function dao() public view returns (IDAO) {... */\n      jump(tag_16)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1184:1215  bytes4 public targetInterfaceId */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      sload(0x32)\n      tag_31\n      swap1\n      0xe0\n      shl\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1141:1174   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1123:1175   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1111:1113   */\n      0x20\n        /* \"#utility.yul\":1096:1114   */\n      add\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1184:1215  bytes4 public targetInterfaceId */\n      tag_18\n        /* \"#utility.yul\":979:1181   */\n      jump\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1869:2134  function initialize(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_7:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":3121:3146   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3109:3111   */\n      0x20\n        /* \"#utility.yul\":3094:3112   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      tag_18\n        /* \"#utility.yul\":2975:3152   */\n      jump\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":928:1034  bytes32 public constant UPGRADE_REGISTRY_PERMISSION_ID =... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_45\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":994:1034  keccak256(\"UPGRADE_REGISTRY_PERMISSION\") */\n      0x60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":928:1034  bytes32 public constant UPGRADE_REGISTRY_PERMISSION_ID =... */\n      dup2\n      jump\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":781:870  bytes32 public constant REGISTER_DAO_PERMISSION_ID = keccak256(\"REGISTER_DAO_PERMISSION\") */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_45\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":834:870  keccak256(\"REGISTER_DAO_PERMISSION\") */\n      0xde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":781:870  bytes32 public constant REGISTER_DAO_PERMISSION_ID = keccak256(\"REGISTER_DAO_PERMISSION\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_58:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2546:3161  function register(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1335:1374  mapping(address => bool) public entries */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      mstore(0x20, 0x33)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_68:\n      mload(0x40)\n        /* \"#utility.yul\":5134:5148   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5127:5149   */\n      iszero\n        /* \"#utility.yul\":5109:5150   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5097:5099   */\n      0x20\n        /* \"#utility.yul\":5082:5100   */\n      add\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1335:1374  mapping(address => bool) public entries */\n      tag_18\n        /* \"#utility.yul\":4969:5156   */\n      jump\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n    tag_22:\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":704:719  uint8[3] memory */\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      pop\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":740:741  1 */\n      0x01\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      dup2\n      mstore\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":743:744  4 */\n      0x04\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n      jump\t// out\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1869:2134  function initialize(... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_81\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_83\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_85:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2008:2075  __InterfaceBasedRegistry_init(_managingDao, type(IDAO).interfaceId) */\n      tag_87\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2038:2050  _managingDao */\n      dup8\n      shl(0xe1, 0x49c2aa3f)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2008:2037  __InterfaceBasedRegistry_init */\n      tag_88\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2008:2075  __InterfaceBasedRegistry_init(_managingDao, type(IDAO).interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2086:2104  subdomainRegistrar */\n      0x64\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2086:2126  subdomainRegistrar = _subdomainRegistrar */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":5314:5364   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":5302:5304   */\n      0x20\n        /* \"#utility.yul\":5287:5305   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1869:2134  function initialize(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_101:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2546:3161  function register(... */\n    tag_66:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      sload(0x00)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":834:870  keccak256(\"REGISTER_DAO_PERMISSION\") */\n      0xde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1677  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_105\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1630:1634  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1637:1649  _msgSender() */\n    tag_106:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1651:1664  _permissionId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":1040:1054  bytes calldata */\n      0x00\n      calldatasize\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1615  _auth */\n      tag_110\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1677  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      jump\t// in\n    tag_105:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2731:2734  dao */\n      dup5\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2748:2766  _register(daoAddr) */\n      tag_112\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2731:2734  dao */\n      dup2\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2748:2757  _register */\n      tag_113\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2748:2766  _register(daoAddr) */\n      jump\t// in\n    tag_112:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2784:2811  bytes(subdomain).length > 0 */\n      dup3\n      iszero\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2779:3094  if ((bytes(subdomain).length > 0)) {... */\n      tag_114\n      jumpi\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2834:2861  isSubdomainValid(subdomain) */\n      tag_115\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2851:2860  subdomain */\n      dup5\n      dup5\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2834:2850  isSubdomainValid */\n      tag_116\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2834:2861  isSubdomainValid(subdomain) */\n      jump\t// in\n    tag_115:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2829:2948  if (!isSubdomainValid(subdomain)) {... */\n      tag_117\n      jumpi\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2921:2930  subdomain */\n      dup4\n      dup4\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2889:2932  InvalidDaoSubdomain({subdomain: subdomain}) */\n      mload(0x40)\n      shl(0xe0, 0x3a5bf49b)\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2829:2948  if (!isSubdomainValid(subdomain)) {... */\n    tag_117:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2964:2981  bytes32 labelhash */\n      0x00\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3000:3009  subdomain */\n      dup5\n      dup5\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2984:3011  keccak256(bytes(subdomain)) */\n      mload(0x40)\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3046  subdomainRegistrar */\n      sload(0x64)\n      shl(0xe0, 0x89bb4145)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3082  subdomainRegistrar.registerSubnode(labelhash, daoAddr) */\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6349:6374   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6410:6442   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":6390:6408   */\n      0x24\n      dup6\n      add\n        /* \"#utility.yul\":6383:6443   */\n      mstore\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2984:3011  keccak256(bytes(subdomain)) */\n      swap2\n      swap4\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3046  subdomainRegistrar */\n      and\n      swap1\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3062  subdomainRegistrar.registerSubnode */\n      0x89bb4145\n      swap1\n        /* \"#utility.yul\":6322:6340   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3082  subdomainRegistrar.registerSubnode(labelhash, daoAddr) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2814:3094  {... */\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2779:3094  if ((bytes(subdomain).length > 0)) {... */\n    tag_114:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3134:3141  creator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3111:3153  DAORegistered(daoAddr, creator, subdomain) */\n      and\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3125:3132  daoAddr */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3111:3153  DAORegistered(daoAddr, creator, subdomain) */\n      and\n      0xbc0b11fe649bb4d67c7fb40936163e5423f45c3ae83fbd8f8f8c75e1a3fa97af\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3143:3152  subdomain */\n      dup7\n      dup7\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3111:3153  DAORegistered(daoAddr, creator, subdomain) */\n      mload(0x40)\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2694:3161  {... */\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2546:3161  function register(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2315:2576  function __InterfaceBasedRegistry_init(... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_130:\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2470:2517  __DaoAuthorizableUpgradeable_init(_managingDao) */\n      tag_133\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2504:2516  _managingDao */\n      dup3\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2470:2503  __DaoAuthorizableUpgradeable_init */\n      tag_134\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2470:2517  __DaoAuthorizableUpgradeable_init(_managingDao) */\n      jump\t// in\n    tag_133:\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2530:2547  targetInterfaceId */\n      0x32\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2530:2568  targetInterfaceId = _targetInterfaceId */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xe0\n      swap3\n      swap1\n      swap3\n      shr\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2315:2576  function __InterfaceBasedRegistry_init(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0xfd1753e5062fc84b796e3e4549282ff123bc8efd827793b2908817313a959dbe\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_136\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0xfd1753e5062fc84b796e3e4549282ff123bc8efd827793b2908817313a959dbe\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_137\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2923:3040  function _authorizeUpgrade(... */\n    tag_97:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      sload(0x00)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":994:1034  keccak256(\"UPGRADE_REGISTRY_PERMISSION\") */\n      0x60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1677  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_98\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1630:1634  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1637:1649  _msgSender() */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_146\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_147\n      swap2\n      dup2\n      add\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      0x01\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":190:241   */\n      mstore\n        /* \"#utility.yul\":163:181   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_118\n        /* \"#utility.yul\":14:247   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_149:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3121:3146   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3094:3112   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_118\n        /* \"#utility.yul\":2975:3152   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0xfd1753e5062fc84b796e3e4549282ff123bc8efd827793b2908817313a959dbe\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/contracts/src/core/utils/auth.sol\":1057:1434  function _auth(... */\n    tag_110:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x7ef7c883)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1221  _dao.hasPermission */\n      dup8\n      and\n      swap1\n      0xfdef9106\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      tag_165\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1222:1228  _where */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1230:1234  _who */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1236:1249  _permissionId */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1251:1256  _data */\n      dup9\n      swap1\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      0x04\n      add\n      tag_166\n      jump\t// in\n    tag_165:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1198:1430  if (!_dao.hasPermission(_where, _who, _permissionId, _data))... */\n      tag_171\n      jumpi\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      mload(0x40)\n      shl(0xe2, 0x0cb6f8ed)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7941:7956   */\n      dup1\n      dup9\n      and\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7923:7957   */\n      mstore\n        /* \"#utility.yul\":7993:8008   */\n      dup1\n      dup8\n      and\n        /* \"#utility.yul\":7973:7991   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7966:8009   */\n      mstore\n        /* \"#utility.yul\":8045:8060   */\n      dup6\n      and\n        /* \"#utility.yul\":8025:8043   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8018:8061   */\n      mstore\n        /* \"#utility.yul\":8077:8095   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":8070:8104   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":7857:7876   */\n      0x84\n      add\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      tag_118\n        /* \"#utility.yul\":7654:8110   */\n      jump\n        /* \"packages/contracts/src/core/utils/auth.sol\":1198:1430  if (!_dao.hasPermission(_where, _who, _permissionId, _data))... */\n    tag_171:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1057:1434  function _auth(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3334:3797  function _register(address _registrant) internal {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3398:3418  entries[_registrant] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3398:3405  entries */\n      0x33\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3398:3418  entries[_registrant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3394:3506  if (entries[_registrant]) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3442:3494  ContractAlreadyRegistered({registrant: _registrant}) */\n      mload(0x40)\n      shl(0xe0, 0xfdcce17f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      dup3\n      and\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3442:3494  ContractAlreadyRegistered({registrant: _registrant}) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":190:241   */\n      mstore\n        /* \"#utility.yul\":163:181   */\n      0x24\n      add\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3442:3494  ContractAlreadyRegistered({registrant: _registrant}) */\n      tag_118\n        /* \"#utility.yul\":14:247   */\n      jump\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3394:3506  if (entries[_registrant]) {... */\n    tag_175:\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3659:3676  targetInterfaceId */\n      sload(0x32)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3629:3677  _registrant.supportsInterface(targetInterfaceId) */\n      tag_177\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3629:3658  _registrant.supportsInterface */\n      dup4\n      and\n      swap1\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3659:3676  targetInterfaceId */\n      0xe0\n      shl\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3629:3658  _registrant.supportsInterface */\n      tag_178\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3629:3677  _registrant.supportsInterface(targetInterfaceId) */\n      jump\t// in\n    tag_177:\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3624:3750  if (!_registrant.supportsInterface(targetInterfaceId)) {... */\n      tag_179\n      jumpi\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3701:3738  ContractInterfaceInvalid(_registrant) */\n      mload(0x40)\n      shl(0xe1, 0x38811e45)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      dup3\n      and\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3701:3738  ContractInterfaceInvalid(_registrant) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":190:241   */\n      mstore\n        /* \"#utility.yul\":163:181   */\n      0x24\n      add\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3701:3738  ContractInterfaceInvalid(_registrant) */\n      tag_118\n        /* \"#utility.yul\":14:247   */\n      jump\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3624:3750  if (!_registrant.supportsInterface(targetInterfaceId)) {... */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3762:3782  entries[_registrant] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3762:3769  entries */\n      0x33\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3762:3782  entries[_registrant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3762:3789  entries[_registrant] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3785:3789  true */\n      0x01\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3762:3789  entries[_registrant] = true */\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3334:3797  function _register(address _registrant) internal {... */\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":658:1341  function isSubdomainValid(string calldata subDomain) pure returns (bool) {... */\n    tag_116:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":725:729  bool */\n      0x00\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":771:780  subDomain */\n      dup3\n      dup3\n      dup1\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":725:729  bool */\n      dup4\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":832:1320  for (uint256 i; i < nameLength; i++) {... */\n    tag_182:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":852:862  nameLength */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":848:849  i */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":848:862  i < nameLength */\n      lt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":832:1320  for (uint256 i; i < nameLength; i++) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":880:890  uint8 char */\n      0x00\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":899:908  nameBytes */\n      dup5\n      dup5\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":909:910  i */\n      dup4\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":899:911  nameBytes[i] */\n      dup2\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n      swap2\n      swap1\n      swap2\n      add\n      calldataload\n      0xf8\n      shr\n      swap2\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":971:973  96 */\n      0x60\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":964:973  char > 96 */\n      dup2\n      gt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":964:987  char > 96 && char < 123 */\n      dup1\n      iszero\n      tag_188\n      jumpi\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":984:987  123 */\n      0x7b\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":977:981  char */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":977:987  char < 123 */\n      0xff\n      and\n      lt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":964:987  char > 96 && char < 123 */\n    tag_188:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":960:1024  if (char > 96 && char < 123) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1004:1012  continue */\n      pop\n      jump(tag_184)\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":960:1024  if (char > 96 && char < 123) {... */\n    tag_189:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1082:1084  47 */\n      0x2f\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1075:1079  char */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1075:1084  char > 47 */\n      0xff\n      and\n      gt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1075:1097  char > 47 && char < 58 */\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1095:1097  58 */\n      0x3a\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1088:1092  char */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1088:1097  char < 58 */\n      0xff\n      and\n      lt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1075:1097  char > 47 && char < 58 */\n    tag_190:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1071:1134  if (char > 47 && char < 58) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1114:1122  continue */\n      pop\n      jump(tag_184)\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1071:1134  if (char > 47 && char < 58) {... */\n    tag_191:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1175:1179  char */\n      dup1\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1175:1185  char == 45 */\n      0xff\n      and\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1183:1185  45 */\n      0x2d\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1175:1185  char == 45 */\n      sub\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1171:1222  if (char == 45) {... */\n      tag_192\n      jumpi\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1202:1210  continue */\n      pop\n      jump(tag_184)\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1171:1222  if (char == 45) {... */\n    tag_192:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1307:1312  false */\n      0x00\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1300:1312  return false */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_181)\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":832:1320  for (uint256 i; i < nameLength; i++) {... */\n    tag_184:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":864:867  i++ */\n      dup1\n      tag_193\n      dup2\n      tag_194\n      jump\t// in\n    tag_193:\n      swap2\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":832:1320  for (uint256 i; i < nameLength; i++) {... */\n      jump(tag_182)\n    tag_183:\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1333:1337  true */\n      0x01\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1326:1337  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":658:1341  function isSubdomainValid(string calldata subDomain) pure returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":997:1107  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_200:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1088:1092  dao_ */\n      0x00\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1088:1099  dao_ = _dao */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":997:1107  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_206\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_207\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_158\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_210\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_98\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_213\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1382:1664  function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1469:1473  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1576:1599  supportsERC165(account) */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1591:1598  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1576:1590  supportsERC165 */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1576:1599  supportsERC165(account) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1576:1657  supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId) */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1603:1657  supportsERC165InterfaceUnchecked(account, interfaceId) */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1636:1643  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1645:1656  interfaceId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1603:1635  supportsERC165InterfaceUnchecked */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1603:1657  supportsERC165InterfaceUnchecked(account, interfaceId) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1569:1657  return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId) */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1382:1664  function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":190:241   */\n      mstore\n        /* \"#utility.yul\":163:181   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_118\n        /* \"#utility.yul\":14:247   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_224:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_232\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_231)\n    tag_232:\n      0x60\n      swap2\n      pop\n    tag_231:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_233\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_234\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":726:1164  function supportsERC165(address account) internal view returns (bool) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":790:794  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":997:1076  supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1030:1037  account */\n      dup3\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":997:1029  supportsERC165InterfaceUnchecked */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":997:1076  supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":997:1157  supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) &&... */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1093:1157  supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID) */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1126:1133  account */\n      dup3\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1093:1125  supportsERC165InterfaceUnchecked */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1093:1157  supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":1092:1157  !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":978:1157  return... */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":726:1164  function supportsERC165(address account) internal view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4454:5112  function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      0x40\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1141:1174   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      0x24\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1123:1175   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":1096:1114   */\n      0x44\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x01ffc9a7)\n      or\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4915:4935  mload(encodedParams) */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4556:4560  bool */\n      0x00\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4556:4560  bool */\n      dup5\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4556:4560  bool */\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4915:4935  mload(encodedParams) */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4880:4887  account */\n      dup11\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4873:4878  30000 */\n      0x7530\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4862:4948  staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20) */\n      staticcall\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4851:4948  success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4975:4991  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4961:4991  returnSize := returndatasize() */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5025:5029  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5019:5030  mload(0x00) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5004:5030  returnValue := mload(0x00) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5064  success */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5086  success && returnSize >= 0x20 */\n      dup1\n      iszero\n      tag_243\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5082:5086  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5068:5078  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5068:5086  returnSize >= 0x20 */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5086  success && returnSize >= 0x20 */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5105  success && returnSize >= 0x20 && returnValue > 0 */\n      dup1\n      iszero\n      tag_244\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5104:5105  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5090:5101  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5090:5105  returnValue > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5105  success && returnSize >= 0x20 && returnValue > 0 */\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":5050:5105  return success && returnSize >= 0x20 && returnValue > 0 */\n      swap8\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":4454:5112  function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_247\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_248\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_218)\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_250\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":190:241   */\n      mstore\n        /* \"#utility.yul\":163:181   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_118\n        /* \"#utility.yul\":14:247   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_251:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      swap3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n      pop\n      jump\t// out\n    tag_75:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":252:753   */\n    tag_24:\n        /* \"#utility.yul\":428:430   */\n      0x60\n        /* \"#utility.yul\":413:431   */\n      dup2\n      add\n        /* \"#utility.yul\":417:426   */\n      dup2\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":386:390   */\n      0x00\n        /* \"#utility.yul\":542:747   */\n    tag_263:\n        /* \"#utility.yul\":556:560   */\n      0x03\n        /* \"#utility.yul\":553:554   */\n      dup2\n        /* \"#utility.yul\":550:561   */\n      lt\n        /* \"#utility.yul\":542:747   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":619:632   */\n      dup2\n      mload\n        /* \"#utility.yul\":634:638   */\n      0xff\n        /* \"#utility.yul\":615:639   */\n      and\n        /* \"#utility.yul\":603:640   */\n      dup4\n      mstore\n        /* \"#utility.yul\":663:667   */\n      0x20\n        /* \"#utility.yul\":687:699   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":722:737   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":576:577   */\n      0x01\n        /* \"#utility.yul\":569:578   */\n      add\n        /* \"#utility.yul\":542:747   */\n      jump(tag_263)\n    tag_265:\n        /* \"#utility.yul\":546:549   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":252:753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1186:1323   */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1267:1298   */\n      dup2\n      and\n        /* \"#utility.yul\":1257:1299   */\n      dup2\n      eq\n        /* \"#utility.yul\":1247:1317   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":1313:1314   */\n      0x00\n        /* \"#utility.yul\":1310:1311   */\n      dup1\n        /* \"#utility.yul\":1303:1315   */\n      revert\n        /* \"#utility.yul\":1328:1771   */\n    tag_38:\n        /* \"#utility.yul\":1439:1445   */\n      0x00\n        /* \"#utility.yul\":1447:1453   */\n      dup1\n        /* \"#utility.yul\":1500:1502   */\n      0x40\n        /* \"#utility.yul\":1488:1497   */\n      dup4\n        /* \"#utility.yul\":1479:1486   */\n      dup6\n        /* \"#utility.yul\":1475:1498   */\n      sub\n        /* \"#utility.yul\":1471:1503   */\n      slt\n        /* \"#utility.yul\":1468:1520   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1516:1517   */\n      0x00\n        /* \"#utility.yul\":1513:1514   */\n      dup1\n        /* \"#utility.yul\":1506:1518   */\n      revert\n        /* \"#utility.yul\":1468:1520   */\n    tag_271:\n        /* \"#utility.yul\":1555:1564   */\n      dup3\n        /* \"#utility.yul\":1542:1565   */\n      calldataload\n        /* \"#utility.yul\":1574:1611   */\n      tag_272\n        /* \"#utility.yul\":1605:1610   */\n      dup2\n        /* \"#utility.yul\":1574:1611   */\n      tag_256\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1630:1635   */\n      swap2\n      pop\n        /* \"#utility.yul\":1687:1689   */\n      0x20\n        /* \"#utility.yul\":1672:1690   */\n      dup4\n      add\n        /* \"#utility.yul\":1659:1691   */\n      calldataload\n        /* \"#utility.yul\":1700:1739   */\n      tag_273\n        /* \"#utility.yul\":1659:1691   */\n      dup2\n        /* \"#utility.yul\":1700:1739   */\n      tag_256\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1758:1765   */\n      dup1\n        /* \"#utility.yul\":1748:1765   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1328:1771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1776:1903   */\n    tag_257:\n        /* \"#utility.yul\":1837:1847   */\n      0x4e487b71\n        /* \"#utility.yul\":1832:1835   */\n      0xe0\n        /* \"#utility.yul\":1828:1848   */\n      shl\n        /* \"#utility.yul\":1825:1826   */\n      0x00\n        /* \"#utility.yul\":1818:1849   */\n      mstore\n        /* \"#utility.yul\":1868:1872   */\n      0x41\n        /* \"#utility.yul\":1865:1866   */\n      0x04\n        /* \"#utility.yul\":1858:1873   */\n      mstore\n        /* \"#utility.yul\":1892:1896   */\n      0x24\n        /* \"#utility.yul\":1889:1890   */\n      0x00\n        /* \"#utility.yul\":1882:1897   */\n      revert\n        /* \"#utility.yul\":1908:2970   */\n    tag_42:\n        /* \"#utility.yul\":1985:1991   */\n      0x00\n        /* \"#utility.yul\":1993:1999   */\n      dup1\n        /* \"#utility.yul\":2046:2048   */\n      0x40\n        /* \"#utility.yul\":2034:2043   */\n      dup4\n        /* \"#utility.yul\":2025:2032   */\n      dup6\n        /* \"#utility.yul\":2021:2044   */\n      sub\n        /* \"#utility.yul\":2017:2049   */\n      slt\n        /* \"#utility.yul\":2014:2066   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":2062:2063   */\n      0x00\n        /* \"#utility.yul\":2059:2060   */\n      dup1\n        /* \"#utility.yul\":2052:2064   */\n      revert\n        /* \"#utility.yul\":2014:2066   */\n    tag_276:\n        /* \"#utility.yul\":2101:2110   */\n      dup3\n        /* \"#utility.yul\":2088:2111   */\n      calldataload\n        /* \"#utility.yul\":2120:2157   */\n      tag_277\n        /* \"#utility.yul\":2151:2156   */\n      dup2\n        /* \"#utility.yul\":2120:2157   */\n      tag_256\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2176:2181   */\n      swap2\n      pop\n        /* \"#utility.yul\":2232:2234   */\n      0x20\n        /* \"#utility.yul\":2217:2235   */\n      dup4\n      add\n        /* \"#utility.yul\":2204:2236   */\n      calldataload\n        /* \"#utility.yul\":2255:2273   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2285:2299   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2282:2316   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2312:2313   */\n      0x00\n        /* \"#utility.yul\":2309:2310   */\n      dup1\n        /* \"#utility.yul\":2302:2314   */\n      revert\n        /* \"#utility.yul\":2282:2316   */\n    tag_278:\n        /* \"#utility.yul\":2350:2356   */\n      dup2\n        /* \"#utility.yul\":2339:2348   */\n      dup6\n        /* \"#utility.yul\":2335:2357   */\n      add\n        /* \"#utility.yul\":2325:2357   */\n      swap2\n      pop\n        /* \"#utility.yul\":2395:2402   */\n      dup6\n        /* \"#utility.yul\":2388:2392   */\n      0x1f\n        /* \"#utility.yul\":2384:2386   */\n      dup4\n        /* \"#utility.yul\":2380:2393   */\n      add\n        /* \"#utility.yul\":2376:2403   */\n      slt\n        /* \"#utility.yul\":2366:2421   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2417:2418   */\n      0x00\n        /* \"#utility.yul\":2414:2415   */\n      dup1\n        /* \"#utility.yul\":2407:2419   */\n      revert\n        /* \"#utility.yul\":2366:2421   */\n    tag_279:\n        /* \"#utility.yul\":2453:2455   */\n      dup2\n        /* \"#utility.yul\":2440:2456   */\n      calldataload\n        /* \"#utility.yul\":2475:2477   */\n      dup2\n        /* \"#utility.yul\":2471:2473   */\n      dup2\n        /* \"#utility.yul\":2468:2478   */\n      gt\n        /* \"#utility.yul\":2465:2501   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2481:2499   */\n      tag_281\n      tag_257\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2556:2558   */\n      0x40\n        /* \"#utility.yul\":2550:2559   */\n      mload\n        /* \"#utility.yul\":2524:2526   */\n      0x1f\n        /* \"#utility.yul\":2610:2623   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2606:2628   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2630:2632   */\n      0x3f\n        /* \"#utility.yul\":2602:2633   */\n      add\n        /* \"#utility.yul\":2598:2638   */\n      and\n        /* \"#utility.yul\":2586:2639   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2654:2672   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2674:2696   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2651:2697   */\n      or\n        /* \"#utility.yul\":2648:2720   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":2700:2718   */\n      tag_283\n      tag_257\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2740:2750   */\n      dup2\n        /* \"#utility.yul\":2736:2738   */\n      0x40\n        /* \"#utility.yul\":2729:2751   */\n      mstore\n        /* \"#utility.yul\":2775:2777   */\n      dup3\n        /* \"#utility.yul\":2767:2773   */\n      dup2\n        /* \"#utility.yul\":2760:2778   */\n      mstore\n        /* \"#utility.yul\":2815:2822   */\n      dup9\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2805:2807   */\n      dup5\n        /* \"#utility.yul\":2801:2803   */\n      dup8\n        /* \"#utility.yul\":2797:2808   */\n      add\n        /* \"#utility.yul\":2793:2813   */\n      add\n        /* \"#utility.yul\":2790:2823   */\n      gt\n        /* \"#utility.yul\":2787:2840   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2836:2837   */\n      0x00\n        /* \"#utility.yul\":2833:2834   */\n      dup1\n        /* \"#utility.yul\":2826:2838   */\n      revert\n        /* \"#utility.yul\":2787:2840   */\n    tag_284:\n        /* \"#utility.yul\":2892:2894   */\n      dup3\n        /* \"#utility.yul\":2887:2889   */\n      0x20\n        /* \"#utility.yul\":2883:2885   */\n      dup7\n        /* \"#utility.yul\":2879:2890   */\n      add\n        /* \"#utility.yul\":2874:2876   */\n      0x20\n        /* \"#utility.yul\":2866:2872   */\n      dup4\n        /* \"#utility.yul\":2862:2877   */\n      add\n        /* \"#utility.yul\":2849:2895   */\n      calldatacopy\n        /* \"#utility.yul\":2937:2938   */\n      0x00\n        /* \"#utility.yul\":2932:2934   */\n      0x20\n        /* \"#utility.yul\":2927:2929   */\n      dup5\n        /* \"#utility.yul\":2919:2925   */\n      dup4\n        /* \"#utility.yul\":2915:2930   */\n      add\n        /* \"#utility.yul\":2911:2935   */\n      add\n        /* \"#utility.yul\":2904:2939   */\n      mstore\n        /* \"#utility.yul\":2958:2964   */\n      dup1\n        /* \"#utility.yul\":2948:2964   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1908:2970   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3157:3407   */\n    tag_258:\n        /* \"#utility.yul\":3242:3243   */\n      0x00\n        /* \"#utility.yul\":3252:3365   */\n    tag_287:\n        /* \"#utility.yul\":3266:3272   */\n      dup4\n        /* \"#utility.yul\":3263:3264   */\n      dup2\n        /* \"#utility.yul\":3260:3273   */\n      lt\n        /* \"#utility.yul\":3252:3365   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":3342:3353   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3336:3354   */\n      mload\n        /* \"#utility.yul\":3323:3334   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3316:3355   */\n      mstore\n        /* \"#utility.yul\":3288:3290   */\n      0x20\n        /* \"#utility.yul\":3281:3291   */\n      add\n        /* \"#utility.yul\":3252:3365   */\n      jump(tag_287)\n    tag_289:\n      pop\n      pop\n        /* \"#utility.yul\":3399:3400   */\n      0x00\n        /* \"#utility.yul\":3381:3397   */\n      swap2\n      add\n        /* \"#utility.yul\":3374:3401   */\n      mstore\n        /* \"#utility.yul\":3157:3407   */\n      jump\t// out\n        /* \"#utility.yul\":3412:3808   */\n    tag_61:\n        /* \"#utility.yul\":3561:3563   */\n      0x20\n        /* \"#utility.yul\":3550:3559   */\n      dup2\n        /* \"#utility.yul\":3543:3564   */\n      mstore\n        /* \"#utility.yul\":3524:3528   */\n      0x00\n        /* \"#utility.yul\":3593:3599   */\n      dup3\n        /* \"#utility.yul\":3587:3600   */\n      mload\n        /* \"#utility.yul\":3636:3642   */\n      dup1\n        /* \"#utility.yul\":3631:3633   */\n      0x20\n        /* \"#utility.yul\":3620:3629   */\n      dup5\n        /* \"#utility.yul\":3616:3634   */\n      add\n        /* \"#utility.yul\":3609:3643   */\n      mstore\n        /* \"#utility.yul\":3652:3731   */\n      tag_291\n        /* \"#utility.yul\":3724:3730   */\n      dup2\n        /* \"#utility.yul\":3719:3721   */\n      0x40\n        /* \"#utility.yul\":3708:3717   */\n      dup6\n        /* \"#utility.yul\":3704:3722   */\n      add\n        /* \"#utility.yul\":3699:3701   */\n      0x20\n        /* \"#utility.yul\":3691:3697   */\n      dup8\n        /* \"#utility.yul\":3687:3702   */\n      add\n        /* \"#utility.yul\":3652:3731   */\n      tag_258\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3792:3794   */\n      0x1f\n        /* \"#utility.yul\":3771:3786   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3767:3796   */\n      and\n        /* \"#utility.yul\":3752:3797   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3799:3801   */\n      0x40\n        /* \"#utility.yul\":3748:3802   */\n      add\n      swap3\n        /* \"#utility.yul\":3412:3808   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3813:4706   */\n    tag_65:\n        /* \"#utility.yul\":3915:3921   */\n      0x00\n        /* \"#utility.yul\":3923:3929   */\n      dup1\n        /* \"#utility.yul\":3931:3937   */\n      0x00\n        /* \"#utility.yul\":3939:3945   */\n      dup1\n        /* \"#utility.yul\":3992:3994   */\n      0x60\n        /* \"#utility.yul\":3980:3989   */\n      dup6\n        /* \"#utility.yul\":3971:3978   */\n      dup8\n        /* \"#utility.yul\":3967:3990   */\n      sub\n        /* \"#utility.yul\":3963:3995   */\n      slt\n        /* \"#utility.yul\":3960:4012   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4008:4009   */\n      0x00\n        /* \"#utility.yul\":4005:4006   */\n      dup1\n        /* \"#utility.yul\":3998:4010   */\n      revert\n        /* \"#utility.yul\":3960:4012   */\n    tag_293:\n        /* \"#utility.yul\":4047:4056   */\n      dup5\n        /* \"#utility.yul\":4034:4057   */\n      calldataload\n        /* \"#utility.yul\":4066:4103   */\n      tag_294\n        /* \"#utility.yul\":4097:4102   */\n      dup2\n        /* \"#utility.yul\":4066:4103   */\n      tag_256\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4122:4127   */\n      swap4\n      pop\n        /* \"#utility.yul\":4179:4181   */\n      0x20\n        /* \"#utility.yul\":4164:4182   */\n      dup6\n      add\n        /* \"#utility.yul\":4151:4183   */\n      calldataload\n        /* \"#utility.yul\":4192:4231   */\n      tag_295\n        /* \"#utility.yul\":4151:4183   */\n      dup2\n        /* \"#utility.yul\":4192:4231   */\n      tag_256\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4250:4257   */\n      swap3\n      pop\n        /* \"#utility.yul\":4308:4310   */\n      0x40\n        /* \"#utility.yul\":4293:4311   */\n      dup6\n      add\n        /* \"#utility.yul\":4280:4312   */\n      calldataload\n        /* \"#utility.yul\":4331:4349   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4361:4375   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4358:4392   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":4388:4389   */\n      0x00\n        /* \"#utility.yul\":4385:4386   */\n      dup1\n        /* \"#utility.yul\":4378:4390   */\n      revert\n        /* \"#utility.yul\":4358:4392   */\n    tag_296:\n        /* \"#utility.yul\":4426:4432   */\n      dup2\n        /* \"#utility.yul\":4415:4424   */\n      dup8\n        /* \"#utility.yul\":4411:4433   */\n      add\n        /* \"#utility.yul\":4401:4433   */\n      swap2\n      pop\n        /* \"#utility.yul\":4471:4478   */\n      dup8\n        /* \"#utility.yul\":4464:4468   */\n      0x1f\n        /* \"#utility.yul\":4460:4462   */\n      dup4\n        /* \"#utility.yul\":4456:4469   */\n      add\n        /* \"#utility.yul\":4452:4479   */\n      slt\n        /* \"#utility.yul\":4442:4497   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":4493:4494   */\n      0x00\n        /* \"#utility.yul\":4490:4491   */\n      dup1\n        /* \"#utility.yul\":4483:4495   */\n      revert\n        /* \"#utility.yul\":4442:4497   */\n    tag_297:\n        /* \"#utility.yul\":4533:4535   */\n      dup2\n        /* \"#utility.yul\":4520:4536   */\n      calldataload\n        /* \"#utility.yul\":4559:4561   */\n      dup2\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4548:4562   */\n      gt\n        /* \"#utility.yul\":4545:4579   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4572:4573   */\n      dup1\n        /* \"#utility.yul\":4565:4577   */\n      revert\n        /* \"#utility.yul\":4545:4579   */\n    tag_298:\n        /* \"#utility.yul\":4620:4627   */\n      dup9\n        /* \"#utility.yul\":4615:4617   */\n      0x20\n        /* \"#utility.yul\":4606:4612   */\n      dup3\n        /* \"#utility.yul\":4602:4604   */\n      dup6\n        /* \"#utility.yul\":4598:4613   */\n      add\n        /* \"#utility.yul\":4594:4618   */\n      add\n        /* \"#utility.yul\":4591:4628   */\n      gt\n        /* \"#utility.yul\":4588:4645   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4641:4642   */\n      0x00\n        /* \"#utility.yul\":4638:4639   */\n      dup1\n        /* \"#utility.yul\":4631:4643   */\n      revert\n        /* \"#utility.yul\":4588:4645   */\n    tag_299:\n        /* \"#utility.yul\":3813:4706   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":4672:4674   */\n      0x20\n        /* \"#utility.yul\":4664:4675   */\n      add\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3813:4706   */\n      jump\t// out\n        /* \"#utility.yul\":4711:4964   */\n    tag_70:\n        /* \"#utility.yul\":4770:4776   */\n      0x00\n        /* \"#utility.yul\":4823:4825   */\n      0x20\n        /* \"#utility.yul\":4811:4820   */\n      dup3\n        /* \"#utility.yul\":4802:4809   */\n      dup5\n        /* \"#utility.yul\":4798:4821   */\n      sub\n        /* \"#utility.yul\":4794:4826   */\n      slt\n        /* \"#utility.yul\":4791:4843   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4836:4837   */\n      dup1\n        /* \"#utility.yul\":4829:4841   */\n      revert\n        /* \"#utility.yul\":4791:4843   */\n    tag_301:\n        /* \"#utility.yul\":4878:4887   */\n      dup2\n        /* \"#utility.yul\":4865:4888   */\n      calldataload\n        /* \"#utility.yul\":4897:4934   */\n      tag_218\n        /* \"#utility.yul\":4928:4933   */\n      dup2\n        /* \"#utility.yul\":4897:4934   */\n      tag_256\n      jump\t// in\n        /* \"#utility.yul\":5375:5642   */\n    tag_259:\n        /* \"#utility.yul\":5464:5470   */\n      dup2\n        /* \"#utility.yul\":5459:5462   */\n      dup4\n        /* \"#utility.yul\":5452:5471   */\n      mstore\n        /* \"#utility.yul\":5516:5522   */\n      dup2\n        /* \"#utility.yul\":5509:5514   */\n      dup2\n        /* \"#utility.yul\":5502:5506   */\n      0x20\n        /* \"#utility.yul\":5497:5500   */\n      dup6\n        /* \"#utility.yul\":5493:5507   */\n      add\n        /* \"#utility.yul\":5480:5523   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":5568:5569   */\n      0x00\n        /* \"#utility.yul\":5543:5559   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5561:5565   */\n      0x20\n        /* \"#utility.yul\":5539:5566   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":5532:5570   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5624:5626   */\n      0x1f\n        /* \"#utility.yul\":5603:5618   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5599:5628   */\n      and\n        /* \"#utility.yul\":5590:5629   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5586:5636   */\n      add\n      swap1\n        /* \"#utility.yul\":5375:5642   */\n      jump\t// out\n        /* \"#utility.yul\":5647:5894   */\n    tag_119:\n        /* \"#utility.yul\":5806:5808   */\n      0x20\n        /* \"#utility.yul\":5795:5804   */\n      dup2\n        /* \"#utility.yul\":5788:5809   */\n      mstore\n        /* \"#utility.yul\":5769:5773   */\n      0x00\n        /* \"#utility.yul\":5826:5888   */\n      tag_307\n        /* \"#utility.yul\":5884:5886   */\n      0x20\n        /* \"#utility.yul\":5873:5882   */\n      dup4\n        /* \"#utility.yul\":5869:5887   */\n      add\n        /* \"#utility.yul\":5861:5867   */\n      dup5\n        /* \"#utility.yul\":5853:5859   */\n      dup7\n        /* \"#utility.yul\":5826:5888   */\n      tag_259\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5818:5888   */\n      swap5\n        /* \"#utility.yul\":5647:5894   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6170   */\n    tag_121:\n        /* \"#utility.yul\":6082:6088   */\n      dup2\n        /* \"#utility.yul\":6074:6080   */\n      dup4\n        /* \"#utility.yul\":6069:6072   */\n      dup3\n        /* \"#utility.yul\":6056:6089   */\n      calldatacopy\n        /* \"#utility.yul\":6038:6041   */\n      0x00\n        /* \"#utility.yul\":6108:6124   */\n      swap2\n      add\n        /* \"#utility.yul\":6133:6146   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6108:6124   */\n      swap2\n        /* \"#utility.yul\":5899:6170   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6454:6638   */\n    tag_148:\n        /* \"#utility.yul\":6524:6530   */\n      0x00\n        /* \"#utility.yul\":6577:6579   */\n      0x20\n        /* \"#utility.yul\":6565:6574   */\n      dup3\n        /* \"#utility.yul\":6556:6563   */\n      dup5\n        /* \"#utility.yul\":6552:6575   */\n      sub\n        /* \"#utility.yul\":6548:6580   */\n      slt\n        /* \"#utility.yul\":6545:6597   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":6593:6594   */\n      0x00\n        /* \"#utility.yul\":6590:6591   */\n      dup1\n        /* \"#utility.yul\":6583:6595   */\n      revert\n        /* \"#utility.yul\":6545:6597   */\n    tag_311:\n      pop\n        /* \"#utility.yul\":6616:6632   */\n      mload\n      swap2\n        /* \"#utility.yul\":6454:6638   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6851:7367   */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7130:7145   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7112:7146   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7182:7197   */\n      dup6\n      and\n        /* \"#utility.yul\":7177:7179   */\n      0x20\n        /* \"#utility.yul\":7162:7180   */\n      dup3\n      add\n        /* \"#utility.yul\":7155:7198   */\n      mstore\n        /* \"#utility.yul\":7229:7231   */\n      0x40\n        /* \"#utility.yul\":7214:7232   */\n      dup2\n      add\n        /* \"#utility.yul\":7207:7241   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":7277:7280   */\n      0x80\n        /* \"#utility.yul\":7272:7274   */\n      0x60\n        /* \"#utility.yul\":7257:7275   */\n      dup3\n      add\n        /* \"#utility.yul\":7250:7281   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7055:7059   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7298:7361   */\n      tag_244\n      swap1\n        /* \"#utility.yul\":7341:7360   */\n      dup4\n      add\n        /* \"#utility.yul\":7333:7339   */\n      dup5\n        /* \"#utility.yul\":7325:7331   */\n      dup7\n        /* \"#utility.yul\":7298:7361   */\n      tag_259\n      jump\t// in\n        /* \"#utility.yul\":7372:7649   */\n    tag_170:\n        /* \"#utility.yul\":7439:7445   */\n      0x00\n        /* \"#utility.yul\":7492:7494   */\n      0x20\n        /* \"#utility.yul\":7480:7489   */\n      dup3\n        /* \"#utility.yul\":7471:7478   */\n      dup5\n        /* \"#utility.yul\":7467:7490   */\n      sub\n        /* \"#utility.yul\":7463:7495   */\n      slt\n        /* \"#utility.yul\":7460:7512   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":7508:7509   */\n      0x00\n        /* \"#utility.yul\":7505:7506   */\n      dup1\n        /* \"#utility.yul\":7498:7510   */\n      revert\n        /* \"#utility.yul\":7460:7512   */\n    tag_316:\n        /* \"#utility.yul\":7540:7549   */\n      dup2\n        /* \"#utility.yul\":7534:7550   */\n      mload\n        /* \"#utility.yul\":7593:7598   */\n      dup1\n        /* \"#utility.yul\":7586:7599   */\n      iszero\n        /* \"#utility.yul\":7579:7600   */\n      iszero\n        /* \"#utility.yul\":7572:7577   */\n      dup2\n        /* \"#utility.yul\":7569:7601   */\n      eq\n        /* \"#utility.yul\":7559:7619   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":7615:7616   */\n      0x00\n        /* \"#utility.yul\":7612:7613   */\n      dup1\n        /* \"#utility.yul\":7605:7617   */\n      revert\n        /* \"#utility.yul\":8115:8242   */\n    tag_187:\n        /* \"#utility.yul\":8176:8186   */\n      0x4e487b71\n        /* \"#utility.yul\":8171:8174   */\n      0xe0\n        /* \"#utility.yul\":8167:8187   */\n      shl\n        /* \"#utility.yul\":8164:8165   */\n      0x00\n        /* \"#utility.yul\":8157:8188   */\n      mstore\n        /* \"#utility.yul\":8207:8211   */\n      0x32\n        /* \"#utility.yul\":8204:8205   */\n      0x04\n        /* \"#utility.yul\":8197:8212   */\n      mstore\n        /* \"#utility.yul\":8231:8235   */\n      0x24\n        /* \"#utility.yul\":8228:8229   */\n      0x00\n        /* \"#utility.yul\":8221:8236   */\n      revert\n        /* \"#utility.yul\":8247:8479   */\n    tag_194:\n        /* \"#utility.yul\":8286:8289   */\n      0x00\n        /* \"#utility.yul\":8307:8324   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8304:8444   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":8366:8376   */\n      0x4e487b71\n        /* \"#utility.yul\":8361:8364   */\n      0xe0\n        /* \"#utility.yul\":8357:8377   */\n      shl\n        /* \"#utility.yul\":8354:8355   */\n      0x00\n        /* \"#utility.yul\":8347:8378   */\n      mstore\n        /* \"#utility.yul\":8401:8405   */\n      0x11\n        /* \"#utility.yul\":8398:8399   */\n      0x04\n        /* \"#utility.yul\":8391:8406   */\n      mstore\n        /* \"#utility.yul\":8429:8433   */\n      0x24\n        /* \"#utility.yul\":8426:8427   */\n      0x00\n        /* \"#utility.yul\":8419:8434   */\n      revert\n        /* \"#utility.yul\":8304:8444   */\n    tag_321:\n      pop\n        /* \"#utility.yul\":8471:8472   */\n      0x01\n        /* \"#utility.yul\":8460:8473   */\n      add\n      swap1\n        /* \"#utility.yul\":8247:8479   */\n      jump\t// out\n        /* \"#utility.yul\":8484:8771   */\n    tag_229:\n        /* \"#utility.yul\":8613:8616   */\n      0x00\n        /* \"#utility.yul\":8651:8657   */\n      dup3\n        /* \"#utility.yul\":8645:8658   */\n      mload\n        /* \"#utility.yul\":8667:8733   */\n      tag_323\n        /* \"#utility.yul\":8726:8732   */\n      dup2\n        /* \"#utility.yul\":8721:8724   */\n      dup5\n        /* \"#utility.yul\":8714:8718   */\n      0x20\n        /* \"#utility.yul\":8706:8712   */\n      dup8\n        /* \"#utility.yul\":8702:8719   */\n      add\n        /* \"#utility.yul\":8667:8733   */\n      tag_258\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8749:8765   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":8484:8771   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n\n    auxdata: 0xa2646970667358221220511c52b1c1e0d9fbfc990d22ad5a6696056ca5c76ba22cf8a92a924aeae32e8864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2252": {
									"entryPoint": null,
									"id": 2252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_780": {
									"entryPoint": 33,
									"id": 780,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_811": {
									"entryPoint": null,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:216:33",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:33",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "113:101:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "123:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "196:2:33",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "200:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "204:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "158:50:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "158:50:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "82:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "104:4:33",
														"type": ""
													}
												],
												"src": "14:200:33"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 33,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1097 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x5C4 ADD MSTORE DUP2 DUP2 PUSH2 0x5ED ADD MSTORE PUSH2 0x763 ADD MSTORE PUSH2 0x1097 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x62 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x74574EB7 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xA2298B4B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xEDE49739 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xF29EE125 EQ PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x77393 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x2AE9C600 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x44162EF8 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x174 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x64 SLOAD PUSH2 0xC7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xCE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x32 SLOAD PUSH2 0x13A SWAP1 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x2D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x172 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH32 0x60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH32 0xDE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xE5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0xCCB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x333 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x341 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x389 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x39A DUP8 PUSH4 0x49C2AA3F PUSH1 0xE1 SHL PUSH2 0x58E JUMP JUMPDEST PUSH1 0x64 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x3FB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x40C PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x415 DUP3 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x41F DUP3 DUP3 PUSH2 0x697 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x42C PUSH2 0x758 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1042 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH32 0xDE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215 SWAP1 PUSH2 0x47A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER JUMPDEST DUP5 PUSH0 CALLDATASIZE PUSH2 0x7A1 JUMP JUMPDEST DUP5 PUSH2 0x484 DUP2 PUSH2 0x85B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x539 JUMPI PUSH2 0x494 DUP5 DUP5 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x4BE JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH4 0x3A5BF49B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP3 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP3 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x64 SLOAD PUSH4 0x89BB4145 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP6 ADD MSTORE SWAP2 SWAP4 POP AND SWAP1 PUSH4 0x89BB4145 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBC0B11FE649BB4D67C7FB40936163E5423F45C3AE83FBD8F8F8C75E1A3FA97AF DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x57E SWAP3 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x596 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x59F DUP3 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x63F JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x633 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1042 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH32 0x60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932 SWAP1 PUSH2 0x41F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x472 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x6F1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x6EE SWAP2 DUP2 ADD SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1042 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x753 DUP4 DUP4 PUSH2 0xA20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7EF7C883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFDEF9106 SWAP1 PUSH2 0x7D5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x814 SWAP2 SWAP1 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB6F8ED PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH4 0xFDCCE17F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH2 0x8B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0xE0 SHL PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x38811E45 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x99F JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x925 JUMPI PUSH2 0x925 PUSH2 0xFEE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x60 DUP2 GT DUP1 ISZERO PUSH2 0x943 JUMPI POP PUSH1 0x7B DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0x94E JUMPI POP PUSH2 0x98D JUMP JUMPDEST PUSH1 0x2F DUP2 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x964 JUMPI POP PUSH1 0x3A DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0x96F JUMPI POP PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2D SUB PUSH2 0x980 JUMPI POP PUSH2 0x98D JUMP JUMPDEST PUSH0 SWAP6 POP POP POP POP POP POP PUSH2 0x9A8 JUMP JUMPDEST DUP1 PUSH2 0x997 DUP2 PUSH2 0x1002 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FF PUSH2 0x9AE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA29 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xA6D JUMPI PUSH2 0x753 DUP3 DUP3 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x41F PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH2 0xA7F DUP4 PUSH2 0xB8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA90 JUMPI POP PUSH2 0xA90 DUP4 DUP4 PUSH2 0xBBD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1042 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB63 DUP6 DUP4 DUP4 PUSH2 0xC43 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB9D DUP3 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0xBBD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9A8 JUMPI POP PUSH2 0xBB6 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xBBD JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xC2D JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC38 JUMPI POP PUSH0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC58 JUMPI PUSH2 0xC53 DUP3 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xC6F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xCAF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP4 PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xD13 JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCF1 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD41 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD4C DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xD5C DUP2 PUSH2 0xD1C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD8C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD97 DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDC6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDD8 JUMPI PUSH2 0xDD8 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE00 JUMPI PUSH2 0xE00 PUSH2 0xD67 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xE18 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE53 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3B JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xE79 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xEAB DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xEBB DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xED7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEEA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xF09 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF28 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA90 DUP2 PUSH2 0xD1C JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xF6E PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0xF33 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xC38 SWAP1 DUP4 ADD DUP5 DUP7 PUSH2 0xF33 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA90 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x101F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1037 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xE39 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122051 SHR MSTORE 0xB1 0xC1 0xE0 0xD9 0xFB 0xFC SWAP10 0xD 0x22 0xAD GAS PUSH7 0x96056CA5C76BA2 0x2C 0xF8 0xA9 0x2A SWAP3 0x4A 0xEA 0xE3 0x2E DUP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "626:2851:27:-:0;;;1171:4:14;1128:48;;1602:55:27;;;;;;;;;-1:-1:-1;1627:22:27;:20;:22::i;:::-;626:2851;;7711:422:13;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:13;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:13;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:13;-1:-1:-1;;;;;8035:33:13;;;;;8087:29;;158:50:33;;;8087:29:13;;146:2:33;131:18;8087:29:13;;;;;;;7981:146;7760:373;7711:422::o;14:200:33:-;626:2851:27;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REGISTER_DAO_PERMISSION_ID_2226": {
									"entryPoint": null,
									"id": 2226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_REGISTRY_PERMISSION_ID_2375": {
									"entryPoint": null,
									"id": 2375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__DaoAuthorizableUpgradeable_init_2117": {
									"entryPoint": 2551,
									"id": 2117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__InterfaceBasedRegistry_init_2418": {
									"entryPoint": 1422,
									"id": 2418,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_auth_2203": {
									"entryPoint": 1953,
									"id": 2203,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2429": {
									"entryPoint": 1631,
									"id": 2429,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_734": {
									"entryPoint": 2478,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1550": {
									"entryPoint": 2924,
									"id": 1550,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_942": {
									"entryPoint": 1880,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_926": {
									"entryPoint": 1465,
									"id": 926,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_811": {
									"entryPoint": null,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgData_1031": {
									"entryPoint": null,
									"id": 1031,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_msgSender_1022": {
									"entryPoint": null,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_register_2462": {
									"entryPoint": 2139,
									"id": 2462,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revert_1813": {
									"entryPoint": 3231,
									"id": 1813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1336": {
									"entryPoint": 2711,
									"id": 1336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_993": {
									"entryPoint": 1687,
									"id": 993,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@dao_2127": {
									"entryPoint": null,
									"id": 2127,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@entries_2383": {
									"entryPoint": null,
									"id": 2383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1733": {
									"entryPoint": 2810,
									"id": 1733,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1846": {
									"entryPoint": null,
									"id": 1846,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1309": {
									"entryPoint": null,
									"id": 1309,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2277": {
									"entryPoint": 722,
									"id": 2277,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isSubdomainValid_2541": {
									"entryPoint": 2308,
									"id": 2541,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@protocolVersion_2800": {
									"entryPoint": 681,
									"id": 2800,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_884": {
									"entryPoint": 1059,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@register_2345": {
									"entryPoint": 1086,
									"id": 2345,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@subdomainRegistrar_2230": {
									"entryPoint": null,
									"id": 2230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsERC165InterfaceUnchecked_1225": {
									"entryPoint": 3005,
									"id": 1225,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsERC165_1062": {
									"entryPoint": 2955,
									"id": 1062,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1082": {
									"entryPoint": 2677,
									"id": 1082,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@targetInterfaceId_2378": {
									"entryPoint": null,
									"id": 2378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1370": {
									"entryPoint": 2592,
									"id": 1370,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_904": {
									"entryPoint": 1028,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1773": {
									"entryPoint": 3139,
									"id": 1773,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 3451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IDAO_$2088t_addresst_string_calldata_ptr": {
									"entryPoint": 3725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_IDAO_$2088t_contract$_ENSSubdomainRegistrar_$2767": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string_calldata": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3958,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ENSSubdomainRegistrar_$2767__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDAO_$2088__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IDAO": {
									"entryPoint": 3356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8773:33",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:33",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "145:102:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "155:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "178:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "163:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "163:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "155:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "197:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "212:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "228:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "233:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "224:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "224:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "237:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "208:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "208:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "190:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "190:51:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "190:51:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ENSSubdomainRegistrar_$2767__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "114:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "125:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "136:4:33",
														"type": ""
													}
												],
												"src": "14:233:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "395:358:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "405:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "417:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "428:2:33",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "413:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "405:4:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "440:20:33",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "451:9:33"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "444:3:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "469:16:33",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "476:9:33"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "469:3:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:20:33",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "508:6:33"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "498:6:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "523:10:33",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "532:1:33",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "527:1:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "589:158:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "610:3:33"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "625:6:33"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "619:5:33"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "619:13:33"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "634:4:33",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "615:3:33"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "615:24:33"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "603:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "603:37:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "603:37:33"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "653:14:33",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "663:4:33",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "657:2:33",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "680:19:33",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "691:3:33"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "696:2:33"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "687:3:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "687:12:33"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "680:3:33"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "712:25:33",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "726:6:33"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "734:2:33"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "722:3:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "722:15:33"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "712:6:33"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "553:1:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:4:33",
																		"type": "",
																		"value": "0x03"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "550:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "550:11:33"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "562:18:33",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "564:14:33",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "573:1:33"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:33",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "569:3:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "569:9:33"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "564:1:33"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "546:3:33",
																"statements": []
															},
															"src": "542:205:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "364:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "375:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "386:4:33",
														"type": ""
													}
												],
												"src": "252:501:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:102:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "894:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "890:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "882:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "924:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "939:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "955:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "960:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "951:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "951:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "964:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "947:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "947:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "935:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "917:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "917:51:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "917:51:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDAO_$2088__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "841:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "852:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "863:4:33",
														"type": ""
													}
												],
												"src": "758:216:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:103:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1088:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1100:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1111:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1096:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1088:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1130:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1145:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1157:3:33",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1162:10:33",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1153:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1153:20:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1141:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1141:33:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1123:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:52:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1123:52:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1047:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1058:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1069:4:33",
														"type": ""
													}
												],
												"src": "979:202:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1237:86:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1301:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1310:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1313:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1303:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1303:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1303:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1260:5:33"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1271:5:33"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1286:3:33",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1291:1:33",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1282:3:33"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1282:11:33"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1295:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1278:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1278:19:33"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1267:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1267:31:33"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1257:2:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:42:33"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1250:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1250:50:33"
															},
															"nodeType": "YulIf",
															"src": "1247:70:33"
														}
													]
												},
												"name": "validator_revert_contract_IDAO",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1226:5:33",
														"type": ""
													}
												],
												"src": "1186:137:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1458:313:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1504:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1513:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1516:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1506:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1506:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1506:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1479:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1488:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1475:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1471:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:32:33"
															},
															"nodeType": "YulIf",
															"src": "1468:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1529:36:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1555:9:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1542:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:23:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1533:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1605:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IDAO",
																	"nodeType": "YulIdentifier",
																	"src": "1574:30:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:37:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1574:37:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1620:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1630:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1644:47:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1676:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1687:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1672:18:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1659:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1659:32:33"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1648:7:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1731:7:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IDAO",
																	"nodeType": "YulIdentifier",
																	"src": "1700:30:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:39:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:39:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1748:17:33",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1758:7:33"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IDAO_$2088t_contract$_ENSSubdomainRegistrar_$2767",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1416:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1427:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1439:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1447:6:33",
														"type": ""
													}
												],
												"src": "1328:443:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:95:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:1:33",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1832:3:33",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1837:10:33",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1828:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1828:20:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1818:31:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1865:1:33",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1868:4:33",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:15:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:15:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1889:1:33",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1892:4:33",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1882:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:15:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1882:15:33"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1776:127:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2004:966:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2050:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2052:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2052:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2052:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2025:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2034:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2021:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2046:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2017:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:32:33"
															},
															"nodeType": "YulIf",
															"src": "2014:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2075:36:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2088:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:23:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2079:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2151:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IDAO",
																	"nodeType": "YulIdentifier",
																	"src": "2120:30:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:37:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2120:37:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2166:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2176:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2190:46:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2221:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2232:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2217:18:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2204:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:32:33"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2194:6:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2245:28:33",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2255:18:33",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2249:2:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2300:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2309:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2302:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2302:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2302:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2288:6:33"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2296:2:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2285:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:14:33"
															},
															"nodeType": "YulIf",
															"src": "2282:34:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2325:32:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2339:9:33"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:33"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:22:33"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2329:2:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2405:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2414:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2417:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2407:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2407:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2407:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2384:2:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2388:4:33",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2380:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2380:13:33"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2395:7:33"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2376:27:33"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2369:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:35:33"
															},
															"nodeType": "YulIf",
															"src": "2366:55:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2430:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2453:2:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2440:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:16:33"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2434:2:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2479:22:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2471:2:33"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2475:2:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2468:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:10:33"
															},
															"nodeType": "YulIf",
															"src": "2465:36:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2510:17:33",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:2:33",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2520:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:7:33"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2514:2:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2536:23:33",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2556:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2550:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:9:33"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2540:6:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2568:71:33",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2590:6:33"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2614:2:33"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2618:4:33",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2610:3:33"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2610:13:33"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2625:2:33"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2606:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2606:22:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2630:2:33",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2602:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2602:31:33"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2635:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:40:33"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2586:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2586:53:33"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2572:10:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2698:22:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2700:16:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2700:18:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2700:18:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2657:10:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2669:2:33"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2654:2:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2654:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2677:10:33"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2689:6:33"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2674:2:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2674:22:33"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2651:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:46:33"
															},
															"nodeType": "YulIf",
															"src": "2648:72:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2736:2:33",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2740:10:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2729:22:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2729:22:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2767:6:33"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2775:2:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2760:18:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2760:18:33"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2824:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2833:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2836:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2826:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2826:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2826:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2801:2:33"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2805:2:33"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2797:11:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2810:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2793:20:33"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2815:7:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2790:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:33:33"
															},
															"nodeType": "YulIf",
															"src": "2787:53:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2874:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2862:15:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2883:2:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2879:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2879:11:33"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2892:2:33"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2849:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:46:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2849:46:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2919:6:33"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2927:2:33"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2915:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2915:15:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2932:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2911:24:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:33",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2904:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:35:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2904:35:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2948:16:33",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2958:6:33"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1962:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1973:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1985:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1993:6:33",
														"type": ""
													}
												],
												"src": "1908:1062:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3076:76:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3086:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3098:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3109:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3094:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3086:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3128:9:33"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3139:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3121:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:25:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3121:25:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3045:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3056:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3067:4:33",
														"type": ""
													}
												],
												"src": "2975:177:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3223:184:33",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3233:10:33",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3242:1:33",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3237:1:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3302:63:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3327:3:33"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3332:1:33"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3323:3:33"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3323:11:33"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3346:3:33"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3351:1:33"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3342:3:33"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3342:11:33"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3336:5:33"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3336:18:33"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3316:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3316:39:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3316:39:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3263:1:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3266:6:33"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3260:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:13:33"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3274:19:33",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3276:15:33",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3285:1:33"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3288:2:33",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3281:3:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3281:10:33"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3276:1:33"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3256:3:33",
																"statements": []
															},
															"src": "3252:113:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3385:3:33"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3390:6:33"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3381:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:16:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:33",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3374:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3374:27:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3374:27:33"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3201:3:33",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3206:3:33",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3211:6:33",
														"type": ""
													}
												],
												"src": "3157:250:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3533:275:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3550:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3561:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3543:21:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3543:21:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3573:27:33",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3587:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:13:33"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3577:6:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3620:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3631:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:18:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3636:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3609:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3691:6:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3699:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:15:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3708:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3719:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3704:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3704:18:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3724:6:33"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3652:34:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:79:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3652:79:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3740:62:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3756:9:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3775:6:33"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3783:2:33",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3771:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3771:15:33"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3792:2:33",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3788:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3788:7:33"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3767:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3767:29:33"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3752:45:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3748:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3748:54:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3740:4:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3502:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3513:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3524:4:33",
														"type": ""
													}
												],
												"src": "3412:396:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3950:756:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4005:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4008:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3998:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3998:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3998:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3971:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3980:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3967:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3967:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3992:2:33",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:32:33"
															},
															"nodeType": "YulIf",
															"src": "3960:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4021:36:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4047:9:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4034:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:23:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4025:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4097:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IDAO",
																	"nodeType": "YulIdentifier",
																	"src": "4066:30:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4066:37:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4066:37:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4112:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4122:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4112:6:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4136:47:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4168:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4179:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4164:18:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4151:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:32:33"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4140:7:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4223:7:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IDAO",
																	"nodeType": "YulIdentifier",
																	"src": "4192:30:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:39:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4192:39:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4240:17:33",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4250:7:33"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4266:46:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4297:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4308:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4293:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4293:18:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4280:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:32:33"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4270:6:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4321:28:33",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4331:18:33",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4325:2:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4376:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4385:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4388:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4378:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4378:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4378:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4364:6:33"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4372:2:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4361:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4361:14:33"
															},
															"nodeType": "YulIf",
															"src": "4358:34:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4401:32:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4415:9:33"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4426:6:33"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4411:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4411:22:33"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4405:2:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4481:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4490:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4493:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4483:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4483:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4483:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4460:2:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4464:4:33",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4456:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4456:13:33"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4471:7:33"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4452:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4452:27:33"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4445:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:35:33"
															},
															"nodeType": "YulIf",
															"src": "4442:55:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4506:30:33",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4533:2:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4520:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:16:33"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4510:6:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4563:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4572:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4575:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4565:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4565:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4565:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:33"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4559:2:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4548:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:14:33"
															},
															"nodeType": "YulIf",
															"src": "4545:34:33"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4629:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4638:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4641:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4631:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4631:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4631:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4602:2:33"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4606:6:33"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4598:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4598:15:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4615:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4594:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4594:24:33"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4620:7:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4591:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:37:33"
															},
															"nodeType": "YulIf",
															"src": "4588:57:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4654:21:33",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4668:2:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4672:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:11:33"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:33"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4684:16:33",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "4694:6:33"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4684:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IDAO_$2088t_addresst_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3892:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3903:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3915:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3923:6:33",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3931:6:33",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3939:6:33",
														"type": ""
													}
												],
												"src": "3813:893:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4781:183:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4827:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4836:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4839:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4829:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4829:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4829:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4802:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4811:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4798:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4798:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4794:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:32:33"
															},
															"nodeType": "YulIf",
															"src": "4791:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4852:36:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4878:9:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4865:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4865:23:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4856:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4928:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IDAO",
																	"nodeType": "YulIdentifier",
																	"src": "4897:30:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:37:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4897:37:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4943:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4953:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4758:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4770:6:33",
														"type": ""
													}
												],
												"src": "4711:253:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5064:92:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5074:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5086:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5097:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5082:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5074:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5116:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5141:6:33"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5134:6:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5134:14:33"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5127:6:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5127:22:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:41:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5109:41:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5033:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5044:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5055:4:33",
														"type": ""
													}
												],
												"src": "4969:187:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5269:101:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5279:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5291:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5287:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5279:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5321:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5336:6:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:18:33",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5332:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5332:31:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:50:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5314:50:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5238:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5249:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5260:4:33",
														"type": ""
													}
												],
												"src": "5161:209:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5442:200:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5459:3:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5464:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:19:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5452:19:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5497:3:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5502:4:33",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5493:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5493:14:33"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5516:6:33"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5480:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:43:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5480:43:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5547:3:33"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5552:6:33"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5543:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5543:16:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5561:4:33",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5539:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5539:27:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5568:1:33",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5532:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:38:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5532:38:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5579:57:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5594:3:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5607:6:33"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5615:2:33",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5603:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5603:15:33"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5624:2:33",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5620:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5620:7:33"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5599:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5599:29:33"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5590:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5590:39:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5631:4:33",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5586:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:50:33"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5579:3:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5411:5:33",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5418:6:33",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5426:3:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5434:3:33",
														"type": ""
													}
												],
												"src": "5375:267:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5778:116:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5795:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5806:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5788:21:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5788:21:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5818:70:33",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5853:6:33"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5861:6:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5873:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5884:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5869:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5869:18:33"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5826:26:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5826:62:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5818:4:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5739:9:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5750:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5758:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5769:4:33",
														"type": ""
													}
												],
												"src": "5647:247:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6046:124:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6069:3:33"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6074:6:33"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6082:6:33"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6056:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6056:33:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6056:33:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6098:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6112:3:33"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6117:6:33"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6108:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6108:16:33"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6102:2:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6140:2:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6144:1:33",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6133:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6133:13:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6133:13:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6155:9:33",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "6162:2:33"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6155:3:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6014:3:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6019:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6027:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6038:3:33",
														"type": ""
													}
												],
												"src": "5899:271:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6304:145:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6314:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6326:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6322:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6314:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6356:9:33"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6367:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6349:25:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6349:25:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6394:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6405:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6390:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6414:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6430:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6435:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6426:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6426:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6439:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6422:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6422:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6410:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6410:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6383:60:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6383:60:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6265:9:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6276:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6284:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6295:4:33",
														"type": ""
													}
												],
												"src": "6175:274:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6535:103:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6581:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6590:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6593:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6583:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6583:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6583:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6556:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6565:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6552:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6552:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6577:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6548:32:33"
															},
															"nodeType": "YulIf",
															"src": "6545:52:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6606:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6622:9:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6616:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6616:16:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6606:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6501:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6512:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6524:6:33",
														"type": ""
													}
												],
												"src": "6454:184:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6744:102:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6754:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6766:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6777:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6762:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6754:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6796:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6811:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6827:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6832:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6823:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6823:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6836:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6819:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6819:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6807:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6807:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6789:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:51:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6789:51:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6713:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6724:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6735:4:33",
														"type": ""
													}
												],
												"src": "6643:203:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7064:303:33",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7074:29:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7092:3:33",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7097:1:33",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7088:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7088:11:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7101:1:33",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:19:33"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7078:2:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7119:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7134:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7142:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7130:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7130:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7112:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7166:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7177:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7162:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7162:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7186:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7194:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7182:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7182:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7155:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7155:43:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7155:43:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7218:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7229:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7214:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7214:18:33"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7234:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7261:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7272:2:33",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7257:18:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7277:3:33",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7250:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7250:31:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7290:71:33",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7325:6:33"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7333:6:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7345:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7356:3:33",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7341:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7341:19:33"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "7298:26:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:63:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7290:4:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7001:9:33",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7012:6:33",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7020:6:33",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7028:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7036:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7044:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7055:4:33",
														"type": ""
													}
												],
												"src": "6851:516:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7450:199:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7496:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7505:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7508:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7498:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7498:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7498:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7471:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7480:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7467:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7467:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7463:32:33"
															},
															"nodeType": "YulIf",
															"src": "7460:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7521:29:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7540:9:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7534:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7534:16:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7525:5:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7603:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7612:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7615:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7605:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7605:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7605:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7572:5:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7593:5:33"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7586:6:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7586:13:33"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7579:6:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7579:21:33"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7569:2:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7569:32:33"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7562:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7562:40:33"
															},
															"nodeType": "YulIf",
															"src": "7559:60:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7628:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7638:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7628:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7416:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7427:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7439:6:33",
														"type": ""
													}
												],
												"src": "7372:277:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7839:271:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7849:27:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7861:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7872:3:33",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7857:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:19:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7849:4:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7885:29:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7903:3:33",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7908:1:33",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7899:11:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:1:33",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7895:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:19:33"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7889:2:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7930:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7945:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7953:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7941:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7941:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7923:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7923:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7977:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7988:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7973:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7973:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7997:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8005:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7993:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7993:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:43:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:43:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8029:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8040:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8025:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8025:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "8049:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8057:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8045:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8045:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8018:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:43:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8018:43:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8081:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8092:2:33",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8077:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8077:18:33"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8097:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8070:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8070:34:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7784:9:33",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7795:6:33",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7803:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7811:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7819:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7830:4:33",
														"type": ""
													}
												],
												"src": "7654:456:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8147:95:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8164:1:33",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8171:3:33",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8176:10:33",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8167:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:20:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8157:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8157:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8157:31:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8204:1:33",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8207:4:33",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8197:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:15:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8197:15:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8228:1:33",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:4:33",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:15:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:15:33"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8115:127:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8294:185:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8333:111:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8354:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8361:3:33",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8366:10:33",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8357:3:33"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8357:20:33"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8347:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8347:31:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8347:31:33"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8398:1:33",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8401:4:33",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8391:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8391:15:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8391:15:33"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8426:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8429:4:33",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8419:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8419:15:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8419:15:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8310:5:33"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8321:1:33",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8317:6:33"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8307:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8307:17:33"
															},
															"nodeType": "YulIf",
															"src": "8304:140:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8453:20:33",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8464:5:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8471:1:33",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8460:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8460:13:33"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8453:3:33"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8276:5:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8286:3:33",
														"type": ""
													}
												],
												"src": "8247:232:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8621:150:33",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8631:27:33",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8651:6:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8645:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8645:13:33"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8635:6:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8706:6:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8714:4:33",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8702:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8702:17:33"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8721:3:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8726:6:33"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8667:34:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8667:66:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8667:66:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8742:23:33",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8753:3:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8758:6:33"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8749:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "8749:16:33"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8742:3:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8597:3:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8602:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8613:3:33",
														"type": ""
													}
												],
												"src": "8484:287:33"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_ENSSubdomainRegistrar_$2767__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xff))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n    }\n    function abi_encode_tuple_t_contract$_IDAO_$2088__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function validator_revert_contract_IDAO(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IDAO_$2088t_contract$_ENSSubdomainRegistrar_$2767(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IDAO(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IDAO(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IDAO(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_contract$_IDAO_$2088t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IDAO(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IDAO(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IDAO(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_calldata(value3, value4, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 33,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"832": [
									{
										"length": 32,
										"start": 1476
									},
									{
										"length": 32,
										"start": 1517
									},
									{
										"length": 32,
										"start": 1891
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x62 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x74574EB7 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xA2298B4B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xEDE49739 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xF29EE125 EQ PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x77393 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x2AE9C600 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x44162EF8 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x174 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x64 SLOAD PUSH2 0xC7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xCE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x32 SLOAD PUSH2 0x13A SWAP1 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x2D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x172 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH32 0x60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH32 0xDE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xE5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0xCCB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x333 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x341 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x389 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x39A DUP8 PUSH4 0x49C2AA3F PUSH1 0xE1 SHL PUSH2 0x58E JUMP JUMPDEST PUSH1 0x64 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x3FB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x40C PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x415 DUP3 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x41F DUP3 DUP3 PUSH2 0x697 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x42C PUSH2 0x758 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1042 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH32 0xDE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215 SWAP1 PUSH2 0x47A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER JUMPDEST DUP5 PUSH0 CALLDATASIZE PUSH2 0x7A1 JUMP JUMPDEST DUP5 PUSH2 0x484 DUP2 PUSH2 0x85B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x539 JUMPI PUSH2 0x494 DUP5 DUP5 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x4BE JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH4 0x3A5BF49B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP3 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP3 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x64 SLOAD PUSH4 0x89BB4145 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP6 ADD MSTORE SWAP2 SWAP4 POP AND SWAP1 PUSH4 0x89BB4145 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBC0B11FE649BB4D67C7FB40936163E5423F45C3AE83FBD8F8F8C75E1A3FA97AF DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x57E SWAP3 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x596 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x59F DUP3 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x63F JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x633 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1042 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH32 0x60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932 SWAP1 PUSH2 0x41F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x472 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x6F1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x6EE SWAP2 DUP2 ADD SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1042 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x753 DUP4 DUP4 PUSH2 0xA20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7EF7C883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFDEF9106 SWAP1 PUSH2 0x7D5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x814 SWAP2 SWAP1 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB6F8ED PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH4 0xFDCCE17F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH2 0x8B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0xE0 SHL PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x38811E45 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x99F JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x925 JUMPI PUSH2 0x925 PUSH2 0xFEE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x60 DUP2 GT DUP1 ISZERO PUSH2 0x943 JUMPI POP PUSH1 0x7B DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0x94E JUMPI POP PUSH2 0x98D JUMP JUMPDEST PUSH1 0x2F DUP2 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x964 JUMPI POP PUSH1 0x3A DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0x96F JUMPI POP PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2D SUB PUSH2 0x980 JUMPI POP PUSH2 0x98D JUMP JUMPDEST PUSH0 SWAP6 POP POP POP POP POP POP PUSH2 0x9A8 JUMP JUMPDEST DUP1 PUSH2 0x997 DUP2 PUSH2 0x1002 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FF PUSH2 0x9AE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA29 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xA6D JUMPI PUSH2 0x753 DUP3 DUP3 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x41F PUSH2 0xB6C JUMP JUMPDEST PUSH0 PUSH2 0xA7F DUP4 PUSH2 0xB8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA90 JUMPI POP PUSH2 0xA90 DUP4 DUP4 PUSH2 0xBBD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1042 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB63 DUP6 DUP4 DUP4 PUSH2 0xC43 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB9D DUP3 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0xBBD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9A8 JUMPI POP PUSH2 0xBB6 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xBBD JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xC2D JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC38 JUMPI POP PUSH0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC58 JUMPI PUSH2 0xC53 DUP3 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xC6F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4B5 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xCAF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP4 PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xD13 JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCF1 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD41 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD4C DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xD5C DUP2 PUSH2 0xD1C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD8C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD97 DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDC6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDD8 JUMPI PUSH2 0xDD8 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE00 JUMPI PUSH2 0xE00 PUSH2 0xD67 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xE18 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE53 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3B JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xE79 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xEAB DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xEBB DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xED7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEEA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xF09 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF28 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA90 DUP2 PUSH2 0xD1C JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xF6E PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0xF33 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xC38 SWAP1 DUP4 ADD DUP5 DUP7 PUSH2 0xF33 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA90 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x101F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1037 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xE39 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122051 SHR MSTORE 0xB1 0xC1 0xE0 0xD9 0xFB 0xFC SWAP10 0xD 0x22 0xAD GAS PUSH7 0x96056CA5C76BA2 0x2C 0xF8 0xA9 0x2A SWAP3 0x4A 0xEA 0xE3 0x2E DUP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "626:2851:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:47;;;;;;;;;;-1:-1:-1;956:47:27;;;;-1:-1:-1;;;;;956:47:27;;;;;;-1:-1:-1;;;;;208:32:33;;;190:51;;178:2;163:18;956:47:27;;;;;;;;656:100:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1193:72:25:-;;;;;;;;;;-1:-1:-1;1229:4:25;1253;-1:-1:-1;;;;;1253:4:25;1193:72;;1184:31:28;;;;;;;;;;-1:-1:-1;1184:31:28;;;;;;;;;;;-1:-1:-1;;;;;;1141:33:33;;;1123:52;;1111:2;1096:18;1184:31:28;979:202:33;1869:265:27;;;;;;;;;;-1:-1:-1;1869:265:27;;;;;:::i;:::-;;:::i;:::-;;4158:214:14;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;:::-;;;3121:25:33;;;3109:2;3094:18;3705:134:14;2975:177:33;928:106:28;;;;;;;;;;;;994:40;928:106;;781:89:27;;;;;;;;;;;;834:36;781:89;;1819:58:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:14;;;;;;;;;;;;:::i;2546:615:27:-;;;;;;;;;;-1:-1:-1;2546:615:27;;;;;:::i;:::-;;:::i;1335:39:28:-;;;;;;;;;;-1:-1:-1;1335:39:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5134:14:33;;5127:22;5109:41;;5097:2;5082:18;1335:39:28;4969:187:33;656:100:32;704:15;;:::i;:::-;-1:-1:-1;732:16:32;;;;;;;;740:1;732:16;;743:1;732:16;;;;-1:-1:-1;732:16:32;;;;;;;;656:100::o;1869:265:27:-;8870:21:13;4302:15;;-1:-1:-1;;;4302:15:13;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:13;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:13;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:13;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:13;-1:-1:-1;;;5013:22:13;;;4979:67;2008::27::1;2038:12;-1:-1:-1::0;;;2008:29:27::1;:67::i;:::-;2086:18;:40:::0;;-1:-1:-1;;;;;;2086:40:27::1;-1:-1:-1::0;;;;;2086:40:27;::::1;;::::0;;5066:101:13;;;;5100:23;;-1:-1:-1;;;;5100:23:13;;;5142:14;;-1:-1:-1;5314:50:33;;5142:14:13;;5302:2:33;5287:18;5142:14:13;;;;;;;5066:101;4092:1081;;;;;1869:265:27;;:::o;4158:214:14:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:14;:::o;2546:615:27:-;1616:4:25;;834:36:27;;1610:67:25;;-1:-1:-1;;;;;1616:4:25;1630;966:10:15;1637:12:25;1651:13;1040:14:15;;1610:5:25;:67::i;:::-;2731:3:27;2748:18:::1;2731:3:::0;2748:9:::1;:18::i;:::-;2784:27:::0;;2779:315:::1;;2834:27;2851:9;;2834:16;:27::i;:::-;2829:119;;2921:9;;2889:43;;-1:-1:-1::0;;;2889:43:27::1;;;;;;;;;:::i;:::-;;;;;;;;2829:119;2964:17;3000:9;;2984:27;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;3028:18:::1;::::0;-1:-1:-1;;;3028:54:27;;::::1;::::0;::::1;6349:25:33::0;;;-1:-1:-1;;;;;6410:32:33;;;6390:18;;;6383:60;2984:27:27;;-1:-1:-1;3028:18:27::1;::::0;:34:::1;::::0;6322:18:33;;3028:54:27::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2814:280;2779:315;3134:7;-1:-1:-1::0;;;;;3111:42:27::1;3125:7;-1:-1:-1::0;;;;;3111:42:27::1;;3143:9;;3111:42;;;;;;;:::i;:::-;;;;;;;;2694:467;2546:615:::0;;;;;:::o;2315:261:28:-;6931:20:13;:18;:20::i;:::-;2470:47:28::1;2504:12;2470:33;:47::i;:::-;2530:17;:38:::0;;-1:-1:-1;;2530:38:28::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2315:261:28:o;4599:312:14:-;4679:4;-1:-1:-1;;;;;4688:6:14;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:14;:32;-1:-1:-1;;;;;;;;;;;2035:53:19;-1:-1:-1;;;;;2035:53:19;;1957:138;4749:32:14;-1:-1:-1;;;;;4749:42:14;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:14;;;;;;;;;;;4654:251;4599:312::o;2923:117:28:-;1616:4:25;;994:40:28;;1610:67:25;;-1:-1:-1;;;;;1616:4:25;1630;966:10:15;1637:12:25;887:96:15;6052:538:14;6169:17;-1:-1:-1;;;;;6151:50:14;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:14;;;;;;;;-1:-1:-1;;6151:52:14;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:14;;-1:-1:-1;;;;;208:32:33;;6513:60:14;;;190:51:33;163:18;;6513:60:14;14:233:33;6147:437:14;-1:-1:-1;;;;;;;;;;;6245:40:14;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:14;;;;;3121:25:33;;;3094:18;;6312:34:14;2975:177:33;6241:120:14;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:14;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:14;;;;;;;;;;;1057:377:26;1203:54;;-1:-1:-1;;;1203:54:26;;-1:-1:-1;;;;;1203:18:26;;;;;:54;;1222:6;;1230:4;;1236:13;;1251:5;;;;1203:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1198:232;;1275:155;;-1:-1:-1;;;1275:155:26;;-1:-1:-1;;;;;7941:15:33;;;1275:155:26;;;7923:34:33;7993:15;;;7973:18;;;7966:43;8045:15;;8025:18;;;8018:43;8077:18;;;8070:34;;;7857:19;;1275:155:26;7654:456:33;1198:232:26;1057:377;;;;;;:::o;3334:463:28:-;-1:-1:-1;;;;;3398:20:28;;;;;;:7;:20;;;;;;;;3394:112;;;3442:52;;-1:-1:-1;;;3442:52:28;;-1:-1:-1;;;;;208:32:33;;3442:52:28;;;190:51:33;163:18;;3442:52:28;14:233:33;3394:112:28;3659:17;;3629:48;;-1:-1:-1;;;;;3629:29:28;;;3659:17;;3629:29;:48::i;:::-;3624:126;;3701:37;;-1:-1:-1;;;3701:37:28;;-1:-1:-1;;;;;208:32:33;;3701:37:28;;;190:51:33;163:18;;3701:37:28;14:233:33;3624:126:28;-1:-1:-1;;;;;3762:20:28;;;;;:7;:20;;;;;:27;;-1:-1:-1;;3762:27:28;3785:4;3762:27;;;3334:463::o;658:683:29:-;725:4;771:9;;;725:4;832:488;852:10;848:1;:14;832:488;;;880:10;899:9;;909:1;899:12;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;971:2:29;964:9;;:23;;;;;984:3;977:4;:10;;;964:23;960:64;;;1004:8;;;960:64;1082:2;1075:4;:9;;;:22;;;;;1095:2;1088:4;:9;;;1075:22;1071:63;;;1114:8;;;1071:63;1175:4;:10;;1183:2;1175:10;1171:51;;1202:8;;;1171:51;1307:5;1300:12;;;;;;;;;832:488;864:3;;;;:::i;:::-;;;;832:488;;;;1333:4;1326:11;;;;;658:683;;;;;:::o;7084:141:13:-;8870:21;8560:40;-1:-1:-1;;;8560:40:13;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:13;;;;;;;;;;;997:110:25;6931:20:13;:18;:20::i;:::-;1088:4:25::1;:11:::0;;-1:-1:-1;;;;;;1088:11:25::1;-1:-1:-1::0;;;;;1088:11:25;;;::::1;::::0;;;::::1;::::0;;997:110::o;2779:335:19:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:19;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;1382:282:16:-;1469:4;1576:23;1591:7;1576:14;:23::i;:::-;:81;;;;;1603:54;1636:7;1645:11;1603:32;:54::i;:::-;1569:88;1382:282;-1:-1:-1;;;1382:282:16:o;2186:281:19:-;2263:17;-1:-1:-1;;;;;2263:29:19;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:19;;-1:-1:-1;;;;;208:32:33;;2320:47:19;;;190:51:33;163:18;;2320:47:19;14:233:33;2259:119:19;-1:-1:-1;;;;;;;;;;;2387:73:19;;-1:-1:-1;;;;;;2387:73:19;-1:-1:-1;;;;;2387:73:19;;;;;;;;;;2186:281::o;4106:253:21:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:21;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:21:o;6598:122:19:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:19;;;;;;;;;;;726:438:16;790:4;997:79;1030:7;-1:-1:-1;;;997:32:16;:79::i;:::-;:160;;;;-1:-1:-1;1093:64:16;1126:7;-1:-1:-1;;;;;;1093:32:16;:64::i;:::-;1092:65;978:179;726:438;-1:-1:-1;;726:438:16:o;4454:658::-;4625:82;;;-1:-1:-1;;;;;;1141:33:33;;4625:82:16;;;;1123:52:33;;;;4625:82:16;;;;;;;;;;1096:18:33;;;;4625:82:16;;;;;;;;;-1:-1:-1;;;;;4625:82:16;-1:-1:-1;;;4625:82:16;;;4915:20;;4556:4;;4625:82;4556:4;;;;;;4625:82;4556:4;;4915:20;4880:7;4873:5;4862:86;4851:97;;4975:16;4961:30;;5025:4;5019:11;5004:26;;5057:7;:29;;;;;5082:4;5068:10;:18;;5057:29;:48;;;;;5104:1;5090:11;:15;5057:48;5050:55;4454:658;-1:-1:-1;;;;;;;4454:658:16:o;4625:582:21:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:21;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:21;;-1:-1:-1;;;;;208:32:33;;5121:24:21;;;190:51:33;163:18;;5121:24:21;14:233:33;5041:119:21;-1:-1:-1;5180:10:21;4625:582;-1:-1:-1;;4625:582:21:o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:21;;;;;;;;;;;5870:383;5743:516;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;252:501:33:-;428:2;413:18;;417:9;508:6;386:4;542:205;556:4;553:1;550:11;542:205;;;619:13;;634:4;615:24;603:37;;663:4;687:12;;;;722:15;;;;576:1;569:9;542:205;;;546:3;;;252:501;;;;:::o;1186:137::-;-1:-1:-1;;;;;1267:31:33;;1257:42;;1247:70;;1313:1;1310;1303:12;1328:443;1439:6;1447;1500:2;1488:9;1479:7;1475:23;1471:32;1468:52;;;1516:1;1513;1506:12;1468:52;1555:9;1542:23;1574:37;1605:5;1574:37;:::i;:::-;1630:5;-1:-1:-1;1687:2:33;1672:18;;1659:32;1700:39;1659:32;1700:39;:::i;:::-;1758:7;1748:17;;;1328:443;;;;;:::o;1776:127::-;1837:10;1832:3;1828:20;1825:1;1818:31;1868:4;1865:1;1858:15;1892:4;1889:1;1882:15;1908:1062;1985:6;1993;2046:2;2034:9;2025:7;2021:23;2017:32;2014:52;;;2062:1;2059;2052:12;2014:52;2101:9;2088:23;2120:37;2151:5;2120:37;:::i;:::-;2176:5;-1:-1:-1;2232:2:33;2217:18;;2204:32;2255:18;2285:14;;;2282:34;;;2312:1;2309;2302:12;2282:34;2350:6;2339:9;2335:22;2325:32;;2395:7;2388:4;2384:2;2380:13;2376:27;2366:55;;2417:1;2414;2407:12;2366:55;2453:2;2440:16;2475:2;2471;2468:10;2465:36;;;2481:18;;:::i;:::-;2556:2;2550:9;2524:2;2610:13;;-1:-1:-1;;2606:22:33;;;2630:2;2602:31;2598:40;2586:53;;;2654:18;;;2674:22;;;2651:46;2648:72;;;2700:18;;:::i;:::-;2740:10;2736:2;2729:22;2775:2;2767:6;2760:18;2815:7;2810:2;2805;2801;2797:11;2793:20;2790:33;2787:53;;;2836:1;2833;2826:12;2787:53;2892:2;2887;2883;2879:11;2874:2;2866:6;2862:15;2849:46;2937:1;2932:2;2927;2919:6;2915:15;2911:24;2904:35;2958:6;2948:16;;;;;;;1908:1062;;;;;:::o;3157:250::-;3242:1;3252:113;3266:6;3263:1;3260:13;3252:113;;;3342:11;;;3336:18;3323:11;;;3316:39;3288:2;3281:10;3252:113;;;-1:-1:-1;;3399:1:33;3381:16;;3374:27;3157:250::o;3412:396::-;3561:2;3550:9;3543:21;3524:4;3593:6;3587:13;3636:6;3631:2;3620:9;3616:18;3609:34;3652:79;3724:6;3719:2;3708:9;3704:18;3699:2;3691:6;3687:15;3652:79;:::i;:::-;3792:2;3771:15;-1:-1:-1;;3767:29:33;3752:45;;;;3799:2;3748:54;;3412:396;-1:-1:-1;;3412:396:33:o;3813:893::-;3915:6;3923;3931;3939;3992:2;3980:9;3971:7;3967:23;3963:32;3960:52;;;4008:1;4005;3998:12;3960:52;4047:9;4034:23;4066:37;4097:5;4066:37;:::i;:::-;4122:5;-1:-1:-1;4179:2:33;4164:18;;4151:32;4192:39;4151:32;4192:39;:::i;:::-;4250:7;-1:-1:-1;4308:2:33;4293:18;;4280:32;4331:18;4361:14;;;4358:34;;;4388:1;4385;4378:12;4358:34;4426:6;4415:9;4411:22;4401:32;;4471:7;4464:4;4460:2;4456:13;4452:27;4442:55;;4493:1;4490;4483:12;4442:55;4533:2;4520:16;4559:2;4551:6;4548:14;4545:34;;;4575:1;4572;4565:12;4545:34;4620:7;4615:2;4606:6;4602:2;4598:15;4594:24;4591:37;4588:57;;;4641:1;4638;4631:12;4588:57;3813:893;;;;-1:-1:-1;;4672:2:33;4664:11;;-1:-1:-1;;;3813:893:33:o;4711:253::-;4770:6;4823:2;4811:9;4802:7;4798:23;4794:32;4791:52;;;4839:1;4836;4829:12;4791:52;4878:9;4865:23;4897:37;4928:5;4897:37;:::i;5375:267::-;5464:6;5459:3;5452:19;5516:6;5509:5;5502:4;5497:3;5493:14;5480:43;-1:-1:-1;5568:1:33;5543:16;;;5561:4;5539:27;;;5532:38;;;;5624:2;5603:15;;;-1:-1:-1;;5599:29:33;5590:39;;;5586:50;;5375:267::o;5647:247::-;5806:2;5795:9;5788:21;5769:4;5826:62;5884:2;5873:9;5869:18;5861:6;5853;5826:62;:::i;:::-;5818:70;5647:247;-1:-1:-1;;;;5647:247:33:o;5899:271::-;6082:6;6074;6069:3;6056:33;6038:3;6108:16;;6133:13;;;6108:16;5899:271;-1:-1:-1;5899:271:33:o;6454:184::-;6524:6;6577:2;6565:9;6556:7;6552:23;6548:32;6545:52;;;6593:1;6590;6583:12;6545:52;-1:-1:-1;6616:16:33;;6454:184;-1:-1:-1;6454:184:33:o;6851:516::-;-1:-1:-1;;;;;7130:15:33;;;7112:34;;7182:15;;7177:2;7162:18;;7155:43;7229:2;7214:18;;7207:34;;;7277:3;7272:2;7257:18;;7250:31;;;7055:4;;7298:63;;7341:19;;7333:6;7325;7298:63;:::i;7372:277::-;7439:6;7492:2;7480:9;7471:7;7467:23;7463:32;7460:52;;;7508:1;7505;7498:12;7460:52;7540:9;7534:16;7593:5;7586:13;7579:21;7572:5;7569:32;7559:60;;7615:1;7612;7605:12;8115:127;8176:10;8171:3;8167:20;8164:1;8157:31;8207:4;8204:1;8197:15;8231:4;8228:1;8221:15;8247:232;8286:3;8307:17;;;8304:140;;8366:10;8361:3;8357:20;8354:1;8347:31;8401:4;8398:1;8391:15;8429:4;8426:1;8419:15;8304:140;-1:-1:-1;8471:1:33;8460:13;;8247:232::o;8484:287::-;8613:3;8651:6;8645:13;8667:66;8726:6;8721:3;8714:4;8706:6;8702:17;8667:66;:::i;:::-;8749:16;;;;;8484:287;-1:-1:-1;;8484:287:33:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "849400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REGISTER_DAO_PERMISSION_ID()": "238",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"UPGRADE_REGISTRY_PERMISSION_ID()": "216",
								"dao()": "2363",
								"entries(address)": "2632",
								"initialize(address,address)": "infinite",
								"protocolVersion()": "infinite",
								"proxiableUUID()": "infinite",
								"register(address,address,string)": "infinite",
								"subdomainRegistrar()": "2326",
								"targetInterfaceId()": "2394",
								"upgradeToAndCall(address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 27,
									"value": "A0"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 27,
									"value": "40"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "CALLVALUE",
									"source": 27
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "ISZERO",
									"source": 27
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "JUMPI",
									"source": 27
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "REVERT",
									"source": 27
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "tag",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "JUMPDEST",
									"source": 27
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1627,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "4"
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "5"
								},
								{
									"begin": 1627,
									"end": 1649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 27
								},
								{
									"begin": 1627,
									"end": 1649,
									"name": "tag",
									"source": 27,
									"value": "4"
								},
								{
									"begin": 1627,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 27
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "15"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "JUMP",
									"source": 27
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 13,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 13,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 13,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 13
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 33,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 27,
									"value": "80"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "MLOAD",
									"source": 27
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH #[$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH [$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "CODECOPY",
									"source": 27
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "ASSIGNIMMUTABLE",
									"source": 27,
									"value": "832"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH #[$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "RETURN",
									"source": 27
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220511c52b1c1e0d9fbfc990d22ad5a6696056ca5c76ba22cf8a92a924aeae32e8864736f6c63430008140033",
									".code": [
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "80"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "CALLDATASIZE",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "LT",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "CALLDATALOAD",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "SHR",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "52D1902D"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "GT",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "14"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "52D1902D"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "8"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "74574EB7"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "9"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "A2298B4B"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "10"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "AD3CB1CC"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "11"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "EDE49739"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "12"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "F29EE125"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "13"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "tag",
											"source": 27,
											"value": "14"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "77393"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "2AE9C600"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "3"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "4162169F"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "44162EF8"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "5"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "485CC955"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "6"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "4F1EF286"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "7"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "tag",
											"source": 27,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "tag",
											"source": 27,
											"value": "2"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "CALLVALUE",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "15"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "tag",
											"source": 27,
											"value": "15"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH",
											"source": 27,
											"value": "64"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SLOAD",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "16"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "tag",
											"source": 27,
											"value": "16"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 208,
											"end": 240,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 190,
											"end": 241,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 178,
											"end": 180,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "tag",
											"source": 27,
											"value": "18"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SUB",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "RETURN",
											"source": 27
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 32,
											"value": "3"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "CALLVALUE",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "ISZERO",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "20"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPI",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH",
											"source": 32,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "REVERT",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 32,
											"value": "20"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "POP",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "21"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 32,
											"value": "21"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "MLOAD",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "18"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "24"
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "tag",
											"source": 25,
											"value": "4"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "CALLVALUE",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "25"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "tag",
											"source": 25,
											"value": "25"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1233,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1257,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1253,
											"end": 1257,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "16"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "tag",
											"source": 28,
											"value": "5"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "CALLVALUE",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "ISZERO",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "30"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "REVERT",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "tag",
											"source": 28,
											"value": "30"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "PUSH",
											"source": 28,
											"value": "32"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "31"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "PUSH",
											"source": 28,
											"value": "E0"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "SHL",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "tag",
											"source": 28,
											"value": "31"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "MLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1175,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1175,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1111,
											"end": 1113,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1096,
											"end": 1114,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1184,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "18"
										},
										{
											"begin": 979,
											"end": 1181,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 27,
											"value": "6"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "CALLVALUE",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "35"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 27,
											"value": "35"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "36"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "37"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "38"
										},
										{
											"begin": 1869,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 27,
											"value": "37"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "39"
										},
										{
											"begin": 1869,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 27,
											"value": "36"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "STOP",
											"source": 27
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3109,
											"end": 3111,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 2975,
											"end": 3152,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "tag",
											"source": 28,
											"value": "9"
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "CALLVALUE",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "ISZERO",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "49"
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "REVERT",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "tag",
											"source": 28,
											"value": "49"
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "POP",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "45"
										},
										{
											"begin": 994,
											"end": 1034,
											"name": "PUSH",
											"source": 28,
											"value": "60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932"
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 928,
											"end": 1034,
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 781,
											"end": 870,
											"name": "tag",
											"source": 27,
											"value": "10"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "CALLVALUE",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "53"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "tag",
											"source": 27,
											"value": "53"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "45"
										},
										{
											"begin": 834,
											"end": 870,
											"name": "PUSH",
											"source": 27,
											"value": "DE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 781,
											"end": 870,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "tag",
											"source": 27,
											"value": "12"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "CALLVALUE",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "tag",
											"source": 27,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "36"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "64"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "CALLDATASIZE",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "65"
										},
										{
											"begin": 2546,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "tag",
											"source": 27,
											"value": "64"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "66"
										},
										{
											"begin": 2546,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "tag",
											"source": 28,
											"value": "13"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "CALLVALUE",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "ISZERO",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "67"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "REVERT",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "tag",
											"source": 28,
											"value": "67"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "68"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "69"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "CALLDATASIZE",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH",
											"source": 28,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "70"
										},
										{
											"begin": 1335,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "tag",
											"source": 28,
											"value": "69"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH",
											"source": 28,
											"value": "33"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "KECCAK256",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH",
											"source": 28,
											"value": "FF"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "tag",
											"source": 28,
											"value": "68"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "MLOAD",
											"source": 28
										},
										{
											"begin": 5134,
											"end": 5148,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5134,
											"end": 5148,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 5127,
											"end": 5149,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 5109,
											"end": 5150,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5109,
											"end": 5150,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5097,
											"end": 5099,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "18"
										},
										{
											"begin": 4969,
											"end": 5156,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 32,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "74"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "75"
										},
										{
											"begin": 704,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 704,
											"end": 719,
											"name": "tag",
											"source": 32,
											"value": "74"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MLOAD",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 32,
											"value": "60"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP3",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 32,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 743,
											"end": 744,
											"name": "PUSH",
											"source": 32,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 32,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP3",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 27,
											"value": "39"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 13,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "87"
										},
										{
											"begin": 2038,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49C2AA3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "88"
										},
										{
											"begin": 2008,
											"end": 2075,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2008,
											"end": 2075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "87"
										},
										{
											"begin": 2008,
											"end": 2075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2086,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "64"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2126,
											"modifierDepth": 1,
											"name": "AND",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "DUP9",
											"source": 27
										},
										{
											"begin": 2086,
											"end": 2126,
											"modifierDepth": 1,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 2086,
											"end": 2126,
											"modifierDepth": 1,
											"name": "OR",
											"source": 27
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SSTORE",
											"source": 27
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5314,
											"end": 5364,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5314,
											"end": 5364,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 13,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 1869,
											"end": 2134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "tag",
											"source": 27,
											"value": "66"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": 834,
											"end": 870,
											"name": "PUSH",
											"source": 27,
											"value": "DE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215"
										},
										{
											"begin": 834,
											"end": 870,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "105"
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1630,
											"end": 1634,
											"name": "ADDRESS",
											"source": 25
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "tag",
											"source": 25,
											"value": "106"
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1651,
											"end": 1664,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 1040,
											"end": 1054,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1054,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "110"
										},
										{
											"begin": 1610,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "tag",
											"source": 25,
											"value": "105"
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "DUP5",
											"source": 27
										},
										{
											"begin": 2748,
											"end": 2766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "112"
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 2748,
											"end": 2757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "113"
										},
										{
											"begin": 2748,
											"end": 2766,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2748,
											"end": 2766,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "112"
										},
										{
											"begin": 2748,
											"end": 2766,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2784,
											"end": 2811,
											"name": "DUP3",
											"source": 27
										},
										{
											"begin": 2784,
											"end": 2811,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 2779,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "114"
										},
										{
											"begin": 2779,
											"end": 3094,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 2834,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "115"
										},
										{
											"begin": 2851,
											"end": 2860,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 27
										},
										{
											"begin": 2851,
											"end": 2860,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 27
										},
										{
											"begin": 2834,
											"end": 2850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "116"
										},
										{
											"begin": 2834,
											"end": 2861,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2834,
											"end": 2861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "115"
										},
										{
											"begin": 2834,
											"end": 2861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2829,
											"end": 2948,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "117"
										},
										{
											"begin": 2829,
											"end": 2948,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 2921,
											"end": 2930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 2921,
											"end": 2930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A5BF49B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "118"
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "119"
										},
										{
											"begin": 2889,
											"end": 2932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "118"
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 2829,
											"end": 2948,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "117"
										},
										{
											"begin": 2829,
											"end": 2948,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2964,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3009,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 27
										},
										{
											"begin": 3000,
											"end": 3009,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "120"
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "121"
										},
										{
											"begin": 2984,
											"end": 3011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "120"
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "KECCAK256",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "64"
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "SLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89BB4145"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": 6349,
											"end": 6374,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6349,
											"end": 6374,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6349,
											"end": 6374,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6410,
											"end": 6442,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 6410,
											"end": 6442,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6410,
											"end": 6442,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6383,
											"end": 6443,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "SWAP4",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3028,
											"end": 3046,
											"modifierDepth": 1,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "89BB4145"
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 6322,
											"end": 6340,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 6322,
											"end": 6340,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "124"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "124"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "126"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "126"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2814,
											"end": 3094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2779,
											"end": 3094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "114"
										},
										{
											"begin": 2779,
											"end": 3094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 3134,
											"end": 3141,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 3125,
											"end": 3132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "BC0B11FE649BB4D67C7FB40936163E5423F45C3AE83FBD8F8F8C75E1A3FA97AF"
										},
										{
											"begin": 3143,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 27
										},
										{
											"begin": 3143,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "127"
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "119"
										},
										{
											"begin": 3111,
											"end": 3153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 27,
											"value": "127"
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 27
										},
										{
											"begin": 2694,
											"end": 3161,
											"modifierDepth": 1,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2546,
											"end": 3161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2315,
											"end": 2576,
											"name": "tag",
											"source": 28,
											"value": "88"
										},
										{
											"begin": 2315,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "133"
										},
										{
											"begin": 2504,
											"end": 2516,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 28
										},
										{
											"begin": 2470,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "134"
										},
										{
											"begin": 2470,
											"end": 2517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 2470,
											"end": 2517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 28,
											"value": "133"
										},
										{
											"begin": 2470,
											"end": 2517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 28,
											"value": "32"
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 28,
											"value": "E0"
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SWAP3",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SWAP3",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"modifierDepth": 1,
											"name": "SHR",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SWAP2",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SWAP2",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"modifierDepth": 1,
											"name": "OR",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 2530,
											"end": 2568,
											"name": "SSTORE",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "832"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "832"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2923,
											"end": 3040,
											"name": "tag",
											"source": 28,
											"value": "97"
										},
										{
											"begin": 2923,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": 994,
											"end": 1034,
											"name": "PUSH",
											"source": 28,
											"value": "60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932"
										},
										{
											"begin": 994,
											"end": 1034,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "98"
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1630,
											"end": 1634,
											"name": "ADDRESS",
											"source": 25
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "106"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 14,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 14,
											"end": 247,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 2975,
											"end": 3152,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "832"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "tag",
											"source": 26,
											"value": "110"
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 26
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7EF7C883"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "DUP8",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "AND",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "PUSH",
											"source": 26,
											"value": "FDEF9106"
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "165"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1236,
											"end": 1249,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1236,
											"end": 1249,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "166"
										},
										{
											"begin": 1203,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 26,
											"value": "165"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP4",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SUB",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP7",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "GAS",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "STATICCALL",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ISZERO",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ISZERO",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "168"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPI",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATACOPY",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "REVERT",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 26,
											"value": "168"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "NOT",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP3",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "AND",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP3",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "169"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP2",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "170"
										},
										{
											"begin": 1203,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 26,
											"value": "169"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "171"
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "JUMPI",
											"source": 26
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "MLOAD",
											"source": 26
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CB6F8ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "DUP2",
											"source": 26
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7941,
											"end": 7956,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7941,
											"end": 7956,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 7941,
											"end": 7956,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH",
											"source": 26,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "DUP4",
											"source": 26
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 7923,
											"end": 7957,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7993,
											"end": 8008,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7993,
											"end": 8008,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 7993,
											"end": 8008,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7966,
											"end": 8009,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8045,
											"end": 8060,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 8045,
											"end": 8060,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8018,
											"end": 8061,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8077,
											"end": 8095,
											"name": "PUSH",
											"source": 33,
											"value": "64"
										},
										{
											"begin": 8077,
											"end": 8095,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8077,
											"end": 8095,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8070,
											"end": 8104,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 8070,
											"end": 8104,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8070,
											"end": 8104,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "PUSH",
											"source": 33,
											"value": "84"
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "118"
										},
										{
											"begin": 7654,
											"end": 8110,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "tag",
											"source": 26,
											"value": "171"
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 26
										},
										{
											"begin": 3334,
											"end": 3797,
											"name": "tag",
											"source": 28,
											"value": "113"
										},
										{
											"begin": 3334,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3405,
											"name": "PUSH",
											"source": 28,
											"value": "33"
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "KECCAK256",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "PUSH",
											"source": 28,
											"value": "FF"
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 3394,
											"end": 3506,
											"name": "ISZERO",
											"source": 28
										},
										{
											"begin": 3394,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "175"
										},
										{
											"begin": 3394,
											"end": 3506,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 3442,
											"end": 3494,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3494,
											"name": "MLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FDCCE17F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3442,
											"end": 3494,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 3442,
											"end": 3494,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 3442,
											"end": 3494,
											"name": "PUSH",
											"source": 28,
											"value": "4"
										},
										{
											"begin": 3442,
											"end": 3494,
											"name": "DUP3",
											"source": 28
										},
										{
											"begin": 3442,
											"end": 3494,
											"name": "ADD",
											"source": 28
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3442,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "118"
										},
										{
											"begin": 14,
											"end": 247,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3394,
											"end": 3506,
											"name": "tag",
											"source": 28,
											"value": "175"
										},
										{
											"begin": 3394,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 3659,
											"end": 3676,
											"name": "PUSH",
											"source": 28,
											"value": "32"
										},
										{
											"begin": 3659,
											"end": 3676,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": 3629,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "177"
										},
										{
											"begin": 3629,
											"end": 3677,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "DUP4",
											"source": 28
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 3659,
											"end": 3676,
											"name": "PUSH",
											"source": 28,
											"value": "E0"
										},
										{
											"begin": 3659,
											"end": 3676,
											"name": "SHL",
											"source": 28
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "178"
										},
										{
											"begin": 3629,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 3629,
											"end": 3677,
											"name": "tag",
											"source": 28,
											"value": "177"
										},
										{
											"begin": 3629,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 3624,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "179"
										},
										{
											"begin": 3624,
											"end": 3750,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "MLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38811E45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "PUSH",
											"source": 28,
											"value": "4"
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "DUP3",
											"source": 28
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "ADD",
											"source": 28
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "118"
										},
										{
											"begin": 14,
											"end": 247,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3624,
											"end": 3750,
											"name": "tag",
											"source": 28,
											"value": "179"
										},
										{
											"begin": 3624,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "PUSH",
											"source": 28,
											"value": "33"
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "KECCAK256",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 3785,
											"end": 3789,
											"name": "PUSH",
											"source": 28,
											"value": "1"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "OR",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SSTORE",
											"source": 28
										},
										{
											"begin": 3334,
											"end": 3797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "tag",
											"source": 29,
											"value": "116"
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 725,
											"end": 729,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "tag",
											"source": 29,
											"value": "182"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 852,
											"end": 862,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 848,
											"end": 862,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "183"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 880,
											"end": 890,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP5",
											"source": 29
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP5",
											"source": 29
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "186"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "186"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "187"
										},
										{
											"begin": 899,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "tag",
											"source": 29,
											"value": "186"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "CALLDATALOAD",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "PUSH",
											"source": 29,
											"value": "F8"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SHR",
											"source": 29
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 29,
											"value": "60"
										},
										{
											"begin": 964,
											"end": 973,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 964,
											"end": 973,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 964,
											"end": 987,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 964,
											"end": 987,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 964,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "188"
										},
										{
											"begin": 964,
											"end": 987,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 964,
											"end": 987,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 29,
											"value": "7B"
										},
										{
											"begin": 977,
											"end": 981,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 977,
											"end": 987,
											"name": "PUSH",
											"source": 29,
											"value": "FF"
										},
										{
											"begin": 977,
											"end": 987,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 977,
											"end": 987,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 964,
											"end": 987,
											"name": "tag",
											"source": 29,
											"value": "188"
										},
										{
											"begin": 964,
											"end": 987,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "189"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "184"
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "tag",
											"source": 29,
											"value": "189"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 29,
											"value": "2F"
										},
										{
											"begin": 1075,
											"end": 1079,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH",
											"source": 29,
											"value": "FF"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "190"
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 29,
											"value": "3A"
										},
										{
											"begin": 1088,
											"end": 1092,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "PUSH",
											"source": 29,
											"value": "FF"
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "tag",
											"source": 29,
											"value": "190"
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "191"
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "184"
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "tag",
											"source": 29,
											"value": "191"
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1175,
											"end": 1179,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "PUSH",
											"source": 29,
											"value": "FF"
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 29,
											"value": "2D"
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "192"
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "184"
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "tag",
											"source": 29,
											"value": "192"
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "SWAP6",
											"source": 29
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "181"
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "tag",
											"source": 29,
											"value": "184"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 864,
											"end": 867,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 864,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "193"
										},
										{
											"begin": 864,
											"end": 867,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 864,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "194"
										},
										{
											"begin": 864,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 864,
											"end": 867,
											"name": "tag",
											"source": 29,
											"value": "193"
										},
										{
											"begin": 864,
											"end": 867,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 864,
											"end": 867,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 864,
											"end": 867,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 864,
											"end": 867,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "182"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "tag",
											"source": 29,
											"value": "183"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "PUSH",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "SWAP4",
											"source": 29
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "tag",
											"source": 29,
											"value": "181"
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 658,
											"end": 1341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 13,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1107,
											"name": "tag",
											"source": 25,
											"value": "134"
										},
										{
											"begin": 997,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"modifierDepth": 1,
											"name": "OR",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SSTORE",
											"source": 25
										},
										{
											"begin": 997,
											"end": 1107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "158"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1382,
											"end": 1664,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 1382,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1469,
											"end": 1473,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 1591,
											"end": 1598,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1576,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 1576,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "tag",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1603,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1645,
											"end": 1656,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1603,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 1603,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1603,
											"end": 1657,
											"name": "tag",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 1603,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1657,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1382,
											"end": 1664,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1382,
											"end": 1664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 19
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 14,
											"end": 247,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 21,
											"value": "210"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 726,
											"end": 1164,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 726,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 790,
											"end": 794,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 997,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "tag",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 997,
											"end": 1157,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 997,
											"end": 1157,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 997,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 997,
											"end": 1157,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1093,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 1093,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1093,
											"end": 1157,
											"name": "tag",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 1093,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 978,
											"end": 1157,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 726,
											"end": 1164,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 726,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4454,
											"end": 5112,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 4454,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1123,
											"end": 1175,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1175,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1175,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1175,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1096,
											"end": 1114,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 1096,
											"end": 1114,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1096,
											"end": 1114,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1096,
											"end": 1114,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4915,
											"end": 4935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4915,
											"end": 4935,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4915,
											"end": 4935,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4880,
											"end": 4887,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 4873,
											"end": 4878,
											"name": "PUSH",
											"source": 16,
											"value": "7530"
										},
										{
											"begin": 4862,
											"end": 4948,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 4851,
											"end": 4948,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4851,
											"end": 4948,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4975,
											"end": 4991,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4961,
											"end": 4991,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4961,
											"end": 4991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5030,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5004,
											"end": 5030,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5004,
											"end": 5030,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5064,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5082,
											"end": 5086,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5101,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5090,
											"end": 5105,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "tag",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5050,
											"end": 5105,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 4454,
											"end": 5112,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4454,
											"end": 5112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "246"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "247"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "248"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 21,
											"value": "247"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 21,
											"value": "246"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "250"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 21,
											"value": "250"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "251"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 14,
											"end": 247,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 21,
											"value": "251"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 21,
											"value": "248"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "254"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 21,
											"value": "254"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 21,
											"value": "255"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5743,
											"end": 6259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 252,
											"end": 753,
											"name": "tag",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 753,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 413,
											"end": 431,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 413,
											"end": 431,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 417,
											"end": 426,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 386,
											"end": 390,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "tag",
											"source": 33,
											"value": "263"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 556,
											"end": 560,
											"name": "PUSH",
											"source": 33,
											"value": "3"
										},
										{
											"begin": 553,
											"end": 554,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 550,
											"end": 561,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 542,
											"end": 747,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 542,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "265"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 619,
											"end": 632,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 619,
											"end": 632,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 634,
											"end": 638,
											"name": "PUSH",
											"source": 33,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 639,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 603,
											"end": 640,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 603,
											"end": 640,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 663,
											"end": 667,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 699,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 687,
											"end": 699,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 687,
											"end": 699,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 687,
											"end": 699,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 722,
											"end": 737,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 722,
											"end": 737,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 722,
											"end": 737,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 722,
											"end": 737,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 578,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 542,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "263"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 542,
											"end": 747,
											"name": "tag",
											"source": 33,
											"value": "265"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 546,
											"end": 549,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 546,
											"end": 549,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 546,
											"end": 549,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 252,
											"end": 753,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 252,
											"end": 753,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 252,
											"end": 753,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 252,
											"end": 753,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 252,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1186,
											"end": 1323,
											"name": "tag",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 1186,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1267,
											"end": 1298,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1267,
											"end": 1298,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1257,
											"end": 1299,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1257,
											"end": 1299,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 1247,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "255"
										},
										{
											"begin": 1247,
											"end": 1317,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1313,
											"end": 1314,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1311,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1328,
											"end": 1771,
											"name": "tag",
											"source": 33,
											"value": "38"
										},
										{
											"begin": 1328,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1500,
											"end": 1502,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1479,
											"end": 1486,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "271"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1506,
											"end": 1518,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "tag",
											"source": 33,
											"value": "271"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 1574,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "272"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1574,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 1574,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1574,
											"end": 1611,
											"name": "tag",
											"source": 33,
											"value": "272"
										},
										{
											"begin": 1574,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1630,
											"end": 1635,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1687,
											"end": 1689,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1690,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1672,
											"end": 1690,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "273"
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 1700,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "tag",
											"source": 33,
											"value": "273"
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1328,
											"end": 1771,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1328,
											"end": 1771,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1328,
											"end": 1771,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1328,
											"end": 1771,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1328,
											"end": 1771,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1328,
											"end": 1771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1776,
											"end": 1903,
											"name": "tag",
											"source": 33,
											"value": "257"
										},
										{
											"begin": 1776,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "PUSH",
											"source": 33,
											"value": "4E487B71"
										},
										{
											"begin": 1832,
											"end": 1835,
											"name": "PUSH",
											"source": 33,
											"value": "E0"
										},
										{
											"begin": 1828,
											"end": 1848,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1849,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1868,
											"end": 1872,
											"name": "PUSH",
											"source": 33,
											"value": "41"
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1892,
											"end": 1896,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1897,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1908,
											"end": 2970,
											"name": "tag",
											"source": 33,
											"value": "42"
										},
										{
											"begin": 1908,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2046,
											"end": 2048,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2043,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2025,
											"end": 2032,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 2021,
											"end": 2044,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2017,
											"end": 2049,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 2014,
											"end": 2066,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2014,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "276"
										},
										{
											"begin": 2014,
											"end": 2066,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2052,
											"end": 2064,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 2014,
											"end": 2066,
											"name": "tag",
											"source": 33,
											"value": "276"
										},
										{
											"begin": 2014,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2088,
											"end": 2111,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 2120,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "277"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2120,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 2120,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2120,
											"end": 2157,
											"name": "tag",
											"source": 33,
											"value": "277"
										},
										{
											"begin": 2120,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2176,
											"end": 2181,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2232,
											"end": 2234,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2285,
											"end": 2299,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2285,
											"end": 2299,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2285,
											"end": 2299,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 2282,
											"end": 2316,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2282,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "278"
										},
										{
											"begin": 2282,
											"end": 2316,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2310,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 2282,
											"end": 2316,
											"name": "tag",
											"source": 33,
											"value": "278"
										},
										{
											"begin": 2282,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2325,
											"end": 2357,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2325,
											"end": 2357,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2395,
											"end": 2402,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 2388,
											"end": 2392,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 2384,
											"end": 2386,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2380,
											"end": 2393,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2376,
											"end": 2403,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 2366,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "279"
										},
										{
											"begin": 2366,
											"end": 2421,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2417,
											"end": 2418,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2407,
											"end": 2419,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 2366,
											"end": 2421,
											"name": "tag",
											"source": 33,
											"value": "279"
										},
										{
											"begin": 2366,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2440,
											"end": 2456,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 2475,
											"end": 2477,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2471,
											"end": 2473,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2468,
											"end": 2478,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "281"
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "281"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "257"
										},
										{
											"begin": 2481,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "tag",
											"source": 33,
											"value": "281"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2556,
											"end": 2558,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2524,
											"end": 2526,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 2610,
											"end": 2623,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2610,
											"end": 2623,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2630,
											"end": 2632,
											"name": "PUSH",
											"source": 33,
											"value": "3F"
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2598,
											"end": 2638,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2586,
											"end": 2639,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2586,
											"end": 2639,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2586,
											"end": 2639,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 2651,
											"end": 2697,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 2648,
											"end": 2720,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2648,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "283"
										},
										{
											"begin": 2648,
											"end": 2720,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "283"
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "257"
										},
										{
											"begin": 2700,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "tag",
											"source": 33,
											"value": "283"
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2740,
											"end": 2750,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2775,
											"end": 2777,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2807,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 2797,
											"end": 2808,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2793,
											"end": 2813,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2790,
											"end": 2823,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 2787,
											"end": 2840,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2787,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "284"
										},
										{
											"begin": 2787,
											"end": 2840,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2826,
											"end": 2838,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 2787,
											"end": 2840,
											"name": "tag",
											"source": 33,
											"value": "284"
										},
										{
											"begin": 2787,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2885,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 2879,
											"end": 2890,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2862,
											"end": 2877,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2849,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 33
										},
										{
											"begin": 2937,
											"end": 2938,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2919,
											"end": 2925,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2948,
											"end": 2964,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": 2948,
											"end": 2964,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2948,
											"end": 2964,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2948,
											"end": 2964,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2948,
											"end": 2964,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2948,
											"end": 2964,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2948,
											"end": 2964,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1908,
											"end": 2970,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1908,
											"end": 2970,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1908,
											"end": 2970,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1908,
											"end": 2970,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1908,
											"end": 2970,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1908,
											"end": 2970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3157,
											"end": 3407,
											"name": "tag",
											"source": 33,
											"value": "258"
										},
										{
											"begin": 3157,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3242,
											"end": 3243,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "tag",
											"source": 33,
											"value": "287"
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "289"
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 3342,
											"end": 3353,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3342,
											"end": 3353,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3342,
											"end": 3353,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3323,
											"end": 3334,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 3323,
											"end": 3334,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 3323,
											"end": 3334,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3288,
											"end": 3290,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3291,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "287"
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "tag",
											"source": 33,
											"value": "289"
										},
										{
											"begin": 3252,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3397,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3381,
											"end": 3397,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3374,
											"end": 3401,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3157,
											"end": 3407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3412,
											"end": 3808,
											"name": "tag",
											"source": 33,
											"value": "61"
										},
										{
											"begin": 3412,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3561,
											"end": 3563,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3543,
											"end": 3564,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3599,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 3587,
											"end": 3600,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3609,
											"end": 3643,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3652,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "291"
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3719,
											"end": 3721,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3717,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3699,
											"end": 3701,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3691,
											"end": 3697,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 3687,
											"end": 3702,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3652,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "258"
										},
										{
											"begin": 3652,
											"end": 3731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3652,
											"end": 3731,
											"name": "tag",
											"source": 33,
											"value": "291"
										},
										{
											"begin": 3652,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 3752,
											"end": 3797,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3752,
											"end": 3797,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3752,
											"end": 3797,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3752,
											"end": 3797,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3802,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3748,
											"end": 3802,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 3412,
											"end": 3808,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3813,
											"end": 4706,
											"name": "tag",
											"source": 33,
											"value": "65"
										},
										{
											"begin": 3813,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3915,
											"end": 3921,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3992,
											"end": 3994,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 3980,
											"end": 3989,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 3967,
											"end": 3990,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 3963,
											"end": 3995,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 3960,
											"end": 4012,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 3960,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "293"
										},
										{
											"begin": 3960,
											"end": 4012,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3998,
											"end": 4010,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 3960,
											"end": 4012,
											"name": "tag",
											"source": 33,
											"value": "293"
										},
										{
											"begin": 3960,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4047,
											"end": 4056,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 4034,
											"end": 4057,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 4066,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "294"
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4066,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 4066,
											"end": 4103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4066,
											"end": 4103,
											"name": "tag",
											"source": 33,
											"value": "294"
										},
										{
											"begin": 4066,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4179,
											"end": 4181,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4151,
											"end": 4183,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 4192,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "295"
										},
										{
											"begin": 4151,
											"end": 4183,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4192,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 4192,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4192,
											"end": 4231,
											"name": "tag",
											"source": 33,
											"value": "295"
										},
										{
											"begin": 4192,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4308,
											"end": 4310,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4280,
											"end": 4312,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 4331,
											"end": 4349,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4361,
											"end": 4375,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4361,
											"end": 4375,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4361,
											"end": 4375,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "296"
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4388,
											"end": 4389,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4378,
											"end": 4390,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "tag",
											"source": 33,
											"value": "296"
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4426,
											"end": 4432,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4415,
											"end": 4424,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 4411,
											"end": 4433,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 4401,
											"end": 4433,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 4464,
											"end": 4468,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 4456,
											"end": 4469,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 4442,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "297"
										},
										{
											"begin": 4442,
											"end": 4497,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4493,
											"end": 4494,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4483,
											"end": 4495,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 4442,
											"end": 4497,
											"name": "tag",
											"source": 33,
											"value": "297"
										},
										{
											"begin": 4442,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4533,
											"end": 4535,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4520,
											"end": 4536,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4548,
											"end": 4562,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 4545,
											"end": 4579,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 4545,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "298"
										},
										{
											"begin": 4545,
											"end": 4579,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 4545,
											"end": 4579,
											"name": "tag",
											"source": 33,
											"value": "298"
										},
										{
											"begin": 4545,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 4615,
											"end": 4617,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4594,
											"end": 4618,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4591,
											"end": 4628,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 4588,
											"end": 4645,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 4588,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "299"
										},
										{
											"begin": 4588,
											"end": 4645,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4641,
											"end": 4642,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4631,
											"end": 4643,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 4588,
											"end": 4645,
											"name": "tag",
											"source": 33,
											"value": "299"
										},
										{
											"begin": 4588,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3813,
											"end": 4706,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": 3813,
											"end": 4706,
											"name": "SWAP9",
											"source": 33
										},
										{
											"begin": 3813,
											"end": 4706,
											"name": "SWAP5",
											"source": 33
										},
										{
											"begin": 3813,
											"end": 4706,
											"name": "SWAP8",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4672,
											"end": 4674,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "SWAP5",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3813,
											"end": 4706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4711,
											"end": 4964,
											"name": "tag",
											"source": 33,
											"value": "70"
										},
										{
											"begin": 4711,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4820,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4802,
											"end": 4809,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 4798,
											"end": 4821,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 4794,
											"end": 4826,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 4791,
											"end": 4843,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 4791,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "301"
										},
										{
											"begin": 4791,
											"end": 4843,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4837,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 4791,
											"end": 4843,
											"name": "tag",
											"source": 33,
											"value": "301"
										},
										{
											"begin": 4791,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4878,
											"end": 4887,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4865,
											"end": 4888,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "218"
										},
										{
											"begin": 4928,
											"end": 4933,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 4897,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5375,
											"end": 5642,
											"name": "tag",
											"source": 33,
											"value": "259"
										},
										{
											"begin": 5375,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5459,
											"end": 5462,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 5452,
											"end": 5471,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5509,
											"end": 5514,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5502,
											"end": 5506,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5497,
											"end": 5500,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5480,
											"end": 5523,
											"name": "CALLDATACOPY",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5569,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5559,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 5543,
											"end": 5559,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 5543,
											"end": 5559,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5539,
											"end": 5566,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5539,
											"end": 5566,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5539,
											"end": 5566,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5532,
											"end": 5570,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5532,
											"end": 5570,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5532,
											"end": 5570,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5532,
											"end": 5570,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 5603,
											"end": 5618,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5603,
											"end": 5618,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5603,
											"end": 5618,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5628,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 5590,
											"end": 5629,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5590,
											"end": 5629,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5590,
											"end": 5629,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5586,
											"end": 5636,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5586,
											"end": 5636,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5375,
											"end": 5642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5647,
											"end": 5894,
											"name": "tag",
											"source": 33,
											"value": "119"
										},
										{
											"begin": 5647,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5806,
											"end": 5808,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5788,
											"end": 5809,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "307"
										},
										{
											"begin": 5884,
											"end": 5886,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5873,
											"end": 5882,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 5853,
											"end": 5859,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 5826,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "259"
										},
										{
											"begin": 5826,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5826,
											"end": 5888,
											"name": "tag",
											"source": 33,
											"value": "307"
										},
										{
											"begin": 5826,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5818,
											"end": 5888,
											"name": "SWAP5",
											"source": 33
										},
										{
											"begin": 5647,
											"end": 5894,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5647,
											"end": 5894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5899,
											"end": 6170,
											"name": "tag",
											"source": 33,
											"value": "121"
										},
										{
											"begin": 5899,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 6082,
											"end": 6088,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6074,
											"end": 6080,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 6069,
											"end": 6072,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6056,
											"end": 6089,
											"name": "CALLDATACOPY",
											"source": 33
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6124,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 6108,
											"end": 6124,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6133,
											"end": 6146,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6133,
											"end": 6146,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6133,
											"end": 6146,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6108,
											"end": 6124,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5899,
											"end": 6170,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5899,
											"end": 6170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 6454,
											"end": 6638,
											"name": "tag",
											"source": 33,
											"value": "148"
										},
										{
											"begin": 6454,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 6524,
											"end": 6530,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6579,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 6565,
											"end": 6574,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6556,
											"end": 6563,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6552,
											"end": 6575,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 6548,
											"end": 6580,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 6545,
											"end": 6597,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 6545,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "311"
										},
										{
											"begin": 6545,
											"end": 6597,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 6593,
											"end": 6594,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 6583,
											"end": 6595,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 6545,
											"end": 6597,
											"name": "tag",
											"source": 33,
											"value": "311"
										},
										{
											"begin": 6545,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6616,
											"end": 6632,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 6616,
											"end": 6632,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 6454,
											"end": 6638,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6454,
											"end": 6638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 6851,
											"end": 7367,
											"name": "tag",
											"source": 33,
											"value": "166"
										},
										{
											"begin": 6851,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7130,
											"end": 7145,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 7130,
											"end": 7145,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7130,
											"end": 7145,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7112,
											"end": 7146,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 7112,
											"end": 7146,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7182,
											"end": 7197,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 7182,
											"end": 7197,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7177,
											"end": 7179,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7155,
											"end": 7198,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7229,
											"end": 7231,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 7214,
											"end": 7232,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7214,
											"end": 7232,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7207,
											"end": 7241,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 7207,
											"end": 7241,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7207,
											"end": 7241,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7277,
											"end": 7280,
											"name": "PUSH",
											"source": 33,
											"value": "80"
										},
										{
											"begin": 7272,
											"end": 7274,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7250,
											"end": 7281,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7250,
											"end": 7281,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7250,
											"end": 7281,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7055,
											"end": 7059,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7059,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7298,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "244"
										},
										{
											"begin": 7298,
											"end": 7361,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7341,
											"end": 7360,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 7341,
											"end": 7360,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 7325,
											"end": 7331,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 7298,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "259"
										},
										{
											"begin": 7298,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 7372,
											"end": 7649,
											"name": "tag",
											"source": 33,
											"value": "170"
										},
										{
											"begin": 7372,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 7439,
											"end": 7445,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 7471,
											"end": 7478,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 7467,
											"end": 7490,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 7463,
											"end": 7495,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 7460,
											"end": 7512,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 7460,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "316"
										},
										{
											"begin": 7460,
											"end": 7512,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 7508,
											"end": 7509,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7498,
											"end": 7510,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 7460,
											"end": 7512,
											"name": "tag",
											"source": 33,
											"value": "316"
										},
										{
											"begin": 7460,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 7540,
											"end": 7549,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 7593,
											"end": 7598,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7586,
											"end": 7599,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 7579,
											"end": 7600,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 7572,
											"end": 7577,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7569,
											"end": 7601,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 7559,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "218"
										},
										{
											"begin": 7559,
											"end": 7619,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7605,
											"end": 7617,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 8115,
											"end": 8242,
											"name": "tag",
											"source": 33,
											"value": "187"
										},
										{
											"begin": 8115,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8176,
											"end": 8186,
											"name": "PUSH",
											"source": 33,
											"value": "4E487B71"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "PUSH",
											"source": 33,
											"value": "E0"
										},
										{
											"begin": 8167,
											"end": 8187,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 8164,
											"end": 8165,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8157,
											"end": 8188,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "PUSH",
											"source": 33,
											"value": "32"
										},
										{
											"begin": 8204,
											"end": 8205,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 8197,
											"end": 8212,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8231,
											"end": 8235,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 8228,
											"end": 8229,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8236,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 8247,
											"end": 8479,
											"name": "tag",
											"source": 33,
											"value": "194"
										},
										{
											"begin": 8247,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8286,
											"end": 8289,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8307,
											"end": 8324,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 8307,
											"end": 8324,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 8307,
											"end": 8324,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8304,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "321"
										},
										{
											"begin": 8304,
											"end": 8444,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 8366,
											"end": 8376,
											"name": "PUSH",
											"source": 33,
											"value": "4E487B71"
										},
										{
											"begin": 8361,
											"end": 8364,
											"name": "PUSH",
											"source": 33,
											"value": "E0"
										},
										{
											"begin": 8357,
											"end": 8377,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 8354,
											"end": 8355,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8378,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8401,
											"end": 8405,
											"name": "PUSH",
											"source": 33,
											"value": "11"
										},
										{
											"begin": 8398,
											"end": 8399,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 8391,
											"end": 8406,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8429,
											"end": 8433,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 8426,
											"end": 8427,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8434,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 8304,
											"end": 8444,
											"name": "tag",
											"source": 33,
											"value": "321"
										},
										{
											"begin": 8304,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8471,
											"end": 8472,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8247,
											"end": 8479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 8484,
											"end": 8771,
											"name": "tag",
											"source": 33,
											"value": "229"
										},
										{
											"begin": 8484,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8613,
											"end": 8616,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8651,
											"end": 8657,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 8645,
											"end": 8658,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 8667,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "323"
										},
										{
											"begin": 8726,
											"end": 8732,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8721,
											"end": 8724,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 8714,
											"end": 8718,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 8702,
											"end": 8719,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8667,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "258"
										},
										{
											"begin": 8667,
											"end": 8733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 8667,
											"end": 8733,
											"name": "tag",
											"source": 33,
											"value": "323"
										},
										{
											"begin": 8667,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8749,
											"end": 8765,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8749,
											"end": 8765,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8749,
											"end": 8765,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8749,
											"end": 8765,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8749,
											"end": 8765,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 8484,
											"end": 8771,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8484,
											"end": 8771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									}
								}
							},
							"sourceList": [
								"@ensdomains/ens-contracts/contracts/registry/ENS.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REGISTER_DAO_PERMISSION_ID()": "a2298b4b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"UPGRADE_REGISTRY_PERMISSION_ID()": "74574eb7",
							"dao()": "4162169f",
							"entries(address)": "f29ee125",
							"initialize(address,address)": "485cc955",
							"protocolVersion()": "2ae9c600",
							"proxiableUUID()": "52d1902d",
							"register(address,address,string)": "ede49739",
							"subdomainRegistrar()": "00077393",
							"targetInterfaceId()": "44162ef8",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractERC165SupportInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractInterfaceInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"name\":\"DaoUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"InvalidDaoSubdomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"DAORegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REGISTER_DAO_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_REGISTRY_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"entries\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"_managingDao\",\"type\":\"address\"},{\"internalType\":\"contract ENSSubdomainRegistrar\",\"name\":\"_subdomainRegistrar\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subdomainRegistrar\",\"outputs\":[{\"internalType\":\"contract ENSSubdomainRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaceId\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ContractAlreadyRegistered(address)\":[{\"params\":{\"registrant\":\"The address of the contract to be registered.\"}}],\"ContractERC165SupportInvalid(address)\":[{\"params\":{\"registrant\":\"The address of the contract.\"}}],\"ContractInterfaceInvalid(address)\":[{\"params\":{\"registrant\":\"The address of the contract to be registered.\"}}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"params\":{\"dao\":\"The associated DAO.\",\"permissionId\":\"The permission identifier.\",\"where\":\"The context in which the authorization reverted.\",\"who\":\"The address (EOA or contract) missing the permission.\"}}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"DAORegistered(address,address,string)\":{\"params\":{\"creator\":\"The address of the creator.\",\"dao\":\"The address of the DAO contract.\",\"subdomain\":\"The DAO subdomain.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"details\":\"Used to disallow initializing the implementation contract by an attacker for extra safety.\"},\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}},\"initialize(address,address)\":{\"params\":{\"_managingDao\":\"the managing DAO address.\",\"_subdomainRegistrar\":\"The `ENSSubdomainRegistrar` where `ENS` subdomain will be registered.\"}},\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_0\":\"Returns the semantic Aragon OSx protocol version number.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"register(address,address,string)\":{\"details\":\"A subdomain is unique within the Aragon DAO framework and can get stored here.\",\"params\":{\"creator\":\"The address of the creator.\",\"dao\":\"The address of the DAO contract.\",\"subdomain\":\"The DAO subdomain.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"Register your unique DAO subdomain\",\"version\":1},\"userdoc\":{\"errors\":{\"ContractAlreadyRegistered(address)\":[{\"notice\":\"Thrown if the contract is already registered.\"}],\"ContractERC165SupportInvalid(address)\":[{\"notice\":\"Thrown if the contract does not support ERC165.\"}],\"ContractInterfaceInvalid(address)\":[{\"notice\":\"Thrown if the contract does not support the required interface.\"}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"notice\":\"Thrown if a call is unauthorized in the associated DAO.\"}],\"InvalidDaoSubdomain(string)\":[{\"notice\":\"Thrown if the DAO subdomain doesn't match the regex `[0-9a-z\\\\-]`\"}]},\"events\":{\"DAORegistered(address,address,string)\":{\"notice\":\"Emitted when a new DAO is registered.\"}},\"kind\":\"user\",\"methods\":{\"REGISTER_DAO_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `register` function.\"},\"UPGRADE_REGISTRY_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `_authorizeUpgrade` function.\"},\"dao()\":{\"notice\":\"Returns the DAO contract.\"},\"entries(address)\":{\"notice\":\"The mapping containing the registry entries returning true for registered contract addresses.\"},\"initialize(address,address)\":{\"notice\":\"Initializes the contract.\"},\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"},\"register(address,address,string)\":{\"notice\":\"Registers a DAO by its address. If a non-empty subdomain name is provided that is not taken already, the DAO becomes the owner of the ENS name.\"},\"subdomainRegistrar()\":{\"notice\":\"The ENS subdomain registrar registering the DAO subdomains.\"},\"targetInterfaceId()\":{\"notice\":\"The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support.\"}},\"notice\":\"This contract provides the possibility to register a DAO.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/framework/dao/DAORegistry.sol\":\"DAORegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\":{\"keccak256\":\"0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda\",\"urls\":[\"bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314\",\"dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR\"]},\"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol\":{\"keccak256\":\"0xfc77ab6b7c59c3ebfe1c720bdebf9b08c2488ff7ac9501a9aa056c5d6d5b50c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d472c5e0de753fe3b0ce8b37b3c10635ad7328fbd34e2b1be05e82aec73b7f7\",\"dweb:/ipfs/QmbPqW3BxytUNqJTxAXF6PngM3X7BNNnQwdSuSdHsKmRvH\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol\":{\"keccak256\":\"0x85b373d02d19374fe570af407f459768285704bf7f30ab17c30eabfb5a10e4c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046ce3d92d29806d7b447f7ab4227f19b0b2e5c75fd5b4a3fcaef7fe2442141\",\"dweb:/ipfs/QmRgnfWjFetrSJngkhU7Yui1ZcK1MeatvZDpvUTYNuYnND\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol\":{\"keccak256\":\"0x2ad7f2fc60ebe0f93745fe70247f6a854f66af732483fda2a3c5e055614445e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43922ba183ff20d87dce7fc5d715e626b26594151e36dcc8d7c6329b9a822963\",\"dweb:/ipfs/QmTg9uHTugTxzqddN68gnhNbGt4bGJBS9mQcss6GYggR4X\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol\":{\"keccak256\":\"0x411447c1e90c51e09702815a85ec725ffbbe37cf96e8cc4d2a8bd4ad8a59d73e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543aa2756447a428711b69aea79e9f4641c22f8330ba920b2a49fde8d9207f82\",\"dweb:/ipfs/QmTdpcYRWLH3BL7iytnqcSzRojTPe3YettKaTqeCvKPk54\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol\":{\"keccak256\":\"0xd95cd77684ba5752c428d7dceb4ecc6506ac94f4fbb910489637eb68dcd8e366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf1fee7770679bd935b8b5686789a4ecc532caeef5a9b8e1b60ae0c285e743e\",\"dweb:/ipfs/QmSaHBAqtDdbQLH6QN4EbupMrq2ah8g6fqE7fLX1u4cjMZ\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol\":{\"keccak256\":\"0xcfa52200edd337f2c6c5bf402352600584da033b21323603e53de33051a3e25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8355211d58db82660140191678ee342eb8a7ac46fa097ae8e03eef008f592e\",\"dweb:/ipfs/QmYDNiECPd4fJ7Vk9Xywfpg73rUvDpcYqas95ofGcpt7fM\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol\":{\"keccak256\":\"0xca1b3a16e7005533f2800a3e66fcdccf7c574deac7913d8c810f40aec1d58dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e38d5eb69e236c37e4a013628838070720c9e1923569650b01252868038c7a\",\"dweb:/ipfs/QmV397iZMRxtem79kJy5sueJadXoVL89gNViX2xciQHUrk\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol\":{\"keccak256\":\"0x5d81521cfae7d9a4475d27533cd8ed0d3475d369eb0674fd90ffbdbdf292faa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d244d15588785044b54c453ab6dc51c616ab70cb8b9e687d3e54565bcae97760\",\"dweb:/ipfs/QmXz4ZZBTFogdkdTV1mcE3ywvL2agKVZHLNNeRHCKVruYM\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol\":{\"keccak256\":\"0x390321fb58f7b927df9562450981e74b4be3907e7c09df321fd3b7409b63ae28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://045d12c6e0e4596b3672614751a9e75188183a89765a6abd938294e0294e9c56\",\"dweb:/ipfs/QmazngvagEoKe29s4M9Rv8KygWD5hrAtNPkYDPJ2pK13yx\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol\":{\"keccak256\":\"0x69748947093dd2fda9ddcebd0adf19a6d1e7600df1d4b1462a0417156caddca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2f86e50bd17c38fb10feb577d88d8970c585017a391ef10e3aaa3d50f81555\",\"dweb:/ipfs/QmaxLx2pqCUxf9W2dusfviZ9aSiTuVwuekGo73rjvmGifE\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol\":{\"keccak256\":\"0x7c5debb3c42cd9f5de2274ea7aa053f238608314b62db441c40e31cea2543fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e34ae2d84d542ffa6791486963f3fe04432a3ffd51877d441256dc2941914\",\"dweb:/ipfs/QmciS4mGAQ6KJtLiLcBFekHKhYAYMmubDWGkpZ3sUFtJPW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":{\"keccak256\":\"0x94edef8687cf1335a114f7e7267fa92cb0d9e61afde8d62589aceede6c245caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dbcc182503f671c6bb7e2c24fe5f13e4c7604389d6cfccd074bc1d9fa7b86df\",\"dweb:/ipfs/QmdioHDNmTsJx9xMcwBvA7QJhC4MzTmDmWHiWsZpbETLXx\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x47c5afa465d550714567ecab77b2dfe15616a92abea5c1e62cb9b74d13308706\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://77d398359d385c36c94fb8504a85e70a0bf790a01ea7673ebff39f9daa46af05\",\"dweb:/ipfs/Qmcso9HQMv8GS2VXE3ZrDWDVpfLQkmc4aH6XD8M5kJbWCF\"]},\"packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x214d611471514ee8c3a21de59447101f1cba44090ee078fa2ba758a2ea5016cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7e51fe2ff30eb754d8ed0a1e4512b35f31d3b7fd1817e277cbfc8721d87fbbf\",\"dweb:/ipfs/QmdLQ1SW4EjRjXMD4pdtJPTDHeZaieYEN3EeiyaV4dDYRX\"]},\"packages/contracts/src/framework/dao/DAORegistry.sol\":{\"keccak256\":\"0x7e3d87fb47cf393dd276fff3ef9d0d7b1520e83f50f5a48798ecff638b8a612a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://98b9a855dc46712d6d6f7493e759df09e2b2e3c030e3c5c9d31a7d6c29e9d581\",\"dweb:/ipfs/QmRG5eNuswrTErien6G88NaB9beE7PAqZY1LTnMACcneYR\"]},\"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":{\"keccak256\":\"0x06c520bc823d80d437700295c4d3071a40d974bf3cea4e1549973092475d809c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://f7d502600a596fe9c61c296ff0cd6efc5bb91ff774b6af1b699b85f71fa66f4f\",\"dweb:/ipfs/QmPbaEyAHoyk9JJXYxL8Gz27TGuozqjsNHKrgZVhSfrxdq\"]},\"packages/contracts/src/framework/utils/RegistryUtils.sol\":{\"keccak256\":\"0x718a8a2b3b02a1f952e841bc78b806bbebbd5de4cf381feb2822e1c3fafb1070\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8dd179ac828b7fe125bfbf8984233ca9ddd3fca0b94ad65cd34696ecb89d0219\",\"dweb:/ipfs/Qmc611VvrtJMjf6eSjGequAV91UkPGEJjQHctKzGbCVB6a\"]},\"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":{\"keccak256\":\"0x5e0373064af4f4aaa1e869c5902ab661b2fcf3717c6feed1e33c4cb8403b3cb9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://92f3f1d966e4a840a5faee2d343715c8efd41ffaa8ed4b7ace5efa90de3884d2\",\"dweb:/ipfs/QmQeynij1tDU91Kd85Yfdyzva7tz4AXML9S7mQMxDrhpTr\"]},\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]},\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":{\"keccak256\":\"0x53e693a16bda9b3483ce71a5b25a523961930c3f03ec381d9da0be9d37686599\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48336778e4f2097ff1fb1c4909d2be7a50dd6107f1c31c69aebb41e6162ef0e2\",\"dweb:/ipfs/QmNTEmpC3arZ5PPq7HX5SRwe9SNL5kLwnmG9zPfUkbi63B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2103,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "dao_",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDAO)2088"
							},
							{
								"astId": 2152,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2378,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "targetInterfaceId",
								"offset": 0,
								"slot": "50",
								"type": "t_bytes4"
							},
							{
								"astId": 2383,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "entries",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2467,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)48_storage"
							},
							{
								"astId": 2230,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "subdomainRegistrar",
								"offset": 0,
								"slot": "100",
								"type": "t_contract(ENSSubdomainRegistrar)2767"
							},
							{
								"astId": 2350,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)48_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[48]",
								"numberOfBytes": "1536"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_contract(ENSSubdomainRegistrar)2767": {
								"encoding": "inplace",
								"label": "contract ENSSubdomainRegistrar",
								"numberOfBytes": "20"
							},
							"t_contract(IDAO)2088": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ContractAlreadyRegistered(address)": [
								{
									"notice": "Thrown if the contract is already registered."
								}
							],
							"ContractERC165SupportInvalid(address)": [
								{
									"notice": "Thrown if the contract does not support ERC165."
								}
							],
							"ContractInterfaceInvalid(address)": [
								{
									"notice": "Thrown if the contract does not support the required interface."
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"notice": "Thrown if a call is unauthorized in the associated DAO."
								}
							],
							"InvalidDaoSubdomain(string)": [
								{
									"notice": "Thrown if the DAO subdomain doesn't match the regex `[0-9a-z\\-]`"
								}
							]
						},
						"events": {
							"DAORegistered(address,address,string)": {
								"notice": "Emitted when a new DAO is registered."
							}
						},
						"kind": "user",
						"methods": {
							"REGISTER_DAO_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `register` function."
							},
							"UPGRADE_REGISTRY_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `_authorizeUpgrade` function."
							},
							"dao()": {
								"notice": "Returns the DAO contract."
							},
							"entries(address)": {
								"notice": "The mapping containing the registry entries returning true for registered contract addresses."
							},
							"initialize(address,address)": {
								"notice": "Initializes the contract."
							},
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							},
							"register(address,address,string)": {
								"notice": "Registers a DAO by its address. If a non-empty subdomain name is provided that is not taken already, the DAO becomes the owner of the ENS name."
							},
							"subdomainRegistrar()": {
								"notice": "The ENS subdomain registrar registering the DAO subdomains."
							},
							"targetInterfaceId()": {
								"notice": "The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support."
							}
						},
						"notice": "This contract provides the possibility to register a DAO.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol": {
				"InterfaceBasedRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractAlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractERC165SupportInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractInterfaceInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dao",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "permissionId",
									"type": "bytes32"
								}
							],
							"name": "DaoUnauthorized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_REGISTRY_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dao",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "entries",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetInterfaceId",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ContractAlreadyRegistered(address)": [
								{
									"params": {
										"registrant": "The address of the contract to be registered."
									}
								}
							],
							"ContractERC165SupportInvalid(address)": [
								{
									"params": {
										"registrant": "The address of the contract."
									}
								}
							],
							"ContractInterfaceInvalid(address)": [
								{
									"params": {
										"registrant": "The address of the contract to be registered."
									}
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"params": {
										"dao": "The associated DAO.",
										"permissionId": "The permission identifier.",
										"where": "The context in which the authorization reverted.",
										"who": "The address (EOA or contract) missing the permission."
									}
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"dao()": {
								"returns": {
									"_0": "The DAO contract."
								}
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"title": "InterfaceBasedRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"UPGRADE_REGISTRY_PERMISSION_ID()": "74574eb7",
							"dao()": "4162169f",
							"entries(address)": "f29ee125",
							"proxiableUUID()": "52d1902d",
							"targetInterfaceId()": "44162ef8",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractERC165SupportInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractInterfaceInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"name\":\"DaoUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_REGISTRY_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"entries\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaceId\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ContractAlreadyRegistered(address)\":[{\"params\":{\"registrant\":\"The address of the contract to be registered.\"}}],\"ContractERC165SupportInvalid(address)\":[{\"params\":{\"registrant\":\"The address of the contract.\"}}],\"ContractInterfaceInvalid(address)\":[{\"params\":{\"registrant\":\"The address of the contract to be registered.\"}}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"params\":{\"dao\":\"The associated DAO.\",\"permissionId\":\"The permission identifier.\",\"where\":\"The context in which the authorization reverted.\",\"who\":\"The address (EOA or contract) missing the permission.\"}}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"InterfaceBasedRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"ContractAlreadyRegistered(address)\":[{\"notice\":\"Thrown if the contract is already registered.\"}],\"ContractERC165SupportInvalid(address)\":[{\"notice\":\"Thrown if the contract does not support ERC165.\"}],\"ContractInterfaceInvalid(address)\":[{\"notice\":\"Thrown if the contract does not support the required interface.\"}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"notice\":\"Thrown if a call is unauthorized in the associated DAO.\"}]},\"kind\":\"user\",\"methods\":{\"UPGRADE_REGISTRY_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `_authorizeUpgrade` function.\"},\"dao()\":{\"notice\":\"Returns the DAO contract.\"},\"entries(address)\":{\"notice\":\"The mapping containing the registry entries returning true for registered contract addresses.\"},\"targetInterfaceId()\":{\"notice\":\"The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support.\"}},\"notice\":\"An [ERC-165](https://eips.ethereum.org/EIPS/eip-165)-based registry for contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":\"InterfaceBasedRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":{\"keccak256\":\"0x94edef8687cf1335a114f7e7267fa92cb0d9e61afde8d62589aceede6c245caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dbcc182503f671c6bb7e2c24fe5f13e4c7604389d6cfccd074bc1d9fa7b86df\",\"dweb:/ipfs/QmdioHDNmTsJx9xMcwBvA7QJhC4MzTmDmWHiWsZpbETLXx\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x47c5afa465d550714567ecab77b2dfe15616a92abea5c1e62cb9b74d13308706\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://77d398359d385c36c94fb8504a85e70a0bf790a01ea7673ebff39f9daa46af05\",\"dweb:/ipfs/Qmcso9HQMv8GS2VXE3ZrDWDVpfLQkmc4aH6XD8M5kJbWCF\"]},\"packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x214d611471514ee8c3a21de59447101f1cba44090ee078fa2ba758a2ea5016cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7e51fe2ff30eb754d8ed0a1e4512b35f31d3b7fd1817e277cbfc8721d87fbbf\",\"dweb:/ipfs/QmdLQ1SW4EjRjXMD4pdtJPTDHeZaieYEN3EeiyaV4dDYRX\"]},\"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":{\"keccak256\":\"0x06c520bc823d80d437700295c4d3071a40d974bf3cea4e1549973092475d809c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://f7d502600a596fe9c61c296ff0cd6efc5bb91ff774b6af1b699b85f71fa66f4f\",\"dweb:/ipfs/QmPbaEyAHoyk9JJXYxL8Gz27TGuozqjsNHKrgZVhSfrxdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2103,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "dao_",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDAO)2088"
							},
							{
								"astId": 2152,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2378,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "targetInterfaceId",
								"offset": 0,
								"slot": "50",
								"type": "t_bytes4"
							},
							{
								"astId": 2383,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "entries",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2467,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)48_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)48_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[48]",
								"numberOfBytes": "1536"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_contract(IDAO)2088": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ContractAlreadyRegistered(address)": [
								{
									"notice": "Thrown if the contract is already registered."
								}
							],
							"ContractERC165SupportInvalid(address)": [
								{
									"notice": "Thrown if the contract does not support ERC165."
								}
							],
							"ContractInterfaceInvalid(address)": [
								{
									"notice": "Thrown if the contract does not support the required interface."
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"notice": "Thrown if a call is unauthorized in the associated DAO."
								}
							]
						},
						"kind": "user",
						"methods": {
							"UPGRADE_REGISTRY_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `_authorizeUpgrade` function."
							},
							"dao()": {
								"notice": "Returns the DAO contract."
							},
							"entries(address)": {
								"notice": "The mapping containing the registry entries returning true for registered contract addresses."
							},
							"targetInterfaceId()": {
								"notice": "The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support."
							}
						},
						"notice": "An [ERC-165](https://eips.ethereum.org/EIPS/eip-165)-based registry for contracts.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol": {
				"ENSSubdomainRegistrar": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "subnode",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "nodeOwner",
									"type": "address"
								}
							],
							"name": "AlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dao",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "permissionId",
									"type": "bytes32"
								}
							],
							"name": "DaoUnauthorized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "InvalidResolver",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REGISTER_ENS_SUBDOMAIN_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_REGISTRAR_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dao",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ens",
							"outputs": [
								{
									"internalType": "contract ENS",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IDAO",
									"name": "_managingDao",
									"type": "address"
								},
								{
									"internalType": "contract ENS",
									"name": "_ens",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_node",
									"type": "bytes32"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "node",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_targetAddress",
									"type": "address"
								}
							],
							"name": "registerSubnode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "resolver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_resolver",
									"type": "address"
								}
							],
							"name": "setDefaultResolver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AlreadyRegistered(bytes32,address)": [
								{
									"params": {
										"nodeOwner": "The node owner address.",
										"subnode": "The subnode namehash."
									}
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"params": {
										"dao": "The associated DAO.",
										"permissionId": "The permission identifier.",
										"where": "The context in which the authorization reverted.",
										"who": "The address (EOA or contract) missing the permission."
									}
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"InvalidResolver(bytes32,address)": [
								{
									"params": {
										"node": "The node namehash.",
										"resolver": "The node resolver address."
									}
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor",
								"details": "Used to disallow initializing the implementation contract by an attacker for extra safety."
							},
							"dao()": {
								"returns": {
									"_0": "The DAO contract."
								}
							},
							"initialize(address,address,bytes32)": {
								"params": {
									"_ens": "The interface of the ENS registry to be used.",
									"_managingDao": "The interface of the DAO managing the components permissions.",
									"_node": "The ENS parent domain node under which the subdomains are to be registered."
								}
							},
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_0": "Returns the semantic Aragon OSx protocol version number."
								}
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"registerSubnode(bytes32,address)": {
								"details": "It reverts with no message if this contract isn't the owner nor an approved operator for the given node.",
								"params": {
									"_label": "The labelhash of the subdomain name.",
									"_targetAddress": "The address to which the subdomain resolves."
								}
							},
							"setDefaultResolver(address)": {
								"params": {
									"_resolver": "The resolver contract to be used."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"title": "ENSSubdomainRegistrar",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1046:5746  contract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":2485:2540  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":2510:2532  _disableInitializers() */\n  tag_4\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":2510:2530  _disableInitializers */\n  tag_5\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":2510:2532  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1046:5746  contract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1046:5746  contract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xfd1753e5062fc84b796e3e4549282ff123bc8efd827793b2908817313a959dbe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1046:5746  contract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6133f985\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaf7b2fed\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc66485b2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd70754ec\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x6133f985\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x89bb4145\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9848ba51\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x04f3bcec\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2ae9c600\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3f15457f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4162169f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1859:1882  address public resolver */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      sload(0x34)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1859:1882  address public resolver */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1644:1658  ENS public ens */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sload(0x32)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1193:1265  function dao() public view returns (IDAO) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1229:1233  IDAO */\n      0x00\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1253:1257  dao_ */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1193:1265  function dao() public view returns (IDAO) {... */\n      jump(tag_18)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_6:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":2643:2668   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2631:2633   */\n      0x20\n        /* \"#utility.yul\":2616:2634   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      tag_20\n        /* \"#utility.yul\":2497:2674   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3149:3569  function initialize(IDAO _managingDao, ENS _ens, bytes32 _node) external initializer {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_37\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4418:4976  function registerSubnode(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_37\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1474:1592  bytes32 public constant REGISTER_ENS_SUBDOMAIN_PERMISSION_ID =... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_42\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1546:1592  keccak256(\"REGISTER_ENS_SUBDOMAIN_PERMISSION\") */\n      0xbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1474:1592  bytes32 public constant REGISTER_ENS_SUBDOMAIN_PERMISSION_ID =... */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_61:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1241:1349  bytes32 public constant UPGRADE_REGISTRAR_PERMISSION_ID =... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_42\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1308:1349  keccak256(\"UPGRADE_REGISTRAR_PERMISSION\") */\n      0xa1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1241:1349  bytes32 public constant UPGRADE_REGISTRAR_PERMISSION_ID =... */\n      dup2\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5151:5430  function setDefaultResolver(... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_37\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1747:1766  bytes32 public node */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_42\n      sload(0x33)\n      dup2\n      jump\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n    tag_24:\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":704:719  uint8[3] memory */\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      pop\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":740:741  1 */\n      0x01\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      dup2\n      mstore\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":743:744  4 */\n      0x04\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_83\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_88\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_91:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3149:3569  function initialize(IDAO _managingDao, ENS _ens, bytes32 _node) external initializer {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_97\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_99\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_101:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3245:3292  __DaoAuthorizableUpgradeable_init(_managingDao) */\n      tag_103\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3279:3291  _managingDao */\n      dup9\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3245:3278  __DaoAuthorizableUpgradeable_init */\n      tag_104\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3245:3292  __DaoAuthorizableUpgradeable_init(_managingDao) */\n      jump\t// in\n    tag_103:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3305:3308  ens */\n      0x32\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3305:3315  ens = _ens */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3326:3330  node */\n      0x33\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3326:3338  node = _node */\n      dup8\n      swap1\n      sstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3374:3393  ens.resolver(_node) */\n      mload(0x40)\n      shl(0xe0, 0x0178b8bf)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2643:2668   */\n      dup9\n      swap1\n      mstore\n      0x00\n      swap2\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3305:3315  ens = _ens */\n      swap1\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3374:3386  ens.resolver */\n      0x0178b8bf\n      swap1\n        /* \"#utility.yul\":2616:2634   */\n      0x24\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3374:3393  ens.resolver(_node) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3351:3393  address nodeResolver = ens.resolver(_node) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3410:3436  nodeResolver == address(0) */\n      dup2\n      and\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3406:3526  if (nodeResolver == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3460:3514  InvalidResolver({node: _node, resolver: nodeResolver}) */\n      mload(0x40)\n      shl(0xe1, 0x0d7097c5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4822:4847   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4883:4915   */\n      dup3\n      and\n        /* \"#utility.yul\":4863:4881   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4856:4916   */\n      mstore\n        /* \"#utility.yul\":4795:4813   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3460:3514  InvalidResolver({node: _node, resolver: nodeResolver}) */\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3406:3526  if (nodeResolver == address(0)) {... */\n    tag_110:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3538:3546  resolver */\n      0x34\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3538:3561  resolver = nodeResolver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":5080:5130   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":5068:5070   */\n      0x20\n        /* \"#utility.yul\":5053:5071   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3149:3569  function initialize(IDAO _managingDao, ENS _ens, bytes32 _node) external initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4418:4976  function registerSubnode(... */\n    tag_55:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      sload(0x00)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1546:1592  keccak256(\"REGISTER_ENS_SUBDOMAIN_PERMISSION\") */\n      0xbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1677  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_117\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1630:1634  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1637:1649  _msgSender() */\n    tag_118:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1651:1664  _permissionId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":1040:1054  bytes calldata */\n      0x00\n      calldatasize\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1615  _auth */\n      tag_122\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1677  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      jump\t// in\n    tag_117:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4571:4586  bytes32 subnode */\n      0x00\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4616:4620  node */\n      sload(0x33)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4622:4628  _label */\n      dup5\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4599:4629  abi.encodePacked(node, _label) */\n      add(0x20, mload(0x40))\n      tag_124\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":5298:5317   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":5342:5344   */\n      0x20\n        /* \"#utility.yul\":5333:5345   */\n      dup3\n      add\n        /* \"#utility.yul\":5326:5354   */\n      mstore\n        /* \"#utility.yul\":5379:5381   */\n      0x40\n        /* \"#utility.yul\":5370:5382   */\n      add\n      swap1\n        /* \"#utility.yul\":5141:5388   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4599:4629  abi.encodePacked(node, _label) */\n    tag_124:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      not(0x1f)\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4589:4630  keccak256(abi.encodePacked(node, _label)) */\n      dup1\n      mload\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4599:4629  abi.encodePacked(node, _label) */\n      0x20\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4589:4630  keccak256(abi.encodePacked(node, _label)) */\n      swap1\n      swap2\n      add\n      keccak256\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4664:4667  ens */\n      sload(0x32)\n      shl(0xe0, 0x02571be3)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4664:4682  ens.owner(subnode) */\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2643:2668   */\n      dup3\n      swap1\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4589:4630  keccak256(abi.encodePacked(node, _label)) */\n      swap1\n      swap3\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4641:4661  address currentOwner */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4664:4667  ens */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4664:4673  ens.owner */\n      0x02571be3\n      swap1\n        /* \"#utility.yul\":2616:2634   */\n      0x24\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4664:4682  ens.owner(subnode) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_129:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4641:4682  address currentOwner = ens.owner(subnode) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4699:4725  currentOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4695:4801  if (currentOwner != address(0)) {... */\n      tag_130\n      jumpi\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4749:4789  AlreadyRegistered(subnode, currentOwner) */\n      mload(0x40)\n      shl(0xe1, 0xfcad5d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4822:4847   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4883:4915   */\n      dup3\n      and\n        /* \"#utility.yul\":4863:4881   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4856:4916   */\n      mstore\n        /* \"#utility.yul\":4795:4813   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4749:4789  AlreadyRegistered(subnode, currentOwner) */\n      tag_111\n        /* \"#utility.yul\":4648:4922   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4695:4801  if (currentOwner != address(0)) {... */\n    tag_130:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4813:4816  ens */\n      sload(0x32)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4833:4837  node */\n      sload(0x33)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4813:4861  ens.setSubnodeOwner(node, _label, address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x06ab5923)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5595:5620   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5636:5654   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5629:5663   */\n      dup8\n      swap1\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4855:4859  this */\n      address\n        /* \"#utility.yul\":5679:5697   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5672:5732   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4813:4816  ens */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4813:4832  ens.setSubnodeOwner */\n      0x06ab5923\n      swap1\n        /* \"#utility.yul\":5568:5586   */\n      0x64\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4813:4861  ens.setSubnodeOwner(node, _label, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4872:4875  ens */\n      sload(0x32)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4897:4905  resolver */\n      sload(0x34)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4872:4906  ens.setResolver(subnode, resolver) */\n      mload(0x40)\n      shl(0xe1, 0x0c4b7b85)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4822:4847   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4897:4905  resolver */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":4863:4881   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4856:4916   */\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4872:4875  ens */\n      swap2\n      and\n      swap1\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4872:4887  ens.setResolver */\n      0x1896f70a\n      swap1\n        /* \"#utility.yul\":4795:4813   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4872:4906  ens.setResolver(subnode, resolver) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4926:4934  resolver */\n      sload(0x34)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4917:4968  Resolver(resolver).setAddr(subnode, _targetAddress) */\n      mload(0x40)\n      shl(0xe8, 0xd5fa2b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4822:4847   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4883:4915   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":4863:4881   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4856:4916   */\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4926:4934  resolver */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4917:4943  Resolver(resolver).setAddr */\n      0xd5fa2b00\n      swap2\n      pop\n        /* \"#utility.yul\":4795:4813   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4917:4968  Resolver(resolver).setAddr(subnode, _targetAddress) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4560:4976  {... */\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4418:4976  function registerSubnode(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5151:5430  function setDefaultResolver(... */\n    tag_73:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      sload(0x00)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1546:1592  keccak256(\"REGISTER_ENS_SUBDOMAIN_PERMISSION\") */\n      0xbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1677  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_147\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1630:1634  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1637:1649  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1677  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5281:5304  _resolver == address(0) */\n      dup3\n      and\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5277:5390  if (_resolver == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5351:5355  node */\n      sload(0x33)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5328:5378  InvalidResolver({node: node, resolver: _resolver}) */\n      mload(0x40)\n      shl(0xe1, 0x0d7097c5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4822:4847   */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4883:4915   */\n      dup4\n      and\n        /* \"#utility.yul\":4863:4881   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4856:4916   */\n      mstore\n        /* \"#utility.yul\":4795:4813   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5328:5378  InvalidResolver({node: node, resolver: _resolver}) */\n      tag_111\n        /* \"#utility.yul\":4648:4922   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5277:5390  if (_resolver == address(0)) {... */\n    tag_151:\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5402:5410  resolver */\n      0x34\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5402:5422  resolver = _resolver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5151:5430  function setDefaultResolver(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0xfd1753e5062fc84b796e3e4549282ff123bc8efd827793b2908817313a959dbe\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_154\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0xfd1753e5062fc84b796e3e4549282ff123bc8efd827793b2908817313a959dbe\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_155\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3917:4035  function _authorizeUpgrade(... */\n    tag_87:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      sload(0x00)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1308:1349  keccak256(\"UPGRADE_REGISTRAR_PERMISSION\") */\n      0xa1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1610:1677  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_88\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1616:1620  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1630:1634  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1637:1649  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_164\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_165\n      swap2\n      dup2\n      add\n      swap1\n      tag_137\n      jump\t// in\n    tag_165:\n      0x01\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_111\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_166:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2643:2668   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2616:2634   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_111\n        /* \"#utility.yul\":2497:2674   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0xfd1753e5062fc84b796e3e4549282ff123bc8efd827793b2908817313a959dbe\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":997:1107  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_180:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1088:1092  dao_ */\n      0x00\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1088:1099  dao_ = _dao */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":997:1107  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */\n      jump\t// out\n        /* \"packages/contracts/src/core/utils/auth.sol\":1057:1434  function _auth(... */\n    tag_122:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x7ef7c883)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1221  _dao.hasPermission */\n      dup8\n      and\n      swap1\n      0xfdef9106\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      tag_186\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1222:1228  _where */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1230:1234  _who */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1236:1249  _permissionId */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1251:1256  _data */\n      dup9\n      swap1\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      0x04\n      add\n      tag_187\n      jump\t// in\n    tag_186:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1198:1430  if (!_dao.hasPermission(_where, _who, _permissionId, _data))... */\n      tag_192\n      jumpi\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      mload(0x40)\n      shl(0xe2, 0x0cb6f8ed)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7168:7183   */\n      dup1\n      dup9\n      and\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7150:7184   */\n      mstore\n        /* \"#utility.yul\":7220:7235   */\n      dup1\n      dup8\n      and\n        /* \"#utility.yul\":7200:7218   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7193:7236   */\n      mstore\n        /* \"#utility.yul\":7272:7287   */\n      dup6\n      and\n        /* \"#utility.yul\":7252:7270   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7245:7288   */\n      mstore\n        /* \"#utility.yul\":7304:7322   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":7297:7331   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":7084:7103   */\n      0x84\n      add\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      tag_111\n        /* \"#utility.yul\":6881:7337   */\n      jump\n        /* \"packages/contracts/src/core/utils/auth.sol\":1198:1430  if (!_dao.hasPermission(_where, _who, _permissionId, _data))... */\n    tag_192:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1057:1434  function _auth(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_199\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_200\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_174\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_203\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_88\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_206\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_111\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_213:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_221\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_220)\n    tag_221:\n      0x60\n      swap2\n      pop\n    tag_220:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_231\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_232)\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_111\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_234:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n      pop\n      jump\t// out\n    tag_79:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:723   */\n    tag_26:\n        /* \"#utility.yul\":398:400   */\n      0x60\n        /* \"#utility.yul\":383:401   */\n      dup2\n      add\n        /* \"#utility.yul\":387:396   */\n      dup2\n        /* \"#utility.yul\":478:484   */\n      dup4\n        /* \"#utility.yul\":356:360   */\n      0x00\n        /* \"#utility.yul\":512:717   */\n    tag_245:\n        /* \"#utility.yul\":526:530   */\n      0x03\n        /* \"#utility.yul\":523:524   */\n      dup2\n        /* \"#utility.yul\":520:531   */\n      lt\n        /* \"#utility.yul\":512:717   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":589:602   */\n      dup2\n      mload\n        /* \"#utility.yul\":604:608   */\n      0xff\n        /* \"#utility.yul\":585:609   */\n      and\n        /* \"#utility.yul\":573:610   */\n      dup4\n      mstore\n        /* \"#utility.yul\":633:637   */\n      0x20\n        /* \"#utility.yul\":657:669   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":692:707   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":546:547   */\n      0x01\n        /* \"#utility.yul\":539:548   */\n      add\n        /* \"#utility.yul\":512:717   */\n      jump(tag_245)\n    tag_247:\n        /* \"#utility.yul\":516:519   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":222:723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1299   */\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1243:1274   */\n      dup2\n      and\n        /* \"#utility.yul\":1233:1275   */\n      dup2\n      eq\n        /* \"#utility.yul\":1223:1293   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1289:1290   */\n      0x00\n        /* \"#utility.yul\":1286:1287   */\n      dup1\n        /* \"#utility.yul\":1279:1291   */\n      revert\n        /* \"#utility.yul\":1304:1431   */\n    tag_240:\n        /* \"#utility.yul\":1365:1375   */\n      0x4e487b71\n        /* \"#utility.yul\":1360:1363   */\n      0xe0\n        /* \"#utility.yul\":1356:1376   */\n      shl\n        /* \"#utility.yul\":1353:1354   */\n      0x00\n        /* \"#utility.yul\":1346:1377   */\n      mstore\n        /* \"#utility.yul\":1396:1400   */\n      0x41\n        /* \"#utility.yul\":1393:1394   */\n      0x04\n        /* \"#utility.yul\":1386:1401   */\n      mstore\n        /* \"#utility.yul\":1420:1424   */\n      0x24\n        /* \"#utility.yul\":1417:1418   */\n      0x00\n        /* \"#utility.yul\":1410:1425   */\n      revert\n        /* \"#utility.yul\":1436:2492   */\n    tag_39:\n        /* \"#utility.yul\":1513:1519   */\n      0x00\n        /* \"#utility.yul\":1521:1527   */\n      dup1\n        /* \"#utility.yul\":1574:1576   */\n      0x40\n        /* \"#utility.yul\":1562:1571   */\n      dup4\n        /* \"#utility.yul\":1553:1560   */\n      dup6\n        /* \"#utility.yul\":1549:1572   */\n      sub\n        /* \"#utility.yul\":1545:1577   */\n      slt\n        /* \"#utility.yul\":1542:1594   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1590:1591   */\n      0x00\n        /* \"#utility.yul\":1587:1588   */\n      dup1\n        /* \"#utility.yul\":1580:1592   */\n      revert\n        /* \"#utility.yul\":1542:1594   */\n    tag_254:\n        /* \"#utility.yul\":1629:1638   */\n      dup3\n        /* \"#utility.yul\":1616:1639   */\n      calldataload\n        /* \"#utility.yul\":1648:1679   */\n      tag_255\n        /* \"#utility.yul\":1673:1678   */\n      dup2\n        /* \"#utility.yul\":1648:1679   */\n      tag_239\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1698:1703   */\n      swap2\n      pop\n        /* \"#utility.yul\":1754:1756   */\n      0x20\n        /* \"#utility.yul\":1739:1757   */\n      dup4\n      add\n        /* \"#utility.yul\":1726:1758   */\n      calldataload\n        /* \"#utility.yul\":1777:1795   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1807:1821   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1804:1838   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1834:1835   */\n      0x00\n        /* \"#utility.yul\":1831:1832   */\n      dup1\n        /* \"#utility.yul\":1824:1836   */\n      revert\n        /* \"#utility.yul\":1804:1838   */\n    tag_256:\n        /* \"#utility.yul\":1872:1878   */\n      dup2\n        /* \"#utility.yul\":1861:1870   */\n      dup6\n        /* \"#utility.yul\":1857:1879   */\n      add\n        /* \"#utility.yul\":1847:1879   */\n      swap2\n      pop\n        /* \"#utility.yul\":1917:1924   */\n      dup6\n        /* \"#utility.yul\":1910:1914   */\n      0x1f\n        /* \"#utility.yul\":1906:1908   */\n      dup4\n        /* \"#utility.yul\":1902:1915   */\n      add\n        /* \"#utility.yul\":1898:1925   */\n      slt\n        /* \"#utility.yul\":1888:1943   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1936:1937   */\n      dup1\n        /* \"#utility.yul\":1929:1941   */\n      revert\n        /* \"#utility.yul\":1888:1943   */\n    tag_257:\n        /* \"#utility.yul\":1975:1977   */\n      dup2\n        /* \"#utility.yul\":1962:1978   */\n      calldataload\n        /* \"#utility.yul\":1997:1999   */\n      dup2\n        /* \"#utility.yul\":1993:1995   */\n      dup2\n        /* \"#utility.yul\":1990:2000   */\n      gt\n        /* \"#utility.yul\":1987:2023   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":2003:2021   */\n      tag_259\n      tag_240\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2078:2080   */\n      0x40\n        /* \"#utility.yul\":2072:2081   */\n      mload\n        /* \"#utility.yul\":2046:2048   */\n      0x1f\n        /* \"#utility.yul\":2132:2145   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2128:2150   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2152:2154   */\n      0x3f\n        /* \"#utility.yul\":2124:2155   */\n      add\n        /* \"#utility.yul\":2120:2160   */\n      and\n        /* \"#utility.yul\":2108:2161   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2176:2194   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2196:2218   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2173:2219   */\n      or\n        /* \"#utility.yul\":2170:2242   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":2222:2240   */\n      tag_261\n      tag_240\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2262:2272   */\n      dup2\n        /* \"#utility.yul\":2258:2260   */\n      0x40\n        /* \"#utility.yul\":2251:2273   */\n      mstore\n        /* \"#utility.yul\":2297:2299   */\n      dup3\n        /* \"#utility.yul\":2289:2295   */\n      dup2\n        /* \"#utility.yul\":2282:2300   */\n      mstore\n        /* \"#utility.yul\":2337:2344   */\n      dup9\n        /* \"#utility.yul\":2332:2334   */\n      0x20\n        /* \"#utility.yul\":2327:2329   */\n      dup5\n        /* \"#utility.yul\":2323:2325   */\n      dup8\n        /* \"#utility.yul\":2319:2330   */\n      add\n        /* \"#utility.yul\":2315:2335   */\n      add\n        /* \"#utility.yul\":2312:2345   */\n      gt\n        /* \"#utility.yul\":2309:2362   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2358:2359   */\n      0x00\n        /* \"#utility.yul\":2355:2356   */\n      dup1\n        /* \"#utility.yul\":2348:2360   */\n      revert\n        /* \"#utility.yul\":2309:2362   */\n    tag_262:\n        /* \"#utility.yul\":2414:2416   */\n      dup3\n        /* \"#utility.yul\":2409:2411   */\n      0x20\n        /* \"#utility.yul\":2405:2407   */\n      dup7\n        /* \"#utility.yul\":2401:2412   */\n      add\n        /* \"#utility.yul\":2396:2398   */\n      0x20\n        /* \"#utility.yul\":2388:2394   */\n      dup4\n        /* \"#utility.yul\":2384:2399   */\n      add\n        /* \"#utility.yul\":2371:2417   */\n      calldatacopy\n        /* \"#utility.yul\":2459:2460   */\n      0x00\n        /* \"#utility.yul\":2454:2456   */\n      0x20\n        /* \"#utility.yul\":2449:2451   */\n      dup5\n        /* \"#utility.yul\":2441:2447   */\n      dup4\n        /* \"#utility.yul\":2437:2452   */\n      add\n        /* \"#utility.yul\":2433:2457   */\n      add\n        /* \"#utility.yul\":2426:2461   */\n      mstore\n        /* \"#utility.yul\":2480:2486   */\n      dup1\n        /* \"#utility.yul\":2470:2486   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1436:2492   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2679:3159   */\n    tag_49:\n        /* \"#utility.yul\":2780:2786   */\n      0x00\n        /* \"#utility.yul\":2788:2794   */\n      dup1\n        /* \"#utility.yul\":2796:2802   */\n      0x00\n        /* \"#utility.yul\":2849:2851   */\n      0x60\n        /* \"#utility.yul\":2837:2846   */\n      dup5\n        /* \"#utility.yul\":2828:2835   */\n      dup7\n        /* \"#utility.yul\":2824:2847   */\n      sub\n        /* \"#utility.yul\":2820:2852   */\n      slt\n        /* \"#utility.yul\":2817:2869   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2865:2866   */\n      0x00\n        /* \"#utility.yul\":2862:2863   */\n      dup1\n        /* \"#utility.yul\":2855:2867   */\n      revert\n        /* \"#utility.yul\":2817:2869   */\n    tag_265:\n        /* \"#utility.yul\":2904:2913   */\n      dup4\n        /* \"#utility.yul\":2891:2914   */\n      calldataload\n        /* \"#utility.yul\":2923:2954   */\n      tag_266\n        /* \"#utility.yul\":2948:2953   */\n      dup2\n        /* \"#utility.yul\":2923:2954   */\n      tag_239\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2973:2978   */\n      swap3\n      pop\n        /* \"#utility.yul\":3030:3032   */\n      0x20\n        /* \"#utility.yul\":3015:3033   */\n      dup5\n      add\n        /* \"#utility.yul\":3002:3034   */\n      calldataload\n        /* \"#utility.yul\":3043:3076   */\n      tag_267\n        /* \"#utility.yul\":3002:3034   */\n      dup2\n        /* \"#utility.yul\":3043:3076   */\n      tag_239\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2679:3159   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3095:3102   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3149:3151   */\n      0x40\n        /* \"#utility.yul\":3134:3152   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3121:3153   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2679:3159   */\n      jump\t// out\n        /* \"#utility.yul\":3164:3479   */\n    tag_54:\n        /* \"#utility.yul\":3232:3238   */\n      0x00\n        /* \"#utility.yul\":3240:3246   */\n      dup1\n        /* \"#utility.yul\":3293:3295   */\n      0x40\n        /* \"#utility.yul\":3281:3290   */\n      dup4\n        /* \"#utility.yul\":3272:3279   */\n      dup6\n        /* \"#utility.yul\":3268:3291   */\n      sub\n        /* \"#utility.yul\":3264:3296   */\n      slt\n        /* \"#utility.yul\":3261:3313   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3309:3310   */\n      0x00\n        /* \"#utility.yul\":3306:3307   */\n      dup1\n        /* \"#utility.yul\":3299:3311   */\n      revert\n        /* \"#utility.yul\":3261:3313   */\n    tag_269:\n        /* \"#utility.yul\":3345:3354   */\n      dup3\n        /* \"#utility.yul\":3332:3355   */\n      calldataload\n        /* \"#utility.yul\":3322:3355   */\n      swap2\n      pop\n        /* \"#utility.yul\":3405:3407   */\n      0x20\n        /* \"#utility.yul\":3394:3403   */\n      dup4\n        /* \"#utility.yul\":3390:3408   */\n      add\n        /* \"#utility.yul\":3377:3409   */\n      calldataload\n        /* \"#utility.yul\":3418:3449   */\n      tag_270\n        /* \"#utility.yul\":3443:3448   */\n      dup2\n        /* \"#utility.yul\":3418:3449   */\n      tag_239\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3468:3473   */\n      dup1\n        /* \"#utility.yul\":3458:3473   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3164:3479   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3734   */\n    tag_241:\n        /* \"#utility.yul\":3569:3570   */\n      0x00\n        /* \"#utility.yul\":3579:3692   */\n    tag_272:\n        /* \"#utility.yul\":3593:3599   */\n      dup4\n        /* \"#utility.yul\":3590:3591   */\n      dup2\n        /* \"#utility.yul\":3587:3600   */\n      lt\n        /* \"#utility.yul\":3579:3692   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3669:3680   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3663:3681   */\n      mload\n        /* \"#utility.yul\":3650:3661   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3643:3682   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x20\n        /* \"#utility.yul\":3608:3618   */\n      add\n        /* \"#utility.yul\":3579:3692   */\n      jump(tag_272)\n    tag_274:\n      pop\n      pop\n        /* \"#utility.yul\":3726:3727   */\n      0x00\n        /* \"#utility.yul\":3708:3724   */\n      swap2\n      add\n        /* \"#utility.yul\":3701:3728   */\n      mstore\n        /* \"#utility.yul\":3484:3734   */\n      jump\t// out\n        /* \"#utility.yul\":3739:4135   */\n    tag_64:\n        /* \"#utility.yul\":3888:3890   */\n      0x20\n        /* \"#utility.yul\":3877:3886   */\n      dup2\n        /* \"#utility.yul\":3870:3891   */\n      mstore\n        /* \"#utility.yul\":3851:3855   */\n      0x00\n        /* \"#utility.yul\":3920:3926   */\n      dup3\n        /* \"#utility.yul\":3914:3927   */\n      mload\n        /* \"#utility.yul\":3963:3969   */\n      dup1\n        /* \"#utility.yul\":3958:3960   */\n      0x20\n        /* \"#utility.yul\":3947:3956   */\n      dup5\n        /* \"#utility.yul\":3943:3961   */\n      add\n        /* \"#utility.yul\":3936:3970   */\n      mstore\n        /* \"#utility.yul\":3979:4058   */\n      tag_276\n        /* \"#utility.yul\":4051:4057   */\n      dup2\n        /* \"#utility.yul\":4046:4048   */\n      0x40\n        /* \"#utility.yul\":4035:4044   */\n      dup6\n        /* \"#utility.yul\":4031:4049   */\n      add\n        /* \"#utility.yul\":4026:4028   */\n      0x20\n        /* \"#utility.yul\":4018:4024   */\n      dup8\n        /* \"#utility.yul\":4014:4029   */\n      add\n        /* \"#utility.yul\":3979:4058   */\n      tag_241\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4119:4121   */\n      0x1f\n        /* \"#utility.yul\":4098:4113   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4094:4123   */\n      and\n        /* \"#utility.yul\":4079:4124   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4126:4128   */\n      0x40\n        /* \"#utility.yul\":4075:4129   */\n      add\n      swap3\n        /* \"#utility.yul\":3739:4135   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4140:4387   */\n    tag_72:\n        /* \"#utility.yul\":4199:4205   */\n      0x00\n        /* \"#utility.yul\":4252:4254   */\n      0x20\n        /* \"#utility.yul\":4240:4249   */\n      dup3\n        /* \"#utility.yul\":4231:4238   */\n      dup5\n        /* \"#utility.yul\":4227:4250   */\n      sub\n        /* \"#utility.yul\":4223:4255   */\n      slt\n        /* \"#utility.yul\":4220:4272   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":4268:4269   */\n      0x00\n        /* \"#utility.yul\":4265:4266   */\n      dup1\n        /* \"#utility.yul\":4258:4270   */\n      revert\n        /* \"#utility.yul\":4220:4272   */\n    tag_278:\n        /* \"#utility.yul\":4307:4316   */\n      dup2\n        /* \"#utility.yul\":4294:4317   */\n      calldataload\n        /* \"#utility.yul\":4326:4357   */\n      tag_232\n        /* \"#utility.yul\":4351:4356   */\n      dup2\n        /* \"#utility.yul\":4326:4357   */\n      tag_239\n      jump\t// in\n        /* \"#utility.yul\":4392:4643   */\n    tag_109:\n        /* \"#utility.yul\":4462:4468   */\n      0x00\n        /* \"#utility.yul\":4515:4517   */\n      0x20\n        /* \"#utility.yul\":4503:4512   */\n      dup3\n        /* \"#utility.yul\":4494:4501   */\n      dup5\n        /* \"#utility.yul\":4490:4513   */\n      sub\n        /* \"#utility.yul\":4486:4518   */\n      slt\n        /* \"#utility.yul\":4483:4535   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4531:4532   */\n      0x00\n        /* \"#utility.yul\":4528:4529   */\n      dup1\n        /* \"#utility.yul\":4521:4533   */\n      revert\n        /* \"#utility.yul\":4483:4535   */\n    tag_281:\n        /* \"#utility.yul\":4563:4572   */\n      dup2\n        /* \"#utility.yul\":4557:4573   */\n      mload\n        /* \"#utility.yul\":4582:4613   */\n      tag_232\n        /* \"#utility.yul\":4607:4612   */\n      dup2\n        /* \"#utility.yul\":4582:4613   */\n      tag_239\n      jump\t// in\n        /* \"#utility.yul\":5743:5927   */\n    tag_137:\n        /* \"#utility.yul\":5813:5819   */\n      0x00\n        /* \"#utility.yul\":5866:5868   */\n      0x20\n        /* \"#utility.yul\":5854:5863   */\n      dup3\n        /* \"#utility.yul\":5845:5852   */\n      dup5\n        /* \"#utility.yul\":5841:5864   */\n      sub\n        /* \"#utility.yul\":5837:5869   */\n      slt\n        /* \"#utility.yul\":5834:5886   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5882:5883   */\n      0x00\n        /* \"#utility.yul\":5879:5880   */\n      dup1\n        /* \"#utility.yul\":5872:5884   */\n      revert\n        /* \"#utility.yul\":5834:5886   */\n    tag_288:\n      pop\n        /* \"#utility.yul\":5905:5921   */\n      mload\n      swap2\n        /* \"#utility.yul\":5743:5927   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5932:6594   */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6211:6226   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":6193:6227   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6263:6278   */\n      dup6\n      and\n        /* \"#utility.yul\":6258:6260   */\n      0x20\n        /* \"#utility.yul\":6243:6261   */\n      dup3\n      add\n        /* \"#utility.yul\":6236:6279   */\n      mstore\n        /* \"#utility.yul\":6310:6312   */\n      0x40\n        /* \"#utility.yul\":6295:6313   */\n      dup2\n      add\n        /* \"#utility.yul\":6288:6322   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6358:6361   */\n      0x80\n        /* \"#utility.yul\":6353:6355   */\n      0x60\n        /* \"#utility.yul\":6338:6356   */\n      dup3\n      add\n        /* \"#utility.yul\":6331:6362   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6378:6397   */\n      dup2\n      add\n        /* \"#utility.yul\":6371:6406   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6136:6140   */\n      0x00\n        /* \"#utility.yul\":6399:6405   */\n      dup3\n        /* \"#utility.yul\":6449:6455   */\n      dup5\n        /* \"#utility.yul\":6173:6176   */\n      0xa0\n        /* \"#utility.yul\":6428:6447   */\n      dup5\n      add\n        /* \"#utility.yul\":6415:6464   */\n      calldatacopy\n        /* \"#utility.yul\":6514:6515   */\n      0x00\n        /* \"#utility.yul\":6508:6511   */\n      0xa0\n        /* \"#utility.yul\":6499:6505   */\n      dup5\n        /* \"#utility.yul\":6488:6497   */\n      dup5\n        /* \"#utility.yul\":6484:6506   */\n      add\n        /* \"#utility.yul\":6480:6512   */\n      add\n        /* \"#utility.yul\":6473:6516   */\n      mstore\n        /* \"#utility.yul\":6584:6587   */\n      0xa0\n        /* \"#utility.yul\":6577:6579   */\n      0x1f\n        /* \"#utility.yul\":6573:6580   */\n      not\n        /* \"#utility.yul\":6568:6570   */\n      0x1f\n        /* \"#utility.yul\":6560:6566   */\n      dup6\n        /* \"#utility.yul\":6556:6571   */\n      add\n        /* \"#utility.yul\":6552:6581   */\n      and\n        /* \"#utility.yul\":6541:6550   */\n      dup4\n        /* \"#utility.yul\":6537:6582   */\n      add\n        /* \"#utility.yul\":6533:6588   */\n      add\n        /* \"#utility.yul\":6525:6588   */\n      swap1\n      pop\n        /* \"#utility.yul\":5932:6594   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6599:6876   */\n    tag_191:\n        /* \"#utility.yul\":6666:6672   */\n      0x00\n        /* \"#utility.yul\":6719:6721   */\n      0x20\n        /* \"#utility.yul\":6707:6716   */\n      dup3\n        /* \"#utility.yul\":6698:6705   */\n      dup5\n        /* \"#utility.yul\":6694:6717   */\n      sub\n        /* \"#utility.yul\":6690:6722   */\n      slt\n        /* \"#utility.yul\":6687:6739   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":6735:6736   */\n      0x00\n        /* \"#utility.yul\":6732:6733   */\n      dup1\n        /* \"#utility.yul\":6725:6737   */\n      revert\n        /* \"#utility.yul\":6687:6739   */\n    tag_291:\n        /* \"#utility.yul\":6767:6776   */\n      dup2\n        /* \"#utility.yul\":6761:6777   */\n      mload\n        /* \"#utility.yul\":6820:6825   */\n      dup1\n        /* \"#utility.yul\":6813:6826   */\n      iszero\n        /* \"#utility.yul\":6806:6827   */\n      iszero\n        /* \"#utility.yul\":6799:6804   */\n      dup2\n        /* \"#utility.yul\":6796:6828   */\n      eq\n        /* \"#utility.yul\":6786:6846   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6842:6843   */\n      0x00\n        /* \"#utility.yul\":6839:6840   */\n      dup1\n        /* \"#utility.yul\":6832:6844   */\n      revert\n        /* \"#utility.yul\":7342:7629   */\n    tag_218:\n        /* \"#utility.yul\":7471:7474   */\n      0x00\n        /* \"#utility.yul\":7509:7515   */\n      dup3\n        /* \"#utility.yul\":7503:7516   */\n      mload\n        /* \"#utility.yul\":7525:7591   */\n      tag_295\n        /* \"#utility.yul\":7584:7590   */\n      dup2\n        /* \"#utility.yul\":7579:7582   */\n      dup5\n        /* \"#utility.yul\":7572:7576   */\n      0x20\n        /* \"#utility.yul\":7564:7570   */\n      dup8\n        /* \"#utility.yul\":7560:7577   */\n      add\n        /* \"#utility.yul\":7525:7591   */\n      tag_241\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7607:7623   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":7342:7629   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n\n    auxdata: 0xa2646970667358221220248adac3c6a01ee9562d5484c316d15d85f1b11213ac6bd587579aa1c835275264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2604": {
									"entryPoint": null,
									"id": 2604,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_780": {
									"entryPoint": 33,
									"id": 780,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_811": {
									"entryPoint": null,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:216:33",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:33",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "113:101:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "123:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "196:2:33",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "200:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "204:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "158:50:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "158:50:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "82:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "104:4:33",
														"type": ""
													}
												],
												"src": "14:200:33"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 33,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1006 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x803 ADD MSTORE DUP2 DUP2 PUSH2 0x82C ADD MSTORE PUSH2 0x9A2 ADD MSTORE PUSH2 0x1006 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6133F985 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xAF7B2FED EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC66485B2 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xD70754EC EQ PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6133F985 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x89BB4145 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x9848BA51 EQ PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F3BCEC EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x2AE9C600 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x34 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x32 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xEA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH32 0xA1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x33 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0xCE0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x2E1 DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x2EB DUP3 DUP3 PUSH2 0x8D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F8 PUSH2 0x997 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFB1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x36B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x3C1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x3CA DUP9 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x33 DUP8 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x178B8BF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH4 0x178B8BF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD7097C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x4F2 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 SWAP1 PUSH2 0x538 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER JUMPDEST DUP5 PUSH0 CALLDATASIZE PUSH2 0xA09 JUMP JUMPDEST PUSH0 PUSH1 0x33 SLOAD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x557 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x32 SLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0xFCAD5D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x483 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6AB5923 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6AB5923 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST POP PUSH1 0x32 SLOAD PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC4B7B85 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH3 0xD5FA2B PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xD5FA2B00 SWAP2 POP PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 SWAP1 PUSH2 0x798 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7D5 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD7097C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x483 JUMP JUMPDEST POP PUSH1 0x34 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x87E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x872 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFB1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH32 0xA1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF SWAP1 PUSH2 0x2EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x530 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x930 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x92D SWAP2 DUP2 ADD SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x483 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFB1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x483 JUMP JUMPDEST PUSH2 0x992 DUP4 DUP4 PUSH2 0xAC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E8 PUSH2 0xB18 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7EF7C883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFDEF9106 SWAP1 PUSH2 0xA3D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB6F8ED PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x483 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xACC DUP3 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xB10 JUMPI PUSH2 0x992 DUP3 DUP3 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0xC36 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x483 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFB1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xC2D DUP6 DUP4 DUP4 PUSH2 0xC55 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC6A JUMPI PUSH2 0xC65 DUP3 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0xCAD JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xC81 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x483 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xCC4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP4 PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xD28 JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD06 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCDD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD6A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD75 DUP2 PUSH2 0xD31 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD91 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDA4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDB6 JUMPI PUSH2 0xDB6 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xDDE JUMPI PUSH2 0xDDE PUSH2 0xD45 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE29 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE34 DUP2 PUSH2 0xD31 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE44 DUP2 PUSH2 0xD31 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE66 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE78 DUP2 PUSH2 0xD31 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE9D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE85 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xEC3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAD DUP2 PUSH2 0xD31 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF02 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCAD DUP2 PUSH2 0xD31 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF86 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCAD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0xFA6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xE83 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122024 DUP11 0xDA 0xC3 0xC6 LOG0 0x1E 0xE9 JUMP 0x2D SLOAD DUP5 0xC3 AND 0xD1 0x5D DUP6 CALL 0xB1 SLT SGT 0xAC PUSH12 0xD587579AA1C835275264736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "1046:4700:30:-:0;;;1171:4:14;1128:48;;2485:55:30;;;;;;;;;-1:-1:-1;2510:22:30;:20;:22::i;:::-;1046:4700;;7711:422:13;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:13;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:13;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:13;-1:-1:-1;;;;;8035:33:13;;;;;8087:29;;158:50:33;;;8087:29:13;;146:2:33;131:18;8087:29:13;;;;;;;7981:146;7760:373;7711:422::o;14:200:33:-;1046:4700:30;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REGISTER_ENS_SUBDOMAIN_PERMISSION_ID_2572": {
									"entryPoint": null,
									"id": 2572,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_REGISTRAR_PERMISSION_ID_2566": {
									"entryPoint": null,
									"id": 2566,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__DaoAuthorizableUpgradeable_init_2117": {
									"entryPoint": 2528,
									"id": 2117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_auth_2203": {
									"entryPoint": 2569,
									"id": 2203,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2666": {
									"entryPoint": 2206,
									"id": 2666,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_734": {
									"entryPoint": 2840,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1550": {
									"entryPoint": 3126,
									"id": 1550,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_942": {
									"entryPoint": 2455,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_926": {
									"entryPoint": 2040,
									"id": 926,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_811": {
									"entryPoint": null,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgData_1031": {
									"entryPoint": null,
									"id": 1031,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_msgSender_1022": {
									"entryPoint": null,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1813": {
									"entryPoint": 3252,
									"id": 1813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1336": {
									"entryPoint": 2913,
									"id": 1336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_993": {
									"entryPoint": 2262,
									"id": 993,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@dao_2127": {
									"entryPoint": null,
									"id": 2127,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ens_2576": {
									"entryPoint": null,
									"id": 2576,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1733": {
									"entryPoint": 3012,
									"id": 1733,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1846": {
									"entryPoint": null,
									"id": 1846,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1309": {
									"entryPoint": null,
									"id": 1309,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2655": {
									"entryPoint": 778,
									"id": 2655,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@node_2579": {
									"entryPoint": null,
									"id": 2579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@protocolVersion_2800": {
									"entryPoint": 679,
									"id": 2800,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_884": {
									"entryPoint": 751,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerSubnode_2734": {
									"entryPoint": 1276,
									"id": 2734,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@resolver_2582": {
									"entryPoint": null,
									"id": 2582,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDefaultResolver_2761": {
									"entryPoint": 1888,
									"id": 2761,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1370": {
									"entryPoint": 2755,
									"id": 1370,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_904": {
									"entryPoint": 720,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1773": {
									"entryPoint": 3157,
									"id": 1773,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IDAO_$2088t_contract$_ENS_$136t_bytes32": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3876,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ENS_$136__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDAO_$2088__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7631:33",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:33",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:33",
														"type": ""
													}
												],
												"src": "14:203:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "365:358:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "375:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "387:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "398:2:33",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "383:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "375:4:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "410:20:33",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "421:9:33"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "414:3:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "439:16:33",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "446:9:33"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "439:3:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "464:20:33",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "478:6:33"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "468:6:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "493:10:33",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "502:1:33",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "497:1:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "559:158:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "580:3:33"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "595:6:33"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "589:5:33"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "589:13:33"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "604:4:33",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "585:3:33"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "585:24:33"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "573:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "573:37:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "573:37:33"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "623:14:33",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "633:4:33",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "627:2:33",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "650:19:33",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "661:3:33"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "666:2:33"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "657:3:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "657:12:33"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "650:3:33"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "682:25:33",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "696:6:33"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "704:2:33"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:15:33"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "682:6:33"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "523:1:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:4:33",
																		"type": "",
																		"value": "0x03"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "520:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:11:33"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "532:18:33",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "534:14:33",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "543:1:33"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "546:1:33",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "539:3:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "539:9:33"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "534:1:33"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "516:3:33",
																"statements": []
															},
															"src": "512:205:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "334:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "345:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "356:4:33",
														"type": ""
													}
												],
												"src": "222:501:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "840:102:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "850:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "862:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "873:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "850:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "907:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "923:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "928:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "919:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "919:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "932:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "915:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "915:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "903:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "903:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:51:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "885:51:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ENS_$136__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "809:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "820:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "831:4:33",
														"type": ""
													}
												],
												"src": "728:214:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1061:102:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1071:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1083:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1079:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1071:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1128:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1144:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1149:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1140:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1140:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1153:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1136:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1136:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1106:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:51:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:51:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDAO_$2088__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1030:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1041:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1052:4:33",
														"type": ""
													}
												],
												"src": "947:216:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1213:86:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1277:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1289:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1279:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1279:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1279:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1236:5:33"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1247:5:33"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1262:3:33",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1267:1:33",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1258:3:33"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1258:11:33"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1271:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1254:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1254:19:33"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1243:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1243:31:33"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1233:2:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:42:33"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:50:33"
															},
															"nodeType": "YulIf",
															"src": "1223:70:33"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1202:5:33",
														"type": ""
													}
												],
												"src": "1168:131:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1336:95:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1353:1:33",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1360:3:33",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1365:10:33",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1356:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1356:20:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1346:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1346:31:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1393:1:33",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1396:4:33",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:15:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:15:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:1:33",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1420:4:33",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1410:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:15:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1410:15:33"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1304:127:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1532:960:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1578:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1590:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1580:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1580:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1580:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1553:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1549:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1574:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1545:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1545:32:33"
															},
															"nodeType": "YulIf",
															"src": "1542:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1603:36:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1629:9:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1616:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:23:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1607:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1673:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1648:24:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1648:31:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1688:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1698:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1712:46:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1743:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1754:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1739:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1739:18:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1726:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:32:33"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1716:6:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1767:28:33",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1777:18:33",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1771:2:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1822:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1824:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1810:6:33"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1818:2:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1807:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:14:33"
															},
															"nodeType": "YulIf",
															"src": "1804:34:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1847:32:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1861:9:33"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1872:6:33"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1857:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1857:22:33"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1851:2:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1927:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1936:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1939:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1929:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1929:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1910:4:33",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1902:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1902:13:33"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1917:7:33"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1898:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:27:33"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1891:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:35:33"
															},
															"nodeType": "YulIf",
															"src": "1888:55:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1952:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1975:2:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1962:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:16:33"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1956:2:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2001:22:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2003:16:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:18:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:18:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1993:2:33"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1997:2:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1990:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:10:33"
															},
															"nodeType": "YulIf",
															"src": "1987:36:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:17:33",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2046:2:33",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2042:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:7:33"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2036:2:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2058:23:33",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2078:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2072:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:9:33"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2062:6:33",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2090:71:33",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2112:6:33"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2136:2:33"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2140:4:33",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2132:3:33"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2132:13:33"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2147:2:33"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2128:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2128:22:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2152:2:33",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2124:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2124:31:33"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2157:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2120:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2120:40:33"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:53:33"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2094:10:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2220:22:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2222:16:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2222:18:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2222:18:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2179:10:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2191:2:33"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2176:2:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2176:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2199:10:33"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:33"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2196:2:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2196:22:33"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2173:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:46:33"
															},
															"nodeType": "YulIf",
															"src": "2170:72:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:2:33",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2262:10:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2251:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2251:22:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2251:22:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2289:6:33"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2297:2:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:18:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:18:33"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2346:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2355:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2358:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2348:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2348:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2348:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2323:2:33"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2327:2:33"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:11:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2332:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:20:33"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2337:7:33"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2312:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:33:33"
															},
															"nodeType": "YulIf",
															"src": "2309:53:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2388:6:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2396:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2384:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2384:15:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2405:2:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2409:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2401:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2401:11:33"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2414:2:33"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2371:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:46:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2371:46:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2441:6:33"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2449:2:33"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2437:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2437:15:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2454:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2433:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2433:24:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:1:33",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:35:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:35:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2470:16:33",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2480:6:33"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1490:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1501:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1513:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1521:6:33",
														"type": ""
													}
												],
												"src": "1436:1056:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2598:76:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2608:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2608:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2650:9:33"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2661:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2643:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:25:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2643:25:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2567:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2578:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2589:4:33",
														"type": ""
													}
												],
												"src": "2497:177:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2807:352:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2853:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2865:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2855:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2855:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2855:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2828:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2837:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2824:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2824:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2849:2:33",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:32:33"
															},
															"nodeType": "YulIf",
															"src": "2817:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2878:36:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2904:9:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2891:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2891:23:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2882:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2948:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2923:24:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2923:31:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2963:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2973:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2987:47:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3030:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:18:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3002:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:32:33"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2991:7:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3068:7:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3043:24:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:33:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3043:33:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3085:17:33",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3095:7:33"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:33"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3111:42:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3149:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3134:18:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3121:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:32:33"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IDAO_$2088t_contract$_ENS_$136t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2757:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2768:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2780:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2788:6:33",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2796:6:33",
														"type": ""
													}
												],
												"src": "2679:480:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3251:228:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3297:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3306:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3309:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3299:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3299:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3299:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3272:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3268:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3268:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3264:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3264:32:33"
															},
															"nodeType": "YulIf",
															"src": "3261:52:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3322:33:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3332:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:23:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3322:6:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3364:45:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3394:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3405:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3390:18:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3377:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:32:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3368:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3443:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3418:24:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3418:31:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3458:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3468:5:33"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3209:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3220:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3232:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3240:6:33",
														"type": ""
													}
												],
												"src": "3164:315:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3550:184:33",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3560:10:33",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3569:1:33",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3564:1:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3629:63:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3654:3:33"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3659:1:33"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3650:3:33"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3650:11:33"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3673:3:33"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3678:1:33"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3669:3:33"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3669:11:33"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3663:5:33"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3663:18:33"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3643:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3643:39:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3643:39:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3590:1:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:33"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3587:2:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:13:33"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3601:19:33",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3603:15:33",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3612:1:33"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3615:2:33",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3608:3:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3608:10:33"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3603:1:33"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3583:3:33",
																"statements": []
															},
															"src": "3579:113:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3712:3:33"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3717:6:33"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3708:16:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:33",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3701:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:27:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3701:27:33"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3528:3:33",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3533:3:33",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3538:6:33",
														"type": ""
													}
												],
												"src": "3484:250:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3860:275:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3877:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3888:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:21:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3870:21:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3900:27:33",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3914:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:13:33"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3904:6:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3947:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3958:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3943:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3943:18:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3963:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3936:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3936:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3936:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4018:6:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4026:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4014:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4014:15:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4035:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4046:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4031:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4031:18:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4051:6:33"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3979:34:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:79:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3979:79:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4067:62:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4102:6:33"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4110:2:33",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4098:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4098:15:33"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4119:2:33",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4115:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4115:7:33"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4094:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4094:29:33"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:45:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4126:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4075:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:54:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4067:4:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3829:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3840:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3851:4:33",
														"type": ""
													}
												],
												"src": "3739:396:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4210:177:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4256:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4265:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4268:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4258:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4258:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4258:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4231:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4240:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4227:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4227:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4252:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4223:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:32:33"
															},
															"nodeType": "YulIf",
															"src": "4220:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4281:36:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4307:9:33"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4294:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4294:23:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4285:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4351:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4326:24:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4326:31:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4366:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4376:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4176:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4187:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4199:6:33",
														"type": ""
													}
												],
												"src": "4140:247:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4473:170:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4519:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4528:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4531:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4521:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4521:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4521:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4494:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4503:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4490:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4490:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4515:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4486:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:32:33"
															},
															"nodeType": "YulIf",
															"src": "4483:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4544:29:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4563:9:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4557:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4557:16:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4548:5:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4607:5:33"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4582:24:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4582:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4582:31:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4622:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4632:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4622:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4439:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4450:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4462:6:33",
														"type": ""
													}
												],
												"src": "4392:251:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4777:145:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4787:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4799:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4810:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4795:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4787:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4829:9:33"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4840:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4822:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:25:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4822:25:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4867:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4878:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4863:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4863:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4887:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4903:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4908:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4899:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4899:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4912:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4895:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4895:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4883:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4883:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "4856:60:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4856:60:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4738:9:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4749:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4757:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4768:4:33",
														"type": ""
													}
												],
												"src": "4648:274:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5035:101:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5045:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5057:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5053:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5053:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5045:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5087:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5102:6:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5110:18:33",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5098:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5098:31:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5080:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:50:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5080:50:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5015:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5026:4:33",
														"type": ""
													}
												],
												"src": "4927:209:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5288:100:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5305:3:33"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5310:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5298:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5298:19:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5298:19:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5337:3:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5342:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5333:12:33"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5347:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5326:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5326:28:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5326:28:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5363:19:33",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5374:3:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:2:33",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5370:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5370:12:33"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5363:3:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5256:3:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5261:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5269:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5280:3:33",
														"type": ""
													}
												],
												"src": "5141:247:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5550:188:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5560:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5572:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5583:2:33",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5568:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5568:18:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5560:4:33"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5602:9:33"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5613:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5595:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:25:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5595:25:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5640:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5651:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5636:18:33"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5656:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5629:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5694:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5679:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5679:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5703:6:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5719:3:33",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5724:1:33",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5715:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5715:11:33"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5728:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5711:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5711:19:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:32:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5672:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:60:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5672:60:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5503:9:33",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5514:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5522:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5530:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5541:4:33",
														"type": ""
													}
												],
												"src": "5393:345:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5824:103:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5870:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5879:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5882:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5872:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5872:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5872:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5845:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5854:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5841:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5841:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5866:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5837:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:32:33"
															},
															"nodeType": "YulIf",
															"src": "5834:52:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5895:26:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5911:9:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5905:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:16:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5895:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5790:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5801:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5813:6:33",
														"type": ""
													}
												],
												"src": "5743:184:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:449:33",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6155:29:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6173:3:33",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6178:1:33",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:11:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6182:1:33",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6165:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:19:33"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6159:2:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6200:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6215:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6223:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6211:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6211:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6193:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6247:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6258:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6243:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6243:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6267:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6275:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6263:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6263:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6236:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:43:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6236:43:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6299:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6310:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6295:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6295:18:33"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6315:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6288:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6288:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6342:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6353:2:33",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6338:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6338:18:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6358:3:33",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:31:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6331:31:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6382:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6393:3:33",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6378:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6378:19:33"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6399:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6371:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:35:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6371:35:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6432:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6443:3:33",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6428:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:19:33"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6449:6:33"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6457:6:33"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6415:12:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6415:49:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6415:49:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6488:9:33"
																					},
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "6499:6:33"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6484:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6484:22:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6508:3:33",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6480:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6480:32:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6514:1:33",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6473:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6473:43:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6473:43:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6525:63:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6541:9:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value4",
																								"nodeType": "YulIdentifier",
																								"src": "6560:6:33"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6568:2:33",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6556:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6556:15:33"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6577:2:33",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6573:3:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6573:7:33"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6552:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6552:29:33"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6537:45:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6584:3:33",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6533:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6533:55:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6525:4:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6082:9:33",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6093:6:33",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6101:6:33",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6109:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6117:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6125:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6136:4:33",
														"type": ""
													}
												],
												"src": "5932:662:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6677:199:33",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6723:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6732:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6735:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6725:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6725:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6725:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6698:7:33"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6707:9:33"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6694:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6694:23:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6719:2:33",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6690:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6690:32:33"
															},
															"nodeType": "YulIf",
															"src": "6687:52:33"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6748:29:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6767:9:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6761:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:16:33"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6752:5:33",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6830:16:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6839:1:33",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6842:1:33",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6832:6:33"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6832:12:33"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6832:12:33"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6799:5:33"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "6820:5:33"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "6813:6:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6813:13:33"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6806:6:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6806:21:33"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6796:2:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6796:32:33"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6789:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:40:33"
															},
															"nodeType": "YulIf",
															"src": "6786:60:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6855:15:33",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6865:5:33"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6855:6:33"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6643:9:33",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6654:7:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6666:6:33",
														"type": ""
													}
												],
												"src": "6599:277:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7066:271:33",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7076:27:33",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7088:9:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7099:3:33",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:19:33"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7076:4:33"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7112:29:33",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7130:3:33",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7135:1:33",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7126:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7126:11:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7139:1:33",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:19:33"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7116:2:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7157:9:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7172:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7180:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7168:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7168:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:34:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7204:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7215:2:33",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7200:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7200:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7224:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7232:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7220:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7220:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7193:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7193:43:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7193:43:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7256:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7267:2:33",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7252:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7252:18:33"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7276:6:33"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7284:2:33"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7272:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7272:15:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7245:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:43:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7245:43:33"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7308:9:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7319:2:33",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7304:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7304:18:33"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7324:6:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7297:34:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7297:34:33"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7011:9:33",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7022:6:33",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7030:6:33",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7038:6:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7046:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7057:4:33",
														"type": ""
													}
												],
												"src": "6881:456:33"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7479:150:33",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7489:27:33",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7509:6:33"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7503:5:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7503:13:33"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7493:6:33",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7564:6:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7572:4:33",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:17:33"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7579:3:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7584:6:33"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7525:34:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7525:66:33"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7525:66:33"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7600:23:33",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7611:3:33"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7616:6:33"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7607:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "7607:16:33"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7600:3:33"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7455:3:33",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7460:6:33",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7471:3:33",
														"type": ""
													}
												],
												"src": "7342:287:33"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xff))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n    }\n    function abi_encode_tuple_t_contract$_ENS_$136__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IDAO_$2088__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_IDAO_$2088t_contract$_ENS_$136t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), value4)\n        calldatacopy(add(headStart, 160), value3, value4)\n        mstore(add(add(headStart, value4), 160), 0)\n        tail := add(add(headStart, and(add(value4, 31), not(31))), 160)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 33,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"832": [
									{
										"length": 32,
										"start": 2051
									},
									{
										"length": 32,
										"start": 2092
									},
									{
										"length": 32,
										"start": 2466
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6133F985 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xAF7B2FED EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC66485B2 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xD70754EC EQ PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6133F985 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x89BB4145 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x9848BA51 EQ PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F3BCEC EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x2AE9C600 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x34 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x32 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xEA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH32 0xA1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x33 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0xCE0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x2E1 DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x2EB DUP3 DUP3 PUSH2 0x8D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F8 PUSH2 0x997 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFB1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x36B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x3C1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x3CA DUP9 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x33 DUP8 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x178B8BF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH4 0x178B8BF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD7097C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x4F2 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 SWAP1 PUSH2 0x538 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER JUMPDEST DUP5 PUSH0 CALLDATASIZE PUSH2 0xA09 JUMP JUMPDEST PUSH0 PUSH1 0x33 SLOAD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x557 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x32 SLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0xFCAD5D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x483 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6AB5923 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6AB5923 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST POP PUSH1 0x32 SLOAD PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC4B7B85 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH3 0xD5FA2B PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xD5FA2B00 SWAP2 POP PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 SWAP1 PUSH2 0x798 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7D5 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD7097C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x483 JUMP JUMPDEST POP PUSH1 0x34 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x87E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x872 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFB1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH32 0xA1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF SWAP1 PUSH2 0x2EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x530 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x930 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x92D SWAP2 DUP2 ADD SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x483 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFB1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x483 JUMP JUMPDEST PUSH2 0x992 DUP4 DUP4 PUSH2 0xAC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E8 PUSH2 0xB18 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7EF7C883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFDEF9106 SWAP1 PUSH2 0xA3D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB6F8ED PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x483 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xACC DUP3 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xB10 JUMPI PUSH2 0x992 DUP3 DUP3 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0xC36 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x483 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFB1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xC2D DUP6 DUP4 DUP4 PUSH2 0xC55 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC6A JUMPI PUSH2 0xC65 DUP3 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0xCAD JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xC81 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x483 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xCC4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP4 PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xD28 JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD06 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCDD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD6A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD75 DUP2 PUSH2 0xD31 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD91 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDA4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDB6 JUMPI PUSH2 0xDB6 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xDDE JUMPI PUSH2 0xDDE PUSH2 0xD45 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE29 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE34 DUP2 PUSH2 0xD31 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE44 DUP2 PUSH2 0xD31 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE66 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE78 DUP2 PUSH2 0xD31 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE9D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE85 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xEC3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAD DUP2 PUSH2 0xD31 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF02 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCAD DUP2 PUSH2 0xD31 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF86 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCAD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0xFA6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xE83 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122024 DUP11 0xDA 0xC3 0xC6 LOG0 0x1E 0xE9 JUMP 0x2D SLOAD DUP5 0xC3 AND 0xD1 0x5D DUP6 CALL 0xB1 SLT SGT 0xAC PUSH12 0xD587579AA1C835275264736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "1046:4700:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1859:23;;;;;;;;;;-1:-1:-1;1859:23:30;;;;-1:-1:-1;;;;;1859:23:30;;;;;;-1:-1:-1;;;;;178:32:33;;;160:51;;148:2;133:18;1859:23:30;;;;;;;;656:100:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1644:14:30:-;;;;;;;;;;-1:-1:-1;1644:14:30;;;;-1:-1:-1;;;;;1644:14:30;;;1193:72:25;;;;;;;;;;-1:-1:-1;1229:4:25;1253;-1:-1:-1;;;;;1253:4:25;1193:72;;4158:214:14;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;2643:25:33;;;2631:2;2616:18;3705:134:14;2497:177:33;3149:420:30;;;;;;;;;;-1:-1:-1;3149:420:30;;;;;:::i;:::-;;:::i;4418:558::-;;;;;;;;;;-1:-1:-1;4418:558:30;;;;;:::i;:::-;;:::i;1474:118::-;;;;;;;;;;;;1546:46;1474:118;;1819:58:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:14;;;;;;;;;;;;:::i;1241:108:30:-;;;;;;;;;;;;1308:41;1241:108;;5151:279;;;;;;;;;;-1:-1:-1;5151:279:30;;;;;:::i;:::-;;:::i;1747:19::-;;;;;;;;;;;;;;;;656:100:32;704:15;;:::i;:::-;-1:-1:-1;732:16:32;;;;;;;;740:1;732:16;;743:1;732:16;;;;-1:-1:-1;732:16:32;;;;;;;;656:100::o;4158:214:14:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:14;:::o;3149:420:30:-;8870:21:13;4302:15;;-1:-1:-1;;;4302:15:13;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:13;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:13;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:13;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:13;-1:-1:-1;;;5013:22:13;;;4979:67;3245:47:30::1;3279:12;3245:33;:47::i;:::-;3305:3;:10:::0;;-1:-1:-1;;;;;;3305:10:30::1;-1:-1:-1::0;;;;;3305:10:30;::::1;::::0;;::::1;::::0;;;3326:4:::1;:12:::0;;;3374:19:::1;::::0;-1:-1:-1;;;3374:19:30;;::::1;::::0;::::1;2643:25:33::0;;;-1:-1:-1;;3305:10:30;3374:12:::1;::::0;2616:18:33;;3374:19:30::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3351:42:::0;-1:-1:-1;;;;;;3410:26:30;::::1;3406:120;;3460:54;::::0;-1:-1:-1;;;3460:54:30;;::::1;::::0;::::1;4822:25:33::0;;;-1:-1:-1;;;;;4883:32:33;;4863:18;;;4856:60;4795:18;;3460:54:30::1;;;;;;;;3406:120;3538:8;:23:::0;;-1:-1:-1;;;;;;3538:23:30::1;-1:-1:-1::0;;;;;3538:23:30;;;::::1;::::0;;;::::1;::::0;;5066:101:13;;;;5100:23;;-1:-1:-1;;;;5100:23:13;;;5142:14;;-1:-1:-1;5080:50:33;;5142:14:13;;5068:2:33;5053:18;5142:14:13;;;;;;;5066:101;4092:1081;;;;;3149:420:30;;;:::o;4418:558::-;1616:4:25;;1546:46:30;;1610:67:25;;-1:-1:-1;;;;;1616:4:25;1630;966:10:15;1637:12:25;1651:13;1040:14:15;;1610:5:25;:67::i;:::-;4571:15:30::1;4616:4;;4622:6;4599:30;;;;;;;;5298:19:33::0;;;5342:2;5333:12;;5326:28;5379:2;5370:12;;5141:247;4599:30:30::1;;::::0;;;;::::1;-1:-1:-1::0;;4599:30:30;;;;;;;4589:41;;4599:30:::1;4589:41:::0;;::::1;::::0;4664:3:::1;::::0;-1:-1:-1;;;4664:18:30;;::::1;::::0;::::1;2643:25:33::0;;;4589:41:30;;-1:-1:-1;4641:20:30::1;::::0;-1:-1:-1;;;;;4664:3:30;;::::1;::::0;:9:::1;::::0;2616:18:33;;4664::30::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4641:41:::0;-1:-1:-1;;;;;;4699:26:30;::::1;::::0;4695:106:::1;;4749:40;::::0;-1:-1:-1;;;4749:40:30;;::::1;::::0;::::1;4822:25:33::0;;;-1:-1:-1;;;;;4883:32:33;;4863:18;;;4856:60;4795:18;;4749:40:30::1;4648:274:33::0;4695:106:30::1;4813:3;::::0;4833:4:::1;::::0;4813:48:::1;::::0;-1:-1:-1;;;4813:48:30;;::::1;::::0;::::1;5595:25:33::0;;;;5636:18;;;5629:34;;;4855:4:30::1;5679:18:33::0;;;5672:60;-1:-1:-1;;;;;4813:3:30;;::::1;::::0;:19:::1;::::0;5568:18:33;;4813:48:30::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4872:3:30::1;::::0;4897:8:::1;::::0;4872:34:::1;::::0;-1:-1:-1;;;4872:34:30;;::::1;::::0;::::1;4822:25:33::0;;;-1:-1:-1;;;;;4897:8:30;;::::1;4863:18:33::0;;;4856:60;4872:3:30;::::1;::::0;:15:::1;::::0;4795:18:33;;4872:34:30::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4926:8:30::1;::::0;4917:51:::1;::::0;-1:-1:-1;;;4917:51:30;;::::1;::::0;::::1;4822:25:33::0;;;-1:-1:-1;;;;;4883:32:33;;;4863:18;;;4856:60;4926:8:30;;::::1;::::0;-1:-1:-1;4917:26:30::1;::::0;-1:-1:-1;4795:18:33;;4917:51:30::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4560:416;;4418:558:::0;;;:::o;5151:279::-;1616:4:25;;1546:46:30;;1610:67:25;;-1:-1:-1;;;;;1616:4:25;1630;966:10:15;1637:12:25;887:96:15;1610:67:25;-1:-1:-1;;;;;5281:23:30;::::1;5277:113;;5351:4;::::0;5328:50:::1;::::0;-1:-1:-1;;;5328:50:30;;::::1;::::0;::::1;4822:25:33::0;;;;-1:-1:-1;;;;;4883:32:33;;4863:18;;;4856:60;4795:18;;5328:50:30::1;4648:274:33::0;5277:113:30::1;-1:-1:-1::0;5402:8:30::1;:20:::0;;-1:-1:-1;;;;;;5402:20:30::1;-1:-1:-1::0;;;;;5402:20:30;;;::::1;::::0;;;::::1;::::0;;5151:279::o;4599:312:14:-;4679:4;-1:-1:-1;;;;;4688:6:14;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:14;:32;-1:-1:-1;;;;;;;;;;;2035:53:19;-1:-1:-1;;;;;2035:53:19;;1957:138;4749:32:14;-1:-1:-1;;;;;4749:42:14;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:14;;;;;;;;;;;4654:251;4599:312::o;3917:118:30:-;1616:4:25;;1308:41:30;;1610:67:25;;-1:-1:-1;;;;;1616:4:25;1630;966:10:15;1637:12:25;887:96:15;6052:538:14;6169:17;-1:-1:-1;;;;;6151:50:14;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:14;;;;;;;;-1:-1:-1;;6151:52:14;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:14;;-1:-1:-1;;;;;178:32:33;;6513:60:14;;;160:51:33;133:18;;6513:60:14;14:203:33;6147:437:14;-1:-1:-1;;;;;;;;;;;6245:40:14;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:14;;;;;2643:25:33;;;2616:18;;6312:34:14;2497:177:33;6241:120:14;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:14;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:14;;;;;;;;;;;997:110:25;6931:20:13;:18;:20::i;:::-;1088:4:25::1;:11:::0;;-1:-1:-1;;;;;;1088:11:25::1;-1:-1:-1::0;;;;;1088:11:25;;;::::1;::::0;;;::::1;::::0;;997:110::o;1057:377:26:-;1203:54;;-1:-1:-1;;;1203:54:26;;-1:-1:-1;;;;;1203:18:26;;;;;:54;;1222:6;;1230:4;;1236:13;;1251:5;;;;1203:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1198:232;;1275:155;;-1:-1:-1;;;1275:155:26;;-1:-1:-1;;;;;7168:15:33;;;1275:155:26;;;7150:34:33;7220:15;;;7200:18;;;7193:43;7272:15;;7252:18;;;7245:43;7304:18;;;7297:34;;;7084:19;;1275:155:26;6881:456:33;1198:232:26;1057:377;;;;;;:::o;2779:335:19:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:19;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:13:-;8870:21;8560:40;-1:-1:-1;;;8560:40:13;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:13;;;;;;;;;;;2186:281:19;2263:17;-1:-1:-1;;;;;2263:29:19;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:19;;-1:-1:-1;;;;;178:32:33;;2320:47:19;;;160:51:33;133:18;;2320:47:19;14:203:33;2259:119:19;-1:-1:-1;;;;;;;;;;;2387:73:19;;-1:-1:-1;;;;;;2387:73:19;-1:-1:-1;;;;;2387:73:19;;;;;;;;;;2186:281::o;4106:253:21:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:21;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:21:o;6598:122:19:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:19;;;;;;;;;;;4625:582:21;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:21;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:21;;-1:-1:-1;;;;;178:32:33;;5121:24:21;;;160:51:33;133:18;;5121:24:21;14:203:33;5041:119:21;-1:-1:-1;5180:10:21;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:21;;;;;;;;;;;5870:383;5743:516;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;222:501:33:-;398:2;383:18;;387:9;478:6;356:4;512:205;526:4;523:1;520:11;512:205;;;589:13;;604:4;585:24;573:37;;633:4;657:12;;;;692:15;;;;546:1;539:9;512:205;;;516:3;;;222:501;;;;:::o;1168:131::-;-1:-1:-1;;;;;1243:31:33;;1233:42;;1223:70;;1289:1;1286;1279:12;1304:127;1365:10;1360:3;1356:20;1353:1;1346:31;1396:4;1393:1;1386:15;1420:4;1417:1;1410:15;1436:1056;1513:6;1521;1574:2;1562:9;1553:7;1549:23;1545:32;1542:52;;;1590:1;1587;1580:12;1542:52;1629:9;1616:23;1648:31;1673:5;1648:31;:::i;:::-;1698:5;-1:-1:-1;1754:2:33;1739:18;;1726:32;1777:18;1807:14;;;1804:34;;;1834:1;1831;1824:12;1804:34;1872:6;1861:9;1857:22;1847:32;;1917:7;1910:4;1906:2;1902:13;1898:27;1888:55;;1939:1;1936;1929:12;1888:55;1975:2;1962:16;1997:2;1993;1990:10;1987:36;;;2003:18;;:::i;:::-;2078:2;2072:9;2046:2;2132:13;;-1:-1:-1;;2128:22:33;;;2152:2;2124:31;2120:40;2108:53;;;2176:18;;;2196:22;;;2173:46;2170:72;;;2222:18;;:::i;:::-;2262:10;2258:2;2251:22;2297:2;2289:6;2282:18;2337:7;2332:2;2327;2323;2319:11;2315:20;2312:33;2309:53;;;2358:1;2355;2348:12;2309:53;2414:2;2409;2405;2401:11;2396:2;2388:6;2384:15;2371:46;2459:1;2454:2;2449;2441:6;2437:15;2433:24;2426:35;2480:6;2470:16;;;;;;;1436:1056;;;;;:::o;2679:480::-;2780:6;2788;2796;2849:2;2837:9;2828:7;2824:23;2820:32;2817:52;;;2865:1;2862;2855:12;2817:52;2904:9;2891:23;2923:31;2948:5;2923:31;:::i;:::-;2973:5;-1:-1:-1;3030:2:33;3015:18;;3002:32;3043:33;3002:32;3043:33;:::i;:::-;2679:480;;3095:7;;-1:-1:-1;;;3149:2:33;3134:18;;;;3121:32;;2679:480::o;3164:315::-;3232:6;3240;3293:2;3281:9;3272:7;3268:23;3264:32;3261:52;;;3309:1;3306;3299:12;3261:52;3345:9;3332:23;3322:33;;3405:2;3394:9;3390:18;3377:32;3418:31;3443:5;3418:31;:::i;:::-;3468:5;3458:15;;;3164:315;;;;;:::o;3484:250::-;3569:1;3579:113;3593:6;3590:1;3587:13;3579:113;;;3669:11;;;3663:18;3650:11;;;3643:39;3615:2;3608:10;3579:113;;;-1:-1:-1;;3726:1:33;3708:16;;3701:27;3484:250::o;3739:396::-;3888:2;3877:9;3870:21;3851:4;3920:6;3914:13;3963:6;3958:2;3947:9;3943:18;3936:34;3979:79;4051:6;4046:2;4035:9;4031:18;4026:2;4018:6;4014:15;3979:79;:::i;:::-;4119:2;4098:15;-1:-1:-1;;4094:29:33;4079:45;;;;4126:2;4075:54;;3739:396;-1:-1:-1;;3739:396:33:o;4140:247::-;4199:6;4252:2;4240:9;4231:7;4227:23;4223:32;4220:52;;;4268:1;4265;4258:12;4220:52;4307:9;4294:23;4326:31;4351:5;4326:31;:::i;4392:251::-;4462:6;4515:2;4503:9;4494:7;4490:23;4486:32;4483:52;;;4531:1;4528;4521:12;4483:52;4563:9;4557:16;4582:31;4607:5;4582:31;:::i;5743:184::-;5813:6;5866:2;5854:9;5845:7;5841:23;5837:32;5834:52;;;5882:1;5879;5872:12;5834:52;-1:-1:-1;5905:16:33;;5743:184;-1:-1:-1;5743:184:33:o;5932:662::-;-1:-1:-1;;;;;6211:15:33;;;6193:34;;6263:15;;6258:2;6243:18;;6236:43;6310:2;6295:18;;6288:34;;;6358:3;6353:2;6338:18;;6331:31;;;6378:19;;6371:35;;;6136:4;6399:6;6449;6173:3;6428:19;;6415:49;6514:1;6508:3;6499:6;6488:9;6484:22;6480:32;6473:43;6584:3;6577:2;6573:7;6568:2;6560:6;6556:15;6552:29;6541:9;6537:45;6533:55;6525:63;;5932:662;;;;;;;;:::o;6599:277::-;6666:6;6719:2;6707:9;6698:7;6694:23;6690:32;6687:52;;;6735:1;6732;6725:12;6687:52;6767:9;6761:16;6820:5;6813:13;6806:21;6799:5;6796:32;6786:60;;6842:1;6839;6832:12;7342:287;7471:3;7509:6;7503:13;7525:66;7584:6;7579:3;7572:4;7564:6;7560:17;7525:66;:::i;:::-;7607:16;;;;;7342:287;-1:-1:-1;;7342:287:33:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "820400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID()": "261",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"UPGRADE_REGISTRAR_PERMISSION_ID()": "238",
								"dao()": "2385",
								"ens()": "2370",
								"initialize(address,address,bytes32)": "infinite",
								"node()": "2382",
								"protocolVersion()": "infinite",
								"proxiableUUID()": "infinite",
								"registerSubnode(bytes32,address)": "infinite",
								"resolver()": "2326",
								"setDefaultResolver(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH",
									"source": 30,
									"value": "A0"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "CALLVALUE",
									"source": 30
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "ISZERO",
									"source": 30
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "1"
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "JUMPI",
									"source": 30
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "REVERT",
									"source": 30
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "tag",
									"source": 30,
									"value": "1"
								},
								{
									"begin": 2485,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2510,
									"end": 2532,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "4"
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "5"
								},
								{
									"begin": 2510,
									"end": 2532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 30
								},
								{
									"begin": 2510,
									"end": 2532,
									"name": "tag",
									"source": 30,
									"value": "4"
								},
								{
									"begin": 2510,
									"end": 2532,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "15"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "JUMP",
									"source": 30
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 13,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 13,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 13,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 13
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 33,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH",
									"source": 30,
									"value": "80"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH #[$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH [$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "CODECOPY",
									"source": 30
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "ASSIGNIMMUTABLE",
									"source": 30,
									"value": "832"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH #[$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 5746,
									"name": "RETURN",
									"source": 30
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220248adac3c6a01ee9562d5484c316d15d85f1b11213ac6bd587579aa1c835275264736f6c63430008140033",
									".code": [
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "80"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "CALLDATALOAD",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "E0"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "SHR",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "6133F985"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "15"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "AD3CB1CC"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "16"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "AD3CB1CC"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "11"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "AF7B2FED"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "12"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "C66485B2"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "13"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "D70754EC"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "14"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "tag",
											"source": 30,
											"value": "16"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "6133F985"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "89BB4145"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "9"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "9848BA51"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "10"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "tag",
											"source": 30,
											"value": "15"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "4F3BCEC"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "2AE9C600"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "3"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "3F15457F"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "4162169F"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "5"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "4F1EF286"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "6"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "52D1902D"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "7"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "tag",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1046,
											"end": 5746,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "tag",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "17"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "tag",
											"source": 30,
											"value": "17"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "PUSH",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "18"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "tag",
											"source": 30,
											"value": "18"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "tag",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "RETURN",
											"source": 30
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 32,
											"value": "3"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "CALLVALUE",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "ISZERO",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPI",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH",
											"source": 32,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "REVERT",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 32,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "POP",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "23"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "24"
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 32,
											"value": "23"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "MLOAD",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "20"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "26"
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "tag",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "27"
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "tag",
											"source": 30,
											"value": "27"
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "PUSH",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "18"
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "tag",
											"source": 25,
											"value": "5"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "CALLVALUE",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "32"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "tag",
											"source": 25,
											"value": "32"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1233,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1257,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1253,
											"end": 1257,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "18"
										},
										{
											"begin": 1193,
											"end": 1265,
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2631,
											"end": 2633,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2674,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "tag",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "46"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "tag",
											"source": 30,
											"value": "46"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "37"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "48"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "49"
										},
										{
											"begin": 3149,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "tag",
											"source": 30,
											"value": "48"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "50"
										},
										{
											"begin": 3149,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "tag",
											"source": 30,
											"value": "9"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "51"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "tag",
											"source": 30,
											"value": "51"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "37"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "53"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "54"
										},
										{
											"begin": 4418,
											"end": 4976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "tag",
											"source": 30,
											"value": "53"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "55"
										},
										{
											"begin": 4418,
											"end": 4976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "tag",
											"source": 30,
											"value": "10"
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "56"
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "tag",
											"source": 30,
											"value": "56"
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "42"
										},
										{
											"begin": 1546,
											"end": 1592,
											"name": "PUSH",
											"source": 30,
											"value": "BBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14"
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "tag",
											"source": 30,
											"value": "12"
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "65"
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "tag",
											"source": 30,
											"value": "65"
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "42"
										},
										{
											"begin": 1308,
											"end": 1349,
											"name": "PUSH",
											"source": 30,
											"value": "A1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF"
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1241,
											"end": 1349,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "tag",
											"source": 30,
											"value": "13"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "69"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "tag",
											"source": 30,
											"value": "69"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "37"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "71"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "72"
										},
										{
											"begin": 5151,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "tag",
											"source": 30,
											"value": "71"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "73"
										},
										{
											"begin": 5151,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "tag",
											"source": 30,
											"value": "14"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "74"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "tag",
											"source": 30,
											"value": "74"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "42"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "PUSH",
											"source": 30,
											"value": "33"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 32,
											"value": "24"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "78"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "79"
										},
										{
											"begin": 704,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 704,
											"end": 719,
											"name": "tag",
											"source": 32,
											"value": "78"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MLOAD",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 32,
											"value": "60"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP3",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 32,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 743,
											"end": 744,
											"name": "PUSH",
											"source": 32,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 32,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP3",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "tag",
											"source": 30,
											"value": "50"
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 13,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "103"
										},
										{
											"begin": 3279,
											"end": 3291,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 3245,
											"end": 3278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "104"
										},
										{
											"begin": 3245,
											"end": 3292,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3245,
											"end": 3292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "103"
										},
										{
											"begin": 3245,
											"end": 3292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3305,
											"end": 3315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3315,
											"modifierDepth": 1,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 3326,
											"end": 3330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "33"
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "178B8BF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "178B8BF"
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "107"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "107"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "108"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "109"
										},
										{
											"begin": 3374,
											"end": 3393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "108"
										},
										{
											"begin": 3374,
											"end": 3393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3351,
											"end": 3393,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3410,
											"end": 3436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3406,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "110"
										},
										{
											"begin": 3406,
											"end": 3526,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3514,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D7097C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3460,
											"end": 3514,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3514,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4856,
											"end": 4916,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "111"
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3460,
											"end": 3514,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 3406,
											"end": 3526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "110"
										},
										{
											"begin": 3406,
											"end": 3526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3538,
											"end": 3561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"modifierDepth": 1,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5080,
											"end": 5130,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5080,
											"end": 5130,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 13,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5068,
											"end": 5070,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3149,
											"end": 3569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "tag",
											"source": 30,
											"value": "55"
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": 1546,
											"end": 1592,
											"name": "PUSH",
											"source": 30,
											"value": "BBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14"
										},
										{
											"begin": 1546,
											"end": 1592,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "117"
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1630,
											"end": 1634,
											"name": "ADDRESS",
											"source": 25
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "tag",
											"source": 25,
											"value": "118"
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1651,
											"end": 1664,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 1040,
											"end": 1054,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1054,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "122"
										},
										{
											"begin": 1610,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "tag",
											"source": 25,
											"value": "117"
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4571,
											"end": 4586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "33"
										},
										{
											"begin": 4616,
											"end": 4620,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4622,
											"end": 4628,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "124"
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5342,
											"end": 5344,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5345,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 5333,
											"end": 5345,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5141,
											"end": 5388,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "124"
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4589,
											"end": 4630,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4589,
											"end": 4630,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4630,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4589,
											"end": 4630,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4589,
											"end": 4630,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4589,
											"end": 4630,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2571BE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4664,
											"end": 4682,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4664,
											"end": 4682,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4589,
											"end": 4630,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4589,
											"end": 4630,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4641,
											"end": 4661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4661,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "2571BE3"
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "128"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4682,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "128"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "129"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "109"
										},
										{
											"begin": 4664,
											"end": 4682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "129"
										},
										{
											"begin": 4664,
											"end": 4682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4641,
											"end": 4682,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4699,
											"end": 4725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4695,
											"end": 4801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "130"
										},
										{
											"begin": 4695,
											"end": 4801,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4749,
											"end": 4789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4789,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCAD5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4789,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4749,
											"end": 4789,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4749,
											"end": 4789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4749,
											"end": 4789,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4749,
											"end": 4789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4856,
											"end": 4916,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4749,
											"end": 4789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "111"
										},
										{
											"begin": 4648,
											"end": 4922,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4695,
											"end": 4801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "130"
										},
										{
											"begin": 4695,
											"end": 4801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4833,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "33"
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4813,
											"end": 4861,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6AB5923"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4861,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4861,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5595,
											"end": 5620,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5595,
											"end": 5620,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5595,
											"end": 5620,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5595,
											"end": 5620,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5629,
											"end": 5663,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 5629,
											"end": 5663,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5629,
											"end": 5663,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4855,
											"end": 4859,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 30
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5672,
											"end": 5732,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "6AB5923"
										},
										{
											"begin": 4813,
											"end": 4832,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 33,
											"value": "64"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "135"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4861,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "135"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "136"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "137"
										},
										{
											"begin": 4813,
											"end": 4861,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "136"
										},
										{
											"begin": 4813,
											"end": 4861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4872,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 4872,
											"end": 4875,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4897,
											"end": 4905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4B7B85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4897,
											"end": 4905,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4856,
											"end": 4916,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4872,
											"end": 4875,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4875,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "1896F70A"
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "139"
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "139"
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "141"
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "141"
										},
										{
											"begin": 4872,
											"end": 4906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4926,
											"end": 4934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4968,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5FA2B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4968,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4968,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4856,
											"end": 4916,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4926,
											"end": 4934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "D5FA2B00"
										},
										{
											"begin": 4917,
											"end": 4943,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "143"
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4968,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "143"
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "145"
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4968,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "145"
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4560,
											"end": 4976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4560,
											"end": 4976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4418,
											"end": 4976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "tag",
											"source": 30,
											"value": "73"
										},
										{
											"begin": 5151,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": 1546,
											"end": 1592,
											"name": "PUSH",
											"source": 30,
											"value": "BBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14"
										},
										{
											"begin": 1546,
											"end": 1592,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "147"
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1630,
											"end": 1634,
											"name": "ADDRESS",
											"source": 25
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "118"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "tag",
											"source": 25,
											"value": "147"
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5281,
											"end": 5304,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5281,
											"end": 5304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5277,
											"end": 5390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "151"
										},
										{
											"begin": 5277,
											"end": 5390,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5351,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "33"
										},
										{
											"begin": 5351,
											"end": 5355,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 5328,
											"end": 5378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5378,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D7097C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5328,
											"end": 5378,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5328,
											"end": 5378,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5328,
											"end": 5378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5378,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5328,
											"end": 5378,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4856,
											"end": 4916,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 4795,
											"end": 4813,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5328,
											"end": 5378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "111"
										},
										{
											"begin": 4648,
											"end": 4922,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5277,
											"end": 5390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 30,
											"value": "151"
										},
										{
											"begin": 5277,
											"end": 5390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5402,
											"end": 5410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5402,
											"end": 5422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"modifierDepth": 1,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 5151,
											"end": 5430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "832"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "832"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4035,
											"name": "tag",
											"source": 30,
											"value": "87"
										},
										{
											"begin": 3917,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": 1308,
											"end": 1349,
											"name": "PUSH",
											"source": 30,
											"value": "A1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF"
										},
										{
											"begin": 1308,
											"end": 1349,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "88"
										},
										{
											"begin": 1610,
											"end": 1677,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1620,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1630,
											"end": 1634,
											"name": "ADDRESS",
											"source": 25
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "118"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 14,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2643,
											"end": 2668,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 2497,
											"end": 2674,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "832"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1107,
											"name": "tag",
											"source": 25,
											"value": "104"
										},
										{
											"begin": 997,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"modifierDepth": 1,
											"name": "OR",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "SSTORE",
											"source": 25
										},
										{
											"begin": 997,
											"end": 1107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "tag",
											"source": 26,
											"value": "122"
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 26
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7EF7C883"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "DUP8",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "AND",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "PUSH",
											"source": 26,
											"value": "FDEF9106"
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "186"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1236,
											"end": 1249,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1236,
											"end": 1249,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP9",
											"source": 26
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "187"
										},
										{
											"begin": 1203,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 26,
											"value": "186"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP4",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SUB",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP7",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "GAS",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "STATICCALL",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ISZERO",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ISZERO",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "189"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPI",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATACOPY",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "REVERT",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 26,
											"value": "189"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "NOT",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP3",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "AND",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP3",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "190"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP2",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "191"
										},
										{
											"begin": 1203,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 26
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 26,
											"value": "190"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "192"
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "JUMPI",
											"source": 26
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "MLOAD",
											"source": 26
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CB6F8ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "DUP2",
											"source": 26
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7183,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7168,
											"end": 7183,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 7168,
											"end": 7183,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH",
											"source": 26,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "DUP4",
											"source": 26
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "ADD",
											"source": 26
										},
										{
											"begin": 7150,
											"end": 7184,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7220,
											"end": 7235,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7220,
											"end": 7235,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 7220,
											"end": 7235,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7193,
											"end": 7236,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7272,
											"end": 7287,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 7272,
											"end": 7287,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "PUSH",
											"source": 33,
											"value": "44"
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7245,
											"end": 7288,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7304,
											"end": 7322,
											"name": "PUSH",
											"source": 33,
											"value": "64"
										},
										{
											"begin": 7304,
											"end": 7322,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7304,
											"end": 7322,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7084,
											"end": 7103,
											"name": "PUSH",
											"source": 33,
											"value": "84"
										},
										{
											"begin": 7084,
											"end": 7103,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 26,
											"value": "111"
										},
										{
											"begin": 6881,
											"end": 7337,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "tag",
											"source": 26,
											"value": "192"
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 26
										},
										{
											"begin": 1057,
											"end": 1434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 26
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "203"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "88"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 13,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 19
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 21,
											"value": "203"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "220"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 21,
											"value": "220"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "157"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "230"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 21,
											"value": "230"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "237"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 21,
											"value": "237"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 21,
											"value": "238"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5743,
											"end": 6259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 723,
											"name": "tag",
											"source": 33,
											"value": "26"
										},
										{
											"begin": 222,
											"end": 723,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 383,
											"end": 401,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 387,
											"end": 396,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 356,
											"end": 360,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "tag",
											"source": 33,
											"value": "245"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 526,
											"end": 530,
											"name": "PUSH",
											"source": 33,
											"value": "3"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 520,
											"end": 531,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 512,
											"end": 717,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 512,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "247"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 589,
											"end": 602,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 589,
											"end": 602,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 604,
											"end": 608,
											"name": "PUSH",
											"source": 33,
											"value": "FF"
										},
										{
											"begin": 585,
											"end": 609,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 573,
											"end": 610,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 573,
											"end": 610,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 633,
											"end": 637,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 669,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 657,
											"end": 669,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 657,
											"end": 669,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 657,
											"end": 669,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 692,
											"end": 707,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 692,
											"end": 707,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 692,
											"end": 707,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 692,
											"end": 707,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 546,
											"end": 547,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 548,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 512,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "245"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 512,
											"end": 717,
											"name": "tag",
											"source": 33,
											"value": "247"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 222,
											"end": 723,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 222,
											"end": 723,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 222,
											"end": 723,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 222,
											"end": 723,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 222,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "tag",
											"source": 33,
											"value": "239"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1274,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1243,
											"end": 1274,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1233,
											"end": 1275,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1233,
											"end": 1275,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 1223,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "238"
										},
										{
											"begin": 1223,
											"end": 1293,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1304,
											"end": 1431,
											"name": "tag",
											"source": 33,
											"value": "240"
										},
										{
											"begin": 1304,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1365,
											"end": 1375,
											"name": "PUSH",
											"source": 33,
											"value": "4E487B71"
										},
										{
											"begin": 1360,
											"end": 1363,
											"name": "PUSH",
											"source": 33,
											"value": "E0"
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 1353,
											"end": 1354,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1377,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "PUSH",
											"source": 33,
											"value": "41"
										},
										{
											"begin": 1393,
											"end": 1394,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1420,
											"end": 1424,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1436,
											"end": 2492,
											"name": "tag",
											"source": 33,
											"value": "39"
										},
										{
											"begin": 1436,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1527,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1574,
											"end": 1576,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1571,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 1549,
											"end": 1572,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1545,
											"end": 1577,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 1542,
											"end": 1594,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1542,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "254"
										},
										{
											"begin": 1542,
											"end": 1594,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1580,
											"end": 1592,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1542,
											"end": 1594,
											"name": "tag",
											"source": 33,
											"value": "254"
										},
										{
											"begin": 1542,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1629,
											"end": 1638,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 1616,
											"end": 1639,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "255"
										},
										{
											"begin": 1673,
											"end": 1678,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "239"
										},
										{
											"begin": 1648,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "tag",
											"source": 33,
											"value": "255"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1698,
											"end": 1703,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1726,
											"end": 1758,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1821,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1807,
											"end": 1821,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 1807,
											"end": 1821,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1824,
											"end": 1836,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "tag",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1861,
											"end": 1870,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 1857,
											"end": 1879,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1847,
											"end": 1879,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1847,
											"end": 1879,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1917,
											"end": 1924,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 1910,
											"end": 1914,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 1906,
											"end": 1908,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1902,
											"end": 1915,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1898,
											"end": 1925,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 1888,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "257"
										},
										{
											"begin": 1888,
											"end": 1943,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1888,
											"end": 1943,
											"name": "tag",
											"source": 33,
											"value": "257"
										},
										{
											"begin": 1888,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1993,
											"end": 1995,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1990,
											"end": 2000,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 1987,
											"end": 2023,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1987,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "259"
										},
										{
											"begin": 1987,
											"end": 2023,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "259"
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "240"
										},
										{
											"begin": 2003,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "tag",
											"source": 33,
											"value": "259"
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2078,
											"end": 2080,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2046,
											"end": 2048,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 2132,
											"end": 2145,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2132,
											"end": 2145,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 33,
											"value": "3F"
										},
										{
											"begin": 2124,
											"end": 2155,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2120,
											"end": 2160,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2108,
											"end": 2161,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2108,
											"end": 2161,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2108,
											"end": 2161,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 2196,
											"end": 2218,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2196,
											"end": 2218,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2196,
											"end": 2218,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 2173,
											"end": 2219,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 2170,
											"end": 2242,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2170,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "261"
										},
										{
											"begin": 2170,
											"end": 2242,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2222,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "261"
										},
										{
											"begin": 2222,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "240"
										},
										{
											"begin": 2222,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2222,
											"end": 2240,
											"name": "tag",
											"source": 33,
											"value": "261"
										},
										{
											"begin": 2222,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2262,
											"end": 2272,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2337,
											"end": 2344,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 2332,
											"end": 2334,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2329,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2323,
											"end": 2325,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 2319,
											"end": 2330,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2315,
											"end": 2335,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2312,
											"end": 2345,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "262"
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2358,
											"end": 2359,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2356,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "tag",
											"source": 33,
											"value": "262"
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2414,
											"end": 2416,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 2401,
											"end": 2412,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2396,
											"end": 2398,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2384,
											"end": 2399,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2371,
											"end": 2417,
											"name": "CALLDATACOPY",
											"source": 33
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2456,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2451,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2433,
											"end": 2457,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2426,
											"end": 2461,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1436,
											"end": 2492,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1436,
											"end": 2492,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1436,
											"end": 2492,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1436,
											"end": 2492,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1436,
											"end": 2492,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1436,
											"end": 2492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2679,
											"end": 3159,
											"name": "tag",
											"source": 33,
											"value": "49"
										},
										{
											"begin": 2679,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2796,
											"end": 2802,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2851,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2828,
											"end": 2835,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 2824,
											"end": 2847,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2820,
											"end": 2852,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "265"
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2855,
											"end": 2867,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "tag",
											"source": 33,
											"value": "265"
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2904,
											"end": 2913,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 2923,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "266"
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2923,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "239"
										},
										{
											"begin": 2923,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2923,
											"end": 2954,
											"name": "tag",
											"source": 33,
											"value": "266"
										},
										{
											"begin": 2923,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2973,
											"end": 2978,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3002,
											"end": 3034,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 3043,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "267"
										},
										{
											"begin": 3002,
											"end": 3034,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3043,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "239"
										},
										{
											"begin": 3043,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3043,
											"end": 3076,
											"name": "tag",
											"source": 33,
											"value": "267"
										},
										{
											"begin": 3043,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2679,
											"end": 3159,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 2679,
											"end": 3159,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "SWAP5",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3149,
											"end": 3151,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3121,
											"end": 3153,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 3121,
											"end": 3153,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2679,
											"end": 3159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3164,
											"end": 3479,
											"name": "tag",
											"source": 33,
											"value": "54"
										},
										{
											"begin": 3164,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3293,
											"end": 3295,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 3272,
											"end": 3279,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 3268,
											"end": 3291,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 3264,
											"end": 3296,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 3261,
											"end": 3313,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 3261,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "269"
										},
										{
											"begin": 3261,
											"end": 3313,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3299,
											"end": 3311,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 3261,
											"end": 3313,
											"name": "tag",
											"source": 33,
											"value": "269"
										},
										{
											"begin": 3261,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 3332,
											"end": 3355,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 3405,
											"end": 3407,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3377,
											"end": 3409,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 3418,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "270"
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3418,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "239"
										},
										{
											"begin": 3418,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3418,
											"end": 3449,
											"name": "tag",
											"source": 33,
											"value": "270"
										},
										{
											"begin": 3418,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3458,
											"end": 3473,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3458,
											"end": 3473,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 3458,
											"end": 3473,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 3164,
											"end": 3479,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 3164,
											"end": 3479,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 3164,
											"end": 3479,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 3164,
											"end": 3479,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3164,
											"end": 3479,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 3164,
											"end": 3479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3484,
											"end": 3734,
											"name": "tag",
											"source": 33,
											"value": "241"
										},
										{
											"begin": 3484,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3569,
											"end": 3570,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "tag",
											"source": 33,
											"value": "272"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3593,
											"end": 3599,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3587,
											"end": 3600,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "274"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3650,
											"end": 3661,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 3650,
											"end": 3661,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 3650,
											"end": 3661,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3643,
											"end": 3682,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3618,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "272"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "tag",
											"source": 33,
											"value": "274"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 3727,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3724,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3708,
											"end": 3724,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3701,
											"end": 3728,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3484,
											"end": 3734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3739,
											"end": 4135,
											"name": "tag",
											"source": 33,
											"value": "64"
										},
										{
											"begin": 3739,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3963,
											"end": 3969,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3958,
											"end": 3960,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3956,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 3943,
											"end": 3961,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3936,
											"end": 3970,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3979,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "276"
										},
										{
											"begin": 4051,
											"end": 4057,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4046,
											"end": 4048,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 4014,
											"end": 4029,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3979,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "241"
										},
										{
											"begin": 3979,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3979,
											"end": 4058,
											"name": "tag",
											"source": 33,
											"value": "276"
										},
										{
											"begin": 3979,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 4098,
											"end": 4113,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4094,
											"end": 4123,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4079,
											"end": 4124,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 4079,
											"end": 4124,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4079,
											"end": 4124,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 4079,
											"end": 4124,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4126,
											"end": 4128,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4129,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4075,
											"end": 4129,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 3739,
											"end": 4135,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3739,
											"end": 4135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4140,
											"end": 4387,
											"name": "tag",
											"source": 33,
											"value": "72"
										},
										{
											"begin": 4140,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4254,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 4240,
											"end": 4249,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4231,
											"end": 4238,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 4227,
											"end": 4250,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 4223,
											"end": 4255,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 4220,
											"end": 4272,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 4220,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "278"
										},
										{
											"begin": 4220,
											"end": 4272,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4268,
											"end": 4269,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4266,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4258,
											"end": 4270,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 4220,
											"end": 4272,
											"name": "tag",
											"source": 33,
											"value": "278"
										},
										{
											"begin": 4220,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4307,
											"end": 4316,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4294,
											"end": 4317,
											"name": "CALLDATALOAD",
											"source": 33
										},
										{
											"begin": 4326,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "232"
										},
										{
											"begin": 4351,
											"end": 4356,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4326,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "239"
										},
										{
											"begin": 4326,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4392,
											"end": 4643,
											"name": "tag",
											"source": 33,
											"value": "109"
										},
										{
											"begin": 4392,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4517,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4512,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 4494,
											"end": 4501,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 4490,
											"end": 4513,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 4486,
											"end": 4518,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 4483,
											"end": 4535,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 4483,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "281"
										},
										{
											"begin": 4483,
											"end": 4535,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4531,
											"end": 4532,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4521,
											"end": 4533,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 4483,
											"end": 4535,
											"name": "tag",
											"source": 33,
											"value": "281"
										},
										{
											"begin": 4483,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4563,
											"end": 4572,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4557,
											"end": 4573,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 4582,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "232"
										},
										{
											"begin": 4607,
											"end": 4612,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4582,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "239"
										},
										{
											"begin": 4582,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5743,
											"end": 5927,
											"name": "tag",
											"source": 33,
											"value": "137"
										},
										{
											"begin": 5743,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5813,
											"end": 5819,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5854,
											"end": 5863,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 5845,
											"end": 5852,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 5841,
											"end": 5864,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 5837,
											"end": 5869,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 5834,
											"end": 5886,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 5834,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "288"
										},
										{
											"begin": 5834,
											"end": 5886,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 5882,
											"end": 5883,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 5872,
											"end": 5884,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 5834,
											"end": 5886,
											"name": "tag",
											"source": 33,
											"value": "288"
										},
										{
											"begin": 5834,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5905,
											"end": 5921,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 5905,
											"end": 5921,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5743,
											"end": 5927,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5743,
											"end": 5927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "tag",
											"source": 33,
											"value": "187"
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6193,
											"end": 6227,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6193,
											"end": 6227,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6263,
											"end": 6278,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 6263,
											"end": 6278,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6258,
											"end": 6260,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6236,
											"end": 6279,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6310,
											"end": 6312,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 6295,
											"end": 6313,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6295,
											"end": 6313,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6288,
											"end": 6322,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6288,
											"end": 6322,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6288,
											"end": 6322,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6358,
											"end": 6361,
											"name": "PUSH",
											"source": 33,
											"value": "80"
										},
										{
											"begin": 6353,
											"end": 6355,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6331,
											"end": 6362,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6331,
											"end": 6362,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6331,
											"end": 6362,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6378,
											"end": 6397,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6378,
											"end": 6397,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6371,
											"end": 6406,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6371,
											"end": 6406,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6371,
											"end": 6406,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6136,
											"end": 6140,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6449,
											"end": 6455,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6173,
											"end": 6176,
											"name": "PUSH",
											"source": 33,
											"value": "A0"
										},
										{
											"begin": 6428,
											"end": 6447,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6428,
											"end": 6447,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6415,
											"end": 6464,
											"name": "CALLDATACOPY",
											"source": 33
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6511,
											"name": "PUSH",
											"source": 33,
											"value": "A0"
										},
										{
											"begin": 6499,
											"end": 6505,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6488,
											"end": 6497,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6480,
											"end": 6512,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6473,
											"end": 6516,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6584,
											"end": 6587,
											"name": "PUSH",
											"source": 33,
											"value": "A0"
										},
										{
											"begin": 6577,
											"end": 6579,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 6573,
											"end": 6580,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 6568,
											"end": 6570,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 6560,
											"end": 6566,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 6556,
											"end": 6571,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6552,
											"end": 6581,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6541,
											"end": 6550,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 6537,
											"end": 6582,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6533,
											"end": 6588,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6525,
											"end": 6588,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6525,
											"end": 6588,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "SWAP7",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 5932,
											"end": 6594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 6599,
											"end": 6876,
											"name": "tag",
											"source": 33,
											"value": "191"
										},
										{
											"begin": 6599,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6721,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 6707,
											"end": 6716,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6698,
											"end": 6705,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6694,
											"end": 6717,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 6690,
											"end": 6722,
											"name": "SLT",
											"source": 33
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "291"
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 6725,
											"end": 6737,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "tag",
											"source": 33,
											"value": "291"
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 6767,
											"end": 6776,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6761,
											"end": 6777,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 6820,
											"end": 6825,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 6813,
											"end": 6826,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 6806,
											"end": 6827,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 6799,
											"end": 6804,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6796,
											"end": 6828,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 6786,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "232"
										},
										{
											"begin": 6786,
											"end": 6846,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 6842,
											"end": 6843,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6839,
											"end": 6840,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 6832,
											"end": 6844,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 7342,
											"end": 7629,
											"name": "tag",
											"source": 33,
											"value": "218"
										},
										{
											"begin": 7342,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 7471,
											"end": 7474,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 7503,
											"end": 7516,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 7525,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "295"
										},
										{
											"begin": 7584,
											"end": 7590,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7579,
											"end": 7582,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7570,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 7560,
											"end": 7577,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7525,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "241"
										},
										{
											"begin": 7525,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 7525,
											"end": 7591,
											"name": "tag",
											"source": 33,
											"value": "295"
										},
										{
											"begin": 7525,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 7607,
											"end": 7623,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 7607,
											"end": 7623,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7607,
											"end": 7623,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 7607,
											"end": 7623,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7607,
											"end": 7623,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 7342,
											"end": 7629,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7342,
											"end": 7629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									}
								}
							},
							"sourceList": [
								"@ensdomains/ens-contracts/contracts/registry/ENS.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID()": "9848ba51",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"UPGRADE_REGISTRAR_PERMISSION_ID()": "af7b2fed",
							"dao()": "4162169f",
							"ens()": "3f15457f",
							"initialize(address,address,bytes32)": "6133f985",
							"node()": "d70754ec",
							"protocolVersion()": "2ae9c600",
							"proxiableUUID()": "52d1902d",
							"registerSubnode(bytes32,address)": "89bb4145",
							"resolver()": "04f3bcec",
							"setDefaultResolver(address)": "c66485b2",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subnode\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"nodeOwner\",\"type\":\"address\"}],\"name\":\"AlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"name\":\"DaoUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"InvalidResolver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_REGISTRAR_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"_managingDao\",\"type\":\"address\"},{\"internalType\":\"contract ENS\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"node\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_targetAddress\",\"type\":\"address\"}],\"name\":\"registerSubnode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setDefaultResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AlreadyRegistered(bytes32,address)\":[{\"params\":{\"nodeOwner\":\"The node owner address.\",\"subnode\":\"The subnode namehash.\"}}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"params\":{\"dao\":\"The associated DAO.\",\"permissionId\":\"The permission identifier.\",\"where\":\"The context in which the authorization reverted.\",\"who\":\"The address (EOA or contract) missing the permission.\"}}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidResolver(bytes32,address)\":[{\"params\":{\"node\":\"The node namehash.\",\"resolver\":\"The node resolver address.\"}}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"details\":\"Used to disallow initializing the implementation contract by an attacker for extra safety.\"},\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}},\"initialize(address,address,bytes32)\":{\"params\":{\"_ens\":\"The interface of the ENS registry to be used.\",\"_managingDao\":\"The interface of the DAO managing the components permissions.\",\"_node\":\"The ENS parent domain node under which the subdomains are to be registered.\"}},\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_0\":\"Returns the semantic Aragon OSx protocol version number.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"registerSubnode(bytes32,address)\":{\"details\":\"It reverts with no message if this contract isn't the owner nor an approved operator for the given node.\",\"params\":{\"_label\":\"The labelhash of the subdomain name.\",\"_targetAddress\":\"The address to which the subdomain resolves.\"}},\"setDefaultResolver(address)\":{\"params\":{\"_resolver\":\"The resolver contract to be used.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"ENSSubdomainRegistrar\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyRegistered(bytes32,address)\":[{\"notice\":\"Thrown if the subnode is already registered.\"}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"notice\":\"Thrown if a call is unauthorized in the associated DAO.\"}],\"InvalidResolver(bytes32,address)\":[{\"notice\":\"Thrown if node's resolver is invalid.\"}]},\"kind\":\"user\",\"methods\":{\"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `registerSubnode` and `setDefaultResolver` function.\"},\"UPGRADE_REGISTRAR_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `_authorizeUpgrade` function.\"},\"dao()\":{\"notice\":\"Returns the DAO contract.\"},\"ens()\":{\"notice\":\"The ENS registry contract\"},\"initialize(address,address,bytes32)\":{\"notice\":\"Initializes the component by - checking that the contract is the domain node owner or an approved operator - initializing the underlying component - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID - setting the ENS contract, the domain node hash, and resolver.\"},\"node()\":{\"notice\":\"The namehash of the domain on which subdomains are registered.\"},\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"},\"registerSubnode(bytes32,address)\":{\"notice\":\"Registers a new subdomain with this registrar as the owner and set the target address in the resolver.\"},\"resolver()\":{\"notice\":\"The address of the ENS resolver resolving the names to an address.\"},\"setDefaultResolver(address)\":{\"notice\":\"Sets the default resolver contract address that the subdomains being registered will use.\"}},\"notice\":\"This contract registers ENS subdomains under a parent domain specified in the initialization process and maintains ownership of the subdomain since only the resolver address is set. This contract must either be the domain node owner or an approved operator of the node owner. The default resolver being used is the one specified in the parent domain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":\"ENSSubdomainRegistrar\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\":{\"keccak256\":\"0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda\",\"urls\":[\"bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314\",\"dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR\"]},\"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol\":{\"keccak256\":\"0xfc77ab6b7c59c3ebfe1c720bdebf9b08c2488ff7ac9501a9aa056c5d6d5b50c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d472c5e0de753fe3b0ce8b37b3c10635ad7328fbd34e2b1be05e82aec73b7f7\",\"dweb:/ipfs/QmbPqW3BxytUNqJTxAXF6PngM3X7BNNnQwdSuSdHsKmRvH\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol\":{\"keccak256\":\"0x85b373d02d19374fe570af407f459768285704bf7f30ab17c30eabfb5a10e4c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046ce3d92d29806d7b447f7ab4227f19b0b2e5c75fd5b4a3fcaef7fe2442141\",\"dweb:/ipfs/QmRgnfWjFetrSJngkhU7Yui1ZcK1MeatvZDpvUTYNuYnND\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol\":{\"keccak256\":\"0x2ad7f2fc60ebe0f93745fe70247f6a854f66af732483fda2a3c5e055614445e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43922ba183ff20d87dce7fc5d715e626b26594151e36dcc8d7c6329b9a822963\",\"dweb:/ipfs/QmTg9uHTugTxzqddN68gnhNbGt4bGJBS9mQcss6GYggR4X\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol\":{\"keccak256\":\"0x411447c1e90c51e09702815a85ec725ffbbe37cf96e8cc4d2a8bd4ad8a59d73e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543aa2756447a428711b69aea79e9f4641c22f8330ba920b2a49fde8d9207f82\",\"dweb:/ipfs/QmTdpcYRWLH3BL7iytnqcSzRojTPe3YettKaTqeCvKPk54\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol\":{\"keccak256\":\"0xd95cd77684ba5752c428d7dceb4ecc6506ac94f4fbb910489637eb68dcd8e366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf1fee7770679bd935b8b5686789a4ecc532caeef5a9b8e1b60ae0c285e743e\",\"dweb:/ipfs/QmSaHBAqtDdbQLH6QN4EbupMrq2ah8g6fqE7fLX1u4cjMZ\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol\":{\"keccak256\":\"0xcfa52200edd337f2c6c5bf402352600584da033b21323603e53de33051a3e25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8355211d58db82660140191678ee342eb8a7ac46fa097ae8e03eef008f592e\",\"dweb:/ipfs/QmYDNiECPd4fJ7Vk9Xywfpg73rUvDpcYqas95ofGcpt7fM\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol\":{\"keccak256\":\"0xca1b3a16e7005533f2800a3e66fcdccf7c574deac7913d8c810f40aec1d58dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e38d5eb69e236c37e4a013628838070720c9e1923569650b01252868038c7a\",\"dweb:/ipfs/QmV397iZMRxtem79kJy5sueJadXoVL89gNViX2xciQHUrk\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol\":{\"keccak256\":\"0x5d81521cfae7d9a4475d27533cd8ed0d3475d369eb0674fd90ffbdbdf292faa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d244d15588785044b54c453ab6dc51c616ab70cb8b9e687d3e54565bcae97760\",\"dweb:/ipfs/QmXz4ZZBTFogdkdTV1mcE3ywvL2agKVZHLNNeRHCKVruYM\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol\":{\"keccak256\":\"0x390321fb58f7b927df9562450981e74b4be3907e7c09df321fd3b7409b63ae28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://045d12c6e0e4596b3672614751a9e75188183a89765a6abd938294e0294e9c56\",\"dweb:/ipfs/QmazngvagEoKe29s4M9Rv8KygWD5hrAtNPkYDPJ2pK13yx\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol\":{\"keccak256\":\"0x69748947093dd2fda9ddcebd0adf19a6d1e7600df1d4b1462a0417156caddca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2f86e50bd17c38fb10feb577d88d8970c585017a391ef10e3aaa3d50f81555\",\"dweb:/ipfs/QmaxLx2pqCUxf9W2dusfviZ9aSiTuVwuekGo73rjvmGifE\"]},\"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol\":{\"keccak256\":\"0x7c5debb3c42cd9f5de2274ea7aa053f238608314b62db441c40e31cea2543fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e34ae2d84d542ffa6791486963f3fe04432a3ffd51877d441256dc2941914\",\"dweb:/ipfs/QmciS4mGAQ6KJtLiLcBFekHKhYAYMmubDWGkpZ3sUFtJPW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x47c5afa465d550714567ecab77b2dfe15616a92abea5c1e62cb9b74d13308706\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://77d398359d385c36c94fb8504a85e70a0bf790a01ea7673ebff39f9daa46af05\",\"dweb:/ipfs/Qmcso9HQMv8GS2VXE3ZrDWDVpfLQkmc4aH6XD8M5kJbWCF\"]},\"packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x214d611471514ee8c3a21de59447101f1cba44090ee078fa2ba758a2ea5016cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7e51fe2ff30eb754d8ed0a1e4512b35f31d3b7fd1817e277cbfc8721d87fbbf\",\"dweb:/ipfs/QmdLQ1SW4EjRjXMD4pdtJPTDHeZaieYEN3EeiyaV4dDYRX\"]},\"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":{\"keccak256\":\"0x5e0373064af4f4aaa1e869c5902ab661b2fcf3717c6feed1e33c4cb8403b3cb9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://92f3f1d966e4a840a5faee2d343715c8efd41ffaa8ed4b7ace5efa90de3884d2\",\"dweb:/ipfs/QmQeynij1tDU91Kd85Yfdyzva7tz4AXML9S7mQMxDrhpTr\"]},\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]},\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":{\"keccak256\":\"0x53e693a16bda9b3483ce71a5b25a523961930c3f03ec381d9da0be9d37686599\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48336778e4f2097ff1fb1c4909d2be7a50dd6107f1c31c69aebb41e6162ef0e2\",\"dweb:/ipfs/QmNTEmpC3arZ5PPq7HX5SRwe9SNL5kLwnmG9zPfUkbi63B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2103,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "dao_",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDAO)2088"
							},
							{
								"astId": 2152,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2576,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "ens",
								"offset": 0,
								"slot": "50",
								"type": "t_contract(ENS)136"
							},
							{
								"astId": 2579,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "node",
								"offset": 0,
								"slot": "51",
								"type": "t_bytes32"
							},
							{
								"astId": 2582,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "resolver",
								"offset": 0,
								"slot": "52",
								"type": "t_address"
							},
							{
								"astId": 2766,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "__gap",
								"offset": 0,
								"slot": "53",
								"type": "t_array(t_uint256)47_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)47_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[47]",
								"numberOfBytes": "1504"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ENS)136": {
								"encoding": "inplace",
								"label": "contract ENS",
								"numberOfBytes": "20"
							},
							"t_contract(IDAO)2088": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"AlreadyRegistered(bytes32,address)": [
								{
									"notice": "Thrown if the subnode is already registered."
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"notice": "Thrown if a call is unauthorized in the associated DAO."
								}
							],
							"InvalidResolver(bytes32,address)": [
								{
									"notice": "Thrown if node's resolver is invalid."
								}
							]
						},
						"kind": "user",
						"methods": {
							"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `registerSubnode` and `setDefaultResolver` function."
							},
							"UPGRADE_REGISTRAR_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `_authorizeUpgrade` function."
							},
							"dao()": {
								"notice": "Returns the DAO contract."
							},
							"ens()": {
								"notice": "The ENS registry contract"
							},
							"initialize(address,address,bytes32)": {
								"notice": "Initializes the component by - checking that the contract is the domain node owner or an approved operator - initializing the underlying component - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID - setting the ENS contract, the domain node hash, and resolver."
							},
							"node()": {
								"notice": "The namehash of the domain on which subdomains are registered."
							},
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							},
							"registerSubnode(bytes32,address)": {
								"notice": "Registers a new subdomain with this registrar as the owner and set the target address in the resolver."
							},
							"resolver()": {
								"notice": "The address of the ENS resolver resolving the names to an address."
							},
							"setDefaultResolver(address)": {
								"notice": "Sets the default resolver contract address that the subdomains being registered will use."
							}
						},
						"notice": "This contract registers ENS subdomains under a parent domain specified in the initialization process and maintains ownership of the subdomain since only the resolver address is set. This contract must either be the domain node owner or an approved operator of the node owner. The default resolver being used is the one specified in the parent domain.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"IProtocolVersion": {
					"abi": [
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "_version",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"kind": "dev",
						"methods": {
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_version": "Returns the semantic Aragon OSx protocol version number."
								}
							}
						},
						"title": "IProtocolVersion",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"protocolVersion()": "2ae9c600"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"_version\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"kind\":\"dev\",\"methods\":{\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_version\":\"Returns the semantic Aragon OSx protocol version number.\"}}},\"title\":\"IProtocolVersion\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"}},\"notice\":\"An interface defining the semantic Aragon OSx protocol version number.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":\"IProtocolVersion\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							}
						},
						"notice": "An interface defining the semantic Aragon OSx protocol version number.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"ProtocolVersion": {
					"abi": [
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2023",
						"custom:security-contact": "sirt@aragon.org",
						"details": "Do not add any new variables to this contract that would shift down storage in the inheritance chain.",
						"kind": "dev",
						"methods": {
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_0": "Returns the semantic Aragon OSx protocol version number."
								}
							}
						},
						"title": "ProtocolVersion",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"protocolVersion()": "2ae9c600"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"details\":\"Do not add any new variables to this contract that would shift down storage in the inheritance chain.\",\"kind\":\"dev\",\"methods\":{\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_0\":\"Returns the semantic Aragon OSx protocol version number.\"}}},\"title\":\"ProtocolVersion\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"}},\"notice\":\"An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":\"ProtocolVersion\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]},\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":{\"keccak256\":\"0x53e693a16bda9b3483ce71a5b25a523961930c3f03ec381d9da0be9d37686599\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48336778e4f2097ff1fb1c4909d2be7a50dd6107f1c31c69aebb41e6162ef0e2\",\"dweb:/ipfs/QmNTEmpC3arZ5PPq7HX5SRwe9SNL5kLwnmG9zPfUkbi63B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							}
						},
						"notice": "An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @ensdomains/ens-contracts/contracts/registry/ENS.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@ensdomains/ens-contracts/contracts/registry/ENS.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@ensdomains/ens-contracts/contracts/registry/ENS.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/registry/ENS.sol",
					"exportedSymbols": {
						"ENS": [
							136
						]
					},
					"id": 137,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ENS",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "ENS",
							"nameLocation": "36:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ce0457fe73731f824cc272376169235128c118b49d344817417c6d108d155e82",
									"id": 9,
									"name": "NewOwner",
									"nameLocation": "125:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "150:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "134:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "label",
												"nameLocation": "172:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "156:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:60:0"
									},
									"src": "119:75:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d266",
									"id": 15,
									"name": "Transfer",
									"nameLocation": "283:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "308:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "292:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 10,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "322:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "314:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:37:0"
									},
									"src": "277:52:0"
								},
								{
									"anonymous": false,
									"eventSelector": "335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a0",
									"id": 21,
									"name": "NewResolver",
									"nameLocation": "393:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "435:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "427:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:40:0"
									},
									"src": "387:58:0"
								},
								{
									"anonymous": false,
									"eventSelector": "1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa68",
									"id": 27,
									"name": "NewTTL",
									"nameLocation": "502:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "525:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "509:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 22,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": false,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "538:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "531:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 24,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:34:0"
									},
									"src": "496:47:0"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 35,
									"name": "ApprovalForAll",
									"nameLocation": "607:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "647:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "631:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "678:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "662:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "701:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "696:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "696:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:94:0"
									},
									"src": "601:115:0"
								},
								{
									"functionSelector": "cf408823",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRecord",
									"nameLocation": "731:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "758:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "750:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 36,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "780:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "772:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "803:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "795:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "828:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "821:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 42,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "821:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:97:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:0"
									},
									"scope": 136,
									"src": "722:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5ef2c7f0",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSubnodeRecord",
									"nameLocation": "862:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "896:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "888:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 47,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "label",
												"nameLocation": "918:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "910:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 49,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "941:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "933:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "964:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "956:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "989:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "982:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 55,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:120:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:0"
									},
									"scope": 136,
									"src": "853:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06ab5923",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSubnodeOwner",
									"nameLocation": "1023:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1056:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1048:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 60,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "label",
												"nameLocation": "1078:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1070:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1101:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1093:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:74:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1131:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:9:0"
									},
									"scope": 136,
									"src": "1014:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1896f70a",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setResolver",
									"nameLocation": "1155:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "1189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:32:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:0"
									},
									"scope": 136,
									"src": "1146:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0fc9c3",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "1223:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1240:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1232:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1254:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:29:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:0:0"
									},
									"scope": 136,
									"src": "1214:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "14ab9038",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTTL",
									"nameLocation": "1285:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1300:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "1292:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 85,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "1313:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "1306:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 87,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1306:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:26:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1326:0:0"
									},
									"scope": 136,
									"src": "1276:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1342:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1368:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1360:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1383:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1378:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 94,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:33:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1401:0:0"
									},
									"scope": 136,
									"src": "1333:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02571be3",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1417:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1431:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1423:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 99,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:14:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1460:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:9:0"
									},
									"scope": 136,
									"src": "1408:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0178b8bf",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resolver",
									"nameLocation": "1484:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1501:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1493:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:14:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1530:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:9:0"
									},
									"scope": 136,
									"src": "1475:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "16a25cbd",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ttl",
									"nameLocation": "1554:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1566:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1558:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:14:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1595:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 116,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1595:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1594:8:0"
									},
									"scope": 136,
									"src": "1545:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f79fe538",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recordExists",
									"nameLocation": "1618:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1639:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1631:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1630:14:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1668:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:6:0"
									},
									"scope": 136,
									"src": "1609:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1689:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1723:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1715:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1746:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1738:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:55:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1784:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1784:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:6:0"
									},
									"scope": 136,
									"src": "1680:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 137,
							"src": "26:1766:0",
							"usedErrors": [],
							"usedEvents": [
								9,
								15,
								21,
								27,
								35
							]
						}
					],
					"src": "0:1793:0"
				},
				"id": 0
			},
			"@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
					"exportedSymbols": {
						"IABIResolver": [
							356
						],
						"IAddrResolver": [
							374
						],
						"IAddressResolver": [
							395
						],
						"IContentHashResolver": [
							412
						],
						"IDNSRecordResolver": [
							445
						],
						"IDNSZoneResolver": [
							464
						],
						"IERC165": [
							1936
						],
						"IExtendedResolver": [
							476
						],
						"IInterfaceResolver": [
							497
						],
						"INameResolver": [
							514
						],
						"IPubkeyResolver": [
							535
						],
						"ITextResolver": [
							558
						],
						"Resolver": [
							335
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 1937,
							"src": "57:65:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol",
							"file": "./profiles/IABIResolver.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 357,
							"src": "123:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol",
							"file": "./profiles/IAddressResolver.sol",
							"id": 141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 396,
							"src": "161:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol",
							"file": "./profiles/IAddrResolver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 375,
							"src": "203:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol",
							"file": "./profiles/IContentHashResolver.sol",
							"id": 143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 413,
							"src": "242:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol",
							"file": "./profiles/IDNSRecordResolver.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 446,
							"src": "288:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol",
							"file": "./profiles/IDNSZoneResolver.sol",
							"id": 145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 465,
							"src": "332:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol",
							"file": "./profiles/IInterfaceResolver.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 498,
							"src": "374:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
							"file": "./profiles/INameResolver.sol",
							"id": 147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 515,
							"src": "418:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol",
							"file": "./profiles/IPubkeyResolver.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 536,
							"src": "457:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol",
							"file": "./profiles/ITextResolver.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 559,
							"src": "498:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol",
							"file": "./profiles/IExtendedResolver.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 477,
							"src": "537:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 152,
										"name": "IERC165",
										"nameLocations": [
											"710:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1936,
										"src": "710:7:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "710:7:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IABIResolver",
										"nameLocations": [
											"723:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 356,
										"src": "723:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "723:12:1"
								},
								{
									"baseName": {
										"id": 156,
										"name": "IAddressResolver",
										"nameLocations": [
											"741:16:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 395,
										"src": "741:16:1"
									},
									"id": 157,
									"nodeType": "InheritanceSpecifier",
									"src": "741:16:1"
								},
								{
									"baseName": {
										"id": 158,
										"name": "IAddrResolver",
										"nameLocations": [
											"763:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 374,
										"src": "763:13:1"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "763:13:1"
								},
								{
									"baseName": {
										"id": 160,
										"name": "IContentHashResolver",
										"nameLocations": [
											"782:20:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 412,
										"src": "782:20:1"
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "782:20:1"
								},
								{
									"baseName": {
										"id": 162,
										"name": "IDNSRecordResolver",
										"nameLocations": [
											"808:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 445,
										"src": "808:18:1"
									},
									"id": 163,
									"nodeType": "InheritanceSpecifier",
									"src": "808:18:1"
								},
								{
									"baseName": {
										"id": 164,
										"name": "IDNSZoneResolver",
										"nameLocations": [
											"832:16:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 464,
										"src": "832:16:1"
									},
									"id": 165,
									"nodeType": "InheritanceSpecifier",
									"src": "832:16:1"
								},
								{
									"baseName": {
										"id": 166,
										"name": "IInterfaceResolver",
										"nameLocations": [
											"854:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 497,
										"src": "854:18:1"
									},
									"id": 167,
									"nodeType": "InheritanceSpecifier",
									"src": "854:18:1"
								},
								{
									"baseName": {
										"id": 168,
										"name": "INameResolver",
										"nameLocations": [
											"878:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 514,
										"src": "878:13:1"
									},
									"id": 169,
									"nodeType": "InheritanceSpecifier",
									"src": "878:13:1"
								},
								{
									"baseName": {
										"id": 170,
										"name": "IPubkeyResolver",
										"nameLocations": [
											"897:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 535,
										"src": "897:15:1"
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "897:15:1"
								},
								{
									"baseName": {
										"id": 172,
										"name": "ITextResolver",
										"nameLocations": [
											"918:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 558,
										"src": "918:13:1"
									},
									"id": 173,
									"nodeType": "InheritanceSpecifier",
									"src": "918:13:1"
								},
								{
									"baseName": {
										"id": 174,
										"name": "IExtendedResolver",
										"nameLocations": [
											"937:17:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 476,
										"src": "937:17:1"
									},
									"id": 175,
									"nodeType": "InheritanceSpecifier",
									"src": "937:17:1"
								}
							],
							"canonicalName": "Resolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "581:102:1",
								"text": " A generic resolver interface which includes all the functions including the ones deprecated"
							},
							"fullyImplemented": false,
							"id": 335,
							"linearizedBaseContracts": [
								335,
								476,
								558,
								535,
								514,
								497,
								464,
								445,
								412,
								374,
								395,
								356,
								1936
							],
							"name": "Resolver",
							"nameLocation": "694:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0424b6fe0d9c3bdbece0e7879dc241bb0c22e900be8b6c168b4ee08bd9bf83bc",
									"id": 181,
									"name": "ContentChanged",
									"nameLocation": "995:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1026:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1010:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 178,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:36:1"
									},
									"src": "989:57:1"
								},
								{
									"functionSelector": "a22cb465",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1061:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1079:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1088:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1088:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:15:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:1"
									},
									"scope": 335,
									"src": "1052:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a4b91a01",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1118:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1134:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1126:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "1148:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1140:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1163:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1158:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1158:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:47:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:1"
									},
									"scope": 335,
									"src": "1109:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1197:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1222:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1214:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1239:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1231:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:35:1"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1257:0:1"
									},
									"scope": 335,
									"src": "1188:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9784b3e",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedFor",
									"nameLocation": "1273:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1327:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1319:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "1349:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1341:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1286:77:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:0:1"
									},
									"scope": 335,
									"src": "1264:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "623195b0",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setABI",
									"nameLocation": "1388:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1412:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1404:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "contentType",
												"nameLocation": "1434:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1426:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1470:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1455:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1394:86:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1489:0:1"
									},
									"scope": 335,
									"src": "1379:111:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5fa2b00",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddr",
									"nameLocation": "1505:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1521:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1513:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1535:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1527:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1512:28:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:0:1"
									},
									"scope": 335,
									"src": "1496:54:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8b95dd71",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddr",
									"nameLocation": "1565:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1581:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1573:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 230,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "coinType",
												"nameLocation": "1595:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1587:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1605:16:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1605:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1572:50:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:0:1"
									},
									"scope": 335,
									"src": "1556:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "304e6ade",
									"id": 245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContenthash",
									"nameLocation": "1647:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1670:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1662:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1691:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1676:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1676:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:35:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1705:0:1"
									},
									"scope": 335,
									"src": "1638:68:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "76196c88",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDnsrr",
									"nameLocation": "1721:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1738:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1730:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1759:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1744:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1744:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1729:35:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:0:1"
									},
									"scope": 335,
									"src": "1712:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "77372213",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setName",
									"nameLocation": "1789:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1805:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1797:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1797:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1827:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1811:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1811:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1796:37:1"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1842:0:1"
									},
									"scope": 335,
									"src": "1780:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "29cd62ea",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPubkey",
									"nameLocation": "1858:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1876:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1868:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1890:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1882:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1901:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1893:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:36:1"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 335,
									"src": "1849:64:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "10f13a8c",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setText",
									"nameLocation": "1928:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1953:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1945:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1983:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1967:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1967:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2012:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1996:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 273,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1996:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:88:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:1"
									},
									"scope": 335,
									"src": "1919:114:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e59d895d",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterface",
									"nameLocation": "2048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2078:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2070:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "2099:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2092:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 280,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2092:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "2128:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2120:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2060:85:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2154:0:1"
									},
									"scope": 335,
									"src": "2039:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ac9650d8",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nameLocation": "2170:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2206:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2189:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 287,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2189:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 288,
													"nodeType": "ArrayTypeName",
													"src": "2189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:37:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "2250:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2235:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 291,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2235:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 292,
													"nodeType": "ArrayTypeName",
													"src": "2235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:24:1"
									},
									"scope": 335,
									"src": "2161:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e32954eb",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicallWithNodeCheck",
									"nameLocation": "2274:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "nodehash",
												"nameLocation": "2314:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2306:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 296,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2349:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2332:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 298,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2332:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 299,
													"nodeType": "ArrayTypeName",
													"src": "2332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:63:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "2393:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2378:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 302,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2378:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 303,
													"nodeType": "ArrayTypeName",
													"src": "2378:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:24:1"
									},
									"scope": 335,
									"src": "2265:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2dff6941",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "content",
									"nameLocation": "2448:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2464:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2456:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2455:14:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:9:1"
									},
									"scope": 335,
									"src": "2439:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e89401a1",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multihash",
									"nameLocation": "2517:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2535:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2527:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:14:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2564:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2564:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:14:1"
									},
									"scope": 335,
									"src": "2508:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c3d014d6",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContent",
									"nameLocation": "2593:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2612:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2604:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 321,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2626:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2618:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 323,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2603:28:1"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:1"
									},
									"scope": 335,
									"src": "2584:57:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa4cb547",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMultihash",
									"nameLocation": "2656:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2677:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2669:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2698:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2683:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2683:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:35:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2712:0:1"
									},
									"scope": 335,
									"src": "2647:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 336,
							"src": "684:2031:1",
							"usedErrors": [],
							"usedEvents": [
								181,
								343,
								365,
								385,
								403,
								424,
								432,
								455,
								486,
								505,
								524,
								547
							]
						}
					],
					"src": "31:2685:1"
				},
				"id": 1
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IABIResolver.sol",
					"exportedSymbols": {
						"IABIResolver": [
							356
						]
					},
					"id": 357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IABIResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 356,
							"linearizedBaseContracts": [
								356
							],
							"name": "IABIResolver",
							"nameLocation": "68:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "aa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe3",
									"id": 343,
									"name": "ABIChanged",
									"nameLocation": "93:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "120:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "104:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "contentType",
												"nameLocation": "142:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "126:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "103:51:2"
									},
									"src": "87:68:2"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "161:310:2",
										"text": " Returns the ABI associated with an ENS node.\n Defined in EIP205.\n @param node The ENS node to query\n @param contentTypes A bitwise OR of the ABI formats accepted by the caller.\n @return contentType The content type of the return value\n @return data The ABI data"
									},
									"functionSelector": "2203ab56",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ABI",
									"nameLocation": "485:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "506:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "498:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "contentTypes",
												"nameLocation": "528:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "520:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:58:2"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "570:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "579:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "579:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:23:2"
									},
									"scope": 356,
									"src": "476:117:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 357,
							"src": "58:537:2",
							"usedErrors": [],
							"usedEvents": [
								343
							]
						}
					],
					"src": "32:564:2"
				},
				"id": 2
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddrResolver.sol",
					"exportedSymbols": {
						"IAddrResolver": [
							374
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 358,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAddrResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 359,
								"nodeType": "StructuredDocumentation",
								"src": "58:61:3",
								"text": " Interface for the legacy (ETH-only) addr function."
							},
							"fullyImplemented": false,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IAddrResolver",
							"nameLocation": "130:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd2",
									"id": 365,
									"name": "AddrChanged",
									"nameLocation": "156:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "184:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "168:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": false,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "198:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "190:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:33:3"
									},
									"src": "150:51:3"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "207:148:3",
										"text": " Returns the address associated with an ENS node.\n @param node The ENS node to query.\n @return The associated address."
									},
									"functionSelector": "3b3b57de",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addr",
									"nameLocation": "369:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "382:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "374:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:14:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "411:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:17:3"
									},
									"scope": 374,
									"src": "360:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "120:310:3",
							"usedErrors": [],
							"usedEvents": [
								365
							]
						}
					],
					"src": "32:399:3"
				},
				"id": 3
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IAddressResolver.sol",
					"exportedSymbols": {
						"IAddressResolver": [
							395
						]
					},
					"id": 396,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 376,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAddressResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 377,
								"nodeType": "StructuredDocumentation",
								"src": "58:59:4",
								"text": " Interface for the new (multicoin) addr function."
							},
							"fullyImplemented": false,
							"id": 395,
							"linearizedBaseContracts": [
								395
							],
							"name": "IAddressResolver",
							"nameLocation": "128:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "65412581168e88a1e60c6459d7f44ae83ad0832e670826c05a4e2476b57af752",
									"id": 385,
									"name": "AddressChanged",
									"nameLocation": "157:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "197:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "181:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"indexed": false,
												"mutability": "mutable",
												"name": "coinType",
												"nameLocation": "219:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "211:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "243:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "237:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "237:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:88:4"
									},
									"src": "151:109:4"
								},
								{
									"functionSelector": "f1cb7e06",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addr",
									"nameLocation": "275:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "297:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "289:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "coinType",
												"nameLocation": "319:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "311:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:54:4"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "357:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "357:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:14:4"
									},
									"scope": 395,
									"src": "266:105:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 396,
							"src": "118:255:4",
							"usedErrors": [],
							"usedEvents": [
								385
							]
						}
					],
					"src": "32:342:4"
				},
				"id": 4
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IContentHashResolver.sol",
					"exportedSymbols": {
						"IContentHashResolver": [
							412
						]
					},
					"id": 413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 397,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IContentHashResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 412,
							"linearizedBaseContracts": [
								412
							],
							"name": "IContentHashResolver",
							"nameLocation": "68:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d7578",
									"id": 403,
									"name": "ContenthashChanged",
									"nameLocation": "101:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "136:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "120:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 398,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": false,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "148:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "142:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "142:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "119:34:5"
									},
									"src": "95:59:5"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "160:156:5",
										"text": " Returns the contenthash associated with an ENS node.\n @param node The ENS node to query.\n @return The associated contenthash."
									},
									"functionSelector": "bc1c58d1",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contenthash",
									"nameLocation": "330:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "350:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "342:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 405,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:14:5"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "379:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "379:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:14:5"
									},
									"scope": 412,
									"src": "321:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 413,
							"src": "58:337:5",
							"usedErrors": [],
							"usedEvents": [
								403
							]
						}
					],
					"src": "32:364:5"
				},
				"id": 5
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSRecordResolver.sol",
					"exportedSymbols": {
						"IDNSRecordResolver": [
							445
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 414,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDNSRecordResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "IDNSRecordResolver",
							"nameLocation": "68:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "52a608b3303a48862d07a73d82fa221318c0027fbbcfb1b2329bface3f19ff2b",
									"id": 424,
									"name": "DNSRecordChanged",
									"nameLocation": "190:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "232:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "216:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 415,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "252:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "246:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "246:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"indexed": false,
												"mutability": "mutable",
												"name": "resource",
												"nameLocation": "273:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "266:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 419,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "266:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"indexed": false,
												"mutability": "mutable",
												"name": "record",
												"nameLocation": "297:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "291:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "291:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:103:6"
									},
									"src": "184:126:6"
								},
								{
									"anonymous": false,
									"eventSelector": "03528ed0c2a3ebc993b12ce3c16bb382f9c7d88ef7d8a1bf290eaf35955a1207",
									"id": 432,
									"name": "DNSRecordDeleted",
									"nameLocation": "412:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "445:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "429:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "457:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "451:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "451:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"indexed": false,
												"mutability": "mutable",
												"name": "resource",
												"nameLocation": "470:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "463:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 429,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "463:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:51:6"
									},
									"src": "406:74:6"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "486:391:6",
										"text": " Obtain a DNS record.\n @param node the namehash of the node for which to fetch the record\n @param name the keccak-256 hash of the fully-qualified name for which to fetch the record\n @param resource the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\n @return the DNS record in wire format if present, otherwise empty"
									},
									"functionSelector": "a8fa5682",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dnsRecord",
									"nameLocation": "891:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "910:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 434,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "940:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "932:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "resource",
												"nameLocation": "961:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "954:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 438,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "954:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:75:6"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "999:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "999:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:14:6"
									},
									"scope": 445,
									"src": "882:131:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 446,
							"src": "58:957:6",
							"usedErrors": [],
							"usedEvents": [
								424,
								432
							]
						}
					],
					"src": "32:984:6"
				},
				"id": 6
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IDNSZoneResolver.sol",
					"exportedSymbols": {
						"IDNSZoneResolver": [
							464
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 447,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDNSZoneResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "IDNSZoneResolver",
							"nameLocation": "68:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8f15ed4b723ef428f250961da8315675b507046737e19319fc1a4d81bfe87f85",
									"id": 455,
									"name": "DNSZonehashChanged",
									"nameLocation": "180:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "224:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "208:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastzonehash",
												"nameLocation": "244:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "238:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "238:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "zonehash",
												"nameLocation": "272:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "266:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "266:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:88:7"
									},
									"src": "174:113:7"
								},
								{
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "293:143:7",
										"text": " zonehash obtains the hash for the zone.\n @param node The ENS node to query.\n @return The associated contenthash."
									},
									"functionSelector": "5c98042b",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "zonehash",
									"nameLocation": "450:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "467:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 457,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:14:7"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "496:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "496:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:14:7"
									},
									"scope": 464,
									"src": "441:69:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 465,
							"src": "58:454:7",
							"usedErrors": [],
							"usedEvents": [
								455
							]
						}
					],
					"src": "32:481:7"
				},
				"id": 7
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IExtendedResolver.sol",
					"exportedSymbols": {
						"IExtendedResolver": [
							476
						]
					},
					"id": 477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExtendedResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 476,
							"linearizedBaseContracts": [
								476
							],
							"name": "IExtendedResolver",
							"nameLocation": "67:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9061b923",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resolve",
									"nameLocation": "100:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "130:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "117:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "117:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "157:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "144:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "144:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:60:8"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "191:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "191:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:14:8"
									},
									"scope": 476,
									"src": "91:114:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 477,
							"src": "57:150:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:176:8"
				},
				"id": 8
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IInterfaceResolver.sol",
					"exportedSymbols": {
						"IInterfaceResolver": [
							497
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 478,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IInterfaceResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "IInterfaceResolver",
							"nameLocation": "68:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa",
									"id": 486,
									"name": "InterfaceChanged",
									"nameLocation": "99:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "141:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "125:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 479,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "170:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "155:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 481,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "155:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"indexed": false,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "199:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "191:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:101:9"
									},
									"src": "93:124:9"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "223:626:9",
										"text": " Returns the address of a contract that implements the specified interface for this name.\n If an implementer has not been set for this interfaceID and name, the resolver will query\n the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that\n contract implements EIP165 and returns `true` for the specified interfaceID, its address\n will be returned.\n @param node The ENS node to query.\n @param interfaceID The EIP 165 interface ID to check for.\n @return The address that implements this interface, or 0 if the interface is unsupported."
									},
									"functionSelector": "124a319c",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceImplementer",
									"nameLocation": "863:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "901:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "893:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 488,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "922:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "915:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "915:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:56:9"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "963:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:9:9"
									},
									"scope": 497,
									"src": "854:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 498,
							"src": "58:916:9",
							"usedErrors": [],
							"usedEvents": [
								486
							]
						}
					],
					"src": "32:943:9"
				},
				"id": 9
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
					"exportedSymbols": {
						"INameResolver": [
							514
						]
					},
					"id": 515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INameResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 514,
							"linearizedBaseContracts": [
								514
							],
							"name": "INameResolver",
							"nameLocation": "68:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f7",
									"id": 505,
									"name": "NameChanged",
									"nameLocation": "94:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "122:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "106:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "135:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "128:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "128:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:35:10"
									},
									"src": "88:53:10"
								},
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "147:189:10",
										"text": " Returns the name associated with an ENS node, for reverse records.\n Defined in EIP181.\n @param node The ENS node to query.\n @return The associated name."
									},
									"functionSelector": "691f3431",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "350:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "363:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "355:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:14:10"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "392:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 510,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "392:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:15:10"
									},
									"scope": 514,
									"src": "341:66:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 515,
							"src": "58:351:10",
							"usedErrors": [],
							"usedEvents": [
								505
							]
						}
					],
					"src": "32:378:10"
				},
				"id": 10
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/IPubkeyResolver.sol",
					"exportedSymbols": {
						"IPubkeyResolver": [
							535
						]
					},
					"id": 536,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPubkeyResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 535,
							"linearizedBaseContracts": [
								535
							],
							"name": "IPubkeyResolver",
							"nameLocation": "68:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e46",
									"id": 524,
									"name": "PubkeyChanged",
									"nameLocation": "96:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "126:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "110:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "140:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "132:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 519,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "151:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "143:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 521,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:44:11"
									},
									"src": "90:64:11"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "160:294:11",
										"text": " Returns the SECP256k1 public key associated with an ENS node.\n Defined in EIP 619.\n @param node The ENS node to query\n @return x The X coordinate of the curve point for the public key.\n @return y The Y coordinate of the curve point for the public key."
									},
									"functionSelector": "c8690233",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pubkey",
									"nameLocation": "468:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "483:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "475:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:14:11"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "520:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "512:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 529,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "531:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "523:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 531,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:22:11"
									},
									"scope": 535,
									"src": "459:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 536,
							"src": "58:478:11",
							"usedErrors": [],
							"usedEvents": [
								524
							]
						}
					],
					"src": "32:505:11"
				},
				"id": 11
			},
			"@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol": {
				"ast": {
					"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/profiles/ITextResolver.sol",
					"exportedSymbols": {
						"ITextResolver": [
							558
						]
					},
					"id": 559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 537,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITextResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 558,
							"linearizedBaseContracts": [
								558
							],
							"name": "ITextResolver",
							"nameLocation": "68:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "448bc014f1536726cf8d54ff3d6481ed3cbc683c2591ca204274009afa09b1a1",
									"id": 547,
									"name": "TextChanged",
									"nameLocation": "94:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "131:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "115:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 538,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"mutability": "mutable",
												"name": "indexedKey",
												"nameLocation": "160:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "145:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "145:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "187:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "180:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "180:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "207:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "200:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "200:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:113:12"
									},
									"src": "88:131:12"
								},
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "225:206:12",
										"text": " Returns the text data associated with an ENS node and key.\n @param node The ENS node to query.\n @param key The text data key to query.\n @return The associated text data."
									},
									"functionSelector": "59d1d43c",
									"id": 557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "text",
									"nameLocation": "445:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "467:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 549,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "497:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "481:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "481:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:57:12"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "530:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "530:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:15:12"
									},
									"scope": 558,
									"src": "436:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 559,
							"src": "58:489:12",
							"usedErrors": [],
							"usedEvents": [
								547
							]
						}
					],
					"src": "32:516:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 560,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:13"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 561,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:13",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812
							],
							"name": "Initializable",
							"nameLocation": "2367:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:13",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 569,
									"members": [
										{
											"constant": false,
											"id": 565,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "2813:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 564,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 568,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:13",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "2950:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 567,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:13",
									"nodeType": "StructDefinition",
									"scope": 812,
									"src": "2685:290:13",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 572,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:13",
									"nodeType": "VariableDeclaration",
									"scope": 812,
									"src": "3098:115:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 570,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 571,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:13",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 575,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:13"
									},
									"src": "3285:30:13"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:13",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 578,
									"name": "NotInitializing",
									"nameLocation": "3389:15:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:13"
									},
									"src": "3383:24:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:13",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 583,
									"name": "Initialized",
									"nameLocation": "3514:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "3526:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 580,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:13"
									},
									"src": "3508:34:13"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "4092:1081:13",
										"statements": [
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "4158:30:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 587,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 586,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 569,
																"src": "4158:20:13"
															},
															"referencedDeclaration": 569,
															"src": "4158:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 589,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "4191:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$569_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:13"
											},
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:13",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "4279:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 592,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:13",
													"subExpression": {
														"expression": {
															"id": 594,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "4302:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:13",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "4302:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:13"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "4327:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 598,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"expression": {
														"id": 600,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "4348:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:13",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 565,
													"src": "4348:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:13"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "4706:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 603,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 605,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "4726:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 608,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "4746:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:13"
											},
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "4770:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 611,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 613,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "4790:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 618,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$812",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$812",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 616,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:13",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:13",
														"subExpression": {
															"id": 626,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4856:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:13",
														"subExpression": {
															"id": 628,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4873:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "4851:91:13",
												"trueBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "4887:55:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 631,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "4908:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 633,
															"nodeType": "RevertStatement",
															"src": "4901:30:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 636,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "4951:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:13",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "4951:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:13"
											},
											{
												"condition": {
													"id": 642,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "4983:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "4979:67:13",
												"trueBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "4999:47:13",
													"statements": [
														{
															"expression": {
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 643,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "5013:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:13",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 568,
																	"src": "5013:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 648,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:13"
														}
													]
												}
											},
											{
												"id": 651,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:13"
											},
											{
												"condition": {
													"id": 652,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "5070:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 664,
												"nodeType": "IfStatement",
												"src": "5066:101:13",
												"trueBody": {
													"id": 663,
													"nodeType": "Block",
													"src": "5086:81:13",
													"statements": [
														{
															"expression": {
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 653,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "5100:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:13",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 568,
																	"src": "5100:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 658,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 659,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5142:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "EmitStatement",
															"src": "5137:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:13",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 666,
									"name": "initializer",
									"nameLocation": "4078:11:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:13"
									},
									"src": "4069:1104:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "6291:392:13",
										"statements": [
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "6357:30:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 672,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 671,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 569,
																"src": "6357:20:13"
															},
															"referencedDeclaration": 569,
															"src": "6357:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 674,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6390:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$569_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 677,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "6431:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:13",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "6431:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 679,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "6450:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:13",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 565,
															"src": "6450:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 681,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "6468:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "6427:105:13",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "6477:55:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 684,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "6498:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "6491:30:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 689,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "6541:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:13",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "6541:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 692,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "6558:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:13"
											},
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 695,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "6575:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:13",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "6575:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:13"
											},
											{
												"id": 701,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:13"
											},
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 702,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "6618:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:13",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "6618:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 709,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "6668:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 708,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "6656:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "EmitStatement",
												"src": "6651:25:13"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:13",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 713,
									"name": "reinitializer",
									"nameLocation": "6261:13:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "6275:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 668,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:13"
									},
									"src": "6252:431:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "6921:48:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 716,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "6931:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:13"
											},
											{
												"id": 719,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:13"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:13",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 721,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:13"
									},
									"src": "6893:76:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "7136:89:13",
										"statements": [
											{
												"condition": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:13",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 725,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "7151:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 732,
												"nodeType": "IfStatement",
												"src": "7146:73:13",
												"trueBody": {
													"id": 731,
													"nodeType": "Block",
													"src": "7170:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 728,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7191:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 730,
															"nodeType": "RevertStatement",
															"src": "7184:24:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:13",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:13"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:13"
									},
									"scope": 812,
									"src": "7084:141:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "7760:373:13",
										"statements": [
											{
												"assignments": [
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "7826:30:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 739,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 738,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 569,
																"src": "7826:20:13"
															},
															"referencedDeclaration": 569,
															"src": "7826:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 741,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7859:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$569_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:13"
											},
											{
												"condition": {
													"expression": {
														"id": 744,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "7900:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:13",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 568,
													"src": "7900:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "7896:76:13",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "7917:55:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 746,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "7938:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "7931:30:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 751,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "7985:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:13",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "7985:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 754,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 753,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "7981:146:13",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "8021:106:13",
													"statements": [
														{
															"expression": {
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 759,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "8035:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:13",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 565,
																	"src": "8035:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 763,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:13",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 762,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:13",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 768,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 771,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:13",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 770,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:13",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 769,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "8087:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 776,
															"nodeType": "EmitStatement",
															"src": "8082:34:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:13",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:13"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:13"
									},
									"scope": 812,
									"src": "7711:422:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "8308:63:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 786,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "8325:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$569_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:13",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 565,
													"src": "8325:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 785,
												"id": 789,
												"nodeType": "Return",
												"src": "8318:46:13"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:13",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:13"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "8300:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 783,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:13"
									},
									"scope": 812,
									"src": "8243:128:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8543:64:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 797,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "8560:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$569_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:13",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 568,
													"src": "8560:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 796,
												"id": 800,
												"nodeType": "Return",
												"src": "8553:47:13"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:13",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:13"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8537:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:13"
									},
									"scope": 812,
									"src": "8487:120:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "8827:80:13",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8846:55:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8860:31:13",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nodeType": "YulIdentifier",
																"src": "8870:21:13"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 807,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 572,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:13",
														"valueSize": 1
													}
												],
												"id": 809,
												"nodeType": "InlineAssembly",
												"src": "8837:64:13"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:13",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:13"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "8795:30:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 805,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 569,
														"src": "8795:20:13"
													},
													"referencedDeclaration": 569,
													"src": "8795:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$569_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:13"
									},
									"scope": 812,
									"src": "8737:170:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 813,
							"src": "2349:6560:13",
							"usedErrors": [
								575,
								578
							],
							"usedEvents": [
								583
							]
						}
					],
					"src": "113:8797:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1551
						],
						"IERC1822Proxiable": [
							1248
						],
						"Initializable": [
							812
						],
						"UUPSUpgradeable": [
							994
						]
					},
					"id": 995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 995,
							"sourceUnit": 1249,
							"src": "141:88:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 815,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1248,
										"src": "149:17:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 818,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 995,
							"sourceUnit": 1552,
							"src": "230:84:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 817,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1551,
										"src": "238:12:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 820,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 995,
							"sourceUnit": 813,
							"src": "315:50:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 819,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 812,
										"src": "323:13:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 822,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "1023:13:14"
									},
									"id": 823,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:14"
								},
								{
									"baseName": {
										"id": 824,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1248,
										"src": "1038:17:14"
									},
									"id": 825,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:14"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 821,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:14",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 994,
							"linearizedBaseContracts": [
								994,
								1248,
								812
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:14",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 832,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "1128:48:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 827,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 830,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$994",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$994",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 829,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 828,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:14",
												"typeDescriptions": {}
											}
										},
										"id": 831,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:14",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 836,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:14",
									"nodeType": "VariableDeclaration",
									"scope": 994,
									"src": "1819:58:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 834,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 835,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:14",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 839,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:14"
									},
									"src": "1954:36:14"
								},
								{
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:14",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 844,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2104:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 841,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:14"
									},
									"src": "2069:49:14"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "2643:41:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 847,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2653:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:14"
											},
											{
												"id": 850,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:14"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:14",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 852,
									"name": "onlyProxy",
									"nameLocation": "2631:9:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:14"
									},
									"src": "2622:62:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "2914:48:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 855,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2924:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:14"
											},
											{
												"id": 858,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:14"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:14",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 860,
									"name": "notDelegated",
									"nameLocation": "2899:12:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:14"
									},
									"src": "2890:72:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "3028:7:14",
										"statements": []
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "3011:16:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:14"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:14"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:14"
									},
									"scope": 994,
									"src": "2968:67:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "3111:7:14",
										"statements": []
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 869,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 868,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "3094:16:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:14"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:14"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:14"
									},
									"scope": 994,
									"src": "3041:77:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1247
									],
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "3783:56:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 880,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "3800:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1551_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:14",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1278,
													"src": "3800:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 879,
												"id": 882,
												"nodeType": "Return",
												"src": "3793:39:14"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:14",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 876,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 875,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 860,
												"src": "3752:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:14"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:14"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "3774:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 877,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:14"
									},
									"scope": 994,
									"src": "3705:134:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "4263:109:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4291:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 894,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "4273:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4341:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "4360:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 898,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "4319:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:14"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:14",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 852,
												"src": "4253:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:14"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4184:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4211:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 888,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:14"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:14"
									},
									"scope": 994,
									"src": "4158:214:14",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "4644:267:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 910,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$994",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$994",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 908,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 912,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "4688:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 914,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "4749:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1551_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:14",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1309,
																"src": "4749:30:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 917,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "4785:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "4654:251:14",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "4844:61:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 920,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "4865:27:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "4858:36:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:14",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:14"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:14"
									},
									"scope": 994,
									"src": "4599:312:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "5080:161:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 932,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$994",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$994",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 930,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 934,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5111:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "5090:145:14",
												"trueBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "5119:116:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 936,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "5195:27:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 938,
															"nodeType": "RevertStatement",
															"src": "5188:36:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:14",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:14"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:14"
									},
									"scope": 994,
									"src": "5028:213:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:14",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "5651:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:14"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:14"
									},
									"scope": 994,
									"src": "5624:71:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "6137:453:14",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 981,
															"nodeType": "Block",
															"src": "6227:212:14",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 964,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 962,
																			"src": "6245:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 965,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "6253:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1551_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:14",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1278,
																			"src": "6253:32:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 973,
																	"nodeType": "IfStatement",
																	"src": "6241:120:14",
																	"trueBody": {
																		"id": 972,
																		"nodeType": "Block",
																		"src": "6287:74:14",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 969,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 962,
																							"src": "6341:4:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 968,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 844,
																						"src": "6312:28:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																							"typeString": "function (bytes32) pure"
																						}
																					},
																					"id": 970,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 971,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:14"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 977,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "6404:17:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 978,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 953,
																				"src": "6423:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 974,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "6374:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1551_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:14",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1370,
																			"src": "6374:29:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 980,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:14"
																}
															]
														},
														"errorName": "",
														"id": 982,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 963,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 962,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 982,
																	"src": "6213:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 961,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:14"
														},
														"src": "6204:235:14"
													},
													{
														"block": {
															"id": 989,
															"nodeType": "Block",
															"src": "6446:138:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 986,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "6555:17:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 983,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "6513:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1551_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:14",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1283,
																			"src": "6513:41:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																				"typeString": "function (address) pure"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 988,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:14"
																}
															]
														},
														"errorName": "",
														"id": 990,
														"nodeType": "TryCatchClause",
														"src": "6440:144:14"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 957,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "6169:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 956,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "6151:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1248_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1248",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:14",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1247,
														"src": "6151:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:14",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 991,
												"nodeType": "TryStatement",
												"src": "6147:437:14"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:14",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6083:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6110:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:14"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:14"
									},
									"scope": 994,
									"src": "6052:538:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 995,
							"src": "986:5606:14",
							"usedErrors": [
								575,
								578,
								839,
								844,
								1283,
								1296,
								1574,
								1577
							],
							"usedEvents": [
								583,
								1262
							]
						}
					],
					"src": "115:6478:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1032
						],
						"Initializable": [
							812
						]
					},
					"id": 1033,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 996,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 998,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1033,
							"sourceUnit": 813,
							"src": "126:63:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 997,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 812,
										"src": "134:13:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1000,
										"name": "Initializable",
										"nameLocations": [
											"728:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "728:13:15"
									},
									"id": 1001,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:15"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 999,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:15",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1032,
							"linearizedBaseContracts": [
								1032,
								812
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "800:7:15",
										"statements": []
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1004,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1003,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "783:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:15"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:15"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:15"
									},
									"scope": 1032,
									"src": "748:59:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "875:7:15",
										"statements": []
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1010,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1009,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "858:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:15"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:15"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:15"
									},
									"scope": 1032,
									"src": "813:69:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "949:34:15",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1018,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:15",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1020,
												"nodeType": "Return",
												"src": "959:17:15"
											}
										]
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:15"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "940:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:15"
									},
									"scope": 1032,
									"src": "887:96:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "1056:32:15",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1027,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:15",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1029,
												"nodeType": "Return",
												"src": "1066:15:15"
											}
										]
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:15"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1040:14:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:15"
									},
									"scope": 1032,
									"src": "989:99:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1033,
							"src": "688:402:15",
							"usedErrors": [
								575,
								578
							],
							"usedEvents": [
								583
							]
						}
					],
					"src": "101:990:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
					"exportedSymbols": {
						"ERC165CheckerUpgradeable": [
							1226
						],
						"IERC165Upgradeable": [
							1238
						]
					},
					"id": 1227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1034,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1227,
							"sourceUnit": 1239,
							"src": "146:34:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC165CheckerUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1036,
								"nodeType": "StructuredDocumentation",
								"src": "182:277:16",
								"text": " @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."
							},
							"fullyImplemented": true,
							"id": 1226,
							"linearizedBaseContracts": [
								1226
							],
							"name": "ERC165CheckerUpgradeable",
							"nameLocation": "468:24:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1039,
									"mutability": "constant",
									"name": "_INTERFACE_ID_INVALID",
									"nameLocation": "597:21:16",
									"nodeType": "VariableDeclaration",
									"scope": 1226,
									"src": "573:58:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1037,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "573:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786666666666666666",
										"id": 1038,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "621:10:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967295_by_1",
											"typeString": "int_const 4294967295"
										},
										"value": "0xffffffff"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "796:368:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1048,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "1030:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1050,
																			"name": "IERC165Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1238,
																			"src": "1044:18:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1238_$",
																				"typeString": "type(contract IERC165Upgradeable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1238_$",
																				"typeString": "type(contract IERC165Upgradeable)"
																			}
																		],
																		"id": 1049,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1039:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1039:24:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$1238",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1064:11:16",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1039:36:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1047,
															"name": "supportsERC165InterfaceUnchecked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "997:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "997:79:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1092:65:16",
														"subExpression": {
															"arguments": [
																{
																	"id": 1055,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "1126:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1056,
																	"name": "_INTERFACE_ID_INVALID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "1135:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 1054,
																"name": "supportsERC165InterfaceUnchecked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "1093:32:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (address,bytes4) view returns (bool)"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1093:64:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "997:160:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1060,
												"nodeType": "Return",
												"src": "978:179:16"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "638:83:16",
										"text": " @dev Returns true if `account` supports the {IERC165} interface."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsERC165",
									"nameLocation": "735:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "758:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "750:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:17:16"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "790:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "790:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:6:16"
									},
									"scope": 1226,
									"src": "726:438:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "1475:189:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1073,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "1591:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1072,
															"name": "supportsERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1576:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1576:23:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"id": 1076,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "1636:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1077,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "1645:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1075,
															"name": "supportsERC165InterfaceUnchecked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "1603:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1603:54:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1576:81:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1071,
												"id": 1080,
												"nodeType": "Return",
												"src": "1569:88:16"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "1170:207:16",
										"text": " @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1391:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1417:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1409:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1433:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1426:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1066,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1426:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:37:16"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1469:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:6:16"
									},
									"scope": 1226,
									"src": "1382:282:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "2188:560:16",
										"statements": [
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "interfaceIdsSupported",
														"nameLocation": "2311:21:16",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "2297:35:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[]"
														},
														"typeName": {
															"baseType": {
																"id": 1096,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "2297:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1097,
															"nodeType": "ArrayTypeName",
															"src": "2297:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1102,
																"name": "interfaceIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2346:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2359:6:16",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2346:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2335:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bool[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1099,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "2339:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1100,
															"nodeType": "ArrayTypeName",
															"src": "2339:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2297:69:16"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1107,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "2438:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1106,
														"name": "supportsERC165",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "2423:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:23:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "IfStatement",
												"src": "2419:284:16",
												"trueBody": {
													"id": 1133,
													"nodeType": "Block",
													"src": "2448:255:16",
													"statements": [
														{
															"body": {
																"id": 1131,
																"nodeType": "Block",
																"src": "2575:118:16",
																"statements": [
																	{
																		"expression": {
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1120,
																					"name": "interfaceIdsSupported",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1098,
																					"src": "2593:21:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																						"typeString": "bool[] memory"
																					}
																				},
																				"id": 1122,
																				"indexExpression": {
																					"id": 1121,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "2615:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2593:24:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1124,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "2653:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"baseExpression": {
																							"id": 1125,
																							"name": "interfaceIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1088,
																							"src": "2662:12:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						},
																						"id": 1127,
																						"indexExpression": {
																							"id": 1126,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1110,
																							"src": "2675:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2662:15:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 1123,
																					"name": "supportsERC165InterfaceUnchecked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1225,
																					"src": "2620:32:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																						"typeString": "function (address,bytes4) view returns (bool)"
																					}
																				},
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2620:58:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2593:85:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1130,
																		"nodeType": "ExpressionStatement",
																		"src": "2593:85:16"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1113,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "2545:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1114,
																		"name": "interfaceIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "2549:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																			"typeString": "bytes4[] memory"
																		}
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2562:6:16",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2549:19:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2545:23:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1132,
															"initializationExpression": {
																"assignments": [
																	1110
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1110,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2538:1:16",
																		"nodeType": "VariableDeclaration",
																		"scope": 1132,
																		"src": "2530:9:16",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1109,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2530:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1112,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2542:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2530:13:16"
															},
															"loopExpression": {
																"expression": {
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2570:3:16",
																	"subExpression": {
																		"id": 1117,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "2570:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1119,
																"nodeType": "ExpressionStatement",
																"src": "2570:3:16"
															},
															"nodeType": "ForStatement",
															"src": "2525:168:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1135,
													"name": "interfaceIdsSupported",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1098,
													"src": "2720:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1136,
												"nodeType": "Return",
												"src": "2713:28:16"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "1670:374:16",
										"text": " @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedInterfaces",
									"nameLocation": "2058:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2098:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2090:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "interfaceIds",
												"nameLocation": "2131:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2115:28:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1086,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "2115:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1087,
													"nodeType": "ArrayTypeName",
													"src": "2115:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:69:16"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2173:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1090,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "2173:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1091,
													"nodeType": "ArrayTypeName",
													"src": "2173:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:15:16"
									},
									"scope": 1226,
									"src": "2049:699:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "3190:436:16",
										"statements": [
											{
												"condition": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3246:24:16",
													"subExpression": {
														"arguments": [
															{
																"id": 1150,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "3262:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1149,
															"name": "supportsERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "3247:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3247:23:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1156,
												"nodeType": "IfStatement",
												"src": "3242:67:16",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "3272:37:16",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3293:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1148,
															"id": 1154,
															"nodeType": "Return",
															"src": "3286:12:16"
														}
													]
												}
											},
											{
												"body": {
													"id": 1179,
													"nodeType": "Block",
													"src": "3428:134:16",
													"statements": [
														{
															"condition": {
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3446:59:16",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1169,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1141,
																			"src": "3480:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1170,
																				"name": "interfaceIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1144,
																				"src": "3489:12:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"id": 1172,
																			"indexExpression": {
																				"id": 1171,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "3502:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3489:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1168,
																		"name": "supportsERC165InterfaceUnchecked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "3447:32:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																			"typeString": "function (address,bytes4) view returns (bool)"
																		}
																	},
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3447:58:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1178,
															"nodeType": "IfStatement",
															"src": "3442:110:16",
															"trueBody": {
																"id": 1177,
																"nodeType": "Block",
																"src": "3507:45:16",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3532:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1148,
																		"id": 1176,
																		"nodeType": "Return",
																		"src": "3525:12:16"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1161,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "3398:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1162,
															"name": "interfaceIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "3402:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3415:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3402:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3398:23:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1180,
												"initializationExpression": {
													"assignments": [
														1158
													],
													"declarations": [
														{
															"constant": false,
															"id": 1158,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3391:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 1180,
															"src": "3383:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1157,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3383:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1160,
													"initialValue": {
														"hexValue": "30",
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3383:13:16"
												},
												"loopExpression": {
													"expression": {
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3423:3:16",
														"subExpression": {
															"id": 1165,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "3423:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1167,
													"nodeType": "ExpressionStatement",
													"src": "3423:3:16"
												},
												"nodeType": "ForStatement",
												"src": "3378:184:16"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3615:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1148,
												"id": 1182,
												"nodeType": "Return",
												"src": "3608:11:16"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "2754:324:16",
										"text": " @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsAllInterfaces",
									"nameLocation": "3092:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3122:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "3114:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "interfaceIds",
												"nameLocation": "3147:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "3131:28:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1142,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "3131:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1143,
													"nodeType": "ArrayTypeName",
													"src": "3131:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:47:16"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "3184:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3184:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3183:6:16"
									},
									"scope": 1226,
									"src": "3083:543:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "4562:550:16",
										"statements": [
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "encodedParams",
														"nameLocation": "4609:13:16",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4596:26:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1194,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4596:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1203,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1198,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "4648:18:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1238_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4667:17:16",
																"memberName": "supportsInterface",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1237,
																"src": "4648:36:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function IERC165Upgradeable.supportsInterface(bytes4) view returns (bool)"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4685:8:16",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4648:45:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1201,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4695:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1196,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4625:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4629:18:16",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4625:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4625:82:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4596:111:16"
											},
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4754:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4749:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1204,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4749:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"nodeType": "VariableDeclarationStatement",
												"src": "4749:12:16"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "4779:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4771:18:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4771:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1209,
												"nodeType": "VariableDeclarationStatement",
												"src": "4771:18:16"
											},
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "4807:11:16",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4799:19:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4799:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"nodeType": "VariableDeclarationStatement",
												"src": "4799:19:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4837:203:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4851:97:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4873:5:16",
																		"type": "",
																		"value": "30000"
																	},
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "4880:7:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "encodedParams",
																				"nodeType": "YulIdentifier",
																				"src": "4893:13:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4908:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4889:24:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "encodedParams",
																				"nodeType": "YulIdentifier",
																				"src": "4921:13:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4915:5:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4915:20:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4937:4:16",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4943:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "4862:10:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4862:86:16"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "4851:7:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4961:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "4975:14:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:16:16"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "4961:10:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5004:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5025:4:16",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5019:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:11:16"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "5004:11:16"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1187,
														"isOffset": false,
														"isSlot": false,
														"src": "4880:7:16",
														"valueSize": 1
													},
													{
														"declaration": 1195,
														"isOffset": false,
														"isSlot": false,
														"src": "4893:13:16",
														"valueSize": 1
													},
													{
														"declaration": 1195,
														"isOffset": false,
														"isSlot": false,
														"src": "4921:13:16",
														"valueSize": 1
													},
													{
														"declaration": 1208,
														"isOffset": false,
														"isSlot": false,
														"src": "4961:10:16",
														"valueSize": 1
													},
													{
														"declaration": 1211,
														"isOffset": false,
														"isSlot": false,
														"src": "5004:11:16",
														"valueSize": 1
													},
													{
														"declaration": 1205,
														"isOffset": false,
														"isSlot": false,
														"src": "4851:7:16",
														"valueSize": 1
													}
												],
												"id": 1213,
												"nodeType": "InlineAssembly",
												"src": "4828:212:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1214,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "5057:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1215,
																"name": "returnSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "5068:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30783230",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5082:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "0x20"
															},
															"src": "5068:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5057:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "5090:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5104:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5090:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5057:48:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1193,
												"id": 1223,
												"nodeType": "Return",
												"src": "5050:55:16"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "3632:817:16",
										"text": " @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsERC165InterfaceUnchecked",
									"nameLocation": "4463:32:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4504:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4496:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4520:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4513:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4513:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4495:37:16"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4556:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4556:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:6:16"
									},
									"scope": 1226,
									"src": "4454:658:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1227,
							"src": "460:4654:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "121:4994:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1238
						]
					},
					"id": 1239,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1229,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:17",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1238,
							"linearizedBaseContracts": [
								1238
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:17",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "812:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:17"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "855:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:17"
									},
									"scope": 1238,
									"src": "785:76:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1239,
							"src": "405:458:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1248
						]
					},
					"id": 1249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1240,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1241,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:18",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1248,
							"linearizedBaseContracts": [
								1248
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:18",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:18"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "868:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:18"
									},
									"scope": 1248,
									"src": "820:57:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1249,
							"src": "343:536:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:18"
				},
				"id": 18
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1814
						],
						"ERC1967Utils": [
							1551
						],
						"IBeacon": [
							1561
						],
						"StorageSlot": [
							1924
						]
					},
					"id": 1552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 1562,
							"src": "140:46:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1251,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1561,
										"src": "148:7:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 1815,
							"src": "187:48:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1253,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1814,
										"src": "195:7:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 1925,
							"src": "236:56:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1255,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1924,
										"src": "244:11:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1257,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:19",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1551,
							"linearizedBaseContracts": [
								1551
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:19",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1262,
									"name": "Upgraded",
									"nameLocation": "739:8:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "748:30:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:19"
									},
									"src": "733:47:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:19",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1269,
									"name": "AdminChanged",
									"nameLocation": "864:12:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:19",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "877:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "900:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:19"
									},
									"src": "858:60:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:19",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1274,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "1009:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:19"
									},
									"src": "988:45:19"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:19",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1278,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:19",
									"nodeType": "VariableDeclaration",
									"scope": 1551,
									"src": "1279:114:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1276,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1277,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:19",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1283,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:19",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1509:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:19"
									},
									"src": "1474:59:19"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:19",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1288,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:19",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1630:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:19"
									},
									"src": "1604:41:19"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:19",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1293,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:19",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1744:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:19"
									},
									"src": "1717:43:19"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:19",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1296,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:19",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:19"
									},
									"src": "1853:26:19"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "2018:77:19",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1304,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "2062:19:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1302,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "2035:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1924_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:19",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1846,
															"src": "2035:26:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1820_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1820_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:19",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1819,
													"src": "2035:53:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1301,
												"id": 1307,
												"nodeType": "Return",
												"src": "2028:60:19"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:19",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:19"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "2009:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:19"
									},
									"scope": 1551,
									"src": "1957:138:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "2249:218:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1315,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "2263:17:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:19",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "2259:119:19",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "2299:79:19",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1321,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "2349:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1320,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "2320:28:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1323,
															"nodeType": "RevertStatement",
															"src": "2313:54:19"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1329,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "2414:19:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1326,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "2387:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1924_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:19",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1846,
																"src": "2387:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1820_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1820_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:19",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1819,
														"src": "2387:53:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1332,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "2443:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:19"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:19",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:19",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2214:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:19"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:19"
									},
									"scope": 1551,
									"src": "2186:281:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "2860:254:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1345,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "2889:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1344,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "2870:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1349,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "2931:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1348,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "2922:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "EmitStatement",
												"src": "2917:32:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1352,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "2964:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "3065:43:19",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1364,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "3079:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1366,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:19"
														}
													]
												},
												"id": 1368,
												"nodeType": "IfStatement",
												"src": "2960:148:19",
												"trueBody": {
													"id": 1363,
													"nodeType": "Block",
													"src": "2981:78:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1359,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "3024:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1360,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "3043:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1356,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "2995:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1814_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:19",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1733,
																	"src": "2995:28:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1362,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:19",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:19",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2805:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2832:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:19"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:19"
									},
									"scope": 1551,
									"src": "2779:335:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:19",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1374,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:19",
									"nodeType": "VariableDeclaration",
									"scope": 1551,
									"src": "3335:105:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1372,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "3844:68:19",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1382,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "3888:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1380,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "3861:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1924_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:19",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1846,
															"src": "3861:26:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1820_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1820_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:19",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1819,
													"src": "3861:44:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1385,
												"nodeType": "Return",
												"src": "3854:51:19"
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:19",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:19"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3835:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:19"
									},
									"scope": 1551,
									"src": "3792:120:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "4039:172:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1393,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "4053:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:19",
																"typeDescriptions": {}
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1407,
												"nodeType": "IfStatement",
												"src": "4049:91:19",
												"trueBody": {
													"id": 1406,
													"nodeType": "Block",
													"src": "4077:63:19",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:19",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1399,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "4098:19:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1405,
															"nodeType": "RevertStatement",
															"src": "4091:38:19"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1411,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "4176:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1408,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "4149:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1924_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:19",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1846,
																"src": "4149:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1820_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1820_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:19",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1819,
														"src": "4149:44:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1414,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "4196:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:19"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:19",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "4013:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:19"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:19"
									},
									"scope": 1551,
									"src": "3994:217:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "4379:85:19",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1425,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "4407:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1427,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "4419:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1424,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "4394:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "EmitStatement",
												"src": "4389:39:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1431,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "4448:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1430,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "4438:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:19"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:19",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "4352:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:19"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:19"
									},
									"scope": 1551,
									"src": "4331:133:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:19",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1439,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:19",
									"nodeType": "VariableDeclaration",
									"scope": 1551,
									"src": "4741:106:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1437,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1438,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "4963:69:19",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1447,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "5007:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1445,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "4980:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1924_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:19",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1846,
															"src": "4980:26:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1820_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1820_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:19",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1819,
													"src": "4980:45:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1450,
												"nodeType": "Return",
												"src": "4973:52:19"
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:19",
										"text": " @dev Returns the current beacon."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:19"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4954:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:19"
									},
									"scope": 1551,
									"src": "4910:122:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "5161:390:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1458,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "5175:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:19",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "5171:95:19",
												"trueBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "5203:63:19",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1464,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "5245:9:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1463,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "5224:20:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1466,
															"nodeType": "RevertStatement",
															"src": "5217:38:19"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1472,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "5303:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1469,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "5276:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1924_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:19",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1846,
																"src": "5276:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1820_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1820_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:19",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1819,
														"src": "5276:45:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1475,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "5324:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:19"
											},
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:19",
														"nodeType": "VariableDeclaration",
														"scope": 1497,
														"src": "5344:28:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1478,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:19",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1485,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1481,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "5383:9:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1480,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "5375:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1561_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1561",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:19",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1560,
														"src": "5375:33:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1486,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "5424:20:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:19",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1496,
												"nodeType": "IfStatement",
												"src": "5420:125:19",
												"trueBody": {
													"id": 1495,
													"nodeType": "Block",
													"src": "5463:82:19",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1492,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "5513:20:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1491,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "5484:28:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1494,
															"nodeType": "RevertStatement",
															"src": "5477:57:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:19",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "5134:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:19"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:19"
									},
									"scope": 1551,
									"src": "5114:437:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "6155:254:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1507,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "6176:9:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1506,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "6165:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1511,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "6216:9:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1510,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "6201:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "EmitStatement",
												"src": "6196:30:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1514,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "6241:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1533,
													"nodeType": "Block",
													"src": "6360:43:19",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1530,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "6374:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1532,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:19"
														}
													]
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "6237:166:19",
												"trueBody": {
													"id": 1529,
													"nodeType": "Block",
													"src": "6258:96:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1522,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1501,
																						"src": "6309:9:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1521,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1561,
																					"src": "6301:7:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1561_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1561",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:19",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1560,
																			"src": "6301:33:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1526,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "6338:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1518,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "6272:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1814_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:19",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1733,
																	"src": "6272:28:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1528,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:19",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "6108:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "6127:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:19"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:19"
									},
									"scope": 1551,
									"src": "6076:333:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "6634:86:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1540,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:19",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1548,
												"nodeType": "IfStatement",
												"src": "6644:70:19",
												"trueBody": {
													"id": 1547,
													"nodeType": "Block",
													"src": "6663:51:19",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1544,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "6684:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1546,
															"nodeType": "RevertStatement",
															"src": "6677:26:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:19",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:19"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:19"
									},
									"scope": 1551,
									"src": "6598:122:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1552,
							"src": "449:6273:19",
							"usedErrors": [
								1283,
								1288,
								1293,
								1296
							],
							"usedEvents": [
								1262,
								1269,
								1274
							]
						}
					],
					"src": "114:6609:19"
				},
				"id": 19
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1561
						]
					},
					"id": 1562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1554,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:20",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1561,
							"linearizedBaseContracts": [
								1561
							],
							"name": "IBeacon",
							"nameLocation": "224:7:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:20",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:20"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "460:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:20"
									},
									"scope": 1561,
									"src": "411:58:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1562,
							"src": "214:257:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:20"
				},
				"id": 20
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1814
						]
					},
					"id": 1815,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1564,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:21",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1814,
							"linearizedBaseContracts": [
								1814
							],
							"name": "Address",
							"nameLocation": "203:7:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:21",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1569,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "349:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:21"
									},
									"src": "316:50:21"
								},
								{
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:21",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1574,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "475:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:21"
									},
									"src": "452:39:21"
								},
								{
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:21",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1577,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:21"
									},
									"src": "591:24:21"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "1602:260:21",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1587,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1814",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1814",
																		"typeString": "library Address"
																	}
																],
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1585,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:21",
																	"typeDescriptions": {}
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:21",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1590,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "1640:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1600,
												"nodeType": "IfStatement",
												"src": "1612:109:21",
												"trueBody": {
													"id": 1599,
													"nodeType": "Block",
													"src": "1648:73:21",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1595,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1814",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1814",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:21",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1592,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "1669:26:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1598,
															"nodeType": "RevertStatement",
															"src": "1662:48:21"
														}
													]
												}
											},
											{
												"assignments": [
													1602,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:21",
														"nodeType": "VariableDeclaration",
														"scope": 1617,
														"src": "1732:12:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1601,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1609,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:21",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1603,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "1750:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:21",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1605,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "1772:6:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:21"
											},
											{
												"condition": {
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:21",
													"subExpression": {
														"id": 1610,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "1798:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1616,
												"nodeType": "IfStatement",
												"src": "1793:63:21",
												"trueBody": {
													"id": 1615,
													"nodeType": "Block",
													"src": "1807:49:21",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1612,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "1828:15:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1614,
															"nodeType": "RevertStatement",
															"src": "1821:24:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:21",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "1550:25:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:21",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "1577:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:21"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:21"
									},
									"scope": 1814,
									"src": "1531:331:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "2794:62:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1629,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "2833:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "2841:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1628,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "2811:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1627,
												"id": 1633,
												"nodeType": "Return",
												"src": "2804:45:21"
											}
										]
									},
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:21",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2727:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2743:17:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:21"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2780:12:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:21"
									},
									"scope": 1814,
									"src": "2705:151:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "3293:279:21",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1649,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1814",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1814",
																		"typeString": "library Address"
																	}
																],
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1647,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:21",
																	"typeDescriptions": {}
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:21",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1652,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "3331:5:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1662,
												"nodeType": "IfStatement",
												"src": "3303:108:21",
												"trueBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "3338:73:21",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1657,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1814",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1814",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1655,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:21",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1654,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "3359:26:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1660,
															"nodeType": "RevertStatement",
															"src": "3352:48:21"
														}
													]
												}
											},
											{
												"assignments": [
													1664,
													1666
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:21",
														"nodeType": "VariableDeclaration",
														"scope": 1680,
														"src": "3421:12:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1663,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:21",
														"nodeType": "VariableDeclaration",
														"scope": 1680,
														"src": "3435:23:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1665,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1673,
												"initialValue": {
													"arguments": [
														{
															"id": 1671,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "3488:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1667,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "3462:6:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:21",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1669,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "3481:5:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "3537:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3545:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1677,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "3554:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1674,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "3510:26:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1679,
												"nodeType": "Return",
												"src": "3503:62:21"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:21",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "3211:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "3227:17:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "3246:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:21"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "3279:12:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:21"
									},
									"scope": 1814,
									"src": "3180:392:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "3811:154:21",
										"statements": [
											{
												"assignments": [
													1692,
													1694
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:21",
														"nodeType": "VariableDeclaration",
														"scope": 1706,
														"src": "3822:12:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1691,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1694,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:21",
														"nodeType": "VariableDeclaration",
														"scope": 1706,
														"src": "3836:23:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1693,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"arguments": [
														{
															"id": 1697,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "3881:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1695,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "3863:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:21",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1701,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "3930:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1702,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "3938:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1703,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "3947:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1700,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "3903:26:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1705,
												"nodeType": "Return",
												"src": "3896:62:21"
											}
										]
									},
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:21",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3739:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3755:17:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:21"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3797:12:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:21"
									},
									"scope": 1814,
									"src": "3711:254:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "4203:156:21",
										"statements": [
											{
												"assignments": [
													1718,
													1720
												],
												"declarations": [
													{
														"constant": false,
														"id": 1718,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:21",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "4214:12:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1717,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1720,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:21",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "4228:23:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1719,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1725,
												"initialValue": {
													"arguments": [
														{
															"id": 1723,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "4275:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1721,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "4255:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:21",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "4324:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "4332:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1729,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "4341:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1726,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "4297:26:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1731,
												"nodeType": "Return",
												"src": "4290:62:21"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:21",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "4136:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "4152:17:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:21"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "4189:12:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:21"
									},
									"scope": 1814,
									"src": "4106:253:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "4783:424:21",
										"statements": [
											{
												"condition": {
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:21",
													"subExpression": {
														"id": 1745,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "4798:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1770,
													"nodeType": "Block",
													"src": "4857:344:21",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1752,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1740,
																			"src": "5045:10:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:21",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1756,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "5071:6:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:21",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:21",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1767,
															"nodeType": "IfStatement",
															"src": "5041:119:21",
															"trueBody": {
																"id": 1766,
																"nodeType": "Block",
																"src": "5096:64:21",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1763,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1736,
																					"src": "5138:6:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1762,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1574,
																				"src": "5121:16:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1765,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:21"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1768,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "5180:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1744,
															"id": 1769,
															"nodeType": "Return",
															"src": "5173:17:21"
														}
													]
												},
												"id": 1771,
												"nodeType": "IfStatement",
												"src": "4793:408:21",
												"trueBody": {
													"id": 1751,
													"nodeType": "Block",
													"src": "4807:44:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1748,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1740,
																		"src": "4829:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1747,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "4821:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1750,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:21",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "4670:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "4694:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "4716:23:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:21"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "4769:12:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:21"
									},
									"scope": 1814,
									"src": "4625:582:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "5509:122:21",
										"statements": [
											{
												"condition": {
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:21",
													"subExpression": {
														"id": 1783,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "5524:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1792,
													"nodeType": "Block",
													"src": "5583:42:21",
													"statements": [
														{
															"expression": {
																"id": 1790,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "5604:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1782,
															"id": 1791,
															"nodeType": "Return",
															"src": "5597:17:21"
														}
													]
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "5519:106:21",
												"trueBody": {
													"id": 1789,
													"nodeType": "Block",
													"src": "5533:44:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1786,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "5555:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1785,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "5547:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1788,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:21",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5433:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5447:23:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:21"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5495:12:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1780,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:21"
									},
									"scope": 1814,
									"src": "5407:224:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "5798:461:21",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1801,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "5874:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:21",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1810,
													"nodeType": "Block",
													"src": "6204:49:21",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1807,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "6225:15:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1809,
															"nodeType": "RevertStatement",
															"src": "6218:24:21"
														}
													]
												},
												"id": 1811,
												"nodeType": "IfStatement",
												"src": "5870:383:21",
												"trueBody": {
													"id": 1806,
													"nodeType": "Block",
													"src": "5897:301:21",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "6055:133:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:21"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:21"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:21",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:21"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:21"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1798,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:21",
																	"valueSize": 1
																},
																{
																	"declaration": 1798,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:21",
																	"valueSize": 1
																}
															],
															"id": 1805,
															"nodeType": "InlineAssembly",
															"src": "6046:142:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:21",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "5760:23:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1797,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:21"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:21"
									},
									"scope": 1814,
									"src": "5743:516:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1815,
							"src": "195:6066:21",
							"usedErrors": [
								1569,
								1574,
								1577
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:21"
				},
				"id": 21
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1924
						]
					},
					"id": 1925,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1816,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1817,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:22",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1924,
							"linearizedBaseContracts": [
								1924
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1820,
									"members": [
										{
											"constant": false,
											"id": 1819,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:22",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "1300:13:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1818,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:22",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:22",
									"nodeType": "StructDefinition",
									"scope": 1924,
									"src": "1271:49:22",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1823,
									"members": [
										{
											"constant": false,
											"id": 1822,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:22",
											"nodeType": "VariableDeclaration",
											"scope": 1823,
											"src": "1355:10:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1821,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:22",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:22",
									"nodeType": "StructDefinition",
									"scope": 1924,
									"src": "1326:46:22",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1826,
									"members": [
										{
											"constant": false,
											"id": 1825,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:22",
											"nodeType": "VariableDeclaration",
											"scope": 1826,
											"src": "1407:13:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1824,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:22",
									"nodeType": "StructDefinition",
									"scope": 1924,
									"src": "1378:49:22",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1829,
									"members": [
										{
											"constant": false,
											"id": 1828,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:22",
											"nodeType": "VariableDeclaration",
											"scope": 1829,
											"src": "1462:13:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1827,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:22",
									"nodeType": "StructDefinition",
									"scope": 1924,
									"src": "1433:49:22",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1832,
									"members": [
										{
											"constant": false,
											"id": 1831,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:22",
											"nodeType": "VariableDeclaration",
											"scope": 1832,
											"src": "1516:12:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1830,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:22",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:22",
									"nodeType": "StructDefinition",
									"scope": 1924,
									"src": "1488:47:22",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1835,
									"members": [
										{
											"constant": false,
											"id": 1834,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:22",
											"nodeType": "VariableDeclaration",
											"scope": 1835,
											"src": "1568:11:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1833,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:22",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:22",
									"nodeType": "StructDefinition",
									"scope": 1924,
									"src": "1541:45:22",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "1768:106:22",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1830:38:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1844:14:22",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1854:4:22"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:22"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1842,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:22",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1838,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:22",
														"valueSize": 1
													}
												],
												"id": 1844,
												"nodeType": "InlineAssembly",
												"src": "1821:47:22"
											}
										]
									},
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:22",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1708:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1837,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:22"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:22",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1745:21:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1820_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1840,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:22"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1820,
														"src": "1745:11:22"
													},
													"referencedDeclaration": 1820,
													"src": "1745:11:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1820_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:22"
									},
									"scope": 1924,
									"src": "1684:190:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "2056:106:22",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2118:38:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2132:14:22",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2142:4:22"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:22"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1853,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:22",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1849,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:22",
														"valueSize": 1
													}
												],
												"id": 1855,
												"nodeType": "InlineAssembly",
												"src": "2109:47:22"
											}
										]
									},
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:22",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "1996:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1848,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:22"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:22",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2033:21:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1823_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1851,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:22"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1823,
														"src": "2033:11:22"
													},
													"referencedDeclaration": 1823,
													"src": "2033:11:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1823_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:22"
									},
									"scope": 1924,
									"src": "1972:190:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "2344:106:22",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2406:38:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2420:14:22",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2430:4:22"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:22"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1864,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:22",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1860,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:22",
														"valueSize": 1
													}
												],
												"id": 1866,
												"nodeType": "InlineAssembly",
												"src": "2397:47:22"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:22",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2284:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:22"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:22",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2321:21:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1826_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1862,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:22"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1826,
														"src": "2321:11:22"
													},
													"referencedDeclaration": 1826,
													"src": "2321:11:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1826_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:22"
									},
									"scope": 1924,
									"src": "2260:190:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "2632:106:22",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2694:38:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2708:14:22",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2718:4:22"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:22"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1875,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:22",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:22",
														"valueSize": 1
													}
												],
												"id": 1877,
												"nodeType": "InlineAssembly",
												"src": "2685:47:22"
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:22",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "2572:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:22"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:22",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "2609:21:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1829_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1873,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:22"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1829,
														"src": "2609:11:22"
													},
													"referencedDeclaration": 1829,
													"src": "2609:11:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1829_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:22"
									},
									"scope": 1924,
									"src": "2548:190:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "2917:106:22",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2979:38:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2993:14:22",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3003:4:22"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:22"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1886,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:22",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1882,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:22",
														"valueSize": 1
													}
												],
												"id": 1888,
												"nodeType": "InlineAssembly",
												"src": "2970:47:22"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:22",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2858:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:22"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:22",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2895:20:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1832_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1884,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:22"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1832,
														"src": "2895:10:22"
													},
													"referencedDeclaration": 1832,
													"src": "2895:10:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1832_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:22"
									},
									"scope": 1924,
									"src": "2835:188:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "3225:112:22",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3287:44:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3301:20:22",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3311:10:22"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:22"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1897,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:22",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1893,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:22",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1899,
												"nodeType": "InlineAssembly",
												"src": "3278:53:22"
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:22",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:22",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "3158:20:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:22"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:22",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "3203:20:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1832_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1895,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:22"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1832,
														"src": "3203:10:22"
													},
													"referencedDeclaration": 1832,
													"src": "3203:10:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1832_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:22"
									},
									"scope": 1924,
									"src": "3135:202:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "3513:106:22",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3575:38:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3589:14:22",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3599:4:22"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:22"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1908,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:22",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1904,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:22",
														"valueSize": 1
													}
												],
												"id": 1910,
												"nodeType": "InlineAssembly",
												"src": "3566:47:22"
											}
										]
									},
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:22",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "3455:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1903,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:22"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:22",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "3492:19:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1835_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1907,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1906,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:22"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1835,
														"src": "3492:9:22"
													},
													"referencedDeclaration": 1835,
													"src": "3492:9:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1835_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:22"
									},
									"scope": 1924,
									"src": "3433:186:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "3816:112:22",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3878:44:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3892:20:22",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3902:10:22"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:22"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1919,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:22",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1915,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:22",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1921,
												"nodeType": "InlineAssembly",
												"src": "3869:53:22"
											}
										]
									},
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:22",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:22",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "3751:19:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:22"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:22",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "3795:19:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1835_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1917,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:22"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1835,
														"src": "3795:9:22"
													},
													"referencedDeclaration": 1835,
													"src": "3795:9:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1835_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:22"
									},
									"scope": 1924,
									"src": "3729:199:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1925,
							"src": "1245:2685:22",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:22"
				},
				"id": 22
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1936
						]
					},
					"id": 1937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1926,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:23"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1927,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:23",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1936,
							"linearizedBaseContracts": [
								1936
							],
							"name": "IERC165",
							"nameLocation": "431:7:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:23",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:23",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "817:18:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1929,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:23"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "860:4:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:23"
									},
									"scope": 1936,
									"src": "790:76:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1937,
							"src": "421:447:23",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:23"
				},
				"id": 23
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
					"exportedSymbols": {
						"IDAO": [
							2088
						]
					},
					"id": 2089,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:24"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDAO",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1939,
								"nodeType": "StructuredDocumentation",
								"src": "76:189:24",
								"text": "@title IDAO\n @author Aragon Association - 2022-2023\n @notice The interface required for DAOs within the Aragon App DAO framework.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": false,
							"id": 2088,
							"linearizedBaseContracts": [
								2088
							],
							"name": "IDAO",
							"nameLocation": "275:4:24",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDAO.Action",
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "287:302:24",
										"text": "@notice The action struct to be consumed by the DAO's `execute` function resulting in an external call.\n @param to The address to call.\n @param value The native token value to be sent with the call.\n @param data The bytes-encoded function selector and calldata for the call."
									},
									"id": 1947,
									"members": [
										{
											"constant": false,
											"id": 1942,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "628:2:24",
											"nodeType": "VariableDeclaration",
											"scope": 1947,
											"src": "620:10:24",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1941,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "620:7:24",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1944,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "649:5:24",
											"nodeType": "VariableDeclaration",
											"scope": 1947,
											"src": "641:13:24",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "641:7:24",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1946,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "671:4:24",
											"nodeType": "VariableDeclaration",
											"scope": 1947,
											"src": "665:10:24",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1945,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "665:5:24",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Action",
									"nameLocation": "602:6:24",
									"nodeType": "StructDefinition",
									"scope": 2088,
									"src": "595:88:24",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "691:505:24",
										"text": "@notice Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\n @param _where The address of the contract.\n @param _who The address of a EOA or contract to give the permissions.\n @param _permissionId The permission identifier.\n @param _data The optional data passed to the `PermissionCondition` registered.\n @return Returns true if the address has permission, false if not."
									},
									"functionSelector": "fdef9106",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasPermission",
									"nameLocation": "1211:13:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "_where",
												"nameLocation": "1243:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1235:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "1268:4:24",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1260:12:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "_permissionId",
												"nameLocation": "1291:13:24",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1283:21:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1328:5:24",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1315:18:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1315:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:116:24"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1364:4:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:6:24"
									},
									"scope": 2088,
									"src": "1202:168:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "1378:126:24",
										"text": "@notice Updates the DAO metadata (e.g., an IPFS hash).\n @param _metadata The IPFS hash of the new metadata object."
									},
									"functionSelector": "ee57e36f",
									"id": 1967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMetadata",
									"nameLocation": "1519:11:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "1546:9:24",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1531:24:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1531:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:26:24"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:0:24"
									},
									"scope": 2088,
									"src": "1510:56:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "1574:120:24",
										"text": "@notice Emitted when the DAO metadata is updated.\n @param metadata The IPFS hash of the new metadata object."
									},
									"eventSelector": "bb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed",
									"id": 1972,
									"name": "MetadataSet",
									"nameLocation": "1706:11:24",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1724:8:24",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "1718:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1718:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:16:24"
									},
									"src": "1700:34:24"
								},
								{
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "1742:869:24",
										"text": "@notice Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\n @param _callId The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\n @param _actions The array of actions.\n @param _allowFailureMap A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\n @return The array of results obtained from the executed actions in `bytes`.\n @return The resulting failure map containing the actions have actually failed."
									},
									"functionSelector": "c71bf324",
									"id": 1989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "2626:7:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "_callId",
												"nameLocation": "2652:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2644:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "_actions",
												"nameLocation": "2686:8:24",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2670:24:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Action_$1947_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDAO.Action[]"
												},
												"typeName": {
													"baseType": {
														"id": 1977,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1976,
															"name": "Action",
															"nameLocations": [
																"2670:6:24"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1947,
															"src": "2670:6:24"
														},
														"referencedDeclaration": 1947,
														"src": "2670:6:24",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Action_$1947_storage_ptr",
															"typeString": "struct IDAO.Action"
														}
													},
													"id": 1978,
													"nodeType": "ArrayTypeName",
													"src": "2670:8:24",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Action_$1947_storage_$dyn_storage_ptr",
														"typeString": "struct IDAO.Action[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "_allowFailureMap",
												"nameLocation": "2713:16:24",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2705:24:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:103:24"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2755:14:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1983,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2755:5:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1984,
													"nodeType": "ArrayTypeName",
													"src": "2755:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2771:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:25:24"
									},
									"scope": 2088,
									"src": "2617:163:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "2788:618:24",
										"text": "@notice Emitted when a proposal is executed.\n @param actor The address of the caller.\n @param callId The ID of the call.\n @param actions The array of actions executed.\n @param allowFailureMap The allow failure map encoding which actions are allowed to fail.\n @param failureMap The failure map encoding which actions have failed.\n @param execResults The array with the results of the executed actions.\n @dev The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce."
									},
									"eventSelector": "d4e57c2049f004fb297ef78591cd409503ceb6b2c722d7ffed032fc99e5f3b58",
									"id": 2007,
									"name": "Executed",
									"nameLocation": "3418:8:24",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"indexed": true,
												"mutability": "mutable",
												"name": "actor",
												"nameLocation": "3453:5:24",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3437:21:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"indexed": false,
												"mutability": "mutable",
												"name": "callId",
												"nameLocation": "3477:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3469:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1993,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"indexed": false,
												"mutability": "mutable",
												"name": "actions",
												"nameLocation": "3503:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3494:16:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Action_$1947_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDAO.Action[]"
												},
												"typeName": {
													"baseType": {
														"id": 1996,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1995,
															"name": "Action",
															"nameLocations": [
																"3494:6:24"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1947,
															"src": "3494:6:24"
														},
														"referencedDeclaration": 1947,
														"src": "3494:6:24",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Action_$1947_storage_ptr",
															"typeString": "struct IDAO.Action"
														}
													},
													"id": 1997,
													"nodeType": "ArrayTypeName",
													"src": "3494:8:24",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Action_$1947_storage_$dyn_storage_ptr",
														"typeString": "struct IDAO.Action[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowFailureMap",
												"nameLocation": "3529:15:24",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3521:23:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"indexed": false,
												"mutability": "mutable",
												"name": "failureMap",
												"nameLocation": "3563:10:24",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3555:18:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"indexed": false,
												"mutability": "mutable",
												"name": "execResults",
												"nameLocation": "3592:11:24",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3584:19:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2003,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "3584:5:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2004,
													"nodeType": "ArrayTypeName",
													"src": "3584:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:184:24"
									},
									"src": "3412:199:24"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "3619:282:24",
										"text": "@notice Emitted when a standard callback is registered.\n @param interfaceId The ID of the interface.\n @param callbackSelector The selector of the callback function.\n @param magicNumber The magic number to be registered for the callback function selector."
									},
									"eventSelector": "fc72fd547553f7a663e0048e590afc9c47b56a4242e960f31cf4c62e23d308b9",
									"id": 2016,
									"name": "StandardCallbackRegistered",
									"nameLocation": "3913:26:24",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"indexed": false,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3957:11:24",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "3950:18:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2009,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3950:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"indexed": false,
												"mutability": "mutable",
												"name": "callbackSelector",
												"nameLocation": "3986:16:24",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "3979:23:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2011,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3979:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"indexed": false,
												"mutability": "mutable",
												"name": "magicNumber",
												"nameLocation": "4020:11:24",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "4013:18:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2013,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4013:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3939:99:24"
									},
									"src": "3907:132:24"
								},
								{
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "4047:301:24",
										"text": "@notice Deposits (native) tokens to the DAO contract with a reference string.\n @param _token The address of the token or address(0) in case of the native token.\n @param _amount The amount of tokens to deposit.\n @param _reference The reference describing the deposit reason."
									},
									"functionSelector": "bfe07da6",
									"id": 2026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "4363:7:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4379:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "4371:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4395:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "4387:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "_reference",
												"nameLocation": "4420:10:24",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "4404:26:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4404:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:61:24"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4448:0:24"
									},
									"scope": 2088,
									"src": "4354:95:24",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "4457:301:24",
										"text": "@notice Emitted when a token deposit has been made to the DAO.\n @param sender The address of the sender.\n @param token The address of the deposited token.\n @param amount The amount of tokens deposited.\n @param _reference The reference describing the deposit reason."
									},
									"eventSelector": "2bc500cf071be2d1c1458ed6ff484cd4db4345ada8943dee7ff29e7af3558f76",
									"id": 2037,
									"name": "Deposited",
									"nameLocation": "4770:9:24",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4806:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "4790:22:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4839:5:24",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "4823:21:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4863:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "4855:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4855:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"indexed": false,
												"mutability": "mutable",
												"name": "_reference",
												"nameLocation": "4887:10:24",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "4880:17:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4880:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4779:125:24"
									},
									"src": "4764:141:24"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "4913:403:24",
										"text": "@notice Emitted when a native token deposit has been made to the DAO.\n @dev This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\n @param sender The address of the sender.\n @param amount The amount of native tokens deposited."
									},
									"eventSelector": "62c2c8e34665db7c56b2cabd7f5fb9702ccd352ffa8150147e450797e9f8e8f3",
									"id": 2044,
									"name": "NativeTokenDeposited",
									"nameLocation": "5328:20:24",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5357:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "5349:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5349:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5373:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "5365:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5348:32:24"
									},
									"src": "5322:59:24"
								},
								{
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "5389:141:24",
										"text": "@notice Setter for the trusted forwarder verifying the meta transaction.\n @param _trustedForwarder The trusted forwarder address."
									},
									"functionSelector": "da742228",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTrustedForwarder",
									"nameLocation": "5545:19:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "_trustedForwarder",
												"nameLocation": "5573:17:24",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "5565:25:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:27:24"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5600:0:24"
									},
									"scope": 2088,
									"src": "5536:65:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "5609:124:24",
										"text": "@notice Getter for the trusted forwarder verifying the meta transaction.\n @return The trusted forwarder address."
									},
									"functionSelector": "ce1b815f",
									"id": 2056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedForwarder",
									"nameLocation": "5748:19:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5767:2:24"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "5793:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5793:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:9:24"
									},
									"scope": 2088,
									"src": "5739:63:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "5810:119:24",
										"text": "@notice Emitted when a new TrustedForwarder is set on the DAO.\n @param forwarder the new forwarder address."
									},
									"eventSelector": "d91237492a9e30cd2faf361fc103998a382ff0ec2b1b07dc1cbebb76ae2f1ea2",
									"id": 2061,
									"name": "TrustedForwarderSet",
									"nameLocation": "5941:19:24",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"indexed": false,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "5969:9:24",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "5961:17:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:19:24"
									},
									"src": "5935:45:24"
								},
								{
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "5988:381:24",
										"text": "@notice Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\n @param _hash The hash of the data to be signed.\n @param _signature The signature byte array associated with `_hash`.\n @return Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not."
									},
									"functionSelector": "1626ba7e",
									"id": 2071,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "6384:16:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "6409:5:24",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "6401:13:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2063,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "6429:10:24",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "6416:23:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6416:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6400:40:24"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "6459:6:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2068,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6459:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6458:8:24"
									},
									"scope": 2088,
									"src": "6375:92:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "6475:388:24",
										"text": "@notice Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\n @param _interfaceId The ID of the interface.\n @param _callbackSelector The selector of the callback function.\n @param _magicNumber The magic number to be registered for the function signature."
									},
									"functionSelector": "c4a50145",
									"id": 2081,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerStandardCallback",
									"nameLocation": "6878:24:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "_interfaceId",
												"nameLocation": "6920:12:24",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "6913:19:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2073,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6913:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "_callbackSelector",
												"nameLocation": "6950:17:24",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "6943:24:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "_magicNumber",
												"nameLocation": "6985:12:24",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "6978:19:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2077,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6978:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6902:102:24"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7013:0:24"
									},
									"scope": 2088,
									"src": "6869:145:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2082,
										"nodeType": "StructuredDocumentation",
										"src": "7022:159:24",
										"text": "@notice Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\n @dev Introduced in v1.0.0. Removed in v1.4.0."
									},
									"functionSelector": "3e2ab0d9",
									"id": 2087,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSignatureValidator",
									"nameLocation": "7196:21:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "7218:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:9:24"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7235:0:24"
									},
									"scope": 2088,
									"src": "7187:49:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2089,
							"src": "265:6974:24",
							"usedErrors": [],
							"usedEvents": [
								1972,
								2007,
								2016,
								2037,
								2044,
								2061
							]
						}
					],
					"src": "49:7192:24"
				},
				"id": 24
			},
			"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1032
						],
						"DaoAuthorizableUpgradeable": [
							2153
						],
						"IDAO": [
							2088
						],
						"_auth": [
							2203
						]
					},
					"id": 2154,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2090,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:25"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"id": 2092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2154,
							"sourceUnit": 1033,
							"src": "76:100:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2091,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "84:18:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../dao/IDAO.sol",
							"id": 2094,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2154,
							"sourceUnit": 2089,
							"src": "180:40:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2093,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2088,
										"src": "188:4:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/utils/auth.sol",
							"file": "../../utils/auth.sol",
							"id": 2096,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2154,
							"sourceUnit": 2204,
							"src": "222:43:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2095,
										"name": "_auth",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2203,
										"src": "230:5:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2098,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"737:18:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1032,
										"src": "737:18:25"
									},
									"id": 2099,
									"nodeType": "InheritanceSpecifier",
									"src": "737:18:25"
								}
							],
							"canonicalName": "DaoAuthorizableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2097,
								"nodeType": "StructuredDocumentation",
								"src": "269:420:25",
								"text": "@title DaoAuthorizableUpgradeable\n @author Aragon Association - 2022-2023\n @notice An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.\n @dev Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 2153,
							"linearizedBaseContracts": [
								2153,
								1032,
								812
							],
							"name": "DaoAuthorizableUpgradeable",
							"nameLocation": "707:26:25",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "763:80:25",
										"text": "@notice The associated DAO managing the permissions of inheriting contracts."
									},
									"id": 2103,
									"mutability": "mutable",
									"name": "dao_",
									"nameLocation": "862:4:25",
									"nodeType": "VariableDeclaration",
									"scope": 2153,
									"src": "849:17:25",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDAO_$2088",
										"typeString": "contract IDAO"
									},
									"typeName": {
										"id": 2102,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2101,
											"name": "IDAO",
											"nameLocations": [
												"849:4:25"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2088,
											"src": "849:4:25"
										},
										"referencedDeclaration": 2088,
										"src": "849:4:25",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDAO_$2088",
											"typeString": "contract IDAO"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "1077:30:25",
										"statements": [
											{
												"expression": {
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2112,
														"name": "dao_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "1088:4:25",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$2088",
															"typeString": "contract IDAO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2113,
														"name": "_dao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "1095:4:25",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$2088",
															"typeString": "contract IDAO"
														}
													},
													"src": "1088:11:25",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2088",
														"typeString": "contract IDAO"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "1088:11:25"
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "875:116:25",
										"text": "@notice Initializes the contract by setting the associated DAO.\n @param _dao The associated DAO address."
									},
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2110,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2109,
												"name": "onlyInitializing",
												"nameLocations": [
													"1060:16:25"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "1060:16:25"
											},
											"nodeType": "ModifierInvocation",
											"src": "1060:16:25"
										}
									],
									"name": "__DaoAuthorizableUpgradeable_init",
									"nameLocation": "1006:33:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "_dao",
												"nameLocation": "1045:4:25",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1040:9:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2088",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 2106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2105,
														"name": "IDAO",
														"nameLocations": [
															"1040:4:25"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "1040:4:25"
													},
													"referencedDeclaration": 2088,
													"src": "1040:4:25",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2088",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:11:25"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:0:25"
									},
									"scope": 2153,
									"src": "997:110:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "1235:30:25",
										"statements": [
											{
												"expression": {
													"id": 2124,
													"name": "dao_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2103,
													"src": "1253:4:25",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2088",
														"typeString": "contract IDAO"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2125,
												"nodeType": "Return",
												"src": "1246:11:25"
											}
										]
									},
									"documentation": {
										"id": 2118,
										"nodeType": "StructuredDocumentation",
										"src": "1115:72:25",
										"text": "@notice Returns the DAO contract.\n @return The DAO contract."
									},
									"functionSelector": "4162169f",
									"id": 2127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dao",
									"nameLocation": "1202:3:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:2:25"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "1229:4:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2088",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 2121,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2120,
														"name": "IDAO",
														"nameLocations": [
															"1229:4:25"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "1229:4:25"
													},
													"referencedDeclaration": 2088,
													"src": "1229:4:25",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2088",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:6:25"
									},
									"scope": 2153,
									"src": "1193:72:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "1599:98:25",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2133,
															"name": "dao_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "1616:4:25",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															}
														},
														{
															"arguments": [
																{
																	"id": 2136,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1630:4:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DaoAuthorizableUpgradeable_$2153",
																		"typeString": "contract DaoAuthorizableUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DaoAuthorizableUpgradeable_$2153",
																		"typeString": "contract DaoAuthorizableUpgradeable"
																	}
																],
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1622:7:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2134,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1622:7:25",
																	"typeDescriptions": {}
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1622:13:25",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2138,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "1637:10:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1637:12:25",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2140,
															"name": "_permissionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "1651:13:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2141,
																"name": "_msgData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "1666:8:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
																	"typeString": "function () view returns (bytes calldata)"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1666:10:25",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2132,
														"name": "_auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "1610:5:25",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IDAO_$2088_$_t_address_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (contract IDAO,address,address,bytes32,bytes calldata) view"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1610:67:25",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "1610:67:25"
											},
											{
												"id": 2145,
												"nodeType": "PlaceholderStatement",
												"src": "1688:1:25"
											}
										]
									},
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "1273:283:25",
										"text": "@notice A modifier to make functions on inheriting contracts authorized. Permissions to call the function are checked through the associated DAO's permission manager.\n @param _permissionId The permission identifier required to call the method this modifier is applied to."
									},
									"id": 2147,
									"name": "auth",
									"nameLocation": "1571:4:25",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "_permissionId",
												"nameLocation": "1584:13:25",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1576:21:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:23:25"
									},
									"src": "1562:135:25",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "1705:273:25",
										"text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
									},
									"id": 2152,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "2004:5:25",
									"nodeType": "VariableDeclaration",
									"scope": 2153,
									"src": "1984:25:25",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 2149,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1984:7:25",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2151,
										"length": {
											"hexValue": "3439",
											"id": 2150,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1992:2:25",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "1984:11:25",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2154,
							"src": "689:1324:25",
							"usedErrors": [
								575,
								578
							],
							"usedEvents": [
								583
							]
						}
					],
					"src": "49:1966:25"
				},
				"id": 25
			},
			"packages/contracts/src/core/utils/auth.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/core/utils/auth.sol",
					"exportedSymbols": {
						"DaoUnauthorized": [
							2168
						],
						"IDAO": [
							2088
						],
						"_auth": [
							2203
						]
					},
					"id": 2204,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:26"
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../dao/IDAO.sol",
							"id": 2157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2204,
							"sourceUnit": 2089,
							"src": "76:37:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2156,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2088,
										"src": "84:4:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 2158,
								"nodeType": "StructuredDocumentation",
								"src": "117:294:26",
								"text": "@notice Thrown if a call is unauthorized in the associated DAO.\n @param dao The associated DAO.\n @param where The context in which the authorization reverted.\n @param who The address (EOA or contract) missing the permission.\n @param permissionId The permission identifier."
							},
							"errorSelector": "32dbe3b4",
							"id": 2168,
							"name": "DaoUnauthorized",
							"nameLocation": "417:15:26",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 2167,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2160,
										"mutability": "mutable",
										"name": "dao",
										"nameLocation": "441:3:26",
										"nodeType": "VariableDeclaration",
										"scope": 2168,
										"src": "433:11:26",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2159,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:26",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2162,
										"mutability": "mutable",
										"name": "where",
										"nameLocation": "454:5:26",
										"nodeType": "VariableDeclaration",
										"scope": 2168,
										"src": "446:13:26",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2161,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "446:7:26",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2164,
										"mutability": "mutable",
										"name": "who",
										"nameLocation": "469:3:26",
										"nodeType": "VariableDeclaration",
										"scope": 2168,
										"src": "461:11:26",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2163,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "461:7:26",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2166,
										"mutability": "mutable",
										"name": "permissionId",
										"nameLocation": "482:12:26",
										"nodeType": "VariableDeclaration",
										"scope": 2168,
										"src": "474:20:26",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2165,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "474:7:26",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "432:63:26"
							},
							"src": "411:85:26"
						},
						{
							"body": {
								"id": 2202,
								"nodeType": "Block",
								"src": "1191:243:26",
								"statements": [
									{
										"condition": {
											"id": 2190,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "!",
											"prefix": true,
											"src": "1202:55:26",
											"subExpression": {
												"arguments": [
													{
														"id": 2185,
														"name": "_where",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "1222:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 2186,
														"name": "_who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "1230:4:26",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 2187,
														"name": "_permissionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "1236:13:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													{
														"id": 2188,
														"name": "_data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "1251:5:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														{
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													],
													"expression": {
														"id": 2183,
														"name": "_dao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2172,
														"src": "1203:4:26",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$2088",
															"typeString": "contract IDAO"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1208:13:26",
													"memberName": "hasPermission",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1961,
													"src": "1203:18:26",
													"typeDescriptions": {
														"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
														"typeString": "function (address,address,bytes32,bytes memory) view external returns (bool)"
													}
												},
												"id": 2189,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1203:54:26",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 2201,
										"nodeType": "IfStatement",
										"src": "1198:232:26",
										"trueBody": {
											"errorCall": {
												"arguments": [
													{
														"arguments": [
															{
																"id": 2194,
																"name": "_dao",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "1319:4:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDAO_$2088",
																	"typeString": "contract IDAO"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IDAO_$2088",
																	"typeString": "contract IDAO"
																}
															],
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1311:7:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2192,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1311:7:26",
																"typeDescriptions": {}
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1311:13:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 2196,
														"name": "_where",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "1346:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 2197,
														"name": "_who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "1372:4:26",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 2198,
														"name": "_permissionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "1405:13:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													],
													"id": 2191,
													"name": "DaoUnauthorized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2168,
													"src": "1275:15:26",
													"typeDescriptions": {
														"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$_t_bytes32_$returns$__$",
														"typeString": "function (address,address,address,bytes32) pure"
													}
												},
												"id": 2199,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [
													"1306:3:26",
													"1339:5:26",
													"1367:3:26",
													"1391:12:26"
												],
												"names": [
													"dao",
													"where",
													"who",
													"permissionId"
												],
												"nodeType": "FunctionCall",
												"src": "1275:155:26",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_tuple$__$",
													"typeString": "tuple()"
												}
											},
											"id": 2200,
											"nodeType": "RevertStatement",
											"src": "1268:162:26"
										}
									}
								]
							},
							"documentation": {
								"id": 2169,
								"nodeType": "StructuredDocumentation",
								"src": "500:557:26",
								"text": "@notice A free function checking if a caller is granted permissions on a target contract via a permission identifier that redirects the approval to a `PermissionCondition` if this was specified in the setup.\n @param _where The address of the target contract for which `who` receives permission.\n @param _who The address (EOA or contract) owning the permission.\n @param _permissionId The permission identifier.\n @param _data The optional data passed to the `PermissionCondition` registered.\n @custom:security-contact sirt@aragon.org"
							},
							"id": 2203,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_auth",
							"nameLocation": "1066:5:26",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2181,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2172,
										"mutability": "mutable",
										"name": "_dao",
										"nameLocation": "1083:4:26",
										"nodeType": "VariableDeclaration",
										"scope": 2203,
										"src": "1078:9:26",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDAO_$2088",
											"typeString": "contract IDAO"
										},
										"typeName": {
											"id": 2171,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2170,
												"name": "IDAO",
												"nameLocations": [
													"1078:4:26"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2088,
												"src": "1078:4:26"
											},
											"referencedDeclaration": 2088,
											"src": "1078:4:26",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IDAO_$2088",
												"typeString": "contract IDAO"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2174,
										"mutability": "mutable",
										"name": "_where",
										"nameLocation": "1102:6:26",
										"nodeType": "VariableDeclaration",
										"scope": 2203,
										"src": "1094:14:26",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1094:7:26",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2176,
										"mutability": "mutable",
										"name": "_who",
										"nameLocation": "1123:4:26",
										"nodeType": "VariableDeclaration",
										"scope": 2203,
										"src": "1115:12:26",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2175,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1115:7:26",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2178,
										"mutability": "mutable",
										"name": "_permissionId",
										"nameLocation": "1142:13:26",
										"nodeType": "VariableDeclaration",
										"scope": 2203,
										"src": "1134:21:26",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2177,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1134:7:26",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2180,
										"mutability": "mutable",
										"name": "_data",
										"nameLocation": "1177:5:26",
										"nodeType": "VariableDeclaration",
										"scope": 2203,
										"src": "1162:20:26",
										"stateVariable": false,
										"storageLocation": "calldata",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_calldata_ptr",
											"typeString": "bytes"
										},
										"typeName": {
											"id": 2179,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1162:5:26",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1071:114:26"
							},
							"returnParameters": {
								"id": 2182,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1191:0:26"
							},
							"scope": 2204,
							"src": "1057:377:26",
							"stateMutability": "view",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "49:1387:26"
				},
				"id": 26
			},
			"packages/contracts/src/framework/dao/DAORegistry.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/dao/DAORegistry.sol",
					"exportedSymbols": {
						"DAORegistry": [
							2351
						],
						"ENSSubdomainRegistrar": [
							2767
						],
						"IDAO": [
							2088
						],
						"InterfaceBasedRegistry": [
							2468
						],
						"ProtocolVersion": [
							2801
						],
						"isSubdomainValid": [
							2541
						]
					},
					"id": 2352,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:27"
						},
						{
							"absolutePath": "packages/contracts/src/utils/protocol/ProtocolVersion.sol",
							"file": "../../utils/protocol/ProtocolVersion.sol",
							"id": 2207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2352,
							"sourceUnit": 2802,
							"src": "76:73:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2206,
										"name": "ProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2801,
										"src": "84:15:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../core/dao/IDAO.sol",
							"id": 2209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2352,
							"sourceUnit": 2089,
							"src": "151:45:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2208,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2088,
										"src": "159:4:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
							"file": "../utils/ens/ENSSubdomainRegistrar.sol",
							"id": 2211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2352,
							"sourceUnit": 2768,
							"src": "198:77:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2210,
										"name": "ENSSubdomainRegistrar",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2767,
										"src": "206:21:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
							"file": "../utils/InterfaceBasedRegistry.sol",
							"id": 2213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2352,
							"sourceUnit": 2469,
							"src": "277:75:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2212,
										"name": "InterfaceBasedRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2468,
										"src": "285:22:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/framework/utils/RegistryUtils.sol",
							"file": "../utils/RegistryUtils.sol",
							"id": 2215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2352,
							"sourceUnit": 2542,
							"src": "354:60:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2214,
										"name": "isSubdomainValid",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2541,
										"src": "362:16:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2217,
										"name": "InterfaceBasedRegistry",
										"nameLocations": [
											"650:22:27"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2468,
										"src": "650:22:27"
									},
									"id": 2218,
									"nodeType": "InheritanceSpecifier",
									"src": "650:22:27"
								},
								{
									"baseName": {
										"id": 2219,
										"name": "ProtocolVersion",
										"nameLocations": [
											"674:15:27"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2801,
										"src": "674:15:27"
									},
									"id": 2220,
									"nodeType": "InheritanceSpecifier",
									"src": "674:15:27"
								}
							],
							"canonicalName": "DAORegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2216,
								"nodeType": "StructuredDocumentation",
								"src": "418:208:27",
								"text": "@title Register your unique DAO subdomain\n @author Aragon Association - 2022-2023\n @notice This contract provides the possibility to register a DAO.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 2351,
							"linearizedBaseContracts": [
								2351,
								2801,
								2779,
								2468,
								2153,
								1032,
								994,
								1248,
								812
							],
							"name": "DAORegistry",
							"nameLocation": "635:11:27",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "697:78:27",
										"text": "@notice The ID of the permission required to call the `register` function."
									},
									"functionSelector": "a2298b4b",
									"id": 2226,
									"mutability": "constant",
									"name": "REGISTER_DAO_PERMISSION_ID",
									"nameLocation": "805:26:27",
									"nodeType": "VariableDeclaration",
									"scope": 2351,
									"src": "781:89:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2222,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:27",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "52454749535445525f44414f5f5045524d495353494f4e",
												"id": 2224,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "844:25:27",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_de5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215",
													"typeString": "literal_string \"REGISTER_DAO_PERMISSION\""
												},
												"value": "REGISTER_DAO_PERMISSION"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_de5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215",
													"typeString": "literal_string \"REGISTER_DAO_PERMISSION\""
												}
											],
											"id": 2223,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "834:9:27",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "834:36:27",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "879:71:27",
										"text": "@notice The ENS subdomain registrar registering the DAO subdomains."
									},
									"functionSelector": "00077393",
									"id": 2230,
									"mutability": "mutable",
									"name": "subdomainRegistrar",
									"nameLocation": "985:18:27",
									"nodeType": "VariableDeclaration",
									"scope": 2351,
									"src": "956:47:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
										"typeString": "contract ENSSubdomainRegistrar"
									},
									"typeName": {
										"id": 2229,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2228,
											"name": "ENSSubdomainRegistrar",
											"nameLocations": [
												"956:21:27"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2767,
											"src": "956:21:27"
										},
										"referencedDeclaration": 2767,
										"src": "956:21:27",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
											"typeString": "contract ENSSubdomainRegistrar"
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "1012:76:27",
										"text": "@notice Thrown if the DAO subdomain doesn't match the regex `[0-9a-z\\-]`"
									},
									"errorSelector": "3a5bf49b",
									"id": 2235,
									"name": "InvalidDaoSubdomain",
									"nameLocation": "1100:19:27",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "subdomain",
												"nameLocation": "1127:9:27",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "1120:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1120:6:27",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:18:27"
									},
									"src": "1094:44:27"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "1146:199:27",
										"text": "@notice Emitted when a new DAO is registered.\n @param dao The address of the DAO contract.\n @param creator The address of the creator.\n @param subdomain The DAO subdomain."
									},
									"eventSelector": "bc0b11fe649bb4d67c7fb40936163e5423f45c3ae83fbd8f8f8c75e1a3fa97af",
									"id": 2244,
									"name": "DAORegistered",
									"nameLocation": "1357:13:27",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"indexed": true,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "1387:3:27",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "1371:19:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "1408:7:27",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "1392:23:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"indexed": false,
												"mutability": "mutable",
												"name": "subdomain",
												"nameLocation": "1424:9:27",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "1417:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1417:6:27",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:64:27"
									},
									"src": "1351:84:27"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "1616:41:27",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2248,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "1627:20:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1627:22:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "1627:22:27"
											}
										]
									},
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "1443:153:27",
										"text": "@dev Used to disallow initializing the implementation contract by an attacker for extra safety.\n @custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2252,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:2:27"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:0:27"
									},
									"scope": 2351,
									"src": "1602:55:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "1997:137:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2265,
															"name": "_managingDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2256,
															"src": "2038:12:27",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2267,
																		"name": "IDAO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2088,
																		"src": "2057:4:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDAO_$2088_$",
																			"typeString": "type(contract IDAO)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDAO_$2088_$",
																			"typeString": "type(contract IDAO)"
																		}
																	],
																	"id": 2266,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2052:4:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2052:10:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDAO_$2088",
																	"typeString": "type(contract IDAO)"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2063:11:27",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2052:22:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 2264,
														"name": "__InterfaceBasedRegistry_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "2008:29:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IDAO_$2088_$_t_bytes4_$returns$__$",
															"typeString": "function (contract IDAO,bytes4)"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:67:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "2008:67:27"
											},
											{
												"expression": {
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2272,
														"name": "subdomainRegistrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2230,
														"src": "2086:18:27",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
															"typeString": "contract ENSSubdomainRegistrar"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2273,
														"name": "_subdomainRegistrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "2107:19:27",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
															"typeString": "contract ENSSubdomainRegistrar"
														}
													},
													"src": "2086:40:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
														"typeString": "contract ENSSubdomainRegistrar"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "2086:40:27"
											}
										]
									},
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "1665:198:27",
										"text": "@notice Initializes the contract.\n @param _managingDao the managing DAO address.\n @param _subdomainRegistrar The `ENSSubdomainRegistrar` where `ENS` subdomain will be registered."
									},
									"functionSelector": "485cc955",
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2261,
												"name": "initializer",
												"nameLocations": [
													"1985:11:27"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "1985:11:27"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:11:27"
										}
									],
									"name": "initialize",
									"nameLocation": "1878:10:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "_managingDao",
												"nameLocation": "1904:12:27",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "1899:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2088",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 2255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2254,
														"name": "IDAO",
														"nameLocations": [
															"1899:4:27"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "1899:4:27"
													},
													"referencedDeclaration": 2088,
													"src": "1899:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2088",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "_subdomainRegistrar",
												"nameLocation": "1949:19:27",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "1927:41:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
													"typeString": "contract ENSSubdomainRegistrar"
												},
												"typeName": {
													"id": 2258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2257,
														"name": "ENSSubdomainRegistrar",
														"nameLocations": [
															"1927:21:27"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2767,
														"src": "1927:21:27"
													},
													"referencedDeclaration": 2767,
													"src": "1927:21:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
														"typeString": "contract ENSSubdomainRegistrar"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:87:27"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1997:0:27"
									},
									"scope": 2351,
									"src": "1869:265:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2344,
										"nodeType": "Block",
										"src": "2694:467:27",
										"statements": [
											{
												"assignments": [
													2292
												],
												"declarations": [
													{
														"constant": false,
														"id": 2292,
														"mutability": "mutable",
														"name": "daoAddr",
														"nameLocation": "2713:7:27",
														"nodeType": "VariableDeclaration",
														"scope": 2344,
														"src": "2705:15:27",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2291,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2705:7:27",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2297,
												"initialValue": {
													"arguments": [
														{
															"id": 2295,
															"name": "dao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "2731:3:27",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															}
														],
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2723:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2293,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2723:7:27",
															"typeDescriptions": {}
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:12:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2705:30:27"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2299,
															"name": "daoAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "2758:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2298,
														"name": "_register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2462,
														"src": "2748:9:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2748:18:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2301,
												"nodeType": "ExpressionStatement",
												"src": "2748:18:27"
											},
											{
												"condition": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2304,
																			"name": "subdomain",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2285,
																			"src": "2790:9:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		],
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2784:5:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2302,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2784:5:27",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2784:16:27",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2801:6:27",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2784:23:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2810:1:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2784:27:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2309,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2783:29:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2337,
												"nodeType": "IfStatement",
												"src": "2779:315:27",
												"trueBody": {
													"id": 2336,
													"nodeType": "Block",
													"src": "2814:280:27",
													"statements": [
														{
															"condition": {
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2833:28:27",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2311,
																			"name": "subdomain",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2285,
																			"src": "2851:9:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		],
																		"id": 2310,
																		"name": "isSubdomainValid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "2834:16:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$returns$_t_bool_$",
																			"typeString": "function (string calldata) pure returns (bool)"
																		}
																	},
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2834:27:27",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2319,
															"nodeType": "IfStatement",
															"src": "2829:119:27",
															"trueBody": {
																"id": 2318,
																"nodeType": "Block",
																"src": "2863:85:27",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2315,
																					"name": "subdomain",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "2921:9:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_calldata_ptr",
																						"typeString": "string calldata"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_calldata_ptr",
																						"typeString": "string calldata"
																					}
																				],
																				"id": 2314,
																				"name": "InvalidDaoSubdomain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2235,
																				"src": "2889:19:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [
																				"2910:9:27"
																			],
																			"names": [
																				"subdomain"
																			],
																			"nodeType": "FunctionCall",
																			"src": "2889:43:27",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2317,
																		"nodeType": "RevertStatement",
																		"src": "2882:50:27"
																	}
																]
															}
														},
														{
															"assignments": [
																2321
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2321,
																	"mutability": "mutable",
																	"name": "labelhash",
																	"nameLocation": "2972:9:27",
																	"nodeType": "VariableDeclaration",
																	"scope": 2336,
																	"src": "2964:17:27",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2320,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2964:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2328,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2325,
																				"name": "subdomain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2285,
																				"src": "3000:9:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			],
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2994:5:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 2323,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "2994:5:27",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2994:16:27",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 2322,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2984:9:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:27:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2964:47:27"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2332,
																		"name": "labelhash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "3063:9:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2333,
																		"name": "daoAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2292,
																		"src": "3074:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2329,
																		"name": "subdomainRegistrar",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2230,
																		"src": "3028:18:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
																			"typeString": "contract ENSSubdomainRegistrar"
																		}
																	},
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3047:15:27",
																	"memberName": "registerSubnode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2734,
																	"src": "3028:34:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address) external"
																	}
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:54:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2335,
															"nodeType": "ExpressionStatement",
															"src": "3028:54:27"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2339,
															"name": "daoAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "3125:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2340,
															"name": "creator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "3134:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2341,
															"name": "subdomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "3143:9:27",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 2338,
														"name": "DAORegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "3111:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,string memory)"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3111:42:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2343,
												"nodeType": "EmitStatement",
												"src": "3106:47:27"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "2142:398:27",
										"text": "@notice Registers a DAO by its address. If a non-empty subdomain name is provided that is not taken already, the DAO becomes the owner of the ENS name.\n @dev A subdomain is unique within the Aragon DAO framework and can get stored here.\n @param dao The address of the DAO contract.\n @param creator The address of the creator.\n @param subdomain The DAO subdomain."
									},
									"functionSelector": "ede49739",
									"id": 2345,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2288,
													"name": "REGISTER_DAO_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2226,
													"src": "2666:26:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2287,
												"name": "auth",
												"nameLocations": [
													"2661:4:27"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2147,
												"src": "2661:4:27"
											},
											"nodeType": "ModifierInvocation",
											"src": "2661:32:27"
										}
									],
									"name": "register",
									"nameLocation": "2555:8:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "2579:3:27",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "2574:8:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2088",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 2280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2279,
														"name": "IDAO",
														"nameLocations": [
															"2574:4:27"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "2574:4:27"
													},
													"referencedDeclaration": 2088,
													"src": "2574:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2088",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "2601:7:27",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "2593:15:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "subdomain",
												"nameLocation": "2635:9:27",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "2619:25:27",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2619:6:27",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:88:27"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2694:0:27"
									},
									"scope": 2351,
									"src": "2546:615:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "3169:273:27",
										"text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
									},
									"id": 2350,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3468:5:27",
									"nodeType": "VariableDeclaration",
									"scope": 2351,
									"src": "3448:25:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 2347,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3448:7:27",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2349,
										"length": {
											"hexValue": "3439",
											"id": 2348,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3456:2:27",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3448:11:27",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2352,
							"src": "626:2851:27",
							"usedErrors": [
								575,
								578,
								839,
								844,
								1283,
								1296,
								1574,
								1577,
								2168,
								2235,
								2388,
								2393,
								2398
							],
							"usedEvents": [
								583,
								1262,
								2244
							]
						}
					],
					"src": "49:3430:27"
				},
				"id": 27
			},
			"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
					"exportedSymbols": {
						"DaoAuthorizableUpgradeable": [
							2153
						],
						"ERC165CheckerUpgradeable": [
							1226
						],
						"IDAO": [
							2088
						],
						"InterfaceBasedRegistry": [
							2468
						],
						"UUPSUpgradeable": [
							994
						]
					},
					"id": 2469,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:28"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2469,
							"sourceUnit": 995,
							"src": "76:100:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2354,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 994,
										"src": "84:15:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol",
							"id": 2357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2469,
							"sourceUnit": 1227,
							"src": "178:126:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2356,
										"name": "ERC165CheckerUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1226,
										"src": "186:24:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
							"file": "../../core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
							"id": 2359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2469,
							"sourceUnit": 2154,
							"src": "308:109:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2358,
										"name": "DaoAuthorizableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2153,
										"src": "316:26:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../core/dao/IDAO.sol",
							"id": 2361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2469,
							"sourceUnit": 2089,
							"src": "419:45:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2360,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2088,
										"src": "427:4:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2363,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"733:15:28"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 994,
										"src": "733:15:28"
									},
									"id": 2364,
									"nodeType": "InheritanceSpecifier",
									"src": "733:15:28"
								},
								{
									"baseName": {
										"id": 2365,
										"name": "DaoAuthorizableUpgradeable",
										"nameLocations": [
											"750:26:28"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2153,
										"src": "750:26:28"
									},
									"id": 2366,
									"nodeType": "InheritanceSpecifier",
									"src": "750:26:28"
								}
							],
							"canonicalName": "InterfaceBasedRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2362,
								"nodeType": "StructuredDocumentation",
								"src": "468:221:28",
								"text": "@title InterfaceBasedRegistry\n @author Aragon Association - 2022-2023\n @notice An [ERC-165](https://eips.ethereum.org/EIPS/eip-165)-based registry for contracts.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 2468,
							"linearizedBaseContracts": [
								2468,
								2153,
								1032,
								994,
								1248,
								812
							],
							"name": "InterfaceBasedRegistry",
							"nameLocation": "707:22:28",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2369,
									"libraryName": {
										"id": 2367,
										"name": "ERC165CheckerUpgradeable",
										"nameLocations": [
											"790:24:28"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1226,
										"src": "790:24:28"
									},
									"nodeType": "UsingForDirective",
									"src": "784:43:28",
									"typeName": {
										"id": 2368,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "819:7:28",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "835:87:28",
										"text": "@notice The ID of the permission required to call the `_authorizeUpgrade` function."
									},
									"functionSelector": "74574eb7",
									"id": 2375,
									"mutability": "constant",
									"name": "UPGRADE_REGISTRY_PERMISSION_ID",
									"nameLocation": "952:30:28",
									"nodeType": "VariableDeclaration",
									"scope": 2468,
									"src": "928:106:28",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2371,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "928:7:28",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "555047524144455f52454749535452595f5045524d495353494f4e",
												"id": 2373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1004:29:28",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932",
													"typeString": "literal_string \"UPGRADE_REGISTRY_PERMISSION\""
												},
												"value": "UPGRADE_REGISTRY_PERMISSION"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932",
													"typeString": "literal_string \"UPGRADE_REGISTRY_PERMISSION\""
												}
											],
											"id": 2372,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "994:9:28",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "994:40:28",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2376,
										"nodeType": "StructuredDocumentation",
										"src": "1043:135:28",
										"text": "@notice The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support."
									},
									"functionSelector": "44162ef8",
									"id": 2378,
									"mutability": "mutable",
									"name": "targetInterfaceId",
									"nameLocation": "1198:17:28",
									"nodeType": "VariableDeclaration",
									"scope": 2468,
									"src": "1184:31:28",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2377,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1184:6:28",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "1224:105:28",
										"text": "@notice The mapping containing the registry entries returning true for registered contract addresses."
									},
									"functionSelector": "f29ee125",
									"id": 2383,
									"mutability": "mutable",
									"name": "entries",
									"nameLocation": "1367:7:28",
									"nodeType": "VariableDeclaration",
									"scope": 2468,
									"src": "1335:39:28",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2382,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2380,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1343:7:28",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1335:24:28",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2381,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1354:4:28",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2384,
										"nodeType": "StructuredDocumentation",
										"src": "1383:130:28",
										"text": "@notice Thrown if the contract is already registered.\n @param registrant The address of the contract to be registered."
									},
									"errorSelector": "fdcce17f",
									"id": 2388,
									"name": "ContractAlreadyRegistered",
									"nameLocation": "1525:25:28",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "registrant",
												"nameLocation": "1559:10:28",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "1551:18:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:20:28"
									},
									"src": "1519:52:28"
								},
								{
									"documentation": {
										"id": 2389,
										"nodeType": "StructuredDocumentation",
										"src": "1579:148:28",
										"text": "@notice Thrown if the contract does not support the required interface.\n @param registrant The address of the contract to be registered."
									},
									"errorSelector": "71023c8a",
									"id": 2393,
									"name": "ContractInterfaceInvalid",
									"nameLocation": "1739:24:28",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "registrant",
												"nameLocation": "1772:10:28",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "1764:18:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1763:20:28"
									},
									"src": "1733:51:28"
								},
								{
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "1792:115:28",
										"text": "@notice Thrown if the contract does not support ERC165.\n @param registrant The address of the contract."
									},
									"errorSelector": "cd9f9d17",
									"id": 2398,
									"name": "ContractERC165SupportInvalid",
									"nameLocation": "1919:28:28",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "registrant",
												"nameLocation": "1956:10:28",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "1948:18:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:20:28"
									},
									"src": "1913:55:28"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "2459:117:28",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2410,
															"name": "_managingDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "2504:12:28",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															}
														],
														"id": 2409,
														"name": "__DaoAuthorizableUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "2470:33:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IDAO_$2088_$returns$__$",
															"typeString": "function (contract IDAO)"
														}
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2470:47:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2412,
												"nodeType": "ExpressionStatement",
												"src": "2470:47:28"
											},
											{
												"expression": {
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2413,
														"name": "targetInterfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "2530:17:28",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2414,
														"name": "_targetInterfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "2550:18:28",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2530:38:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2416,
												"nodeType": "ExpressionStatement",
												"src": "2530:38:28"
											}
										]
									},
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "1976:333:28",
										"text": "@notice Initializes the component.\n @dev This is required for the UUPS upgradability pattern.\n @param _managingDao The interface of the DAO managing the components permissions.\n @param _targetInterfaceId The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface id of the contracts to be registered."
									},
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2406,
												"name": "onlyInitializing",
												"nameLocations": [
													"2442:16:28"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "2442:16:28"
											},
											"nodeType": "ModifierInvocation",
											"src": "2442:16:28"
										}
									],
									"name": "__InterfaceBasedRegistry_init",
									"nameLocation": "2324:29:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "_managingDao",
												"nameLocation": "2369:12:28",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "2364:17:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2088",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 2401,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2400,
														"name": "IDAO",
														"nameLocations": [
															"2364:4:28"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "2364:4:28"
													},
													"referencedDeclaration": 2088,
													"src": "2364:4:28",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2088",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "_targetInterfaceId",
												"nameLocation": "2399:18:28",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "2392:25:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2403,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2392:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:71:28"
									},
									"returnParameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:0:28"
									},
									"scope": 2468,
									"src": "2315:261:28",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "3038:2:28",
										"statements": []
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "2584:333:28",
										"text": "@notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\n @dev The caller must have the `UPGRADE_REGISTRY_PERMISSION_ID` permission."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2425,
													"name": "UPGRADE_REGISTRY_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2375,
													"src": "3006:30:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2424,
												"name": "auth",
												"nameLocations": [
													"3001:4:28"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2147,
												"src": "3001:4:28"
											},
											"nodeType": "ModifierInvocation",
											"src": "3001:36:28"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "2932:17:28",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2423,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2992:8:28"
									},
									"parameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "2960:7:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2949:25:28"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3038:0:28"
									},
									"scope": 2468,
									"src": "2923:117:28",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2461,
										"nodeType": "Block",
										"src": "3383:414:28",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 2435,
														"name": "entries",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2383,
														"src": "3398:7:28",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2437,
													"indexExpression": {
														"id": 2436,
														"name": "_registrant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "3406:11:28",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3398:20:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2443,
												"nodeType": "IfStatement",
												"src": "3394:112:28",
												"trueBody": {
													"id": 2442,
													"nodeType": "Block",
													"src": "3420:86:28",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2439,
																		"name": "_registrant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2432,
																		"src": "3481:11:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2438,
																	"name": "ContractAlreadyRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2388,
																	"src": "3442:25:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"3469:10:28"
																],
																"names": [
																	"registrant"
																],
																"nodeType": "FunctionCall",
																"src": "3442:52:28",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2441,
															"nodeType": "RevertStatement",
															"src": "3435:59:28"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3628:49:28",
													"subExpression": {
														"arguments": [
															{
																"id": 2446,
																"name": "targetInterfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "3659:17:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2444,
																"name": "_registrant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "3629:11:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3641:17:28",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1082,
															"src": "3629:29:28",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 2447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3629:48:28",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"nodeType": "IfStatement",
												"src": "3624:126:28",
												"trueBody": {
													"id": 2453,
													"nodeType": "Block",
													"src": "3679:71:28",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2450,
																		"name": "_registrant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2432,
																		"src": "3726:11:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2449,
																	"name": "ContractInterfaceInvalid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "3701:24:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3701:37:28",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2452,
															"nodeType": "RevertStatement",
															"src": "3694:44:28"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2455,
															"name": "entries",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "3762:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2457,
														"indexExpression": {
															"id": 2456,
															"name": "_registrant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2432,
															"src": "3770:11:28",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3762:20:28",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3785:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3762:27:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2460,
												"nodeType": "ExpressionStatement",
												"src": "3762:27:28"
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "3048:280:28",
										"text": "@notice Register an [ERC-165](https://eips.ethereum.org/EIPS/eip-165) contract address.\n @dev The managing DAO needs to grant REGISTER_PERMISSION_ID to registrar.\n @param _registrant The address of an [ERC-165](https://eips.ethereum.org/EIPS/eip-165) contract."
									},
									"id": 2462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_register",
									"nameLocation": "3343:9:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "_registrant",
												"nameLocation": "3361:11:28",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "3353:19:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3352:21:28"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:28"
									},
									"scope": 2468,
									"src": "3334:463:28",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2463,
										"nodeType": "StructuredDocumentation",
										"src": "3805:273:28",
										"text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
									},
									"id": 2467,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4104:5:28",
									"nodeType": "VariableDeclaration",
									"scope": 2468,
									"src": "4084:25:28",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$48_storage",
										"typeString": "uint256[48]"
									},
									"typeName": {
										"baseType": {
											"id": 2464,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4084:7:28",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2466,
										"length": {
											"hexValue": "3438",
											"id": 2465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4092:2:28",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_48_by_1",
												"typeString": "int_const 48"
											},
											"value": "48"
										},
										"nodeType": "ArrayTypeName",
										"src": "4084:11:28",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$48_storage_ptr",
											"typeString": "uint256[48]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2469,
							"src": "689:3424:28",
							"usedErrors": [
								575,
								578,
								839,
								844,
								1283,
								1296,
								1574,
								1577,
								2168,
								2388,
								2393,
								2398
							],
							"usedEvents": [
								583,
								1262
							]
						}
					],
					"src": "49:4066:28"
				},
				"id": 28
			},
			"packages/contracts/src/framework/utils/RegistryUtils.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/utils/RegistryUtils.sol",
					"exportedSymbols": {
						"isSubdomainValid": [
							2541
						]
					},
					"id": 2542,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:29"
						},
						{
							"body": {
								"id": 2540,
								"nodeType": "Block",
								"src": "731:610:29",
								"statements": [
									{
										"assignments": [
											2479
										],
										"declarations": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "nameBytes",
												"nameLocation": "753:9:29",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "738:24:29",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "738:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2484,
										"initialValue": {
											"arguments": [
												{
													"id": 2482,
													"name": "subDomain",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2473,
													"src": "771:9:29",
													"typeDescriptions": {
														"typeIdentifier": "t_string_calldata_ptr",
														"typeString": "string calldata"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_string_calldata_ptr",
														"typeString": "string calldata"
													}
												],
												"id": 2481,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "765:5:29",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
													"typeString": "type(bytes storage pointer)"
												},
												"typeName": {
													"id": 2480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "765:5:29",
													"typeDescriptions": {}
												}
											},
											"id": 2483,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "765:16:29",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_calldata_ptr",
												"typeString": "bytes calldata"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "738:43:29"
									},
									{
										"assignments": [
											2486
										],
										"declarations": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "nameLength",
												"nameLocation": "796:10:29",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "788:18:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2489,
										"initialValue": {
											"expression": {
												"id": 2487,
												"name": "nameBytes",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2479,
												"src": "809:9:29",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes calldata"
												}
											},
											"id": 2488,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "819:6:29",
											"memberName": "length",
											"nodeType": "MemberAccess",
											"src": "809:16:29",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "788:37:29"
									},
									{
										"body": {
											"id": 2536,
											"nodeType": "Block",
											"src": "869:451:29",
											"statements": [
												{
													"assignments": [
														2500
													],
													"declarations": [
														{
															"constant": false,
															"id": 2500,
															"mutability": "mutable",
															"name": "char",
															"nameLocation": "886:4:29",
															"nodeType": "VariableDeclaration",
															"scope": 2536,
															"src": "880:10:29",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2499,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "880:5:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2507,
													"initialValue": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 2503,
																	"name": "nameBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "899:9:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 2505,
																"indexExpression": {
																	"id": 2504,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "909:1:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "899:12:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															],
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "893:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 2501,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "893:5:29",
																"typeDescriptions": {}
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "893:19:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "880:32:29"
												},
												{
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2508,
																"name": "char",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2500,
																"src": "964:4:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "3936",
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "971:2:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_96_by_1",
																	"typeString": "int_const 96"
																},
																"value": "96"
															},
															"src": "964:9:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2511,
																"name": "char",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2500,
																"src": "977:4:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "313233",
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "984:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_123_by_1",
																	"typeString": "int_const 123"
																},
																"value": "123"
															},
															"src": "977:10:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "964:23:29",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2517,
													"nodeType": "IfStatement",
													"src": "960:64:29",
													"trueBody": {
														"id": 2516,
														"nodeType": "Block",
														"src": "989:35:29",
														"statements": [
															{
																"id": 2515,
																"nodeType": "Continue",
																"src": "1004:8:29"
															}
														]
													}
												},
												{
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2518,
																"name": "char",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2500,
																"src": "1075:4:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "3437",
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1082:2:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_47_by_1",
																	"typeString": "int_const 47"
																},
																"value": "47"
															},
															"src": "1075:9:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2521,
																"name": "char",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2500,
																"src": "1088:4:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3538",
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1095:2:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_58_by_1",
																	"typeString": "int_const 58"
																},
																"value": "58"
															},
															"src": "1088:9:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1075:22:29",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2527,
													"nodeType": "IfStatement",
													"src": "1071:63:29",
													"trueBody": {
														"id": 2526,
														"nodeType": "Block",
														"src": "1099:35:29",
														"statements": [
															{
																"id": 2525,
																"nodeType": "Continue",
																"src": "1114:8:29"
															}
														]
													}
												},
												{
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2528,
															"name": "char",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2500,
															"src": "1175:4:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3435",
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1183:2:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45_by_1",
																"typeString": "int_const 45"
															},
															"value": "45"
														},
														"src": "1175:10:29",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2533,
													"nodeType": "IfStatement",
													"src": "1171:51:29",
													"trueBody": {
														"id": 2532,
														"nodeType": "Block",
														"src": "1187:35:29",
														"statements": [
															{
																"id": 2531,
																"nodeType": "Continue",
																"src": "1202:8:29"
															}
														]
													}
												},
												{
													"expression": {
														"hexValue": "66616c7365",
														"id": 2534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1307:5:29",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 2477,
													"id": 2535,
													"nodeType": "Return",
													"src": "1300:12:29"
												}
											]
										},
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2495,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2493,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2491,
												"src": "848:1:29",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "<",
											"rightExpression": {
												"id": 2494,
												"name": "nameLength",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2486,
												"src": "852:10:29",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "848:14:29",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 2537,
										"initializationExpression": {
											"assignments": [
												2491
											],
											"declarations": [
												{
													"constant": false,
													"id": 2491,
													"mutability": "mutable",
													"name": "i",
													"nameLocation": "845:1:29",
													"nodeType": "VariableDeclaration",
													"scope": 2537,
													"src": "837:9:29",
													"stateVariable": false,
													"storageLocation": "default",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"typeName": {
														"id": 2490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "837:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"visibility": "internal"
												}
											],
											"id": 2492,
											"nodeType": "VariableDeclarationStatement",
											"src": "837:9:29"
										},
										"loopExpression": {
											"expression": {
												"id": 2497,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "UnaryOperation",
												"operator": "++",
												"prefix": false,
												"src": "864:3:29",
												"subExpression": {
													"id": 2496,
													"name": "i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2491,
													"src": "864:1:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2498,
											"nodeType": "ExpressionStatement",
											"src": "864:3:29"
										},
										"nodeType": "ForStatement",
										"src": "832:488:29"
									},
									{
										"expression": {
											"hexValue": "74727565",
											"id": 2538,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "bool",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1333:4:29",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"value": "true"
										},
										"functionReturnParameters": 2477,
										"id": 2539,
										"nodeType": "Return",
										"src": "1326:11:29"
									}
								]
							},
							"documentation": {
								"id": 2471,
								"nodeType": "StructuredDocumentation",
								"src": "76:582:29",
								"text": "@notice Validates that a subdomain name is composed only from characters in the allowed character set:\n - the lowercase letters `a-z`\n - the digits `0-9`\n - the hyphen `-`\n @dev This function allows empty (zero-length) subdomains. If this should not be allowed, make sure to add a respective check when using this function in your code.\n @param subDomain The name of the DAO.\n @return `true` if the name is valid or `false` if at least one char is invalid.\n @dev Aborts on the first invalid char found.\n @custom:security-contact sirt@aragon.org"
							},
							"id": 2541,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "isSubdomainValid",
							"nameLocation": "667:16:29",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2474,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2473,
										"mutability": "mutable",
										"name": "subDomain",
										"nameLocation": "700:9:29",
										"nodeType": "VariableDeclaration",
										"scope": 2541,
										"src": "684:25:29",
										"stateVariable": false,
										"storageLocation": "calldata",
										"typeDescriptions": {
											"typeIdentifier": "t_string_calldata_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 2472,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "684:6:29",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "683:27:29"
							},
							"returnParameters": {
								"id": 2477,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2476,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2541,
										"src": "725:4:29",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 2475,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "725:4:29",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "724:6:29"
							},
							"scope": 2542,
							"src": "658:683:29",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "49:1294:29"
				},
				"id": 29
			},
			"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
					"exportedSymbols": {
						"DaoAuthorizableUpgradeable": [
							2153
						],
						"ENS": [
							136
						],
						"ENSSubdomainRegistrar": [
							2767
						],
						"IABIResolver": [
							356
						],
						"IAddrResolver": [
							374
						],
						"IAddressResolver": [
							395
						],
						"IContentHashResolver": [
							412
						],
						"IDAO": [
							2088
						],
						"IDNSRecordResolver": [
							445
						],
						"IDNSZoneResolver": [
							464
						],
						"IERC165": [
							1936
						],
						"IExtendedResolver": [
							476
						],
						"IInterfaceResolver": [
							497
						],
						"INameResolver": [
							514
						],
						"IPubkeyResolver": [
							535
						],
						"ITextResolver": [
							558
						],
						"ProtocolVersion": [
							2801
						],
						"Resolver": [
							335
						],
						"UUPSUpgradeable": [
							994
						]
					},
					"id": 2768,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2543,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:30"
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/registry/ENS.sol",
							"file": "@ensdomains/ens-contracts/contracts/registry/ENS.sol",
							"id": 2544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2768,
							"sourceUnit": 137,
							"src": "76:62:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
							"file": "@ensdomains/ens-contracts/contracts/resolvers/Resolver.sol",
							"id": 2545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2768,
							"sourceUnit": 336,
							"src": "140:68:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/utils/protocol/ProtocolVersion.sol",
							"file": "../../../utils/protocol/ProtocolVersion.sol",
							"id": 2547,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2768,
							"sourceUnit": 2802,
							"src": "212:76:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2546,
										"name": "ProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2801,
										"src": "220:15:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2549,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2768,
							"sourceUnit": 995,
							"src": "290:100:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2548,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 994,
										"src": "298:15:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
							"file": "../../../core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
							"id": 2551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2768,
							"sourceUnit": 2154,
							"src": "392:112:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2550,
										"name": "DaoAuthorizableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2153,
										"src": "400:26:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../../core/dao/IDAO.sol",
							"id": 2553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2768,
							"sourceUnit": 2089,
							"src": "506:48:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2552,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2088,
										"src": "514:4:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2555,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"1080:15:30"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 994,
										"src": "1080:15:30"
									},
									"id": 2556,
									"nodeType": "InheritanceSpecifier",
									"src": "1080:15:30"
								},
								{
									"baseName": {
										"id": 2557,
										"name": "DaoAuthorizableUpgradeable",
										"nameLocations": [
											"1097:26:30"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2153,
										"src": "1097:26:30"
									},
									"id": 2558,
									"nodeType": "InheritanceSpecifier",
									"src": "1097:26:30"
								},
								{
									"baseName": {
										"id": 2559,
										"name": "ProtocolVersion",
										"nameLocations": [
											"1125:15:30"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2801,
										"src": "1125:15:30"
									},
									"id": 2560,
									"nodeType": "InheritanceSpecifier",
									"src": "1125:15:30"
								}
							],
							"canonicalName": "ENSSubdomainRegistrar",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2554,
								"nodeType": "StructuredDocumentation",
								"src": "558:488:30",
								"text": "@title ENSSubdomainRegistrar\n @author Aragon Association - 2022-2023\n @notice This contract registers ENS subdomains under a parent domain specified in the initialization process and maintains ownership of the subdomain since only the resolver address is set. This contract must either be the domain node owner or an approved operator of the node owner. The default resolver being used is the one specified in the parent domain.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 2767,
							"linearizedBaseContracts": [
								2767,
								2801,
								2779,
								2153,
								1032,
								994,
								1248,
								812
							],
							"name": "ENSSubdomainRegistrar",
							"nameLocation": "1055:21:30",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2561,
										"nodeType": "StructuredDocumentation",
										"src": "1148:87:30",
										"text": "@notice The ID of the permission required to call the `_authorizeUpgrade` function."
									},
									"functionSelector": "af7b2fed",
									"id": 2566,
									"mutability": "constant",
									"name": "UPGRADE_REGISTRAR_PERMISSION_ID",
									"nameLocation": "1265:31:30",
									"nodeType": "VariableDeclaration",
									"scope": 2767,
									"src": "1241:108:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2562,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1241:7:30",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "555047524144455f5245474953545241525f5045524d495353494f4e",
												"id": 2564,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1318:30:30",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff",
													"typeString": "literal_string \"UPGRADE_REGISTRAR_PERMISSION\""
												},
												"value": "UPGRADE_REGISTRAR_PERMISSION"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff",
													"typeString": "literal_string \"UPGRADE_REGISTRAR_PERMISSION\""
												}
											],
											"id": 2563,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1308:9:30",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2565,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1308:41:30",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2567,
										"nodeType": "StructuredDocumentation",
										"src": "1358:110:30",
										"text": "@notice The ID of the permission required to call the `registerSubnode` and `setDefaultResolver` function."
									},
									"functionSelector": "9848ba51",
									"id": 2572,
									"mutability": "constant",
									"name": "REGISTER_ENS_SUBDOMAIN_PERMISSION_ID",
									"nameLocation": "1498:36:30",
									"nodeType": "VariableDeclaration",
									"scope": 2767,
									"src": "1474:118:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2568,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1474:7:30",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "52454749535445525f454e535f535542444f4d41494e5f5045524d495353494f4e",
												"id": 2570,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1556:35:30",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_bbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14",
													"typeString": "literal_string \"REGISTER_ENS_SUBDOMAIN_PERMISSION\""
												},
												"value": "REGISTER_ENS_SUBDOMAIN_PERMISSION"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_bbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14",
													"typeString": "literal_string \"REGISTER_ENS_SUBDOMAIN_PERMISSION\""
												}
											],
											"id": 2569,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1546:9:30",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2571,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1546:46:30",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2573,
										"nodeType": "StructuredDocumentation",
										"src": "1601:37:30",
										"text": "@notice The ENS registry contract"
									},
									"functionSelector": "3f15457f",
									"id": 2576,
									"mutability": "mutable",
									"name": "ens",
									"nameLocation": "1655:3:30",
									"nodeType": "VariableDeclaration",
									"scope": 2767,
									"src": "1644:14:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ENS_$136",
										"typeString": "contract ENS"
									},
									"typeName": {
										"id": 2575,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2574,
											"name": "ENS",
											"nameLocations": [
												"1644:3:30"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 136,
											"src": "1644:3:30"
										},
										"referencedDeclaration": 136,
										"src": "1644:3:30",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ENS_$136",
											"typeString": "contract ENS"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "1667:74:30",
										"text": "@notice The namehash of the domain on which subdomains are registered."
									},
									"functionSelector": "d70754ec",
									"id": 2579,
									"mutability": "mutable",
									"name": "node",
									"nameLocation": "1762:4:30",
									"nodeType": "VariableDeclaration",
									"scope": 2767,
									"src": "1747:19:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2578,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1747:7:30",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "1775:78:30",
										"text": "@notice The address of the ENS resolver resolving the names to an address."
									},
									"functionSelector": "04f3bcec",
									"id": 2582,
									"mutability": "mutable",
									"name": "resolver",
									"nameLocation": "1874:8:30",
									"nodeType": "VariableDeclaration",
									"scope": 2767,
									"src": "1859:23:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2581,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:30",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2583,
										"nodeType": "StructuredDocumentation",
										"src": "1891:152:30",
										"text": "@notice Thrown if the subnode is already registered.\n @param subnode The subnode namehash.\n @param nodeOwner The node owner address."
									},
									"errorSelector": "01f95aba",
									"id": 2589,
									"name": "AlreadyRegistered",
									"nameLocation": "2055:17:30",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "subnode",
												"nameLocation": "2081:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2073:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2584,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "nodeOwner",
												"nameLocation": "2098:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2090:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2072:36:30"
									},
									"src": "2049:60:30"
								},
								{
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "2117:141:30",
										"text": "@notice Thrown if node's resolver is invalid.\n @param node The node namehash.\n @param resolver The node resolver address."
									},
									"errorSelector": "1ae12f8a",
									"id": 2596,
									"name": "InvalidResolver",
									"nameLocation": "2270:15:30",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2294:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "2286:12:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "2308:8:30",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "2300:16:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2300:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:32:30"
									},
									"src": "2264:54:30"
								},
								{
									"body": {
										"id": 2603,
										"nodeType": "Block",
										"src": "2499:41:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2600,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "2510:20:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2510:22:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2602,
												"nodeType": "ExpressionStatement",
												"src": "2510:22:30"
											}
										]
									},
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "2326:153:30",
										"text": "@dev Used to disallow initializing the implementation contract by an attacker for extra safety.\n @custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2604,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:2:30"
									},
									"returnParameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:30"
									},
									"scope": 2767,
									"src": "2485:55:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2654,
										"nodeType": "Block",
										"src": "3234:335:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2619,
															"name": "_managingDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2608,
															"src": "3279:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2088",
																"typeString": "contract IDAO"
															}
														],
														"id": 2618,
														"name": "__DaoAuthorizableUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "3245:33:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IDAO_$2088_$returns$__$",
															"typeString": "function (contract IDAO)"
														}
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:47:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2621,
												"nodeType": "ExpressionStatement",
												"src": "3245:47:30"
											},
											{
												"expression": {
													"id": 2624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2622,
														"name": "ens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2576,
														"src": "3305:3:30",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENS_$136",
															"typeString": "contract ENS"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2623,
														"name": "_ens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "3311:4:30",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENS_$136",
															"typeString": "contract ENS"
														}
													},
													"src": "3305:10:30",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENS_$136",
														"typeString": "contract ENS"
													}
												},
												"id": 2625,
												"nodeType": "ExpressionStatement",
												"src": "3305:10:30"
											},
											{
												"expression": {
													"id": 2628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2626,
														"name": "node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "3326:4:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2627,
														"name": "_node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2613,
														"src": "3333:5:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3326:12:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2629,
												"nodeType": "ExpressionStatement",
												"src": "3326:12:30"
											},
											{
												"assignments": [
													2631
												],
												"declarations": [
													{
														"constant": false,
														"id": 2631,
														"mutability": "mutable",
														"name": "nodeResolver",
														"nameLocation": "3359:12:30",
														"nodeType": "VariableDeclaration",
														"scope": 2654,
														"src": "3351:20:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2630,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3351:7:30",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2636,
												"initialValue": {
													"arguments": [
														{
															"id": 2634,
															"name": "_node",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "3387:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2632,
															"name": "ens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2576,
															"src": "3374:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENS_$136",
																"typeString": "contract ENS"
															}
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3378:8:30",
														"memberName": "resolver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "3374:12:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32) view external returns (address)"
														}
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3374:19:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3351:42:30"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2637,
														"name": "nodeResolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "3410:12:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3434:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3426:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2638,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3426:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3426:10:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3410:26:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2649,
												"nodeType": "IfStatement",
												"src": "3406:120:30",
												"trueBody": {
													"id": 2648,
													"nodeType": "Block",
													"src": "3438:88:30",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2644,
																		"name": "_node",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2613,
																		"src": "3483:5:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2645,
																		"name": "nodeResolver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2631,
																		"src": "3500:12:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2643,
																	"name": "InvalidResolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "3460:15:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address) pure"
																	}
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"3477:4:30",
																	"3490:8:30"
																],
																"names": [
																	"node",
																	"resolver"
																],
																"nodeType": "FunctionCall",
																"src": "3460:54:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2647,
															"nodeType": "RevertStatement",
															"src": "3453:61:30"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2650,
														"name": "resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "3538:8:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2651,
														"name": "nodeResolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "3549:12:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3538:23:30",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "3538:23:30"
											}
										]
									},
									"documentation": {
										"id": 2605,
										"nodeType": "StructuredDocumentation",
										"src": "2548:595:30",
										"text": "@notice Initializes the component by\n - checking that the contract is the domain node owner or an approved operator\n - initializing the underlying component\n - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID\n - setting the ENS contract, the domain node hash, and resolver.\n @param _managingDao The interface of the DAO managing the components permissions.\n @param _ens The interface of the ENS registry to be used.\n @param _node The ENS parent domain node under which the subdomains are to be registered."
									},
									"functionSelector": "6133f985",
									"id": 2655,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2616,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2615,
												"name": "initializer",
												"nameLocations": [
													"3222:11:30"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "3222:11:30"
											},
											"nodeType": "ModifierInvocation",
											"src": "3222:11:30"
										}
									],
									"name": "initialize",
									"nameLocation": "3158:10:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "_managingDao",
												"nameLocation": "3174:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "3169:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2088",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 2607,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2606,
														"name": "IDAO",
														"nameLocations": [
															"3169:4:30"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "3169:4:30"
													},
													"referencedDeclaration": 2088,
													"src": "3169:4:30",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2088",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "_ens",
												"nameLocation": "3192:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "3188:8:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ENS_$136",
													"typeString": "contract ENS"
												},
												"typeName": {
													"id": 2610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2609,
														"name": "ENS",
														"nameLocations": [
															"3188:3:30"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 136,
														"src": "3188:3:30"
													},
													"referencedDeclaration": 136,
													"src": "3188:3:30",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENS_$136",
														"typeString": "contract ENS"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "_node",
												"nameLocation": "3206:5:30",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "3198:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2612,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3198:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3168:44:30"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3234:0:30"
									},
									"scope": 2767,
									"src": "3149:420:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 2665,
										"nodeType": "Block",
										"src": "4033:2:30",
										"statements": []
									},
									"documentation": {
										"id": 2656,
										"nodeType": "StructuredDocumentation",
										"src": "3577:334:30",
										"text": "@notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\n @dev The caller must have the `UPGRADE_REGISTRAR_PERMISSION_ID` permission."
									},
									"id": 2666,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2662,
													"name": "UPGRADE_REGISTRAR_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2566,
													"src": "4000:31:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2663,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2661,
												"name": "auth",
												"nameLocations": [
													"3995:4:30"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2147,
												"src": "3995:4:30"
											},
											"nodeType": "ModifierInvocation",
											"src": "3995:37:30"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "3926:17:30",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2660,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3986:8:30"
									},
									"parameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "3954:7:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3943:25:30"
									},
									"returnParameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4033:0:30"
									},
									"scope": 2767,
									"src": "3917:118:30",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "4560:416:30",
										"statements": [
											{
												"assignments": [
													2678
												],
												"declarations": [
													{
														"constant": false,
														"id": 2678,
														"mutability": "mutable",
														"name": "subnode",
														"nameLocation": "4579:7:30",
														"nodeType": "VariableDeclaration",
														"scope": 2733,
														"src": "4571:15:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2677,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4571:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2686,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2682,
																	"name": "node",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2579,
																	"src": "4616:4:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2683,
																	"name": "_label",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "4622:6:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2680,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4599:3:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4603:12:30",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4599:16:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4599:30:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2679,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4589:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4589:41:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4571:59:30"
											},
											{
												"assignments": [
													2688
												],
												"declarations": [
													{
														"constant": false,
														"id": 2688,
														"mutability": "mutable",
														"name": "currentOwner",
														"nameLocation": "4649:12:30",
														"nodeType": "VariableDeclaration",
														"scope": 2733,
														"src": "4641:20:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2687,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4641:7:30",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2693,
												"initialValue": {
													"arguments": [
														{
															"id": 2691,
															"name": "subnode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2678,
															"src": "4674:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2689,
															"name": "ens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2576,
															"src": "4664:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENS_$136",
																"typeString": "contract ENS"
															}
														},
														"id": 2690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4668:5:30",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 105,
														"src": "4664:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32) view external returns (address)"
														}
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4664:18:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4641:41:30"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2694,
														"name": "currentOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "4699:12:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4723:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4715:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2695,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4715:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 2698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4715:10:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4699:26:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2706,
												"nodeType": "IfStatement",
												"src": "4695:106:30",
												"trueBody": {
													"id": 2705,
													"nodeType": "Block",
													"src": "4727:74:30",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2701,
																		"name": "subnode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2678,
																		"src": "4767:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2702,
																		"name": "currentOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2688,
																		"src": "4776:12:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2700,
																	"name": "AlreadyRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "4749:17:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address) pure"
																	}
																},
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4749:40:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2704,
															"nodeType": "RevertStatement",
															"src": "4742:47:30"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2710,
															"name": "node",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "4833:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2711,
															"name": "_label",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2669,
															"src": "4839:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4855:4:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
																		"typeString": "contract ENSSubdomainRegistrar"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$2767",
																		"typeString": "contract ENSSubdomainRegistrar"
																	}
																],
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4847:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4847:7:30",
																	"typeDescriptions": {}
																}
															},
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4847:13:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2707,
															"name": "ens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2576,
															"src": "4813:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENS_$136",
																"typeString": "contract ENS"
															}
														},
														"id": 2709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4817:15:30",
														"memberName": "setSubnodeOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 70,
														"src": "4813:19:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,address) external returns (bytes32)"
														}
													},
													"id": 2716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:48:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2717,
												"nodeType": "ExpressionStatement",
												"src": "4813:48:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2721,
															"name": "subnode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2678,
															"src": "4888:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2722,
															"name": "resolver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "4897:8:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2718,
															"name": "ens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2576,
															"src": "4872:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENS_$136",
																"typeString": "contract ENS"
															}
														},
														"id": 2720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4876:11:30",
														"memberName": "setResolver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 77,
														"src": "4872:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) external"
														}
													},
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:34:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2724,
												"nodeType": "ExpressionStatement",
												"src": "4872:34:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2729,
															"name": "subnode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2678,
															"src": "4944:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2730,
															"name": "_targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "4953:14:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2726,
																	"name": "resolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "4926:8:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2725,
																"name": "Resolver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "4917:8:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Resolver_$335_$",
																	"typeString": "type(contract Resolver)"
																}
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4917:18:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Resolver_$335",
																"typeString": "contract Resolver"
															}
														},
														"id": 2728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4936:7:30",
														"memberName": "setAddr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "4917:26:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) external"
														}
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4917:51:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2732,
												"nodeType": "ExpressionStatement",
												"src": "4917:51:30"
											}
										]
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "4043:369:30",
										"text": "@notice Registers a new subdomain with this registrar as the owner and set the target address in the resolver.\n @dev It reverts with no message if this contract isn't the owner nor an approved operator for the given node.\n @param _label The labelhash of the subdomain name.\n @param _targetAddress The address to which the subdomain resolves."
									},
									"functionSelector": "89bb4145",
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2674,
													"name": "REGISTER_ENS_SUBDOMAIN_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2572,
													"src": "4522:36:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2675,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2673,
												"name": "auth",
												"nameLocations": [
													"4517:4:30"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2147,
												"src": "4517:4:30"
											},
											"nodeType": "ModifierInvocation",
											"src": "4517:42:30"
										}
									],
									"name": "registerSubnode",
									"nameLocation": "4427:15:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "_label",
												"nameLocation": "4461:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "4453:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2668,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "_targetAddress",
												"nameLocation": "4486:14:30",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "4478:22:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:65:30"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4560:0:30"
									},
									"scope": 2767,
									"src": "4418:558:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2760,
										"nodeType": "Block",
										"src": "5266:164:30",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2743,
														"name": "_resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "5281:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5302:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5294:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2744,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5294:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 2747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5294:10:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5281:23:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2755,
												"nodeType": "IfStatement",
												"src": "5277:113:30",
												"trueBody": {
													"id": 2754,
													"nodeType": "Block",
													"src": "5306:84:30",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2750,
																		"name": "node",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "5351:4:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2751,
																		"name": "_resolver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2737,
																		"src": "5367:9:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2749,
																	"name": "InvalidResolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "5328:15:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address) pure"
																	}
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"5345:4:30",
																	"5357:8:30"
																],
																"names": [
																	"node",
																	"resolver"
																],
																"nodeType": "FunctionCall",
																"src": "5328:50:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2753,
															"nodeType": "RevertStatement",
															"src": "5321:57:30"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2756,
														"name": "resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "5402:8:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2757,
														"name": "_resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "5413:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5402:20:30",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2759,
												"nodeType": "ExpressionStatement",
												"src": "5402:20:30"
											}
										]
									},
									"documentation": {
										"id": 2735,
										"nodeType": "StructuredDocumentation",
										"src": "4984:161:30",
										"text": "@notice Sets the default resolver contract address that the subdomains being registered will use.\n @param _resolver The resolver contract to be used."
									},
									"functionSelector": "c66485b2",
									"id": 2761,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2740,
													"name": "REGISTER_ENS_SUBDOMAIN_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2572,
													"src": "5228:36:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2739,
												"name": "auth",
												"nameLocations": [
													"5223:4:30"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2147,
												"src": "5223:4:30"
											},
											"nodeType": "ModifierInvocation",
											"src": "5223:42:30"
										}
									],
									"name": "setDefaultResolver",
									"nameLocation": "5160:18:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "_resolver",
												"nameLocation": "5197:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "5189:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5189:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:35:30"
									},
									"returnParameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:30"
									},
									"scope": 2767,
									"src": "5151:279:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2762,
										"nodeType": "StructuredDocumentation",
										"src": "5438:273:30",
										"text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
									},
									"id": 2766,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "5737:5:30",
									"nodeType": "VariableDeclaration",
									"scope": 2767,
									"src": "5717:25:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$47_storage",
										"typeString": "uint256[47]"
									},
									"typeName": {
										"baseType": {
											"id": 2763,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5717:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2765,
										"length": {
											"hexValue": "3437",
											"id": 2764,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5725:2:30",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_47_by_1",
												"typeString": "int_const 47"
											},
											"value": "47"
										},
										"nodeType": "ArrayTypeName",
										"src": "5717:11:30",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$47_storage_ptr",
											"typeString": "uint256[47]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2768,
							"src": "1046:4700:30",
							"usedErrors": [
								575,
								578,
								839,
								844,
								1283,
								1296,
								1574,
								1577,
								2168,
								2589,
								2596
							],
							"usedEvents": [
								583,
								1262
							]
						}
					],
					"src": "49:5699:30"
				},
				"id": 30
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/protocol/IProtocolVersion.sol",
					"exportedSymbols": {
						"IProtocolVersion": [
							2779
						]
					},
					"id": 2780,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2769,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:31"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProtocolVersion",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2770,
								"nodeType": "StructuredDocumentation",
								"src": "76:203:31",
								"text": "@title IProtocolVersion\n @author Aragon Association - 2022-2023\n @notice An interface defining the semantic Aragon OSx protocol version number.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": false,
							"id": 2779,
							"linearizedBaseContracts": [
								2779
							],
							"name": "IProtocolVersion",
							"nameLocation": "289:16:31",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "313:446:31",
										"text": "@notice Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\n @return _version Returns the semantic Aragon OSx protocol version number.\n @dev This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts."
									},
									"functionSelector": "2ae9c600",
									"id": 2778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolVersion",
									"nameLocation": "774:15:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:31"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "_version",
												"nameLocation": "831:8:31",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "815:24:31",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
													"typeString": "uint8[3]"
												},
												"typeName": {
													"baseType": {
														"id": 2773,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "815:5:31",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2775,
													"length": {
														"hexValue": "33",
														"id": 2774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "821:1:31",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "815:8:31",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
														"typeString": "uint8[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:26:31"
									},
									"scope": 2779,
									"src": "765:76:31",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2780,
							"src": "279:565:31",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "49:797:31"
				},
				"id": 31
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/protocol/ProtocolVersion.sol",
					"exportedSymbols": {
						"IProtocolVersion": [
							2779
						],
						"ProtocolVersion": [
							2801
						]
					},
					"id": 2802,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:32"
						},
						{
							"absolutePath": "packages/contracts/src/utils/protocol/IProtocolVersion.sol",
							"file": "./IProtocolVersion.sol",
							"id": 2783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2802,
							"sourceUnit": 2780,
							"src": "76:56:32",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2782,
										"name": "IProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2779,
										"src": "84:16:32",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2785,
										"name": "IProtocolVersion",
										"nameLocations": [
											"518:16:32"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2779,
										"src": "518:16:32"
									},
									"id": 2786,
									"nodeType": "InheritanceSpecifier",
									"src": "518:16:32"
								}
							],
							"canonicalName": "ProtocolVersion",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2784,
								"nodeType": "StructuredDocumentation",
								"src": "136:345:32",
								"text": "@title ProtocolVersion\n @author Aragon Association - 2023\n @notice An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\n @dev Do not add any new variables to this contract that would shift down storage in the inheritance chain.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 2801,
							"linearizedBaseContracts": [
								2801,
								2779
							],
							"name": "ProtocolVersion",
							"nameLocation": "499:15:32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2778
									],
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "721:35:32",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "740:1:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "34",
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "743:1:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														{
															"hexValue": "30",
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "746:1:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 2797,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "739:9:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
														"typeString": "uint8[3] memory"
													}
												},
												"functionReturnParameters": 2793,
												"id": 2798,
												"nodeType": "Return",
												"src": "732:16:32"
											}
										]
									},
									"documentation": {
										"id": 2787,
										"nodeType": "StructuredDocumentation",
										"src": "618:32:32",
										"text": "@inheritdoc IProtocolVersion"
									},
									"functionSelector": "2ae9c600",
									"id": 2800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "protocolVersion",
									"nameLocation": "665:15:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:32"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "704:15:32",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
													"typeString": "uint8[3]"
												},
												"typeName": {
													"baseType": {
														"id": 2789,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "704:5:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2791,
													"length": {
														"hexValue": "33",
														"id": 2790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "710:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "704:8:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
														"typeString": "uint8[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:17:32"
									},
									"scope": 2801,
									"src": "656:100:32",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2802,
							"src": "481:278:32",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "49:712:32"
				},
				"id": 32
			}
		}
	}
}