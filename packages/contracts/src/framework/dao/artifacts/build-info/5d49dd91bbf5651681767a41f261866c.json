{
	"id": "5d49dd91bbf5651681767a41f261866c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/contracts/src/framework/dao/DAORegistry.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {ProtocolVersion} from \"../../utils/protocol/ProtocolVersion.sol\";\r\nimport {IDAO} from \"../../core/dao/IDAO.sol\";\r\nimport {ENSSubdomainRegistrar} from \"../utils/ens/ENSSubdomainRegistrar.sol\";\r\nimport {InterfaceBasedRegistry} from \"../utils/InterfaceBasedRegistry.sol\";\r\nimport {isSubdomainValid} from \"../utils/RegistryUtils.sol\";\r\n\r\n/// @title Register your unique DAO subdomain\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice This contract provides the possibility to register a DAO.\r\n/// @custom:security-contact sirt@aragon.org\r\ncontract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {\r\n    /// @notice The ID of the permission required to call the `register` function.\r\n    bytes32 public constant REGISTER_DAO_PERMISSION_ID = keccak256(\"REGISTER_DAO_PERMISSION\");\r\n\r\n    /// @notice The ENS subdomain registrar registering the DAO subdomains.\r\n    ENSSubdomainRegistrar public subdomainRegistrar;\r\n\r\n    /// @notice Thrown if the DAO subdomain doesn't match the regex `[0-9a-z\\-]`\r\n    error InvalidDaoSubdomain(string subdomain);\r\n\r\n    /// @notice Emitted when a new DAO is registered.\r\n    /// @param dao The address of the DAO contract.\r\n    /// @param creator The address of the creator.\r\n    /// @param subdomain The DAO subdomain.\r\n    event DAORegistered(address indexed dao, address indexed creator, string subdomain);\r\n\r\n    /// @dev Used to disallow initializing the implementation contract by an attacker for extra safety.\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    /// @notice Initializes the contract.\r\n    /// @param _managingDao the managing DAO address.\r\n    /// @param _subdomainRegistrar The `ENSSubdomainRegistrar` where `ENS` subdomain will be registered.\r\n    function initialize(\r\n        IDAO _managingDao,\r\n        ENSSubdomainRegistrar _subdomainRegistrar\r\n    ) external initializer {\r\n        __InterfaceBasedRegistry_init(_managingDao, type(IDAO).interfaceId);\r\n        subdomainRegistrar = _subdomainRegistrar;\r\n    }\r\n\r\n    /// @notice Registers a DAO by its address. If a non-empty subdomain name is provided that is not taken already, the DAO becomes the owner of the ENS name.\r\n    /// @dev A subdomain is unique within the Aragon DAO framework and can get stored here.\r\n    /// @param dao The address of the DAO contract.\r\n    /// @param creator The address of the creator.\r\n    /// @param subdomain The DAO subdomain.\r\n    function register(\r\n        IDAO dao,\r\n        address creator,\r\n        string calldata subdomain\r\n    ) external auth(REGISTER_DAO_PERMISSION_ID) {\r\n        address daoAddr = address(dao);\r\n\r\n        _register(daoAddr);\r\n\r\n        if ((bytes(subdomain).length > 0)) {\r\n            if (!isSubdomainValid(subdomain)) {\r\n                revert InvalidDaoSubdomain({subdomain: subdomain});\r\n            }\r\n\r\n            bytes32 labelhash = keccak256(bytes(subdomain));\r\n\r\n            subdomainRegistrar.registerSubnode(labelhash, daoAddr);\r\n        }\r\n\r\n        emit DAORegistered(daoAddr, creator, subdomain);\r\n    }\r\n\r\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\r\n    uint256[49] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/framework/utils/RegistryUtils.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @notice Validates that a subdomain name is composed only from characters in the allowed character set:\r\n/// - the lowercase letters `a-z`\r\n/// - the digits `0-9`\r\n/// - the hyphen `-`\r\n/// @dev This function allows empty (zero-length) subdomains. If this should not be allowed, make sure to add a respective check when using this function in your code.\r\n/// @param subDomain The name of the DAO.\r\n/// @return `true` if the name is valid or `false` if at least one char is invalid.\r\n/// @dev Aborts on the first invalid char found.\r\n/// @custom:security-contact sirt@aragon.org\r\nfunction isSubdomainValid(string calldata subDomain) pure returns (bool) {\r\n    bytes calldata nameBytes = bytes(subDomain);\r\n    uint256 nameLength = nameBytes.length;\r\n    for (uint256 i; i < nameLength; i++) {\r\n        uint8 char = uint8(nameBytes[i]);\r\n\r\n        // if char is between a-z\r\n        if (char > 96 && char < 123) {\r\n            continue;\r\n        }\r\n\r\n        // if char is between 0-9\r\n        if (char > 47 && char < 58) {\r\n            continue;\r\n        }\r\n\r\n        // if char is -\r\n        if (char == 45) {\r\n            continue;\r\n        }\r\n\r\n        // invalid if one char doesn't work with the rules above\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n"
			},
			"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {UUPSUpgradeable} from \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {ERC165CheckerUpgradeable} from \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\";\r\n\r\nimport {DaoAuthorizableUpgradeable} from \"../../core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\";\r\nimport {IDAO} from \"../../core/dao/IDAO.sol\";\r\n\r\n/// @title InterfaceBasedRegistry\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice An [ERC-165](https://eips.ethereum.org/EIPS/eip-165)-based registry for contracts.\r\n/// @custom:security-contact sirt@aragon.org\r\nabstract contract InterfaceBasedRegistry is UUPSUpgradeable, DaoAuthorizableUpgradeable {\r\n    using ERC165CheckerUpgradeable for address;\r\n\r\n    /// @notice The ID of the permission required to call the `_authorizeUpgrade` function.\r\n    bytes32 public constant UPGRADE_REGISTRY_PERMISSION_ID =\r\n        keccak256(\"UPGRADE_REGISTRY_PERMISSION\");\r\n\r\n    /// @notice The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support.\r\n    bytes4 public targetInterfaceId;\r\n\r\n    /// @notice The mapping containing the registry entries returning true for registered contract addresses.\r\n    mapping(address => bool) public entries;\r\n\r\n    /// @notice Thrown if the contract is already registered.\r\n    /// @param registrant The address of the contract to be registered.\r\n    error ContractAlreadyRegistered(address registrant);\r\n\r\n    /// @notice Thrown if the contract does not support the required interface.\r\n    /// @param registrant The address of the contract to be registered.\r\n    error ContractInterfaceInvalid(address registrant);\r\n\r\n    /// @notice Thrown if the contract does not support ERC165.\r\n    /// @param registrant The address of the contract.\r\n    error ContractERC165SupportInvalid(address registrant);\r\n\r\n    /// @notice Initializes the component.\r\n    /// @dev This is required for the UUPS upgradability pattern.\r\n    /// @param _managingDao The interface of the DAO managing the components permissions.\r\n    /// @param _targetInterfaceId The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface id of the contracts to be registered.\r\n    function __InterfaceBasedRegistry_init(\r\n        IDAO _managingDao,\r\n        bytes4 _targetInterfaceId\r\n    ) internal virtual onlyInitializing {\r\n        __DaoAuthorizableUpgradeable_init(_managingDao);\r\n\r\n        targetInterfaceId = _targetInterfaceId;\r\n    }\r\n\r\n    /// @notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\r\n    /// @dev The caller must have the `UPGRADE_REGISTRY_PERMISSION_ID` permission.\r\n    function _authorizeUpgrade(\r\n        address\r\n    ) internal virtual override auth(UPGRADE_REGISTRY_PERMISSION_ID) {}\r\n\r\n    /// @notice Register an [ERC-165](https://eips.ethereum.org/EIPS/eip-165) contract address.\r\n    /// @dev The managing DAO needs to grant REGISTER_PERMISSION_ID to registrar.\r\n    /// @param _registrant The address of an [ERC-165](https://eips.ethereum.org/EIPS/eip-165) contract.\r\n    function _register(address _registrant) internal {\r\n        if (entries[_registrant]) {\r\n            revert ContractAlreadyRegistered({registrant: _registrant});\r\n        }\r\n\r\n        // Will revert if address is not a contract or doesn't fully support targetInterfaceId + ERC165.\r\n        if (!_registrant.supportsInterface(targetInterfaceId)) {\r\n            revert ContractInterfaceInvalid(_registrant);\r\n        }\r\n\r\n        entries[_registrant] = true;\r\n    }\r\n\r\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\r\n    uint256[48] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport \"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol\";\r\nimport \"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol\";\r\n\r\nimport {ProtocolVersion} from \"../../../utils/protocol/ProtocolVersion.sol\";\r\nimport {UUPSUpgradeable} from \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {DaoAuthorizableUpgradeable} from \"../../../core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\";\r\nimport {IDAO} from \"../../../core/dao/IDAO.sol\";\r\n\r\n/// @title ENSSubdomainRegistrar\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice This contract registers ENS subdomains under a parent domain specified in the initialization process and maintains ownership of the subdomain since only the resolver address is set. This contract must either be the domain node owner or an approved operator of the node owner. The default resolver being used is the one specified in the parent domain.\r\n/// @custom:security-contact sirt@aragon.org\r\ncontract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {\r\n    /// @notice The ID of the permission required to call the `_authorizeUpgrade` function.\r\n    bytes32 public constant UPGRADE_REGISTRAR_PERMISSION_ID =\r\n        keccak256(\"UPGRADE_REGISTRAR_PERMISSION\");\r\n\r\n    /// @notice The ID of the permission required to call the `registerSubnode` and `setDefaultResolver` function.\r\n    bytes32 public constant REGISTER_ENS_SUBDOMAIN_PERMISSION_ID =\r\n        keccak256(\"REGISTER_ENS_SUBDOMAIN_PERMISSION\");\r\n\r\n    /// @notice The ENS registry contract\r\n    ENS public ens;\r\n\r\n    /// @notice The namehash of the domain on which subdomains are registered.\r\n    bytes32 public node;\r\n\r\n    /// @notice The address of the ENS resolver resolving the names to an address.\r\n    address public resolver;\r\n\r\n    /// @notice Thrown if the subnode is already registered.\r\n    /// @param subnode The subnode namehash.\r\n    /// @param nodeOwner The node owner address.\r\n    error AlreadyRegistered(bytes32 subnode, address nodeOwner);\r\n\r\n    /// @notice Thrown if node's resolver is invalid.\r\n    /// @param node The node namehash.\r\n    /// @param resolver The node resolver address.\r\n    error InvalidResolver(bytes32 node, address resolver);\r\n\r\n    /// @dev Used to disallow initializing the implementation contract by an attacker for extra safety.\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    /// @notice Initializes the component by\r\n    /// - checking that the contract is the domain node owner or an approved operator\r\n    /// - initializing the underlying component\r\n    /// - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID\r\n    /// - setting the ENS contract, the domain node hash, and resolver.\r\n    /// @param _managingDao The interface of the DAO managing the components permissions.\r\n    /// @param _ens The interface of the ENS registry to be used.\r\n    /// @param _node The ENS parent domain node under which the subdomains are to be registered.\r\n    function initialize(IDAO _managingDao, ENS _ens, bytes32 _node) external initializer {\r\n        __DaoAuthorizableUpgradeable_init(_managingDao);\r\n\r\n        ens = _ens;\r\n        node = _node;\r\n\r\n        address nodeResolver = ens.resolver(_node);\r\n\r\n        if (nodeResolver == address(0)) {\r\n            revert InvalidResolver({node: _node, resolver: nodeResolver});\r\n        }\r\n\r\n        resolver = nodeResolver;\r\n    }\r\n\r\n    /// @notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\r\n    /// @dev The caller must have the `UPGRADE_REGISTRAR_PERMISSION_ID` permission.\r\n    function _authorizeUpgrade(\r\n        address\r\n    ) internal virtual override auth(UPGRADE_REGISTRAR_PERMISSION_ID) {}\r\n\r\n    /// @notice Registers a new subdomain with this registrar as the owner and set the target address in the resolver.\r\n    /// @dev It reverts with no message if this contract isn't the owner nor an approved operator for the given node.\r\n    /// @param _label The labelhash of the subdomain name.\r\n    /// @param _targetAddress The address to which the subdomain resolves.\r\n    function registerSubnode(\r\n        bytes32 _label,\r\n        address _targetAddress\r\n    ) external auth(REGISTER_ENS_SUBDOMAIN_PERMISSION_ID) {\r\n        bytes32 subnode = keccak256(abi.encodePacked(node, _label));\r\n        address currentOwner = ens.owner(subnode);\r\n\r\n        if (currentOwner != address(0)) {\r\n            revert AlreadyRegistered(subnode, currentOwner);\r\n        }\r\n\r\n        ens.setSubnodeOwner(node, _label, address(this));\r\n        ens.setResolver(subnode, resolver);\r\n        Resolver(resolver).setAddr(subnode, _targetAddress);\r\n    }\r\n\r\n    /// @notice Sets the default resolver contract address that the subdomains being registered will use.\r\n    /// @param _resolver The resolver contract to be used.\r\n    function setDefaultResolver(\r\n        address _resolver\r\n    ) external auth(REGISTER_ENS_SUBDOMAIN_PERMISSION_ID) {\r\n        if (_resolver == address(0)) {\r\n            revert InvalidResolver({node: node, resolver: _resolver});\r\n        }\r\n\r\n        resolver = _resolver;\r\n    }\r\n\r\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\r\n    uint256[47] private __gap;\r\n}\r\n"
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @title IDAO\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice The interface required for DAOs within the Aragon App DAO framework.\r\n/// @custom:security-contact sirt@aragon.org\r\ninterface IDAO {\r\n    /// @notice The action struct to be consumed by the DAO's `execute` function resulting in an external call.\r\n    /// @param to The address to call.\r\n    /// @param value The native token value to be sent with the call.\r\n    /// @param data The bytes-encoded function selector and calldata for the call.\r\n    struct Action {\r\n        address to;\r\n        uint256 value;\r\n        bytes data;\r\n    }\r\n\r\n    /// @notice Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\r\n    /// @param _where The address of the contract.\r\n    /// @param _who The address of a EOA or contract to give the permissions.\r\n    /// @param _permissionId The permission identifier.\r\n    /// @param _data The optional data passed to the `PermissionCondition` registered.\r\n    /// @return Returns true if the address has permission, false if not.\r\n    function hasPermission(\r\n        address _where,\r\n        address _who,\r\n        bytes32 _permissionId,\r\n        bytes memory _data\r\n    ) external view returns (bool);\r\n\r\n    /// @notice Updates the DAO metadata (e.g., an IPFS hash).\r\n    /// @param _metadata The IPFS hash of the new metadata object.\r\n    function setMetadata(bytes calldata _metadata) external;\r\n\r\n    /// @notice Emitted when the DAO metadata is updated.\r\n    /// @param metadata The IPFS hash of the new metadata object.\r\n    event MetadataSet(bytes metadata);\r\n\r\n    /// @notice Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\r\n    /// @param _callId The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\r\n    /// @param _actions The array of actions.\r\n    /// @param _allowFailureMap A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\r\n    /// @return The array of results obtained from the executed actions in `bytes`.\r\n    /// @return The resulting failure map containing the actions have actually failed.\r\n    function execute(\r\n        bytes32 _callId,\r\n        Action[] memory _actions,\r\n        uint256 _allowFailureMap\r\n    ) external returns (bytes[] memory, uint256);\r\n\r\n    /// @notice Emitted when a proposal is executed.\r\n    /// @param actor The address of the caller.\r\n    /// @param callId The ID of the call.\r\n    /// @param actions The array of actions executed.\r\n    /// @param allowFailureMap The allow failure map encoding which actions are allowed to fail.\r\n    /// @param failureMap The failure map encoding which actions have failed.\r\n    /// @param execResults The array with the results of the executed actions.\r\n    /// @dev The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.\r\n    event Executed(\r\n        address indexed actor,\r\n        bytes32 callId,\r\n        Action[] actions,\r\n        uint256 allowFailureMap,\r\n        uint256 failureMap,\r\n        bytes[] execResults\r\n    );\r\n\r\n    /// @notice Emitted when a standard callback is registered.\r\n    /// @param interfaceId The ID of the interface.\r\n    /// @param callbackSelector The selector of the callback function.\r\n    /// @param magicNumber The magic number to be registered for the callback function selector.\r\n    event StandardCallbackRegistered(\r\n        bytes4 interfaceId,\r\n        bytes4 callbackSelector,\r\n        bytes4 magicNumber\r\n    );\r\n\r\n    /// @notice Deposits (native) tokens to the DAO contract with a reference string.\r\n    /// @param _token The address of the token or address(0) in case of the native token.\r\n    /// @param _amount The amount of tokens to deposit.\r\n    /// @param _reference The reference describing the deposit reason.\r\n    function deposit(address _token, uint256 _amount, string calldata _reference) external payable;\r\n\r\n    /// @notice Emitted when a token deposit has been made to the DAO.\r\n    /// @param sender The address of the sender.\r\n    /// @param token The address of the deposited token.\r\n    /// @param amount The amount of tokens deposited.\r\n    /// @param _reference The reference describing the deposit reason.\r\n    event Deposited(\r\n        address indexed sender,\r\n        address indexed token,\r\n        uint256 amount,\r\n        string _reference\r\n    );\r\n\r\n    /// @notice Emitted when a native token deposit has been made to the DAO.\r\n    /// @dev This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\r\n    /// @param sender The address of the sender.\r\n    /// @param amount The amount of native tokens deposited.\r\n    event NativeTokenDeposited(address sender, uint256 amount);\r\n\r\n    /// @notice Setter for the trusted forwarder verifying the meta transaction.\r\n    /// @param _trustedForwarder The trusted forwarder address.\r\n    function setTrustedForwarder(address _trustedForwarder) external;\r\n\r\n    /// @notice Getter for the trusted forwarder verifying the meta transaction.\r\n    /// @return The trusted forwarder address.\r\n    function getTrustedForwarder() external view returns (address);\r\n\r\n    /// @notice Emitted when a new TrustedForwarder is set on the DAO.\r\n    /// @param forwarder the new forwarder address.\r\n    event TrustedForwarderSet(address forwarder);\r\n\r\n    /// @notice Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\r\n    /// @param _hash The hash of the data to be signed.\r\n    /// @param _signature The signature byte array associated with `_hash`.\r\n    /// @return Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not.\r\n    function isValidSignature(bytes32 _hash, bytes memory _signature) external returns (bytes4);\r\n\r\n    /// @notice Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\r\n    /// @param _interfaceId The ID of the interface.\r\n    /// @param _callbackSelector The selector of the callback function.\r\n    /// @param _magicNumber The magic number to be registered for the function signature.\r\n    function registerStandardCallback(\r\n        bytes4 _interfaceId,\r\n        bytes4 _callbackSelector,\r\n        bytes4 _magicNumber\r\n    ) external;\r\n\r\n    /// @notice Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\r\n    /// @dev Introduced in v1.0.0. Removed in v1.4.0.\r\n    function setSignatureValidator(address) external;\r\n}\r\n"
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {IProtocolVersion} from \"./IProtocolVersion.sol\";\r\n\r\n/// @title ProtocolVersion\r\n/// @author Aragon Association - 2023\r\n/// @notice An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\r\n/// @dev Do not add any new variables to this contract that would shift down storage in the inheritance chain.\r\n/// @custom:security-contact sirt@aragon.org\r\nabstract contract ProtocolVersion is IProtocolVersion {\r\n    // IMPORTANT: Do not add any storage variable, see the above notice.\r\n\r\n    /// @inheritdoc IProtocolVersion\r\n    function protocolVersion() public pure returns (uint8[3] memory) {\r\n        return [1, 4, 0];\r\n    }\r\n}\r\n"
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @title IProtocolVersion\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice An interface defining the semantic Aragon OSx protocol version number.\r\n/// @custom:security-contact sirt@aragon.org\r\ninterface IProtocolVersion {\r\n    /// @notice Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\r\n    /// @return _version Returns the semantic Aragon OSx protocol version number.\r\n    /// @dev This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\r\n    function protocolVersion() external view returns (uint8[3] memory _version);\r\n}\r\n"
			},
			"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {ContextUpgradeable} from \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\";\r\n\r\nimport {IDAO} from \"../../dao/IDAO.sol\";\r\nimport {_auth} from \"../../utils/auth.sol\";\r\n\r\n/// @title DaoAuthorizableUpgradeable\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.\r\n/// @dev Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.\r\n/// @custom:security-contact sirt@aragon.org\r\nabstract contract DaoAuthorizableUpgradeable is ContextUpgradeable {\r\n    /// @notice The associated DAO managing the permissions of inheriting contracts.\r\n    IDAO private dao_;\r\n\r\n    /// @notice Initializes the contract by setting the associated DAO.\r\n    /// @param _dao The associated DAO address.\r\n    function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {\r\n        dao_ = _dao;\r\n    }\r\n\r\n    /// @notice Returns the DAO contract.\r\n    /// @return The DAO contract.\r\n    function dao() public view returns (IDAO) {\r\n        return dao_;\r\n    }\r\n\r\n    /// @notice A modifier to make functions on inheriting contracts authorized. Permissions to call the function are checked through the associated DAO's permission manager.\r\n    /// @param _permissionId The permission identifier required to call the method this modifier is applied to.\r\n    modifier auth(bytes32 _permissionId) {\r\n        _auth(dao_, address(this), _msgSender(), _permissionId, _msgData());\r\n        _;\r\n    }\r\n\r\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\r\n    uint256[49] private __gap;\r\n}\r\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is IERC1822Proxiable, ERC1967Upgrade {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\nimport \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol\";\nimport \"./profiles/IABIResolver.sol\";\nimport \"./profiles/IAddressResolver.sol\";\nimport \"./profiles/IAddrResolver.sol\";\nimport \"./profiles/IContentHashResolver.sol\";\nimport \"./profiles/IDNSRecordResolver.sol\";\nimport \"./profiles/IDNSZoneResolver.sol\";\nimport \"./profiles/IInterfaceResolver.sol\";\nimport \"./profiles/INameResolver.sol\";\nimport \"./profiles/IPubkeyResolver.sol\";\nimport \"./profiles/ITextResolver.sol\";\nimport \"./profiles/IExtendedResolver.sol\";\n\n/**\n * A generic resolver interface which includes all the functions including the ones deprecated\n */\ninterface Resolver is\n    IERC165,\n    IABIResolver,\n    IAddressResolver,\n    IAddrResolver,\n    IContentHashResolver,\n    IDNSRecordResolver,\n    IDNSZoneResolver,\n    IInterfaceResolver,\n    INameResolver,\n    IPubkeyResolver,\n    ITextResolver,\n    IExtendedResolver\n{\n    /* Deprecated events */\n    event ContentChanged(bytes32 indexed node, bytes32 hash);\n\n    function setApprovalForAll(address, bool) external;\n\n    function approve(bytes32 node, address delegate, bool approved) external;\n\n    function isApprovedForAll(address account, address operator) external;\n\n    function isApprovedFor(\n        address owner,\n        bytes32 node,\n        address delegate\n    ) external;\n\n    function setABI(\n        bytes32 node,\n        uint256 contentType,\n        bytes calldata data\n    ) external;\n\n    function setAddr(bytes32 node, address addr) external;\n\n    function setAddr(bytes32 node, uint256 coinType, bytes calldata a) external;\n\n    function setContenthash(bytes32 node, bytes calldata hash) external;\n\n    function setDnsrr(bytes32 node, bytes calldata data) external;\n\n    function setName(bytes32 node, string calldata _name) external;\n\n    function setPubkey(bytes32 node, bytes32 x, bytes32 y) external;\n\n    function setText(\n        bytes32 node,\n        string calldata key,\n        string calldata value\n    ) external;\n\n    function setInterface(\n        bytes32 node,\n        bytes4 interfaceID,\n        address implementer\n    ) external;\n\n    function multicall(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n\n    function multicallWithNodeCheck(\n        bytes32 nodehash,\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n\n    /* Deprecated functions */\n    function content(bytes32 node) external view returns (bytes32);\n\n    function multihash(bytes32 node) external view returns (bytes memory);\n\n    function setContent(bytes32 node, bytes32 hash) external;\n\n    function setMultihash(bytes32 node, bytes calldata hash) external;\n}\n"
			},
			"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol": {
				"content": "pragma solidity >=0.8.4;\n\ninterface ENS {\n    // Logged when the owner of a node assigns a new owner to a subnode.\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n    // Logged when the owner of a node transfers ownership to a new account.\n    event Transfer(bytes32 indexed node, address owner);\n\n    // Logged when the resolver for a node changes.\n    event NewResolver(bytes32 indexed node, address resolver);\n\n    // Logged when the TTL of a node changes\n    event NewTTL(bytes32 indexed node, uint64 ttl);\n\n    // Logged when an operator is added or removed.\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    function setRecord(\n        bytes32 node,\n        address owner,\n        address resolver,\n        uint64 ttl\n    ) external;\n\n    function setSubnodeRecord(\n        bytes32 node,\n        bytes32 label,\n        address owner,\n        address resolver,\n        uint64 ttl\n    ) external;\n\n    function setSubnodeOwner(\n        bytes32 node,\n        bytes32 label,\n        address owner\n    ) external returns (bytes32);\n\n    function setResolver(bytes32 node, address resolver) external;\n\n    function setOwner(bytes32 node, address owner) external;\n\n    function setTTL(bytes32 node, uint64 ttl) external;\n\n    function setApprovalForAll(address operator, bool approved) external;\n\n    function owner(bytes32 node) external view returns (address);\n\n    function resolver(bytes32 node) external view returns (address);\n\n    function ttl(bytes32 node) external view returns (uint64);\n\n    function recordExists(bytes32 node) external view returns (bool);\n\n    function isApprovedForAll(\n        address owner,\n        address operator\n    ) external view returns (bool);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165CheckerUpgradeable {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"packages/contracts/src/core/utils/auth.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {IDAO} from \"../dao/IDAO.sol\";\r\n\r\n/// @notice Thrown if a call is unauthorized in the associated DAO.\r\n/// @param dao The associated DAO.\r\n/// @param where The context in which the authorization reverted.\r\n/// @param who The address (EOA or contract) missing the permission.\r\n/// @param permissionId The permission identifier.\r\nerror DaoUnauthorized(address dao, address where, address who, bytes32 permissionId);\r\n\r\n/// @notice A free function checking if a caller is granted permissions on a target contract via a permission identifier that redirects the approval to a `PermissionCondition` if this was specified in the setup.\r\n/// @param _where The address of the target contract for which `who` receives permission.\r\n/// @param _who The address (EOA or contract) owning the permission.\r\n/// @param _permissionId The permission identifier.\r\n/// @param _data The optional data passed to the `PermissionCondition` registered.\r\n/// @custom:security-contact sirt@aragon.org\r\nfunction _auth(\r\n    IDAO _dao,\r\n    address _where,\r\n    address _who,\r\n    bytes32 _permissionId,\r\n    bytes calldata _data\r\n) view {\r\n    if (!_dao.hasPermission(_where, _who, _permissionId, _data))\r\n        revert DaoUnauthorized({\r\n            dao: address(_dao),\r\n            where: _where,\r\n            who: _who,\r\n            permissionId: _permissionId\r\n        });\r\n}\r\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ninterface IExtendedResolver {\n    function resolve(\n        bytes memory name,\n        bytes memory data\n    ) external view returns (bytes memory);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface ITextResolver {\n    event TextChanged(\n        bytes32 indexed node,\n        string indexed indexedKey,\n        string key,\n        string value\n    );\n\n    /**\n     * Returns the text data associated with an ENS node and key.\n     * @param node The ENS node to query.\n     * @param key The text data key to query.\n     * @return The associated text data.\n     */\n    function text(\n        bytes32 node,\n        string calldata key\n    ) external view returns (string memory);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IPubkeyResolver {\n    event PubkeyChanged(bytes32 indexed node, bytes32 x, bytes32 y);\n\n    /**\n     * Returns the SECP256k1 public key associated with an ENS node.\n     * Defined in EIP 619.\n     * @param node The ENS node to query\n     * @return x The X coordinate of the curve point for the public key.\n     * @return y The Y coordinate of the curve point for the public key.\n     */\n    function pubkey(bytes32 node) external view returns (bytes32 x, bytes32 y);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface INameResolver {\n    event NameChanged(bytes32 indexed node, string name);\n\n    /**\n     * Returns the name associated with an ENS node, for reverse records.\n     * Defined in EIP181.\n     * @param node The ENS node to query.\n     * @return The associated name.\n     */\n    function name(bytes32 node) external view returns (string memory);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IInterfaceResolver {\n    event InterfaceChanged(\n        bytes32 indexed node,\n        bytes4 indexed interfaceID,\n        address implementer\n    );\n\n    /**\n     * Returns the address of a contract that implements the specified interface for this name.\n     * If an implementer has not been set for this interfaceID and name, the resolver will query\n     * the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that\n     * contract implements EIP165 and returns `true` for the specified interfaceID, its address\n     * will be returned.\n     * @param node The ENS node to query.\n     * @param interfaceID The EIP 165 interface ID to check for.\n     * @return The address that implements this interface, or 0 if the interface is unsupported.\n     */\n    function interfaceImplementer(\n        bytes32 node,\n        bytes4 interfaceID\n    ) external view returns (address);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IDNSZoneResolver {\n    // DNSZonehashChanged is emitted whenever a given node's zone hash is updated.\n    event DNSZonehashChanged(\n        bytes32 indexed node,\n        bytes lastzonehash,\n        bytes zonehash\n    );\n\n    /**\n     * zonehash obtains the hash for the zone.\n     * @param node The ENS node to query.\n     * @return The associated contenthash.\n     */\n    function zonehash(bytes32 node) external view returns (bytes memory);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IDNSRecordResolver {\n    // DNSRecordChanged is emitted whenever a given node/name/resource's RRSET is updated.\n    event DNSRecordChanged(\n        bytes32 indexed node,\n        bytes name,\n        uint16 resource,\n        bytes record\n    );\n    // DNSRecordDeleted is emitted whenever a given node/name/resource's RRSET is deleted.\n    event DNSRecordDeleted(bytes32 indexed node, bytes name, uint16 resource);\n\n    /**\n     * Obtain a DNS record.\n     * @param node the namehash of the node for which to fetch the record\n     * @param name the keccak-256 hash of the fully-qualified name for which to fetch the record\n     * @param resource the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\n     * @return the DNS record in wire format if present, otherwise empty\n     */\n    function dnsRecord(\n        bytes32 node,\n        bytes32 name,\n        uint16 resource\n    ) external view returns (bytes memory);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IContentHashResolver {\n    event ContenthashChanged(bytes32 indexed node, bytes hash);\n\n    /**\n     * Returns the contenthash associated with an ENS node.\n     * @param node The ENS node to query.\n     * @return The associated contenthash.\n     */\n    function contenthash(bytes32 node) external view returns (bytes memory);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\n/**\n * Interface for the legacy (ETH-only) addr function.\n */\ninterface IAddrResolver {\n    event AddrChanged(bytes32 indexed node, address a);\n\n    /**\n     * Returns the address associated with an ENS node.\n     * @param node The ENS node to query.\n     * @return The associated address.\n     */\n    function addr(bytes32 node) external view returns (address payable);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\n/**\n * Interface for the new (multicoin) addr function.\n */\ninterface IAddressResolver {\n    event AddressChanged(\n        bytes32 indexed node,\n        uint256 coinType,\n        bytes newAddress\n    );\n\n    function addr(\n        bytes32 node,\n        uint256 coinType\n    ) external view returns (bytes memory);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4;\n\ninterface IABIResolver {\n    event ABIChanged(bytes32 indexed node, uint256 indexed contentType);\n\n    /**\n     * Returns the ABI associated with an ENS node.\n     * Defined in EIP205.\n     * @param node The ENS node to query\n     * @param contentTypes A bitwise OR of the ABI formats accepted by the caller.\n     * @return contentType The content type of the return value\n     * @return data The ABI data\n     */\n    function ABI(\n        bytes32 node,\n        uint256 contentTypes\n    ) external view returns (uint256, bytes memory);\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol": {
				"ENS": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "NewOwner",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "NewResolver",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "NewTTL",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "recordExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "resolver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "setRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "setResolver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setSubnodeOwner",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "setSubnodeRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "setTTL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "ttl",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isApprovedForAll(address,address)": "e985e9c5",
							"owner(bytes32)": "02571be3",
							"recordExists(bytes32)": "f79fe538",
							"resolver(bytes32)": "0178b8bf",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setOwner(bytes32,address)": "5b0fc9c3",
							"setRecord(bytes32,address,address,uint64)": "cf408823",
							"setResolver(bytes32,address)": "1896f70a",
							"setSubnodeOwner(bytes32,bytes32,address)": "06ab5923",
							"setSubnodeRecord(bytes32,bytes32,address,address,uint64)": "5ef2c7f0",
							"setTTL(bytes32,uint64)": "14ab9038",
							"ttl(bytes32)": "16a25cbd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"NewTTL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"recordExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setSubnodeRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setTTL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"ttl\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol\":\"ENS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol\":{\"keccak256\":\"0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda\",\"urls\":[\"bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314\",\"dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 520,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 523,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 502,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 520,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 523,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 520,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 523,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 502,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 817,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a8d41dc7e4cae7f774b574668b84fd486324c9125825e91fa07ea44b9e9ef8d564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8d41dc7e4cae7f774b574668b84fd486324c9125825e91fa07ea44b9e9ef8d564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD4 SAR 0xC7 0xE4 0xCA 0xE7 0xF7 PUSH21 0xB574668B84FD486324C9125825E91FA07EA44B9E9E 0xF8 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:9180:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8d41dc7e4cae7f774b574668b84fd486324c9125825e91fa07ea44b9e9ef8d564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD4 SAR 0xC7 0xE4 0xCA 0xE7 0xF7 PUSH21 0xB574668B84FD486324C9125825E91FA07EA44B9E9E 0xF8 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:9180:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8d41dc7e4cae7f774b574668b84fd486324c9125825e91fa07ea44b9e9ef8d564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 520,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 523,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1189,
								"contract": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34af8e24ed2a26b8c7ef386ce9734c38e64c04ba21ac74f2fa900e85392ef3464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c34af8e24ed2a26b8c7ef386ce9734c38e64c04ba21ac74f2fa900e85392ef3464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x4A 0xF8 0xE2 0x4E 0xD2 LOG2 PUSH12 0x8C7EF386CE9734C38E64C04B LOG2 BYTE 0xC7 0x4F 0x2F 0xA9 STOP 0xE8 MSTORE8 SWAP3 0xEF CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1420:2696:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c34af8e24ed2a26b8c7ef386ce9734c38e64c04ba21ac74f2fa900e85392ef3464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x4A 0xF8 0xE2 0x4E 0xD2 LOG2 PUSH12 0x8C7EF386CE9734C38E64C04B LOG2 BYTE 0xC7 0x4F 0x2F 0xA9 STOP 0xE8 MSTORE8 SWAP3 0xEF CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1420:2696:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34af8e24ed2a26b8c7ef386ce9734c38e64c04ba21ac74f2fa900e85392ef3464736f6c63430008110033",
									".code": [
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol": {
				"ERC165CheckerUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":460:5114  library ERC165CheckerUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":460:5114  library ERC165CheckerUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201b13763d59ce5eb93751e94bb045bbf2b09e7f5b3741ea81ec80468ca25d094b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201b13763d59ce5eb93751e94bb045bbf2b09e7f5b3741ea81ec80468ca25d094b64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SGT PUSH23 0x3D59CE5EB93751E94BB045BBF2B09E7F5B3741EA81EC80 CHAINID DUP13 LOG2 0x5D MULMOD 0x4B PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "460:4654:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;460:4654:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201b13763d59ce5eb93751e94bb045bbf2b09e7f5b3741ea81ec80468ca25d094b64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SGT PUSH23 0x3D59CE5EB93751E94BB045BBF2B09E7F5B3741EA81EC80 CHAINID DUP13 LOG2 0x5D MULMOD 0x4B PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "460:4654:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getSupportedInterfaces(address,bytes4[] memory)": "infinite",
								"supportsAllInterfaces(address,bytes4[] memory)": "infinite",
								"supportsERC165(address)": "infinite",
								"supportsERC165InterfaceUnchecked(address,bytes4)": "infinite",
								"supportsInterface(address,bytes4)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 460,
									"end": 5114,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b13763d59ce5eb93751e94bb045bbf2b09e7f5b3741ea81ec80468ca25d094b64736f6c63430008110033",
									".code": [
										{
											"begin": 460,
											"end": 5114,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 460,
											"end": 5114,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":\"ERC165CheckerUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":{\"keccak256\":\"0x94edef8687cf1335a114f7e7267fa92cb0d9e61afde8d62589aceede6c245caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dbcc182503f671c6bb7e2c24fe5f13e4c7604389d6cfccd074bc1d9fa7b86df\",\"dweb:/ipfs/QmdioHDNmTsJx9xMcwBvA7QJhC4MzTmDmWHiWsZpbETLXx\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol": {
				"Resolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "contentType",
									"type": "uint256"
								}
							],
							"name": "ABIChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "a",
									"type": "address"
								}
							],
							"name": "AddrChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "newAddress",
									"type": "bytes"
								}
							],
							"name": "AddressChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "ContentChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "ContenthashChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "record",
									"type": "bytes"
								}
							],
							"name": "DNSRecordChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								}
							],
							"name": "DNSRecordDeleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "lastzonehash",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "zonehash",
									"type": "bytes"
								}
							],
							"name": "DNSZonehashChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "NameChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"name": "PubkeyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "indexedKey",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "key",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "TextChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "contentTypes",
									"type": "uint256"
								}
							],
							"name": "ABI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "content",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "contenthash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								}
							],
							"name": "dnsRecord",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "interfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "isApprovedFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "nodehash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicallWithNodeCheck",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "multihash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "pubkey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "resolve",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "contentType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "setABI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "a",
									"type": "bytes"
								}
							],
							"name": "setAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "setAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "setContent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "setContenthash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "setDnsrr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterface",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "setMultihash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "setName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"name": "setPubkey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "setText",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								}
							],
							"name": "text",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "zonehash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"ABI(bytes32,uint256)": {
								"params": {
									"contentTypes": "A bitwise OR of the ABI formats accepted by the caller.",
									"node": "The ENS node to query"
								},
								"returns": {
									"_0": "contentType The content type of the return value",
									"_1": "data The ABI data"
								}
							},
							"addr(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated address."
								}
							},
							"contenthash(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated contenthash."
								}
							},
							"dnsRecord(bytes32,bytes32,uint16)": {
								"params": {
									"name": "the keccak-256 hash of the fully-qualified name for which to fetch the record",
									"node": "the namehash of the node for which to fetch the record",
									"resource": "the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types"
								},
								"returns": {
									"_0": "the DNS record in wire format if present, otherwise empty"
								}
							},
							"interfaceImplementer(bytes32,bytes4)": {
								"params": {
									"interfaceID": "The EIP 165 interface ID to check for.",
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The address that implements this interface, or 0 if the interface is unsupported."
								}
							},
							"name(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated name."
								}
							},
							"pubkey(bytes32)": {
								"params": {
									"node": "The ENS node to query"
								},
								"returns": {
									"x": "The X coordinate of the curve point for the public key.",
									"y": "The Y coordinate of the curve point for the public key."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"text(bytes32,string)": {
								"params": {
									"key": "The text data key to query.",
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated text data."
								}
							},
							"zonehash(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated contenthash."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ABI(bytes32,uint256)": "2203ab56",
							"addr(bytes32)": "3b3b57de",
							"addr(bytes32,uint256)": "f1cb7e06",
							"approve(bytes32,address,bool)": "a4b91a01",
							"content(bytes32)": "2dff6941",
							"contenthash(bytes32)": "bc1c58d1",
							"dnsRecord(bytes32,bytes32,uint16)": "a8fa5682",
							"interfaceImplementer(bytes32,bytes4)": "124a319c",
							"isApprovedFor(address,bytes32,address)": "a9784b3e",
							"isApprovedForAll(address,address)": "e985e9c5",
							"multicall(bytes[])": "ac9650d8",
							"multicallWithNodeCheck(bytes32,bytes[])": "e32954eb",
							"multihash(bytes32)": "e89401a1",
							"name(bytes32)": "691f3431",
							"pubkey(bytes32)": "c8690233",
							"resolve(bytes,bytes)": "9061b923",
							"setABI(bytes32,uint256,bytes)": "623195b0",
							"setAddr(bytes32,address)": "d5fa2b00",
							"setAddr(bytes32,uint256,bytes)": "8b95dd71",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setContent(bytes32,bytes32)": "c3d014d6",
							"setContenthash(bytes32,bytes)": "304e6ade",
							"setDnsrr(bytes32,bytes)": "76196c88",
							"setInterface(bytes32,bytes4,address)": "e59d895d",
							"setMultihash(bytes32,bytes)": "aa4cb547",
							"setName(bytes32,string)": "77372213",
							"setPubkey(bytes32,bytes32,bytes32)": "29cd62ea",
							"setText(bytes32,string,string)": "10f13a8c",
							"supportsInterface(bytes4)": "01ffc9a7",
							"text(bytes32,string)": "59d1d43c",
							"zonehash(bytes32)": "5c98042b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"}],\"name\":\"ABIChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddrChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newAddress\",\"type\":\"bytes\"}],\"name\":\"AddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"ContentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"ContenthashChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"record\",\"type\":\"bytes\"}],\"name\":\"DNSRecordChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"DNSRecordDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"lastzonehash\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"zonehash\",\"type\":\"bytes\"}],\"name\":\"DNSZonehashChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"PubkeyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"indexedKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"TextChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contentTypes\",\"type\":\"uint256\"}],\"name\":\"ABI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"content\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"contenthash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"dnsRecord\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"interfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"isApprovedFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nodehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicallWithNodeCheck\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"multihash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"pubkey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setABI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"a\",\"type\":\"bytes\"}],\"name\":\"setAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"setContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"setContenthash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setDnsrr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterface\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"setMultihash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"setPubkey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setText\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"text\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"zonehash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ABI(bytes32,uint256)\":{\"params\":{\"contentTypes\":\"A bitwise OR of the ABI formats accepted by the caller.\",\"node\":\"The ENS node to query\"},\"returns\":{\"_0\":\"contentType The content type of the return value\",\"_1\":\"data The ABI data\"}},\"addr(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated address.\"}},\"contenthash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated contenthash.\"}},\"dnsRecord(bytes32,bytes32,uint16)\":{\"params\":{\"name\":\"the keccak-256 hash of the fully-qualified name for which to fetch the record\",\"node\":\"the namehash of the node for which to fetch the record\",\"resource\":\"the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\"},\"returns\":{\"_0\":\"the DNS record in wire format if present, otherwise empty\"}},\"interfaceImplementer(bytes32,bytes4)\":{\"params\":{\"interfaceID\":\"The EIP 165 interface ID to check for.\",\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The address that implements this interface, or 0 if the interface is unsupported.\"}},\"name(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated name.\"}},\"pubkey(bytes32)\":{\"params\":{\"node\":\"The ENS node to query\"},\"returns\":{\"x\":\"The X coordinate of the curve point for the public key.\",\"y\":\"The Y coordinate of the curve point for the public key.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"text(bytes32,string)\":{\"params\":{\"key\":\"The text data key to query.\",\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated text data.\"}},\"zonehash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated contenthash.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ABI(bytes32,uint256)\":{\"notice\":\"Returns the ABI associated with an ENS node. Defined in EIP205.\"},\"addr(bytes32)\":{\"notice\":\"Returns the address associated with an ENS node.\"},\"contenthash(bytes32)\":{\"notice\":\"Returns the contenthash associated with an ENS node.\"},\"dnsRecord(bytes32,bytes32,uint16)\":{\"notice\":\"Obtain a DNS record.\"},\"interfaceImplementer(bytes32,bytes4)\":{\"notice\":\"Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned.\"},\"name(bytes32)\":{\"notice\":\"Returns the name associated with an ENS node, for reverse records. Defined in EIP181.\"},\"pubkey(bytes32)\":{\"notice\":\"Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619.\"},\"text(bytes32,string)\":{\"notice\":\"Returns the text data associated with an ENS node and key.\"},\"zonehash(bytes32)\":{\"notice\":\"zonehash obtains the hash for the zone.\"}},\"notice\":\"A generic resolver interface which includes all the functions including the ones deprecated\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol\":\"Resolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol\":{\"keccak256\":\"0xb7919ce45b17fae018c501263ef7eb81b3c8e3fa81e99cc91aff719a6daaebe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2342dac876f5809e1460e9e0ef2560d1f739d35997d1e26c0cb2590927ca8a2f\",\"dweb:/ipfs/QmbBbLoCBdLxA66yeuT8xDCbPrFJD8HUWGmRW2Wq5k1cBx\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol\":{\"keccak256\":\"0x85b373d02d19374fe570af407f459768285704bf7f30ab17c30eabfb5a10e4c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046ce3d92d29806d7b447f7ab4227f19b0b2e5c75fd5b4a3fcaef7fe2442141\",\"dweb:/ipfs/QmRgnfWjFetrSJngkhU7Yui1ZcK1MeatvZDpvUTYNuYnND\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol\":{\"keccak256\":\"0x2ad7f2fc60ebe0f93745fe70247f6a854f66af732483fda2a3c5e055614445e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43922ba183ff20d87dce7fc5d715e626b26594151e36dcc8d7c6329b9a822963\",\"dweb:/ipfs/QmTg9uHTugTxzqddN68gnhNbGt4bGJBS9mQcss6GYggR4X\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol\":{\"keccak256\":\"0x411447c1e90c51e09702815a85ec725ffbbe37cf96e8cc4d2a8bd4ad8a59d73e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543aa2756447a428711b69aea79e9f4641c22f8330ba920b2a49fde8d9207f82\",\"dweb:/ipfs/QmTdpcYRWLH3BL7iytnqcSzRojTPe3YettKaTqeCvKPk54\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol\":{\"keccak256\":\"0xd95cd77684ba5752c428d7dceb4ecc6506ac94f4fbb910489637eb68dcd8e366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf1fee7770679bd935b8b5686789a4ecc532caeef5a9b8e1b60ae0c285e743e\",\"dweb:/ipfs/QmSaHBAqtDdbQLH6QN4EbupMrq2ah8g6fqE7fLX1u4cjMZ\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol\":{\"keccak256\":\"0xcfa52200edd337f2c6c5bf402352600584da033b21323603e53de33051a3e25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8355211d58db82660140191678ee342eb8a7ac46fa097ae8e03eef008f592e\",\"dweb:/ipfs/QmYDNiECPd4fJ7Vk9Xywfpg73rUvDpcYqas95ofGcpt7fM\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol\":{\"keccak256\":\"0xca1b3a16e7005533f2800a3e66fcdccf7c574deac7913d8c810f40aec1d58dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e38d5eb69e236c37e4a013628838070720c9e1923569650b01252868038c7a\",\"dweb:/ipfs/QmV397iZMRxtem79kJy5sueJadXoVL89gNViX2xciQHUrk\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol\":{\"keccak256\":\"0x5d81521cfae7d9a4475d27533cd8ed0d3475d369eb0674fd90ffbdbdf292faa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d244d15588785044b54c453ab6dc51c616ab70cb8b9e687d3e54565bcae97760\",\"dweb:/ipfs/QmXz4ZZBTFogdkdTV1mcE3ywvL2agKVZHLNNeRHCKVruYM\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol\":{\"keccak256\":\"0x390321fb58f7b927df9562450981e74b4be3907e7c09df321fd3b7409b63ae28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://045d12c6e0e4596b3672614751a9e75188183a89765a6abd938294e0294e9c56\",\"dweb:/ipfs/QmazngvagEoKe29s4M9Rv8KygWD5hrAtNPkYDPJ2pK13yx\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol\":{\"keccak256\":\"0x69748947093dd2fda9ddcebd0adf19a6d1e7600df1d4b1462a0417156caddca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2f86e50bd17c38fb10feb577d88d8970c585017a391ef10e3aaa3d50f81555\",\"dweb:/ipfs/QmaxLx2pqCUxf9W2dusfviZ9aSiTuVwuekGo73rjvmGifE\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol\":{\"keccak256\":\"0x7c5debb3c42cd9f5de2274ea7aa053f238608314b62db441c40e31cea2543fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e34ae2d84d542ffa6791486963f3fe04432a3ffd51877d441256dc2941914\",\"dweb:/ipfs/QmciS4mGAQ6KJtLiLcBFekHKhYAYMmubDWGkpZ3sUFtJPW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ABI(bytes32,uint256)": {
								"notice": "Returns the ABI associated with an ENS node. Defined in EIP205."
							},
							"addr(bytes32)": {
								"notice": "Returns the address associated with an ENS node."
							},
							"contenthash(bytes32)": {
								"notice": "Returns the contenthash associated with an ENS node."
							},
							"dnsRecord(bytes32,bytes32,uint16)": {
								"notice": "Obtain a DNS record."
							},
							"interfaceImplementer(bytes32,bytes4)": {
								"notice": "Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned."
							},
							"name(bytes32)": {
								"notice": "Returns the name associated with an ENS node, for reverse records. Defined in EIP181."
							},
							"pubkey(bytes32)": {
								"notice": "Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619."
							},
							"text(bytes32,string)": {
								"notice": "Returns the text data associated with an ENS node and key."
							},
							"zonehash(bytes32)": {
								"notice": "zonehash obtains the hash for the zone."
							}
						},
						"notice": "A generic resolver interface which includes all the functions including the ones deprecated",
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol": {
				"IABIResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "contentType",
									"type": "uint256"
								}
							],
							"name": "ABIChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "contentTypes",
									"type": "uint256"
								}
							],
							"name": "ABI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"ABI(bytes32,uint256)": {
								"params": {
									"contentTypes": "A bitwise OR of the ABI formats accepted by the caller.",
									"node": "The ENS node to query"
								},
								"returns": {
									"_0": "contentType The content type of the return value",
									"_1": "data The ABI data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ABI(bytes32,uint256)": "2203ab56"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"}],\"name\":\"ABIChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contentTypes\",\"type\":\"uint256\"}],\"name\":\"ABI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ABI(bytes32,uint256)\":{\"params\":{\"contentTypes\":\"A bitwise OR of the ABI formats accepted by the caller.\",\"node\":\"The ENS node to query\"},\"returns\":{\"_0\":\"contentType The content type of the return value\",\"_1\":\"data The ABI data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ABI(bytes32,uint256)\":{\"notice\":\"Returns the ABI associated with an ENS node. Defined in EIP205.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol\":\"IABIResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol\":{\"keccak256\":\"0x85b373d02d19374fe570af407f459768285704bf7f30ab17c30eabfb5a10e4c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046ce3d92d29806d7b447f7ab4227f19b0b2e5c75fd5b4a3fcaef7fe2442141\",\"dweb:/ipfs/QmRgnfWjFetrSJngkhU7Yui1ZcK1MeatvZDpvUTYNuYnND\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ABI(bytes32,uint256)": {
								"notice": "Returns the ABI associated with an ENS node. Defined in EIP205."
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol": {
				"IAddrResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "a",
									"type": "address"
								}
							],
							"name": "AddrChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addr(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated address."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addr(bytes32)": "3b3b57de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddrChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addr(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addr(bytes32)\":{\"notice\":\"Returns the address associated with an ENS node.\"}},\"notice\":\"Interface for the legacy (ETH-only) addr function.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol\":\"IAddrResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol\":{\"keccak256\":\"0x2ad7f2fc60ebe0f93745fe70247f6a854f66af732483fda2a3c5e055614445e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43922ba183ff20d87dce7fc5d715e626b26594151e36dcc8d7c6329b9a822963\",\"dweb:/ipfs/QmTg9uHTugTxzqddN68gnhNbGt4bGJBS9mQcss6GYggR4X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addr(bytes32)": {
								"notice": "Returns the address associated with an ENS node."
							}
						},
						"notice": "Interface for the legacy (ETH-only) addr function.",
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol": {
				"IAddressResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "newAddress",
									"type": "bytes"
								}
							],
							"name": "AddressChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "coinType",
									"type": "uint256"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addr(bytes32,uint256)": "f1cb7e06"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newAddress\",\"type\":\"bytes\"}],\"name\":\"AddressChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the new (multicoin) addr function.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol\":\"IAddressResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol\":{\"keccak256\":\"0x411447c1e90c51e09702815a85ec725ffbbe37cf96e8cc4d2a8bd4ad8a59d73e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543aa2756447a428711b69aea79e9f4641c22f8330ba920b2a49fde8d9207f82\",\"dweb:/ipfs/QmTdpcYRWLH3BL7iytnqcSzRojTPe3YettKaTqeCvKPk54\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the new (multicoin) addr function.",
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol": {
				"IContentHashResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "ContenthashChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "contenthash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"contenthash(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated contenthash."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"contenthash(bytes32)": "bc1c58d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"ContenthashChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"contenthash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"contenthash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated contenthash.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contenthash(bytes32)\":{\"notice\":\"Returns the contenthash associated with an ENS node.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol\":\"IContentHashResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol\":{\"keccak256\":\"0xd95cd77684ba5752c428d7dceb4ecc6506ac94f4fbb910489637eb68dcd8e366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf1fee7770679bd935b8b5686789a4ecc532caeef5a9b8e1b60ae0c285e743e\",\"dweb:/ipfs/QmSaHBAqtDdbQLH6QN4EbupMrq2ah8g6fqE7fLX1u4cjMZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"contenthash(bytes32)": {
								"notice": "Returns the contenthash associated with an ENS node."
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol": {
				"IDNSRecordResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "record",
									"type": "bytes"
								}
							],
							"name": "DNSRecordChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								}
							],
							"name": "DNSRecordDeleted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "resource",
									"type": "uint16"
								}
							],
							"name": "dnsRecord",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"dnsRecord(bytes32,bytes32,uint16)": {
								"params": {
									"name": "the keccak-256 hash of the fully-qualified name for which to fetch the record",
									"node": "the namehash of the node for which to fetch the record",
									"resource": "the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types"
								},
								"returns": {
									"_0": "the DNS record in wire format if present, otherwise empty"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dnsRecord(bytes32,bytes32,uint16)": "a8fa5682"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"record\",\"type\":\"bytes\"}],\"name\":\"DNSRecordChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"DNSRecordDeleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"dnsRecord\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"dnsRecord(bytes32,bytes32,uint16)\":{\"params\":{\"name\":\"the keccak-256 hash of the fully-qualified name for which to fetch the record\",\"node\":\"the namehash of the node for which to fetch the record\",\"resource\":\"the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\"},\"returns\":{\"_0\":\"the DNS record in wire format if present, otherwise empty\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dnsRecord(bytes32,bytes32,uint16)\":{\"notice\":\"Obtain a DNS record.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol\":\"IDNSRecordResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol\":{\"keccak256\":\"0xcfa52200edd337f2c6c5bf402352600584da033b21323603e53de33051a3e25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8355211d58db82660140191678ee342eb8a7ac46fa097ae8e03eef008f592e\",\"dweb:/ipfs/QmYDNiECPd4fJ7Vk9Xywfpg73rUvDpcYqas95ofGcpt7fM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"dnsRecord(bytes32,bytes32,uint16)": {
								"notice": "Obtain a DNS record."
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol": {
				"IDNSZoneResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "lastzonehash",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "zonehash",
									"type": "bytes"
								}
							],
							"name": "DNSZonehashChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "zonehash",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"zonehash(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated contenthash."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"zonehash(bytes32)": "5c98042b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"lastzonehash\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"zonehash\",\"type\":\"bytes\"}],\"name\":\"DNSZonehashChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"zonehash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"zonehash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated contenthash.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"zonehash(bytes32)\":{\"notice\":\"zonehash obtains the hash for the zone.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol\":\"IDNSZoneResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol\":{\"keccak256\":\"0xca1b3a16e7005533f2800a3e66fcdccf7c574deac7913d8c810f40aec1d58dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e38d5eb69e236c37e4a013628838070720c9e1923569650b01252868038c7a\",\"dweb:/ipfs/QmV397iZMRxtem79kJy5sueJadXoVL89gNViX2xciQHUrk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"zonehash(bytes32)": {
								"notice": "zonehash obtains the hash for the zone."
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol": {
				"IExtendedResolver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "resolve",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"resolve(bytes,bytes)": "9061b923"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol\":\"IExtendedResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol\":{\"keccak256\":\"0x5d81521cfae7d9a4475d27533cd8ed0d3475d369eb0674fd90ffbdbdf292faa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d244d15588785044b54c453ab6dc51c616ab70cb8b9e687d3e54565bcae97760\",\"dweb:/ipfs/QmXz4ZZBTFogdkdTV1mcE3ywvL2agKVZHLNNeRHCKVruYM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol": {
				"IInterfaceResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "interfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"interfaceImplementer(bytes32,bytes4)": {
								"params": {
									"interfaceID": "The EIP 165 interface ID to check for.",
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The address that implements this interface, or 0 if the interface is unsupported."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"interfaceImplementer(bytes32,bytes4)": "124a319c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"interfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"interfaceImplementer(bytes32,bytes4)\":{\"params\":{\"interfaceID\":\"The EIP 165 interface ID to check for.\",\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The address that implements this interface, or 0 if the interface is unsupported.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"interfaceImplementer(bytes32,bytes4)\":{\"notice\":\"Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol\":\"IInterfaceResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol\":{\"keccak256\":\"0x390321fb58f7b927df9562450981e74b4be3907e7c09df321fd3b7409b63ae28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://045d12c6e0e4596b3672614751a9e75188183a89765a6abd938294e0294e9c56\",\"dweb:/ipfs/QmazngvagEoKe29s4M9Rv8KygWD5hrAtNPkYDPJ2pK13yx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"interfaceImplementer(bytes32,bytes4)": {
								"notice": "Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned."
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol": {
				"INameResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "NameChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"name(bytes32)": {
								"params": {
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated name."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"name(bytes32)": "691f3431"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"name(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated name.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"name(bytes32)\":{\"notice\":\"Returns the name associated with an ENS node, for reverse records. Defined in EIP181.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol\":\"INameResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"name(bytes32)": {
								"notice": "Returns the name associated with an ENS node, for reverse records. Defined in EIP181."
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol": {
				"IPubkeyResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"name": "PubkeyChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "pubkey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "y",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"pubkey(bytes32)": {
								"params": {
									"node": "The ENS node to query"
								},
								"returns": {
									"x": "The X coordinate of the curve point for the public key.",
									"y": "The Y coordinate of the curve point for the public key."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pubkey(bytes32)": "c8690233"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"PubkeyChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"pubkey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pubkey(bytes32)\":{\"params\":{\"node\":\"The ENS node to query\"},\"returns\":{\"x\":\"The X coordinate of the curve point for the public key.\",\"y\":\"The Y coordinate of the curve point for the public key.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pubkey(bytes32)\":{\"notice\":\"Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol\":\"IPubkeyResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol\":{\"keccak256\":\"0x69748947093dd2fda9ddcebd0adf19a6d1e7600df1d4b1462a0417156caddca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2f86e50bd17c38fb10feb577d88d8970c585017a391ef10e3aaa3d50f81555\",\"dweb:/ipfs/QmaxLx2pqCUxf9W2dusfviZ9aSiTuVwuekGo73rjvmGifE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"pubkey(bytes32)": {
								"notice": "Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619."
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol": {
				"ITextResolver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "indexedKey",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "key",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "TextChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "key",
									"type": "string"
								}
							],
							"name": "text",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"text(bytes32,string)": {
								"params": {
									"key": "The text data key to query.",
									"node": "The ENS node to query."
								},
								"returns": {
									"_0": "The associated text data."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"text(bytes32,string)": "59d1d43c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"indexedKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"TextChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"text\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"text(bytes32,string)\":{\"params\":{\"key\":\"The text data key to query.\",\"node\":\"The ENS node to query.\"},\"returns\":{\"_0\":\"The associated text data.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"text(bytes32,string)\":{\"notice\":\"Returns the text data associated with an ENS node and key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol\":\"ITextResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol\":{\"keccak256\":\"0x7c5debb3c42cd9f5de2274ea7aa053f238608314b62db441c40e31cea2543fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e34ae2d84d542ffa6791486963f3fe04432a3ffd51877d441256dc2941914\",\"dweb:/ipfs/QmciS4mGAQ6KJtLiLcBFekHKhYAYMmubDWGkpZ3sUFtJPW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"text(bytes32,string)": {
								"notice": "Returns the text data associated with an ENS node and key."
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052cc55854ecfb129c87a398d130c7fa07e39747547adea9e42deb1f87185ac6d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052cc55854ecfb129c87a398d130c7fa07e39747547adea9e42deb1f87185ac6d64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xCC SSTORE DUP6 0x4E 0xCF 0xB1 0x29 0xC8 PUSH27 0x398D130C7FA07E39747547ADEA9E42DEB1F87185AC6D64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:9169:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:30;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052cc55854ecfb129c87a398d130c7fa07e39747547adea9e42deb1f87185ac6d64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xCC SSTORE DUP6 0x4E 0xCF 0xB1 0x29 0xC8 PUSH27 0x398D130C7FA07E39747547ADEA9E42DEB1F87185AC6D64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:9169:30:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 30,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 30,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 30
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052cc55854ecfb129c87a398d130c7fa07e39747547adea9e42deb1f87185ac6d64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 30
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 30
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 30,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 30
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122084bce6bebe250d4a4105f99ec786e03829c0a6aaf7e93171b2e5d19817852e8164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084bce6bebe250d4a4105f99ec786e03829c0a6aaf7e93171b2e5d19817852e8164736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xBC 0xE6 0xBE 0xBE 0x25 0xD 0x4A COINBASE SDIV 0xF9 SWAP15 0xC7 DUP7 0xE0 CODESIZE 0x29 0xC0 0xA6 0xAA 0xF7 0xE9 BALANCE PUSH18 0xB2E5D19817852E8164736F6C634300081100 CALLER ",
							"sourceMap": "1420:2685:31:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:31;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084bce6bebe250d4a4105f99ec786e03829c0a6aaf7e93171b2e5d19817852e8164736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xBC 0xE6 0xBE 0xBE 0x25 0xD 0x4A COINBASE SDIV 0xF9 SWAP15 0xC7 DUP7 0xE0 CODESIZE 0x29 0xC0 0xA6 0xAA 0xF7 0xE9 BALANCE PUSH18 0xB2E5D19817852E8164736F6C634300081100 CALLER ",
							"sourceMap": "1420:2685:31:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH #[$]",
									"source": 31,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [$]",
									"source": 31,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "CODECOPY",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "BYTE",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "EQ",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "tag",
									"source": 31,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "ADDRESS",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 31,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE8",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "RETURN",
									"source": 31
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122084bce6bebe250d4a4105f99ec786e03829c0a6aaf7e93171b2e5d19817852e8164736f6c63430008110033",
									".code": [
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSHDEPLOYADDRESS",
											"source": 31
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "ADDRESS",
											"source": 31
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 31,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "REVERT",
											"source": 31
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"IDAO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_reference",
									"type": "string"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "actor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "callId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"indexed": false,
									"internalType": "struct IDAO.Action[]",
									"name": "actions",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allowFailureMap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "failureMap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes[]",
									"name": "execResults",
									"type": "bytes[]"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "metadata",
									"type": "bytes"
								}
							],
							"name": "MetadataSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NativeTokenDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "callbackSelector",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "magicNumber",
									"type": "bytes4"
								}
							],
							"name": "StandardCallbackRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "TrustedForwarderSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_reference",
									"type": "string"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_callId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IDAO.Action[]",
									"name": "_actions",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_allowFailureMap",
									"type": "uint256"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "",
									"type": "bytes[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_permissionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "hasPermission",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								},
								{
									"internalType": "bytes4",
									"name": "_callbackSelector",
									"type": "bytes4"
								},
								{
									"internalType": "bytes4",
									"name": "_magicNumber",
									"type": "bytes4"
								}
							],
							"name": "registerStandardCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_metadata",
									"type": "bytes"
								}
							],
							"name": "setMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setSignatureValidator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedForwarder",
									"type": "address"
								}
							],
							"name": "setTrustedForwarder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"events": {
							"Deposited(address,address,uint256,string)": {
								"params": {
									"_reference": "The reference describing the deposit reason.",
									"amount": "The amount of tokens deposited.",
									"sender": "The address of the sender.",
									"token": "The address of the deposited token."
								}
							},
							"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])": {
								"details": "The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.",
								"params": {
									"actions": "The array of actions executed.",
									"actor": "The address of the caller.",
									"allowFailureMap": "The allow failure map encoding which actions are allowed to fail.",
									"callId": "The ID of the call.",
									"execResults": "The array with the results of the executed actions.",
									"failureMap": "The failure map encoding which actions have failed."
								}
							},
							"MetadataSet(bytes)": {
								"params": {
									"metadata": "The IPFS hash of the new metadata object."
								}
							},
							"NativeTokenDeposited(address,uint256)": {
								"details": "This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).",
								"params": {
									"amount": "The amount of native tokens deposited.",
									"sender": "The address of the sender."
								}
							},
							"StandardCallbackRegistered(bytes4,bytes4,bytes4)": {
								"params": {
									"callbackSelector": "The selector of the callback function.",
									"interfaceId": "The ID of the interface.",
									"magicNumber": "The magic number to be registered for the callback function selector."
								}
							},
							"TrustedForwarderSet(address)": {
								"params": {
									"forwarder": "the new forwarder address."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256,string)": {
								"params": {
									"_amount": "The amount of tokens to deposit.",
									"_reference": "The reference describing the deposit reason.",
									"_token": "The address of the token or address(0) in case of the native token."
								}
							},
							"execute(bytes32,(address,uint256,bytes)[],uint256)": {
								"params": {
									"_actions": "The array of actions.",
									"_allowFailureMap": "A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.",
									"_callId": "The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce."
								},
								"returns": {
									"_0": "The array of results obtained from the executed actions in `bytes`.",
									"_1": "The resulting failure map containing the actions have actually failed."
								}
							},
							"getTrustedForwarder()": {
								"returns": {
									"_0": "The trusted forwarder address."
								}
							},
							"hasPermission(address,address,bytes32,bytes)": {
								"params": {
									"_data": "The optional data passed to the `PermissionCondition` registered.",
									"_permissionId": "The permission identifier.",
									"_where": "The address of the contract.",
									"_who": "The address of a EOA or contract to give the permissions."
								},
								"returns": {
									"_0": "Returns true if the address has permission, false if not."
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"params": {
									"_hash": "The hash of the data to be signed.",
									"_signature": "The signature byte array associated with `_hash`."
								},
								"returns": {
									"_0": "Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not."
								}
							},
							"registerStandardCallback(bytes4,bytes4,bytes4)": {
								"params": {
									"_callbackSelector": "The selector of the callback function.",
									"_interfaceId": "The ID of the interface.",
									"_magicNumber": "The magic number to be registered for the function signature."
								}
							},
							"setMetadata(bytes)": {
								"params": {
									"_metadata": "The IPFS hash of the new metadata object."
								}
							},
							"setSignatureValidator(address)": {
								"details": "Introduced in v1.0.0. Removed in v1.4.0."
							},
							"setTrustedForwarder(address)": {
								"params": {
									"_trustedForwarder": "The trusted forwarder address."
								}
							}
						},
						"title": "IDAO",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(address,uint256,string)": "bfe07da6",
							"execute(bytes32,(address,uint256,bytes)[],uint256)": "c71bf324",
							"getTrustedForwarder()": "ce1b815f",
							"hasPermission(address,address,bytes32,bytes)": "fdef9106",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"registerStandardCallback(bytes4,bytes4,bytes4)": "c4a50145",
							"setMetadata(bytes)": "ee57e36f",
							"setSignatureValidator(address)": "3e2ab0d9",
							"setTrustedForwarder(address)": "da742228"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IDAO.Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowFailureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"execResults\",\"type\":\"bytes[]\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"callbackSelector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"magicNumber\",\"type\":\"bytes4\"}],\"name\":\"StandardCallbackRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"TrustedForwarderSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IDAO.Action[]\",\"name\":\"_actions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_allowFailureMap\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_permissionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"_callbackSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"_magicNumber\",\"type\":\"bytes4\"}],\"name\":\"registerStandardCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"setMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setSignatureValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"events\":{\"Deposited(address,address,uint256,string)\":{\"params\":{\"_reference\":\"The reference describing the deposit reason.\",\"amount\":\"The amount of tokens deposited.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"details\":\"The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.\",\"params\":{\"actions\":\"The array of actions executed.\",\"actor\":\"The address of the caller.\",\"allowFailureMap\":\"The allow failure map encoding which actions are allowed to fail.\",\"callId\":\"The ID of the call.\",\"execResults\":\"The array with the results of the executed actions.\",\"failureMap\":\"The failure map encoding which actions have failed.\"}},\"MetadataSet(bytes)\":{\"params\":{\"metadata\":\"The IPFS hash of the new metadata object.\"}},\"NativeTokenDeposited(address,uint256)\":{\"details\":\"This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\",\"params\":{\"amount\":\"The amount of native tokens deposited.\",\"sender\":\"The address of the sender.\"}},\"StandardCallbackRegistered(bytes4,bytes4,bytes4)\":{\"params\":{\"callbackSelector\":\"The selector of the callback function.\",\"interfaceId\":\"The ID of the interface.\",\"magicNumber\":\"The magic number to be registered for the callback function selector.\"}},\"TrustedForwarderSet(address)\":{\"params\":{\"forwarder\":\"the new forwarder address.\"}}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,string)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit.\",\"_reference\":\"The reference describing the deposit reason.\",\"_token\":\"The address of the token or address(0) in case of the native token.\"}},\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"params\":{\"_actions\":\"The array of actions.\",\"_allowFailureMap\":\"A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\",\"_callId\":\"The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\"},\"returns\":{\"_0\":\"The array of results obtained from the executed actions in `bytes`.\",\"_1\":\"The resulting failure map containing the actions have actually failed.\"}},\"getTrustedForwarder()\":{\"returns\":{\"_0\":\"The trusted forwarder address.\"}},\"hasPermission(address,address,bytes32,bytes)\":{\"params\":{\"_data\":\"The optional data passed to the `PermissionCondition` registered.\",\"_permissionId\":\"The permission identifier.\",\"_where\":\"The address of the contract.\",\"_who\":\"The address of a EOA or contract to give the permissions.\"},\"returns\":{\"_0\":\"Returns true if the address has permission, false if not.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_hash\":\"The hash of the data to be signed.\",\"_signature\":\"The signature byte array associated with `_hash`.\"},\"returns\":{\"_0\":\"Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not.\"}},\"registerStandardCallback(bytes4,bytes4,bytes4)\":{\"params\":{\"_callbackSelector\":\"The selector of the callback function.\",\"_interfaceId\":\"The ID of the interface.\",\"_magicNumber\":\"The magic number to be registered for the function signature.\"}},\"setMetadata(bytes)\":{\"params\":{\"_metadata\":\"The IPFS hash of the new metadata object.\"}},\"setSignatureValidator(address)\":{\"details\":\"Introduced in v1.0.0. Removed in v1.4.0.\"},\"setTrustedForwarder(address)\":{\"params\":{\"_trustedForwarder\":\"The trusted forwarder address.\"}}},\"title\":\"IDAO\",\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256,string)\":{\"notice\":\"Emitted when a token deposit has been made to the DAO.\"},\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"notice\":\"Emitted when a proposal is executed.\"},\"MetadataSet(bytes)\":{\"notice\":\"Emitted when the DAO metadata is updated.\"},\"NativeTokenDeposited(address,uint256)\":{\"notice\":\"Emitted when a native token deposit has been made to the DAO.\"},\"StandardCallbackRegistered(bytes4,bytes4,bytes4)\":{\"notice\":\"Emitted when a standard callback is registered.\"},\"TrustedForwarderSet(address)\":{\"notice\":\"Emitted when a new TrustedForwarder is set on the DAO.\"}},\"kind\":\"user\",\"methods\":{\"deposit(address,uint256,string)\":{\"notice\":\"Deposits (native) tokens to the DAO contract with a reference string.\"},\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"notice\":\"Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\"},\"getTrustedForwarder()\":{\"notice\":\"Getter for the trusted forwarder verifying the meta transaction.\"},\"hasPermission(address,address,bytes32,bytes)\":{\"notice\":\"Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\"},\"registerStandardCallback(bytes4,bytes4,bytes4)\":{\"notice\":\"Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\"},\"setMetadata(bytes)\":{\"notice\":\"Updates the DAO metadata (e.g., an IPFS hash).\"},\"setSignatureValidator(address)\":{\"notice\":\"Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\"},\"setTrustedForwarder(address)\":{\"notice\":\"Setter for the trusted forwarder verifying the meta transaction.\"}},\"notice\":\"The interface required for DAOs within the Aragon App DAO framework.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/core/dao/IDAO.sol\":\"IDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposited(address,address,uint256,string)": {
								"notice": "Emitted when a token deposit has been made to the DAO."
							},
							"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])": {
								"notice": "Emitted when a proposal is executed."
							},
							"MetadataSet(bytes)": {
								"notice": "Emitted when the DAO metadata is updated."
							},
							"NativeTokenDeposited(address,uint256)": {
								"notice": "Emitted when a native token deposit has been made to the DAO."
							},
							"StandardCallbackRegistered(bytes4,bytes4,bytes4)": {
								"notice": "Emitted when a standard callback is registered."
							},
							"TrustedForwarderSet(address)": {
								"notice": "Emitted when a new TrustedForwarder is set on the DAO."
							}
						},
						"kind": "user",
						"methods": {
							"deposit(address,uint256,string)": {
								"notice": "Deposits (native) tokens to the DAO contract with a reference string."
							},
							"execute(bytes32,(address,uint256,bytes)[],uint256)": {
								"notice": "Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted."
							},
							"getTrustedForwarder()": {
								"notice": "Getter for the trusted forwarder verifying the meta transaction."
							},
							"hasPermission(address,address,bytes32,bytes)": {
								"notice": "Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process."
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271)."
							},
							"registerStandardCallback(bytes4,bytes4,bytes4)": {
								"notice": "Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature."
							},
							"setMetadata(bytes)": {
								"notice": "Updates the DAO metadata (e.g., an IPFS hash)."
							},
							"setSignatureValidator(address)": {
								"notice": "Removed function being left here to not corrupt the IDAO interface ID. Any call will revert."
							},
							"setTrustedForwarder(address)": {
								"notice": "Setter for the trusted forwarder verifying the meta transaction."
							}
						},
						"notice": "The interface required for DAOs within the Aragon App DAO framework.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol": {
				"DaoAuthorizableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "dao",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"details": "Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.",
						"kind": "dev",
						"methods": {
							"dao()": {
								"returns": {
									"_0": "The DAO contract."
								}
							}
						},
						"title": "DaoAuthorizableUpgradeable",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dao()": "4162169f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"details\":\"Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.\",\"kind\":\"dev\",\"methods\":{\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}}},\"title\":\"DaoAuthorizableUpgradeable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dao()\":{\"notice\":\"Returns the DAO contract.\"}},\"notice\":\"An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":\"DaoAuthorizableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x39b73389db9653916ceba024ca2ee4cf290d094c2b6da4175603279960983ebe\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://de141cf0323525da50a63e09c2548d4f6faf55c1c804f5dfa7afc612d376d4aa\",\"dweb:/ipfs/QmVn9zMpwmE3AQme4gWzD43AzCBzyRjRFzwjPUjyH8KQcA\"]},\"packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x214d611471514ee8c3a21de59447101f1cba44090ee078fa2ba758a2ea5016cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7e51fe2ff30eb754d8ed0a1e4512b35f31d3b7fd1817e277cbfc8721d87fbbf\",\"dweb:/ipfs/QmdLQ1SW4EjRjXMD4pdtJPTDHeZaieYEN3EeiyaV4dDYRX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 520,
								"contract": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol:DaoAuthorizableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 523,
								"contract": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol:DaoAuthorizableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1189,
								"contract": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol:DaoAuthorizableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2995,
								"contract": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol:DaoAuthorizableUpgradeable",
								"label": "dao_",
								"offset": 0,
								"slot": "51",
								"type": "t_contract(IDAO)2980"
							},
							{
								"astId": 3044,
								"contract": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol:DaoAuthorizableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IDAO)2980": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"dao()": {
								"notice": "Returns the DAO contract."
							}
						},
						"notice": "An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/framework/dao/DAORegistry.sol": {
				"DAORegistry": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractAlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractERC165SupportInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractInterfaceInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dao",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "permissionId",
									"type": "bytes32"
								}
							],
							"name": "DaoUnauthorized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "subdomain",
									"type": "string"
								}
							],
							"name": "InvalidDaoSubdomain",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "subdomain",
									"type": "string"
								}
							],
							"name": "DAORegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REGISTER_DAO_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_REGISTRY_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dao",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "entries",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IDAO",
									"name": "_managingDao",
									"type": "address"
								},
								{
									"internalType": "contract ENSSubdomainRegistrar",
									"name": "_subdomainRegistrar",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IDAO",
									"name": "dao",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "subdomain",
									"type": "string"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "subdomainRegistrar",
							"outputs": [
								{
									"internalType": "contract ENSSubdomainRegistrar",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetInterfaceId",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"errors": {
							"ContractAlreadyRegistered(address)": [
								{
									"params": {
										"registrant": "The address of the contract to be registered."
									}
								}
							],
							"ContractERC165SupportInvalid(address)": [
								{
									"params": {
										"registrant": "The address of the contract."
									}
								}
							],
							"ContractInterfaceInvalid(address)": [
								{
									"params": {
										"registrant": "The address of the contract to be registered."
									}
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"params": {
										"dao": "The associated DAO.",
										"permissionId": "The permission identifier.",
										"where": "The context in which the authorization reverted.",
										"who": "The address (EOA or contract) missing the permission."
									}
								}
							]
						},
						"events": {
							"DAORegistered(address,address,string)": {
								"params": {
									"creator": "The address of the creator.",
									"dao": "The address of the DAO contract.",
									"subdomain": "The DAO subdomain."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor",
								"details": "Used to disallow initializing the implementation contract by an attacker for extra safety."
							},
							"dao()": {
								"returns": {
									"_0": "The DAO contract."
								}
							},
							"initialize(address,address)": {
								"params": {
									"_managingDao": "the managing DAO address.",
									"_subdomainRegistrar": "The `ENSSubdomainRegistrar` where `ENS` subdomain will be registered."
								}
							},
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_0": "Returns the semantic Aragon OSx protocol version number."
								}
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"register(address,address,string)": {
								"details": "A subdomain is unique within the Aragon DAO framework and can get stored here.",
								"params": {
									"creator": "The address of the creator.",
									"dao": "The address of the DAO contract.",
									"subdomain": "The DAO subdomain."
								}
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"title": "Register your unique DAO subdomain",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":626:3477  contract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {... */\n  mstore(0x40, 0xa0)\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1332:1336  this */\n  address\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1289:1337  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1602:1657  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1627:1649  _disableInitializers() */\n  tag_4\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1627:1647  _disableInitializers */\n  tag_5\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1627:1649  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":626:3477  contract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {... */\n  jump(tag_14)\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6007:6020  _initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6006:6020  !_initializing */\n  iszero\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x27\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:328   */\n  0x496e697469616c697a61626c653a20636f6e747261637420697320696e697469\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0xc8, 0x616c697a696e67)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:375   */\n  mstore\n    /* \"#utility.yul\":392:411   */\n  0x84\n  add\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  sload(0x00)\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6094:6109  type(uint8).max */\n  0xff\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  swap1\n  dup2\n  and\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6078:6109  _initialized != type(uint8).max */\n  eq\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\n  tag_11\n  jumpi\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6125:6137  _initialized */\n  0x00\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6140:6155  type(uint8).max */\n  0xff\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n    /* \"#utility.yul\":564:600   */\n  swap1\n  dup2\n  mstore\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n  swap1\n    /* \"#utility.yul\":552:554   */\n  0x20\n    /* \"#utility.yul\":537:555   */\n  add\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\ntag_11:\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":422:606   */\ntag_14:\n    /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":626:3477  contract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0227f622f4eada773ae6f97af92d6534c94b72b7108fbd4b2bf2fecdd9a0faeb\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":626:3477  contract DAORegistry is InterfaceBasedRegistry, ProtocolVersion {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f1ef286\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x74574eb7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa2298b4b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xede49739\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf29ee125\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x077393\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2ae9c600\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4162169f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x44162ef8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":956:1003  ENSSubdomainRegistrar public subdomainRegistrar */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      sload(0xfb)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":190:241   */\n      dup2\n      mstore\n        /* \"#utility.yul\":178:180   */\n      0x20\n        /* \"#utility.yul\":163:181   */\n      add\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":956:1003  ENSSubdomainRegistrar public subdomainRegistrar */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1239:1311  function dao() public view returns (IDAO) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1299:1303  dao_ */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x97))\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1239:1311  function dao() public view returns (IDAO) {... */\n      jump(tag_16)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1276:1307  bytes4 public targetInterfaceId */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sload(0xc9)\n      tag_36\n      swap1\n      0xe0\n      shl\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1529:1562   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1511:1563   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1499:1501   */\n      0x20\n        /* \"#utility.yul\":1484:1502   */\n      add\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1276:1307  bytes4 public targetInterfaceId */\n      tag_18\n        /* \"#utility.yul\":1367:1569   */\n      jump\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1869:2134  function initialize(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_26\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_8:\n      tag_26\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":3349:3374   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3337:3339   */\n      0x20\n        /* \"#utility.yul\":3322:3340   */\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      tag_18\n        /* \"#utility.yul\":3203:3380   */\n      jump\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1020:1126  bytes32 public constant UPGRADE_REGISTRY_PERMISSION_ID =... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_50\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1086:1126  keccak256(\"UPGRADE_REGISTRY_PERMISSION\") */\n      0x60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1020:1126  bytes32 public constant UPGRADE_REGISTRY_PERMISSION_ID =... */\n      dup2\n      jump\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":781:870  bytes32 public constant REGISTER_DAO_PERMISSION_ID = keccak256(\"REGISTER_DAO_PERMISSION\") */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_50\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":834:870  keccak256(\"REGISTER_DAO_PERMISSION\") */\n      0xde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":781:870  bytes32 public constant REGISTER_DAO_PERMISSION_ID = keccak256(\"REGISTER_DAO_PERMISSION\") */\n      dup2\n      jump\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2546:3161  function register(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_26\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1427:1466  mapping(address => bool) public entries */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_69:\n      mstore(0x20, 0xca)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_68:\n      mload(0x40)\n        /* \"#utility.yul\":4436:4450   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4429:4451   */\n      iszero\n        /* \"#utility.yul\":4411:4452   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4399:4401   */\n      0x20\n        /* \"#utility.yul\":4384:4402   */\n      add\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1427:1466  mapping(address => bool) public entries */\n      tag_18\n        /* \"#utility.yul\":4271:4458   */\n      jump\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n    tag_22:\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":704:719  uint8[3] memory */\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      pop\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":740:741  1 */\n      0x01\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      dup2\n      mstore\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":743:744  4 */\n      0x04\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x0227f622f4eada773ae6f97af92d6534c94b72b7108fbd4b2bf2fecdd9a0faeb\")\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x0227f622f4eada773ae6f97af92d6534c94b72b7108fbd4b2bf2fecdd9a0faeb\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_80\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1536:1601  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1457:1608  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_84\n      jump\t// in\n    tag_82:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3468:3504  _authorizeUpgrade(newImplementation) */\n      tag_86\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3486:3503  newImplementation */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3468:3485  _authorizeUpgrade */\n      tag_87\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3468:3504  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_86:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3555:3567  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3565:3566  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3555:3567  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3514:3575  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_88\n      swap2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3536:3553  newImplementation */\n      dup4\n      swap2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3555:3567  new bytes(0) */\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3514:3535  _upgradeToAndCallUUPS */\n      tag_93\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3514:3575  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_88:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1869:2134  function initialize(... */\n    tag_44:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_96:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_100\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_100:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5491:5493   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5473:5494   */\n      mstore\n        /* \"#utility.yul\":5530:5532   */\n      0x2e\n        /* \"#utility.yul\":5510:5528   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5503:5533   */\n      mstore\n        /* \"#utility.yul\":5569:5603   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":5549:5567   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5542:5604   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5620:5638   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5613:5657   */\n      mstore\n        /* \"#utility.yul\":5674:5693   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_78\n        /* \"#utility.yul\":5289:5699   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_101:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_104\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_104:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2008:2075  __InterfaceBasedRegistry_init(_managingDao, type(IDAO).interfaceId) */\n      tag_106\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2038:2050  _managingDao */\n      dup4\n      shl(0xe1, 0x49c2aa3f)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2008:2037  __InterfaceBasedRegistry_init */\n      tag_107\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2008:2075  __InterfaceBasedRegistry_init(_managingDao, type(IDAO).interfaceId) */\n      jump\t// in\n    tag_106:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2086:2104  subdomainRegistrar */\n      0xfb\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2086:2126  subdomainRegistrar = _subdomainRegistrar */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_108\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":5856:5892   */\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":5844:5846   */\n      0x20\n        /* \"#utility.yul\":5829:5847   */\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_108:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":1869:2134  function initialize(... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x0227f622f4eada773ae6f97af92d6534c94b72b7108fbd4b2bf2fecdd9a0faeb\")\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_112:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x0227f622f4eada773ae6f97af92d6534c94b72b7108fbd4b2bf2fecdd9a0faeb\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_114\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1536:1601  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1457:1608  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_84\n      jump\t// in\n    tag_115:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4016:4052  _authorizeUpgrade(newImplementation) */\n      tag_118\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4034:4051  newImplementation */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4016:4033  _authorizeUpgrade */\n      tag_87\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4016:4052  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_118:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4062:4114  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_119\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4084:4101  newImplementation */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4103:4107  data */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4109:4113  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4062:4083  _upgradeToAndCallUUPS */\n      tag_93\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":4062:4114  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_119:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_51:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3084:3091  bytes32 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2324:2328  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2333:2339  __self */\n      immutable(\"0x0227f622f4eada773ae6f97af92d6534c94b72b7108fbd4b2bf2fecdd9a0faeb\")\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2316:2339  address(this) == __self */\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6087:6108   */\n      mstore\n        /* \"#utility.yul\":6144:6146   */\n      0x38\n        /* \"#utility.yul\":6124:6142   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6117:6147   */\n      mstore\n        /* \"#utility.yul\":6183:6217   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":6163:6181   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6156:6218   */\n      mstore\n        /* \"#utility.yul\":6254:6280   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":6234:6252   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6227:6281   */\n      mstore\n        /* \"#utility.yul\":6298:6317   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_78\n        /* \"#utility.yul\":5903:6323   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_121:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2546:3161  function register(... */\n    tag_66:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      sload(0x97)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":834:870  keccak256(\"REGISTER_DAO_PERMISSION\") */\n      0xde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1723  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_126\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1676:1680  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1683:1695  _msgSender() */\n    tag_127:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1697:1710  _permissionId */\n      dup5\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":1003:1017  bytes calldata */\n      0x00\n      calldatasize\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1661  _auth */\n      tag_131\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1723  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      jump\t// in\n    tag_126:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2731:2734  dao */\n      dup5\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2748:2766  _register(daoAddr) */\n      tag_133\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2731:2734  dao */\n      dup2\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2748:2757  _register */\n      tag_134\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2748:2766  _register(daoAddr) */\n      jump\t// in\n    tag_133:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2784:2811  bytes(subdomain).length > 0 */\n      dup3\n      iszero\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2779:3094  if ((bytes(subdomain).length > 0)) {... */\n      tag_135\n      jumpi\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2834:2861  isSubdomainValid(subdomain) */\n      tag_136\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2851:2860  subdomain */\n      dup5\n      dup5\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2834:2850  isSubdomainValid */\n      tag_137\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2834:2861  isSubdomainValid(subdomain) */\n      jump\t// in\n    tag_136:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2829:2948  if (!isSubdomainValid(subdomain)) {... */\n      tag_138\n      jumpi\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2921:2930  subdomain */\n      dup4\n      dup4\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2889:2932  InvalidDaoSubdomain({subdomain: subdomain}) */\n      mload(0x40)\n      shl(0xe0, 0x3a5bf49b)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2829:2948  if (!isSubdomainValid(subdomain)) {... */\n    tag_138:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2964:2981  bytes32 labelhash */\n      0x00\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3000:3009  subdomain */\n      dup5\n      dup5\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2984:3011  keccak256(bytes(subdomain)) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3046  subdomainRegistrar */\n      sload(0xfb)\n      shl(0xe0, 0x89bb4145)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3082  subdomainRegistrar.registerSubnode(labelhash, daoAddr) */\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7302:7327   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7363:7395   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":7343:7361   */\n      0x24\n      dup6\n      add\n        /* \"#utility.yul\":7336:7396   */\n      mstore\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2984:3011  keccak256(bytes(subdomain)) */\n      swap2\n      swap4\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3046  subdomainRegistrar */\n      and\n      swap1\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3062  subdomainRegistrar.registerSubnode */\n      0x89bb4145\n      swap1\n        /* \"#utility.yul\":7275:7293   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3028:3082  subdomainRegistrar.registerSubnode(labelhash, daoAddr) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2814:3094  {... */\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2779:3094  if ((bytes(subdomain).length > 0)) {... */\n    tag_135:\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3134:3141  creator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3111:3153  DAORegistered(daoAddr, creator, subdomain) */\n      and\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3125:3132  daoAddr */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3111:3153  DAORegistered(daoAddr, creator, subdomain) */\n      and\n      0xbc0b11fe649bb4d67c7fb40936163e5423f45c3ae83fbd8f8f8c75e1a3fa97af\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3143:3152  subdomain */\n      dup7\n      dup7\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":3111:3153  DAORegistered(daoAddr, creator, subdomain) */\n      mload(0x40)\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2694:3161  {... */\n      pop\n        /* \"packages/contracts/src/framework/dao/DAORegistry.sol\":2546:3161  function register(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3015:3132  function _authorizeUpgrade(... */\n    tag_87:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      sload(0x97)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":1086:1126  keccak256(\"UPGRADE_REGISTRY_PERMISSION\") */\n      0x60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1723  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_119\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1676:1680  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1683:1695  _msgSender() */\n      tag_127\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2820:3764  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_93:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":971:1037  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3236:3295  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      sload\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3232:3758  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3348  _setImplementation(newImplementation) */\n      tag_108\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3330:3347  newImplementation */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3329  _setImplementation */\n      tag_162\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3348  _setImplementation(newImplementation) */\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3232:3758  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_160:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3412:3429  newImplementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3383:3444  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3383:3446  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_164\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_165\n      swap2\n      dup2\n      add\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      0x01\n    tag_164:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3379:3681  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_167\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3610:3666  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7798:7800   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3610:3666  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7780:7801   */\n      mstore\n        /* \"#utility.yul\":7837:7839   */\n      0x2e\n        /* \"#utility.yul\":7817:7835   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7810:7840   */\n      mstore\n        /* \"#utility.yul\":7876:7910   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":7856:7874   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7849:7911   */\n      mstore\n      shl(0x90, 0x6f6e206973206e6f742055555053)\n        /* \"#utility.yul\":7927:7945   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7920:7964   */\n      mstore\n        /* \"#utility.yul\":7981:8000   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3610:3666  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      tag_78\n        /* \"#utility.yul\":7596:8006   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3379:3681  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_167:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3496:3524  slot == _IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8213:8215   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8195:8216   */\n      mstore\n        /* \"#utility.yul\":8252:8254   */\n      0x29\n        /* \"#utility.yul\":8232:8250   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8225:8255   */\n      mstore\n        /* \"#utility.yul\":8291:8325   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":8271:8289   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8264:8326   */\n      mstore\n      shl(0xba, 0x1a58589b1955555251)\n        /* \"#utility.yul\":8342:8360   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8335:8374   */\n      mstore\n        /* \"#utility.yul\":8391:8410   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_78\n        /* \"#utility.yul\":8011:8416   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n    tag_174:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3447:3585  returns (bytes32 slot) {... */\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3747  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_108\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3712:3729  newImplementation */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3731:3735  data */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3737:3746  forceCall */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3711  _upgradeToAndCall */\n      tag_178\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3747  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2407:2668  function __InterfaceBasedRegistry_init(... */\n    tag_107:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_183\n      jump\t// in\n    tag_181:\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2562:2609  __DaoAuthorizableUpgradeable_init(_managingDao) */\n      tag_185\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2596:2608  _managingDao */\n      dup3\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2562:2595  __DaoAuthorizableUpgradeable_init */\n      tag_186\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2562:2609  __DaoAuthorizableUpgradeable_init(_managingDao) */\n      jump\t// in\n    tag_185:\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2622:2639  targetInterfaceId */\n      0xc9\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2622:2660  targetInterfaceId = _targetInterfaceId */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xe0\n      swap3\n      swap1\n      swap3\n      shr\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":2407:2668  function __InterfaceBasedRegistry_init(... */\n      jump\t// out\n        /* \"packages/contracts/src/core/utils/auth.sol\":1057:1434  function _auth(... */\n    tag_131:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x7ef7c883)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1221  _dao.hasPermission */\n      dup8\n      and\n      swap1\n      0xfdef9106\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      tag_190\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1222:1228  _where */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1230:1234  _who */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1236:1249  _permissionId */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1251:1256  _data */\n      dup9\n      swap1\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1198:1430  if (!_dao.hasPermission(_where, _who, _permissionId, _data))... */\n      tag_196\n      jumpi\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      mload(0x40)\n      shl(0xe2, 0x0cb6f8ed)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9923:9938   */\n      dup1\n      dup9\n      and\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9905:9939   */\n      mstore\n        /* \"#utility.yul\":9975:9990   */\n      dup1\n      dup8\n      and\n        /* \"#utility.yul\":9955:9973   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9948:9991   */\n      mstore\n        /* \"#utility.yul\":10027:10042   */\n      dup6\n      and\n        /* \"#utility.yul\":10007:10025   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10000:10043   */\n      mstore\n        /* \"#utility.yul\":10059:10077   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":10052:10086   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9839:9858   */\n      0x84\n      add\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      tag_78\n        /* \"#utility.yul\":9636:10092   */\n      jump\n        /* \"packages/contracts/src/core/utils/auth.sol\":1198:1430  if (!_dao.hasPermission(_where, _who, _permissionId, _data))... */\n    tag_196:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1057:1434  function _auth(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3426:3889  function _register(address _registrant) internal {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3490:3510  entries[_registrant] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3490:3497  entries */\n      0xca\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3490:3510  entries[_registrant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3486:3598  if (entries[_registrant]) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3534:3586  ContractAlreadyRegistered({registrant: _registrant}) */\n      mload(0x40)\n      shl(0xe0, 0xfdcce17f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      dup3\n      and\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3534:3586  ContractAlreadyRegistered({registrant: _registrant}) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":190:241   */\n      mstore\n        /* \"#utility.yul\":163:181   */\n      0x24\n      add\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3534:3586  ContractAlreadyRegistered({registrant: _registrant}) */\n      tag_78\n        /* \"#utility.yul\":14:247   */\n      jump\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3486:3598  if (entries[_registrant]) {... */\n    tag_200:\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3751:3768  targetInterfaceId */\n      sload(0xc9)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3721:3769  _registrant.supportsInterface(targetInterfaceId) */\n      tag_203\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3721:3750  _registrant.supportsInterface */\n      dup4\n      and\n      swap1\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3751:3768  targetInterfaceId */\n      0xe0\n      shl\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3721:3750  _registrant.supportsInterface */\n      tag_204\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3721:3769  _registrant.supportsInterface(targetInterfaceId) */\n      jump\t// in\n    tag_203:\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3716:3842  if (!_registrant.supportsInterface(targetInterfaceId)) {... */\n      tag_205\n      jumpi\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3793:3830  ContractInterfaceInvalid(_registrant) */\n      mload(0x40)\n      shl(0xe1, 0x38811e45)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":208:240   */\n      dup3\n      and\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3793:3830  ContractInterfaceInvalid(_registrant) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":190:241   */\n      mstore\n        /* \"#utility.yul\":163:181   */\n      0x24\n      add\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3793:3830  ContractInterfaceInvalid(_registrant) */\n      tag_78\n        /* \"#utility.yul\":14:247   */\n      jump\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3716:3842  if (!_registrant.supportsInterface(targetInterfaceId)) {... */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3854:3874  entries[_registrant] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3854:3861  entries */\n      0xca\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3854:3874  entries[_registrant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3854:3881  entries[_registrant] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3877:3881  true */\n      0x01\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3854:3881  entries[_registrant] = true */\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":3426:3889  function _register(address _registrant) internal {... */\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":658:1341  function isSubdomainValid(string calldata subDomain) pure returns (bool) {... */\n    tag_137:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":725:729  bool */\n      0x00\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":771:780  subDomain */\n      dup3\n      dup3\n      dup1\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":725:729  bool */\n      dup4\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":832:1320  for (uint256 i; i < nameLength; i++) {... */\n    tag_208:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":852:862  nameLength */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":848:849  i */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":848:862  i < nameLength */\n      lt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":832:1320  for (uint256 i; i < nameLength; i++) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":880:890  uint8 char */\n      0x00\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":899:908  nameBytes */\n      dup5\n      dup5\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":909:910  i */\n      dup4\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":899:911  nameBytes[i] */\n      dup2\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n      swap2\n      swap1\n      swap2\n      add\n      calldataload\n      0xf8\n      shr\n      swap2\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":971:973  96 */\n      0x60\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":964:973  char > 96 */\n      dup2\n      gt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":964:987  char > 96 && char < 123 */\n      dup1\n      iszero\n      tag_214\n      jumpi\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":984:987  123 */\n      0x7b\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":977:981  char */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":977:987  char < 123 */\n      0xff\n      and\n      lt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":964:987  char > 96 && char < 123 */\n    tag_214:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":960:1024  if (char > 96 && char < 123) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1004:1012  continue */\n      pop\n      jump(tag_210)\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":960:1024  if (char > 96 && char < 123) {... */\n    tag_215:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1082:1084  47 */\n      0x2f\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1075:1079  char */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1075:1084  char > 47 */\n      0xff\n      and\n      gt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1075:1097  char > 47 && char < 58 */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1095:1097  58 */\n      0x3a\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1088:1092  char */\n      dup2\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1088:1097  char < 58 */\n      0xff\n      and\n      lt\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1075:1097  char > 47 && char < 58 */\n    tag_216:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1071:1134  if (char > 47 && char < 58) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1114:1122  continue */\n      pop\n      jump(tag_210)\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1071:1134  if (char > 47 && char < 58) {... */\n    tag_217:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1175:1179  char */\n      dup1\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1175:1185  char == 45 */\n      0xff\n      and\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1183:1185  45 */\n      0x2d\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1175:1185  char == 45 */\n      sub\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1171:1222  if (char == 45) {... */\n      tag_218\n      jumpi\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1202:1210  continue */\n      pop\n      jump(tag_210)\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1171:1222  if (char == 45) {... */\n    tag_218:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1307:1312  false */\n      0x00\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1300:1312  return false */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_207)\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":832:1320  for (uint256 i; i < nameLength; i++) {... */\n    tag_210:\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":864:867  i++ */\n      dup1\n      tag_219\n      dup2\n      tag_220\n      jump\t// in\n    tag_219:\n      swap2\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":832:1320  for (uint256 i; i < nameLength; i++) {... */\n      jump(tag_208)\n    tag_209:\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1333:1337  true */\n      0x01\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":1326:1337  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/RegistryUtils.sol\":658:1341  function isSubdomainValid(string calldata subDomain) pure returns (bool) {... */\n    tag_207:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1699:1980  function _setImplementation(address newImplementation) private {... */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10876:10878   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10858:10879   */\n      mstore\n        /* \"#utility.yul\":10915:10917   */\n      0x2d\n        /* \"#utility.yul\":10895:10913   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10888:10918   */\n      mstore\n        /* \"#utility.yul\":10954:10988   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":10934:10952   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10927:10989   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":11005:11023   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10998:11041   */\n      mstore\n        /* \"#utility.yul\":11058:11077   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_78\n        /* \"#utility.yul\":10674:11083   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_225:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1888:1973  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1699:1980  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2372:2648  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_178:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2509  _upgradeTo(newImplementation) */\n      tag_230\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2491:2508  newImplementation */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2490  _upgradeTo */\n      tag_231\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2509  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_230:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2537:2538  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2527  data */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2534  data.length */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2538  data.length > 0 */\n      gt\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2551  data.length > 0 || forceCall */\n      dup1\n      tag_232\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2542:2551  forceCall */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2551  data.length > 0 || forceCall */\n    tag_232:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2519:2642  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2631  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      tag_234\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2607:2624  newImplementation */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2626:2630  data */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2606  AddressUpgradeable.functionDelegateCall */\n      tag_235\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2631  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_234:\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2372:2648  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1043:1153  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */\n    tag_186:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_183\n      jump\t// in\n    tag_237:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1134:1138  dao_ */\n      0x97\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1134:1145  dao_ = _dao */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1043:1153  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1382:1664  function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {... */\n    tag_204:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1469:1473  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1576:1599  supportsERC165(account) */\n      tag_241\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1591:1598  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1576:1590  supportsERC165 */\n      tag_242\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1576:1599  supportsERC165(account) */\n      jump\t// in\n    tag_241:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1576:1657  supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId) */\n      dup1\n      iszero\n      tag_244\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1603:1657  supportsERC165InterfaceUnchecked(account, interfaceId) */\n      tag_244\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1636:1643  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1645:1656  interfaceId */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1603:1635  supportsERC165InterfaceUnchecked */\n      tag_245\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1603:1657  supportsERC165InterfaceUnchecked(account, interfaceId) */\n      jump\t// in\n    tag_244:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1569:1657  return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId) */\n      swap4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1382:1664  function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2086:2238  function _upgradeTo(address newImplementation) internal {... */\n    tag_231:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2189  _setImplementation(newImplementation) */\n      tag_247\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2171:2188  newImplementation */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2170  _setImplementation */\n      tag_162\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2189  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_247:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2231  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2086:2238  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_235:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":6768:6780  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_244\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":6820:6826  target */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":6828:6832  data */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":6799:6819  functionDelegateCall */\n      tag_250\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":726:1164  function supportsERC165(address account) internal view returns (bool) {... */\n    tag_242:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":790:794  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":997:1076  supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) */\n      tag_252\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1030:1037  account */\n      dup3\n      shl(0xe0, 0x01ffc9a7)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":997:1029  supportsERC165InterfaceUnchecked */\n      tag_245\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":997:1076  supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) */\n      jump\t// in\n    tag_252:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":997:1157  supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) &&... */\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1093:1157  supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID) */\n      tag_254\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1126:1133  account */\n      dup3\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1093:1125  supportsERC165InterfaceUnchecked */\n      tag_245\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1093:1157  supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID) */\n      jump\t// in\n    tag_254:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":1092:1157  !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID) */\n      iszero\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":978:1157  return... */\n      swap3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":726:1164  function supportsERC165(address account) internal view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4454:5112  function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {... */\n    tag_245:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      0x40\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1529:1562   */\n      dup4\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      0x24\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1511:1563   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":1484:1502   */\n      0x44\n      swap1\n      swap2\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x01ffc9a7)\n      or\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4915:4935  mload(encodedParams) */\n      dup3\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4556:4560  bool */\n      0x00\n      swap4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      swap3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4556:4560  bool */\n      dup5\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4625:4707  abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId) */\n      swap2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4556:4560  bool */\n      dup4\n      swap2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4915:4935  mload(encodedParams) */\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4880:4887  account */\n      dup11\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4873:4878  30000 */\n      0x7530\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4862:4948  staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20) */\n      staticcall\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4851:4948  success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20) */\n      swap3\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4975:4991  returndatasize() */\n      returndatasize\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4961:4991  returnSize := returndatasize() */\n      swap2\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5025:5029  0x00 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5019:5030  mload(0x00) */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5004:5030  returnValue := mload(0x00) */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5064  success */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5086  success && returnSize >= 0x20 */\n      dup1\n      iszero\n      tag_257\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5082:5086  0x20 */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5068:5078  returnSize */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5068:5086  returnSize >= 0x20 */\n      lt\n      iszero\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5086  success && returnSize >= 0x20 */\n    tag_257:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5105  success && returnSize >= 0x20 && returnValue > 0 */\n      dup1\n      iszero\n      tag_258\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5104:5105  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5090:5101  returnValue */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5090:5105  returnValue > 0 */\n      gt\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5057:5105  success && returnSize >= 0x20 && returnValue > 0 */\n    tag_258:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":5050:5105  return success && returnSize >= 0x20 && returnValue > 0 */\n      swap8\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":4454:5112  function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n    tag_250:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7210:7222  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7235:7247  bool success */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7249:7272  bytes memory returndata */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7276:7282  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7276:7295  target.delegatecall */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7296:7300  data */\n      dup6\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7276:7301  target.delegatecall(data) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_264\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_263)\n    tag_264:\n      0x60\n      swap2\n      pop\n    tag_263:\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7234:7301  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_265\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7345:7351  target */\n      dup7\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7353:7360  success */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7362:7372  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7374:7386  errorMessage */\n      dup8\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7318:7344  verifyCallResultFromTarget */\n      tag_266\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_265:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7311:7387  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_266:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7862:7874  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7890:7897  success */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7917:7927  returndata */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7917:7934  returndata.length */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7938:7939  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7917:7939  returndata.length == 0 */\n      sub\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n      tag_271\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11837:11839   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11819:11840   */\n      mstore\n        /* \"#utility.yul\":11876:11878   */\n      0x1d\n        /* \"#utility.yul\":11856:11874   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11849:11879   */\n      mstore\n        /* \"#utility.yul\":11915:11946   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":11895:11913   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11888:11947   */\n      mstore\n        /* \"#utility.yul\":11964:11982   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_78\n        /* \"#utility.yul\":11635:11988   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n    tag_271:\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8219:8229  returndata */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8212:8229  return returndata */\n      jump(tag_275)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n    tag_268:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      tag_275\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8268:8278  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8280:8292  errorMessage */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8260:8267  _revert */\n      tag_276\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_275:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8832:9372  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_276:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8991:9008  returndata.length */\n      dup2\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8991:9012  returndata.length > 0 */\n      iszero\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n      tag_278\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9219:9229  returndata */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9213:9230  mload(returndata) */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9275:9290  returndata_size */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9262:9272  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9258:9260  32 */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9254:9273  add(32, returndata) */\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9247:9291  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n    tag_278:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9342:9354  errorMessage */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":9335:9355  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":252:753   */\n    tag_24:\n        /* \"#utility.yul\":428:430   */\n      0x60\n        /* \"#utility.yul\":413:431   */\n      dup2\n      add\n        /* \"#utility.yul\":417:426   */\n      dup2\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":386:390   */\n      0x00\n        /* \"#utility.yul\":542:747   */\n    tag_288:\n        /* \"#utility.yul\":556:560   */\n      0x03\n        /* \"#utility.yul\":553:554   */\n      dup2\n        /* \"#utility.yul\":550:561   */\n      lt\n        /* \"#utility.yul\":542:747   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":619:632   */\n      dup2\n      mload\n        /* \"#utility.yul\":634:638   */\n      0xff\n        /* \"#utility.yul\":615:639   */\n      and\n        /* \"#utility.yul\":603:640   */\n      dup4\n      mstore\n        /* \"#utility.yul\":663:667   */\n      0x20\n        /* \"#utility.yul\":687:699   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":722:737   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":576:577   */\n      0x01\n        /* \"#utility.yul\":569:578   */\n      add\n        /* \"#utility.yul\":542:747   */\n      jump(tag_288)\n    tag_290:\n        /* \"#utility.yul\":546:549   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":252:753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:889   */\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":833:864   */\n      dup2\n      and\n        /* \"#utility.yul\":823:865   */\n      dup2\n      eq\n        /* \"#utility.yul\":813:883   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":879:880   */\n      0x00\n        /* \"#utility.yul\":876:877   */\n      dup1\n        /* \"#utility.yul\":869:881   */\n      revert\n        /* \"#utility.yul\":894:1141   */\n    tag_28:\n        /* \"#utility.yul\":953:959   */\n      0x00\n        /* \"#utility.yul\":1006:1008   */\n      0x20\n        /* \"#utility.yul\":994:1003   */\n      dup3\n        /* \"#utility.yul\":985:992   */\n      dup5\n        /* \"#utility.yul\":981:1004   */\n      sub\n        /* \"#utility.yul\":977:1009   */\n      slt\n        /* \"#utility.yul\":974:1026   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1022:1023   */\n      0x00\n        /* \"#utility.yul\":1019:1020   */\n      dup1\n        /* \"#utility.yul\":1012:1024   */\n      revert\n        /* \"#utility.yul\":974:1026   */\n    tag_294:\n        /* \"#utility.yul\":1061:1070   */\n      dup2\n        /* \"#utility.yul\":1048:1071   */\n      calldataload\n        /* \"#utility.yul\":1080:1111   */\n      tag_244\n        /* \"#utility.yul\":1105:1110   */\n      dup2\n        /* \"#utility.yul\":1080:1111   */\n      tag_282\n      jump\t// in\n        /* \"#utility.yul\":1574:2005   */\n    tag_43:\n        /* \"#utility.yul\":1685:1691   */\n      0x00\n        /* \"#utility.yul\":1693:1699   */\n      dup1\n        /* \"#utility.yul\":1746:1748   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup4\n        /* \"#utility.yul\":1725:1732   */\n      dup6\n        /* \"#utility.yul\":1721:1744   */\n      sub\n        /* \"#utility.yul\":1717:1749   */\n      slt\n        /* \"#utility.yul\":1714:1766   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1762:1763   */\n      0x00\n        /* \"#utility.yul\":1759:1760   */\n      dup1\n        /* \"#utility.yul\":1752:1764   */\n      revert\n        /* \"#utility.yul\":1714:1766   */\n    tag_299:\n        /* \"#utility.yul\":1801:1810   */\n      dup3\n        /* \"#utility.yul\":1788:1811   */\n      calldataload\n        /* \"#utility.yul\":1820:1851   */\n      tag_300\n        /* \"#utility.yul\":1845:1850   */\n      dup2\n        /* \"#utility.yul\":1820:1851   */\n      tag_282\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1870:1875   */\n      swap2\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1912:1930   */\n      dup4\n      add\n        /* \"#utility.yul\":1899:1931   */\n      calldataload\n        /* \"#utility.yul\":1940:1973   */\n      tag_301\n        /* \"#utility.yul\":1899:1931   */\n      dup2\n        /* \"#utility.yul\":1940:1973   */\n      tag_282\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1992:1999   */\n      dup1\n        /* \"#utility.yul\":1982:1999   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1574:2005   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2010:2137   */\n    tag_91:\n        /* \"#utility.yul\":2071:2081   */\n      0x4e487b71\n        /* \"#utility.yul\":2066:2069   */\n      0xe0\n        /* \"#utility.yul\":2062:2082   */\n      shl\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2052:2083   */\n      mstore\n        /* \"#utility.yul\":2102:2106   */\n      0x41\n        /* \"#utility.yul\":2099:2100   */\n      0x04\n        /* \"#utility.yul\":2092:2107   */\n      mstore\n        /* \"#utility.yul\":2126:2130   */\n      0x24\n        /* \"#utility.yul\":2123:2124   */\n      0x00\n        /* \"#utility.yul\":2116:2131   */\n      revert\n        /* \"#utility.yul\":2142:3198   */\n    tag_47:\n        /* \"#utility.yul\":2219:2225   */\n      0x00\n        /* \"#utility.yul\":2227:2233   */\n      dup1\n        /* \"#utility.yul\":2280:2282   */\n      0x40\n        /* \"#utility.yul\":2268:2277   */\n      dup4\n        /* \"#utility.yul\":2259:2266   */\n      dup6\n        /* \"#utility.yul\":2255:2278   */\n      sub\n        /* \"#utility.yul\":2251:2283   */\n      slt\n        /* \"#utility.yul\":2248:2300   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":2296:2297   */\n      0x00\n        /* \"#utility.yul\":2293:2294   */\n      dup1\n        /* \"#utility.yul\":2286:2298   */\n      revert\n        /* \"#utility.yul\":2248:2300   */\n    tag_304:\n        /* \"#utility.yul\":2335:2344   */\n      dup3\n        /* \"#utility.yul\":2322:2345   */\n      calldataload\n        /* \"#utility.yul\":2354:2385   */\n      tag_305\n        /* \"#utility.yul\":2379:2384   */\n      dup2\n        /* \"#utility.yul\":2354:2385   */\n      tag_282\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2404:2409   */\n      swap2\n      pop\n        /* \"#utility.yul\":2460:2462   */\n      0x20\n        /* \"#utility.yul\":2445:2463   */\n      dup4\n      add\n        /* \"#utility.yul\":2432:2464   */\n      calldataload\n        /* \"#utility.yul\":2483:2501   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2513:2527   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2510:2544   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2540:2541   */\n      0x00\n        /* \"#utility.yul\":2537:2538   */\n      dup1\n        /* \"#utility.yul\":2530:2542   */\n      revert\n        /* \"#utility.yul\":2510:2544   */\n    tag_306:\n        /* \"#utility.yul\":2578:2584   */\n      dup2\n        /* \"#utility.yul\":2567:2576   */\n      dup6\n        /* \"#utility.yul\":2563:2585   */\n      add\n        /* \"#utility.yul\":2553:2585   */\n      swap2\n      pop\n        /* \"#utility.yul\":2623:2630   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x1f\n        /* \"#utility.yul\":2612:2614   */\n      dup4\n        /* \"#utility.yul\":2608:2621   */\n      add\n        /* \"#utility.yul\":2604:2631   */\n      slt\n        /* \"#utility.yul\":2594:2649   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2645:2646   */\n      0x00\n        /* \"#utility.yul\":2642:2643   */\n      dup1\n        /* \"#utility.yul\":2635:2647   */\n      revert\n        /* \"#utility.yul\":2594:2649   */\n    tag_307:\n        /* \"#utility.yul\":2681:2683   */\n      dup2\n        /* \"#utility.yul\":2668:2684   */\n      calldataload\n        /* \"#utility.yul\":2703:2705   */\n      dup2\n        /* \"#utility.yul\":2699:2701   */\n      dup2\n        /* \"#utility.yul\":2696:2706   */\n      gt\n        /* \"#utility.yul\":2693:2729   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":2709:2727   */\n      tag_309\n      tag_91\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2784:2786   */\n      0x40\n        /* \"#utility.yul\":2778:2787   */\n      mload\n        /* \"#utility.yul\":2752:2754   */\n      0x1f\n        /* \"#utility.yul\":2838:2851   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2834:2856   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2858:2860   */\n      0x3f\n        /* \"#utility.yul\":2830:2861   */\n      add\n        /* \"#utility.yul\":2826:2866   */\n      and\n        /* \"#utility.yul\":2814:2867   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2882:2900   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2902:2924   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2879:2925   */\n      or\n        /* \"#utility.yul\":2876:2948   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":2928:2946   */\n      tag_311\n      tag_91\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2968:2978   */\n      dup2\n        /* \"#utility.yul\":2964:2966   */\n      0x40\n        /* \"#utility.yul\":2957:2979   */\n      mstore\n        /* \"#utility.yul\":3003:3005   */\n      dup3\n        /* \"#utility.yul\":2995:3001   */\n      dup2\n        /* \"#utility.yul\":2988:3006   */\n      mstore\n        /* \"#utility.yul\":3043:3050   */\n      dup9\n        /* \"#utility.yul\":3038:3040   */\n      0x20\n        /* \"#utility.yul\":3033:3035   */\n      dup5\n        /* \"#utility.yul\":3029:3031   */\n      dup8\n        /* \"#utility.yul\":3025:3036   */\n      add\n        /* \"#utility.yul\":3021:3041   */\n      add\n        /* \"#utility.yul\":3018:3051   */\n      gt\n        /* \"#utility.yul\":3015:3068   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3064:3065   */\n      0x00\n        /* \"#utility.yul\":3061:3062   */\n      dup1\n        /* \"#utility.yul\":3054:3066   */\n      revert\n        /* \"#utility.yul\":3015:3068   */\n    tag_312:\n        /* \"#utility.yul\":3120:3122   */\n      dup3\n        /* \"#utility.yul\":3115:3117   */\n      0x20\n        /* \"#utility.yul\":3111:3113   */\n      dup7\n        /* \"#utility.yul\":3107:3118   */\n      add\n        /* \"#utility.yul\":3102:3104   */\n      0x20\n        /* \"#utility.yul\":3094:3100   */\n      dup4\n        /* \"#utility.yul\":3090:3105   */\n      add\n        /* \"#utility.yul\":3077:3123   */\n      calldatacopy\n        /* \"#utility.yul\":3165:3166   */\n      0x00\n        /* \"#utility.yul\":3160:3162   */\n      0x20\n        /* \"#utility.yul\":3155:3157   */\n      dup5\n        /* \"#utility.yul\":3147:3153   */\n      dup4\n        /* \"#utility.yul\":3143:3158   */\n      add\n        /* \"#utility.yul\":3139:3163   */\n      add\n        /* \"#utility.yul\":3132:3167   */\n      mstore\n        /* \"#utility.yul\":3186:3192   */\n      dup1\n        /* \"#utility.yul\":3176:3192   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2142:3198   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3385:4266   */\n    tag_65:\n        /* \"#utility.yul\":3487:3493   */\n      0x00\n        /* \"#utility.yul\":3495:3501   */\n      dup1\n        /* \"#utility.yul\":3503:3509   */\n      0x00\n        /* \"#utility.yul\":3511:3517   */\n      dup1\n        /* \"#utility.yul\":3564:3566   */\n      0x60\n        /* \"#utility.yul\":3552:3561   */\n      dup6\n        /* \"#utility.yul\":3543:3550   */\n      dup8\n        /* \"#utility.yul\":3539:3562   */\n      sub\n        /* \"#utility.yul\":3535:3567   */\n      slt\n        /* \"#utility.yul\":3532:3584   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3580:3581   */\n      0x00\n        /* \"#utility.yul\":3577:3578   */\n      dup1\n        /* \"#utility.yul\":3570:3582   */\n      revert\n        /* \"#utility.yul\":3532:3584   */\n    tag_315:\n        /* \"#utility.yul\":3619:3628   */\n      dup5\n        /* \"#utility.yul\":3606:3629   */\n      calldataload\n        /* \"#utility.yul\":3638:3669   */\n      tag_316\n        /* \"#utility.yul\":3663:3668   */\n      dup2\n        /* \"#utility.yul\":3638:3669   */\n      tag_282\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3688:3693   */\n      swap4\n      pop\n        /* \"#utility.yul\":3745:3747   */\n      0x20\n        /* \"#utility.yul\":3730:3748   */\n      dup6\n      add\n        /* \"#utility.yul\":3717:3749   */\n      calldataload\n        /* \"#utility.yul\":3758:3791   */\n      tag_317\n        /* \"#utility.yul\":3717:3749   */\n      dup2\n        /* \"#utility.yul\":3758:3791   */\n      tag_282\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3810:3817   */\n      swap3\n      pop\n        /* \"#utility.yul\":3868:3870   */\n      0x40\n        /* \"#utility.yul\":3853:3871   */\n      dup6\n      add\n        /* \"#utility.yul\":3840:3872   */\n      calldataload\n        /* \"#utility.yul\":3891:3909   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3921:3935   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3918:3952   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3945:3946   */\n      dup1\n        /* \"#utility.yul\":3938:3950   */\n      revert\n        /* \"#utility.yul\":3918:3952   */\n    tag_318:\n        /* \"#utility.yul\":3986:3992   */\n      dup2\n        /* \"#utility.yul\":3975:3984   */\n      dup8\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3961:3993   */\n      swap2\n      pop\n        /* \"#utility.yul\":4031:4038   */\n      dup8\n        /* \"#utility.yul\":4024:4028   */\n      0x1f\n        /* \"#utility.yul\":4020:4022   */\n      dup4\n        /* \"#utility.yul\":4016:4029   */\n      add\n        /* \"#utility.yul\":4012:4039   */\n      slt\n        /* \"#utility.yul\":4002:4057   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":4053:4054   */\n      0x00\n        /* \"#utility.yul\":4050:4051   */\n      dup1\n        /* \"#utility.yul\":4043:4055   */\n      revert\n        /* \"#utility.yul\":4002:4057   */\n    tag_319:\n        /* \"#utility.yul\":4093:4095   */\n      dup2\n        /* \"#utility.yul\":4080:4096   */\n      calldataload\n        /* \"#utility.yul\":4119:4121   */\n      dup2\n        /* \"#utility.yul\":4111:4117   */\n      dup2\n        /* \"#utility.yul\":4108:4122   */\n      gt\n        /* \"#utility.yul\":4105:4139   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4135:4136   */\n      0x00\n        /* \"#utility.yul\":4132:4133   */\n      dup1\n        /* \"#utility.yul\":4125:4137   */\n      revert\n        /* \"#utility.yul\":4105:4139   */\n    tag_320:\n        /* \"#utility.yul\":4180:4187   */\n      dup9\n        /* \"#utility.yul\":4175:4177   */\n      0x20\n        /* \"#utility.yul\":4166:4172   */\n      dup3\n        /* \"#utility.yul\":4162:4164   */\n      dup6\n        /* \"#utility.yul\":4158:4173   */\n      add\n        /* \"#utility.yul\":4154:4178   */\n      add\n        /* \"#utility.yul\":4151:4188   */\n      gt\n        /* \"#utility.yul\":4148:4205   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4201:4202   */\n      0x00\n        /* \"#utility.yul\":4198:4199   */\n      dup1\n        /* \"#utility.yul\":4191:4203   */\n      revert\n        /* \"#utility.yul\":4148:4205   */\n    tag_321:\n        /* \"#utility.yul\":3385:4266   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":4232:4234   */\n      0x20\n        /* \"#utility.yul\":4224:4235   */\n      add\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3385:4266   */\n      jump\t// out\n        /* \"#utility.yul\":4463:4871   */\n    tag_79:\n        /* \"#utility.yul\":4665:4667   */\n      0x20\n        /* \"#utility.yul\":4647:4668   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x2c\n        /* \"#utility.yul\":4684:4702   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4677:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4777   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":4738:4740   */\n      0x40\n        /* \"#utility.yul\":4723:4741   */\n      dup3\n      add\n        /* \"#utility.yul\":4716:4778   */\n      mstore\n      shl(0xa2, 0x19195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":4809:4811   */\n      0x60\n        /* \"#utility.yul\":4794:4812   */\n      dup3\n      add\n        /* \"#utility.yul\":4787:4829   */\n      mstore\n        /* \"#utility.yul\":4861:4864   */\n      0x80\n        /* \"#utility.yul\":4846:4865   */\n      add\n      swap1\n        /* \"#utility.yul\":4463:4871   */\n      jump\t// out\n        /* \"#utility.yul\":4876:5284   */\n    tag_84:\n        /* \"#utility.yul\":5078:5080   */\n      0x20\n        /* \"#utility.yul\":5060:5081   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5117:5119   */\n      0x2c\n        /* \"#utility.yul\":5097:5115   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5090:5120   */\n      mstore\n        /* \"#utility.yul\":5156:5190   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":5151:5153   */\n      0x40\n        /* \"#utility.yul\":5136:5154   */\n      dup3\n      add\n        /* \"#utility.yul\":5129:5191   */\n      mstore\n      shl(0xa0, 0x6163746976652070726f7879)\n        /* \"#utility.yul\":5222:5224   */\n      0x60\n        /* \"#utility.yul\":5207:5225   */\n      dup3\n      add\n        /* \"#utility.yul\":5200:5242   */\n      mstore\n        /* \"#utility.yul\":5274:5277   */\n      0x80\n        /* \"#utility.yul\":5259:5278   */\n      add\n      swap1\n        /* \"#utility.yul\":4876:5284   */\n      jump\t// out\n        /* \"#utility.yul\":6328:6595   */\n    tag_283:\n        /* \"#utility.yul\":6417:6423   */\n      dup2\n        /* \"#utility.yul\":6412:6415   */\n      dup4\n        /* \"#utility.yul\":6405:6424   */\n      mstore\n        /* \"#utility.yul\":6469:6475   */\n      dup2\n        /* \"#utility.yul\":6462:6467   */\n      dup2\n        /* \"#utility.yul\":6455:6459   */\n      0x20\n        /* \"#utility.yul\":6450:6453   */\n      dup6\n        /* \"#utility.yul\":6446:6460   */\n      add\n        /* \"#utility.yul\":6433:6476   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6496:6512   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6514:6518   */\n      0x20\n        /* \"#utility.yul\":6492:6519   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":6485:6523   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6577:6579   */\n      0x1f\n        /* \"#utility.yul\":6556:6571   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6552:6581   */\n      and\n        /* \"#utility.yul\":6543:6582   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6539:6589   */\n      add\n      swap1\n        /* \"#utility.yul\":6328:6595   */\n      jump\t// out\n        /* \"#utility.yul\":6600:6847   */\n    tag_140:\n        /* \"#utility.yul\":6759:6761   */\n      0x20\n        /* \"#utility.yul\":6748:6757   */\n      dup2\n        /* \"#utility.yul\":6741:6762   */\n      mstore\n        /* \"#utility.yul\":6722:6726   */\n      0x00\n        /* \"#utility.yul\":6779:6841   */\n      tag_275\n        /* \"#utility.yul\":6837:6839   */\n      0x20\n        /* \"#utility.yul\":6826:6835   */\n      dup4\n        /* \"#utility.yul\":6822:6840   */\n      add\n        /* \"#utility.yul\":6814:6820   */\n      dup5\n        /* \"#utility.yul\":6806:6812   */\n      dup7\n        /* \"#utility.yul\":6779:6841   */\n      tag_283\n      jump\t// in\n        /* \"#utility.yul\":6852:7123   */\n    tag_142:\n        /* \"#utility.yul\":7035:7041   */\n      dup2\n        /* \"#utility.yul\":7027:7033   */\n      dup4\n        /* \"#utility.yul\":7022:7025   */\n      dup3\n        /* \"#utility.yul\":7009:7042   */\n      calldatacopy\n        /* \"#utility.yul\":6991:6994   */\n      0x00\n        /* \"#utility.yul\":7061:7077   */\n      swap2\n      add\n        /* \"#utility.yul\":7086:7099   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7061:7077   */\n      swap2\n        /* \"#utility.yul\":6852:7123   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7407:7591   */\n    tag_166:\n        /* \"#utility.yul\":7477:7483   */\n      0x00\n        /* \"#utility.yul\":7530:7532   */\n      0x20\n        /* \"#utility.yul\":7518:7527   */\n      dup3\n        /* \"#utility.yul\":7509:7516   */\n      dup5\n        /* \"#utility.yul\":7505:7528   */\n      sub\n        /* \"#utility.yul\":7501:7533   */\n      slt\n        /* \"#utility.yul\":7498:7550   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":7546:7547   */\n      0x00\n        /* \"#utility.yul\":7543:7544   */\n      dup1\n        /* \"#utility.yul\":7536:7548   */\n      revert\n        /* \"#utility.yul\":7498:7550   */\n    tag_334:\n      pop\n        /* \"#utility.yul\":7569:7585   */\n      mload\n      swap2\n        /* \"#utility.yul\":7407:7591   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8421:8828   */\n    tag_183:\n        /* \"#utility.yul\":8623:8625   */\n      0x20\n        /* \"#utility.yul\":8605:8626   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8662:8664   */\n      0x2b\n        /* \"#utility.yul\":8642:8660   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8635:8665   */\n      mstore\n        /* \"#utility.yul\":8701:8735   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":8696:8698   */\n      0x40\n        /* \"#utility.yul\":8681:8699   */\n      dup3\n      add\n        /* \"#utility.yul\":8674:8736   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":8767:8769   */\n      0x60\n        /* \"#utility.yul\":8752:8770   */\n      dup3\n      add\n        /* \"#utility.yul\":8745:8786   */\n      mstore\n        /* \"#utility.yul\":8818:8821   */\n      0x80\n        /* \"#utility.yul\":8803:8822   */\n      add\n      swap1\n        /* \"#utility.yul\":8421:8828   */\n      jump\t// out\n        /* \"#utility.yul\":8833:9349   */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9112:9127   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9094:9128   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9164:9179   */\n      dup6\n      and\n        /* \"#utility.yul\":9159:9161   */\n      0x20\n        /* \"#utility.yul\":9144:9162   */\n      dup3\n      add\n        /* \"#utility.yul\":9137:9180   */\n      mstore\n        /* \"#utility.yul\":9211:9213   */\n      0x40\n        /* \"#utility.yul\":9196:9214   */\n      dup2\n      add\n        /* \"#utility.yul\":9189:9223   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9259:9262   */\n      0x80\n        /* \"#utility.yul\":9254:9256   */\n      0x60\n        /* \"#utility.yul\":9239:9257   */\n      dup3\n      add\n        /* \"#utility.yul\":9232:9263   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9037:9041   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9280:9343   */\n      tag_258\n      swap1\n        /* \"#utility.yul\":9323:9342   */\n      dup4\n      add\n        /* \"#utility.yul\":9315:9321   */\n      dup5\n        /* \"#utility.yul\":9307:9313   */\n      dup7\n        /* \"#utility.yul\":9280:9343   */\n      tag_283\n      jump\t// in\n        /* \"#utility.yul\":9354:9631   */\n    tag_195:\n        /* \"#utility.yul\":9421:9427   */\n      0x00\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"#utility.yul\":9462:9471   */\n      dup3\n        /* \"#utility.yul\":9453:9460   */\n      dup5\n        /* \"#utility.yul\":9449:9472   */\n      sub\n        /* \"#utility.yul\":9445:9477   */\n      slt\n        /* \"#utility.yul\":9442:9494   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":9490:9491   */\n      0x00\n        /* \"#utility.yul\":9487:9488   */\n      dup1\n        /* \"#utility.yul\":9480:9492   */\n      revert\n        /* \"#utility.yul\":9442:9494   */\n    tag_341:\n        /* \"#utility.yul\":9522:9531   */\n      dup2\n        /* \"#utility.yul\":9516:9532   */\n      mload\n        /* \"#utility.yul\":9575:9580   */\n      dup1\n        /* \"#utility.yul\":9568:9581   */\n      iszero\n        /* \"#utility.yul\":9561:9582   */\n      iszero\n        /* \"#utility.yul\":9554:9559   */\n      dup2\n        /* \"#utility.yul\":9551:9583   */\n      eq\n        /* \"#utility.yul\":9541:9601   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":9597:9598   */\n      0x00\n        /* \"#utility.yul\":9594:9595   */\n      dup1\n        /* \"#utility.yul\":9587:9599   */\n      revert\n        /* \"#utility.yul\":10305:10432   */\n    tag_213:\n        /* \"#utility.yul\":10366:10376   */\n      0x4e487b71\n        /* \"#utility.yul\":10361:10364   */\n      0xe0\n        /* \"#utility.yul\":10357:10377   */\n      shl\n        /* \"#utility.yul\":10354:10355   */\n      0x00\n        /* \"#utility.yul\":10347:10378   */\n      mstore\n        /* \"#utility.yul\":10397:10401   */\n      0x32\n        /* \"#utility.yul\":10394:10395   */\n      0x04\n        /* \"#utility.yul\":10387:10402   */\n      mstore\n        /* \"#utility.yul\":10421:10425   */\n      0x24\n        /* \"#utility.yul\":10418:10419   */\n      0x00\n        /* \"#utility.yul\":10411:10426   */\n      revert\n        /* \"#utility.yul\":10437:10669   */\n    tag_220:\n        /* \"#utility.yul\":10476:10479   */\n      0x00\n        /* \"#utility.yul\":10497:10514   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10494:10634   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":10556:10566   */\n      0x4e487b71\n        /* \"#utility.yul\":10551:10554   */\n      0xe0\n        /* \"#utility.yul\":10547:10567   */\n      shl\n        /* \"#utility.yul\":10544:10545   */\n      0x00\n        /* \"#utility.yul\":10537:10568   */\n      mstore\n        /* \"#utility.yul\":10591:10595   */\n      0x11\n        /* \"#utility.yul\":10588:10589   */\n      0x04\n        /* \"#utility.yul\":10581:10596   */\n      mstore\n        /* \"#utility.yul\":10619:10623   */\n      0x24\n        /* \"#utility.yul\":10616:10617   */\n      0x00\n        /* \"#utility.yul\":10609:10624   */\n      revert\n        /* \"#utility.yul\":10494:10634   */\n    tag_347:\n      pop\n        /* \"#utility.yul\":10661:10662   */\n      0x01\n        /* \"#utility.yul\":10650:10663   */\n      add\n      swap1\n        /* \"#utility.yul\":10437:10669   */\n      jump\t// out\n        /* \"#utility.yul\":11088:11338   */\n    tag_284:\n        /* \"#utility.yul\":11173:11174   */\n      0x00\n        /* \"#utility.yul\":11183:11296   */\n    tag_350:\n        /* \"#utility.yul\":11197:11203   */\n      dup4\n        /* \"#utility.yul\":11194:11195   */\n      dup2\n        /* \"#utility.yul\":11191:11204   */\n      lt\n        /* \"#utility.yul\":11183:11296   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":11273:11284   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11267:11285   */\n      mload\n        /* \"#utility.yul\":11254:11265   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":11247:11286   */\n      mstore\n        /* \"#utility.yul\":11219:11221   */\n      0x20\n        /* \"#utility.yul\":11212:11222   */\n      add\n        /* \"#utility.yul\":11183:11296   */\n      jump(tag_350)\n    tag_352:\n      pop\n      pop\n        /* \"#utility.yul\":11330:11331   */\n      0x00\n        /* \"#utility.yul\":11312:11328   */\n      swap2\n      add\n        /* \"#utility.yul\":11305:11332   */\n      mstore\n        /* \"#utility.yul\":11088:11338   */\n      jump\t// out\n        /* \"#utility.yul\":11343:11630   */\n    tag_261:\n        /* \"#utility.yul\":11472:11475   */\n      0x00\n        /* \"#utility.yul\":11510:11516   */\n      dup3\n        /* \"#utility.yul\":11504:11517   */\n      mload\n        /* \"#utility.yul\":11526:11592   */\n      tag_354\n        /* \"#utility.yul\":11585:11591   */\n      dup2\n        /* \"#utility.yul\":11580:11583   */\n      dup5\n        /* \"#utility.yul\":11573:11577   */\n      0x20\n        /* \"#utility.yul\":11565:11571   */\n      dup8\n        /* \"#utility.yul\":11561:11578   */\n      add\n        /* \"#utility.yul\":11526:11592   */\n      tag_284\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":11608:11624   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11343:11630   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11993:12389   */\n    tag_281:\n        /* \"#utility.yul\":12142:12144   */\n      0x20\n        /* \"#utility.yul\":12131:12140   */\n      dup2\n        /* \"#utility.yul\":12124:12145   */\n      mstore\n        /* \"#utility.yul\":12105:12109   */\n      0x00\n        /* \"#utility.yul\":12174:12180   */\n      dup3\n        /* \"#utility.yul\":12168:12181   */\n      mload\n        /* \"#utility.yul\":12217:12223   */\n      dup1\n        /* \"#utility.yul\":12212:12214   */\n      0x20\n        /* \"#utility.yul\":12201:12210   */\n      dup5\n        /* \"#utility.yul\":12197:12215   */\n      add\n        /* \"#utility.yul\":12190:12224   */\n      mstore\n        /* \"#utility.yul\":12233:12312   */\n      tag_357\n        /* \"#utility.yul\":12305:12311   */\n      dup2\n        /* \"#utility.yul\":12300:12302   */\n      0x40\n        /* \"#utility.yul\":12289:12298   */\n      dup6\n        /* \"#utility.yul\":12285:12303   */\n      add\n        /* \"#utility.yul\":12280:12282   */\n      0x20\n        /* \"#utility.yul\":12272:12278   */\n      dup8\n        /* \"#utility.yul\":12268:12283   */\n      add\n        /* \"#utility.yul\":12233:12312   */\n      tag_284\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":12373:12375   */\n      0x1f\n        /* \"#utility.yul\":12352:12367   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":12348:12377   */\n      and\n        /* \"#utility.yul\":12333:12378   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":12380:12382   */\n      0x40\n        /* \"#utility.yul\":12329:12383   */\n      add\n      swap3\n        /* \"#utility.yul\":11993:12389   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa26469706673582212207ca31a9152694a5f5b79ac28e8ed6377fbffd834b36050f1fe6bc4b950aaa29c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3144": {
									"entryPoint": null,
									"id": 3144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_663": {
									"entryPoint": 34,
									"id": 663,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:608:41",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:41",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:229:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:41",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:41"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:34:41",
																		"type": "",
																		"value": "Initializable: contract is initi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "360:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:41"
																	},
																	{
																		"hexValue": "616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "365:9:41",
																		"type": "",
																		"value": "alizing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:37:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:37:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "384:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "407:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "384:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:41",
														"type": ""
													}
												],
												"src": "14:403:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:87:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "529:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "586:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "594:4:41",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:17:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:36:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "564:36:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "488:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "510:4:41",
														"type": ""
													}
												],
												"src": "422:184:41"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 41,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611424610118600039600081816102cf01528181610318015281816104ee0152818161052e01526105c101526114246000f3fe6080604052600436106100a65760003560e01c80634f1ef286116100645780634f1ef2861461019d57806352d1902d146101b057806374574eb7146101d3578063a2298b4b14610207578063ede497391461023b578063f29ee1251461025b57600080fd5b8062077393146100ab5780632ae9c600146100e85780633659cfe61461010a5780634162169f1461012c57806344162ef81461014a578063485cc9551461017d575b600080fd5b3480156100b757600080fd5b5060fb546100cb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f457600080fd5b506100fd61029b565b6040516100df9190610f4d565b34801561011657600080fd5b5061012a610125366004610f96565b6102c5565b005b34801561013857600080fd5b506097546001600160a01b03166100cb565b34801561015657600080fd5b5060c9546101649060e01b81565b6040516001600160e01b031990911681526020016100df565b34801561018957600080fd5b5061012a610198366004610fb3565b6103ad565b61012a6101ab366004611002565b6104e4565b3480156101bc57600080fd5b506101c56105b4565b6040519081526020016100df565b3480156101df57600080fd5b506101c57f60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa7293281565b34801561021357600080fd5b506101c57fde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc5485621581565b34801561024757600080fd5b5061012a6102563660046110c6565b610667565b34801561026757600080fd5b5061028b610276366004610f96565b60ca6020526000908152604090205460ff1681565b60405190151581526020016100df565b6102a3610f2f565b5060408051606081018252600181526004602082015260009181019190915290565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103165760405162461bcd60e51b815260040161030d90611158565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661035f6000805160206113a8833981519152546001600160a01b031690565b6001600160a01b0316146103855760405162461bcd60e51b815260040161030d906111a4565b61038e816107b6565b604080516000808252602082019092526103aa918391906107ef565b50565b600054610100900460ff16158080156103cd5750600054600160ff909116105b806103e75750303b1580156103e7575060005460ff166001145b61044a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161030d565b6000805460ff19166001179055801561046d576000805461ff0019166101001790555b61047e836349c2aa3f60e11b61095a565b60fb80546001600160a01b0319166001600160a01b03841617905580156104df576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361052c5760405162461bcd60e51b815260040161030d90611158565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105756000805160206113a8833981519152546001600160a01b031690565b6001600160a01b03161461059b5760405162461bcd60e51b815260040161030d906111a4565b6105a4826107b6565b6105b0828260016107ef565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106545760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161030d565b506000805160206113a883398151915290565b6097547fde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215906106a5906001600160a01b031630335b846000366109a4565b846106af81610a60565b8215610761576106bf8484610b0b565b6106e0578383604051633a5bf49b60e01b815260040161030d929190611219565b600084846040516106f292919061122d565b60405190819003812060fb546389bb414560e01b8352600483018290526001600160a01b03858116602485015291935016906389bb414590604401600060405180830381600087803b15801561074757600080fd5b505af115801561075b573d6000803e3d6000fd5b50505050505b846001600160a01b0316816001600160a01b03167fbc0b11fe649bb4d67c7fb40936163e5423f45c3ae83fbd8f8f8c75e1a3fa97af86866040516107a6929190611219565b60405180910390a3505050505050565b6097547f60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932906105b0906001600160a01b0316303361069c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610822576104df83610bb8565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561087c575060408051601f3d908101601f191682019092526108799181019061123d565b60015b6108df5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161030d565b6000805160206113a8833981519152811461094e5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161030d565b506104df838383610c54565b600054610100900460ff166109815760405162461bcd60e51b815260040161030d90611256565b61098a82610c7f565b60c9805463ffffffff191660e09290921c91909117905550565b604051637ef7c88360e11b81526001600160a01b0387169063fdef9106906109d890889088908890889088906004016112a1565b602060405180830381865afa1580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1991906112d5565b610a5857604051630cb6f8ed60e21b81526001600160a01b0380881660048301528087166024830152851660448201526064810184905260840161030d565b505050505050565b6001600160a01b038116600090815260ca602052604090205460ff1615610aa55760405163fdcce17f60e01b81526001600160a01b038216600482015260240161030d565b60c954610abf906001600160a01b0383169060e01b610cc8565b610ae7576040516338811e4560e11b81526001600160a01b038216600482015260240161030d565b6001600160a01b0316600090815260ca60205260409020805460ff19166001179055565b6000828280835b81811015610ba9576000848483818110610b2e57610b2e6112f7565b919091013560f81c915050606081118015610b4c5750607b8160ff16105b15610b575750610b97565b602f8160ff16118015610b6d5750603a8160ff16105b15610b785750610b97565b8060ff16602d03610b895750610b97565b600095505050505050610bb2565b80610ba18161130d565b915050610b12565b50600193505050505b92915050565b6001600160a01b0381163b610c255760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161030d565b6000805160206113a883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610c5d83610ceb565b600082511180610c6a5750805b156104df57610c798383610d2b565b50505050565b600054610100900460ff16610ca65760405162461bcd60e51b815260040161030d90611256565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6000610cd383610d50565b8015610ce45750610ce48383610d83565b9392505050565b610cf481610bb8565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610ce483836040518060600160405280602781526020016113c860279139610e0c565b6000610d63826301ffc9a760e01b610d83565b8015610bb25750610d7c826001600160e01b0319610d83565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610df5575060208210155b8015610e015750600081115b979650505050505050565b6060600080856001600160a01b031685604051610e299190611358565b600060405180830381855af49150503d8060008114610e64576040519150601f19603f3d011682016040523d82523d6000602084013e610e69565b606091505b5091509150610e7a86838387610e84565b9695505050505050565b60608315610ef3578251600003610eec576001600160a01b0385163b610eec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161030d565b5081610efd565b610efd8383610f05565b949350505050565b815115610f155781518083602001fd5b8060405162461bcd60e51b815260040161030d9190611374565b60405180606001604052806003906020820280368337509192915050565b60608101818360005b6003811015610f7857815160ff16835260209283019290910190600101610f56565b50505092915050565b6001600160a01b03811681146103aa57600080fd5b600060208284031215610fa857600080fd5b8135610ce481610f81565b60008060408385031215610fc657600080fd5b8235610fd181610f81565b91506020830135610fe181610f81565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561101557600080fd5b823561102081610f81565b9150602083013567ffffffffffffffff8082111561103d57600080fd5b818501915085601f83011261105157600080fd5b81358181111561106357611063610fec565b604051601f8201601f19908116603f0116810190838211818310171561108b5761108b610fec565b816040528281528860208487010111156110a457600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080606085870312156110dc57600080fd5b84356110e781610f81565b935060208501356110f781610f81565b9250604085013567ffffffffffffffff8082111561111457600080fd5b818701915087601f83011261112857600080fd5b81358181111561113757600080fd5b88602082850101111561114957600080fd5b95989497505060200194505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610efd6020830184866111f0565b8183823760009101908152919050565b60006020828403121561124f57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260408101849052608060608201819052600090610e0190830184866111f0565b6000602082840312156112e757600080fd5b81518015158114610ce457600080fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161132d57634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b8381101561134f578181015183820152602001611337565b50506000910152565b6000825161136a818460208701611334565b9190910192915050565b6020815260008251806020840152611393816040850160208701611334565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207ca31a9152694a5f5b79ac28e8ed6377fbffd834b36050f1fe6bc4b950aaa29c64736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D PUSH2 0x22 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1424 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2CF ADD MSTORE DUP2 DUP2 PUSH2 0x318 ADD MSTORE DUP2 DUP2 PUSH2 0x4EE ADD MSTORE DUP2 DUP2 PUSH2 0x52E ADD MSTORE PUSH2 0x5C1 ADD MSTORE PUSH2 0x1424 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x74574EB7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA2298B4B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xEDE49739 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF29EE125 EQ PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x77393 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2AE9C600 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x44162EF8 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFB SLOAD PUSH2 0xCB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x164 SWAP1 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB3 JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x12A PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH32 0x60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH32 0xDE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0xF2F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3AA SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x3CD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x3E7 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x47E DUP4 PUSH4 0x49C2AA3F PUSH1 0xE1 SHL PUSH2 0x95A JUMP JUMPDEST PUSH1 0xFB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x575 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x5A4 DUP3 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x5B0 DUP3 DUP3 PUSH1 0x1 PUSH2 0x7EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH32 0xDE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215 SWAP1 PUSH2 0x6A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER JUMPDEST DUP5 PUSH1 0x0 CALLDATASIZE PUSH2 0x9A4 JUMP JUMPDEST DUP5 PUSH2 0x6AF DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x761 JUMPI PUSH2 0x6BF DUP5 DUP5 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x6E0 JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH4 0x3A5BF49B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP3 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F2 SWAP3 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0xFB SLOAD PUSH4 0x89BB4145 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP6 ADD MSTORE SWAP2 SWAP4 POP AND SWAP1 PUSH4 0x89BB4145 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBC0B11FE649BB4D67C7FB40936163E5423F45C3AE83FBD8F8F8C75E1A3FA97AF DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH32 0x60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932 SWAP1 PUSH2 0x5B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x69C JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x822 JUMPI PUSH2 0x4DF DUP4 PUSH2 0xBB8 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x87C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x879 SWAP2 DUP2 ADD SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST POP PUSH2 0x4DF DUP4 DUP4 DUP4 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x98A DUP3 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7EF7C883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFDEF9106 SWAP1 PUSH2 0x9D8 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB6F8ED PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFDCCE17F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH2 0xABF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0xE0 SHL PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x38811E45 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xB2E JUMPI PUSH2 0xB2E PUSH2 0x12F7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x60 DUP2 GT DUP1 ISZERO PUSH2 0xB4C JUMPI POP PUSH1 0x7B DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0xB57 JUMPI POP PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x2F DUP2 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0xB6D JUMPI POP PUSH1 0x3A DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0xB78 JUMPI POP PUSH2 0xB97 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2D SUB PUSH2 0xB89 JUMPI POP PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0xBB2 JUMP JUMPDEST DUP1 PUSH2 0xBA1 DUP2 PUSH2 0x130D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB12 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC5D DUP4 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xC6A JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x4DF JUMPI PUSH2 0xC79 DUP4 DUP4 PUSH2 0xD2B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD3 DUP4 PUSH2 0xD50 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCE4 JUMPI POP PUSH2 0xCE4 DUP4 DUP4 PUSH2 0xD83 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCE4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 DUP3 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0xD83 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB2 JUMPI POP PUSH2 0xD7C DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xD83 JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xDF5 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE01 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xE29 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xE7A DUP7 DUP4 DUP4 DUP8 PUSH2 0xE84 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xEF3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0xEEC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30D JUMP JUMPDEST POP DUP2 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0xEFD DUP4 DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xF15 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF78 JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF56 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCE4 DUP2 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFD1 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFE1 DUP2 PUSH2 0xF81 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1020 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1063 JUMPI PUSH2 0x1063 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x108B JUMPI PUSH2 0x108B PUSH2 0xFEC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x10E7 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x10F7 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xEFD PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x11F0 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xE01 SWAP1 DUP4 ADD DUP5 DUP7 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x132D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1337 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x136A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1393 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212207C LOG3 BYTE SWAP2 MSTORE PUSH10 0x4A5F5B79AC28E8ED6377 0xFB SELFDESTRUCT 0xD8 CALLVALUE 0xB3 PUSH1 0x50 CALL INVALID PUSH12 0xC4B950AAA29C64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "626:2851:35:-:0;;;1332:4:7;1289:48;;1602:55:35;;;;;;;;;-1:-1:-1;1627:22:35;:20;:22::i;:::-;626:2851;;5939:280:6;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:6;;216:2:41;5998:66:6;;;198:21:41;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:41;;;338:37;392:19;;5998:66:6;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:6;6140:15;6125:30;;;;;;6174:28;;564:36:41;;;6174:28:6;;552:2:41;537:18;6174:28:6;;;;;;;6074:139;5939:280::o;422:184:41:-;626:2851:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REGISTER_DAO_PERMISSION_ID_3118": {
									"entryPoint": null,
									"id": 3118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_REGISTRY_PERMISSION_ID_3267": {
									"entryPoint": null,
									"id": 3267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__DaoAuthorizableUpgradeable_init_3009": {
									"entryPoint": 3199,
									"id": 3009,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__InterfaceBasedRegistry_init_3310": {
									"entryPoint": 2394,
									"id": 3310,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_auth_3095": {
									"entryPoint": 2468,
									"id": 3095,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3321": {
									"entryPoint": 1974,
									"id": 3321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getImplementation_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgData_1184": {
									"entryPoint": null,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_msgSender_1175": {
									"entryPoint": null,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_register_3354": {
									"entryPoint": 2656,
									"id": 3354,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revert_1147": {
									"entryPoint": 3845,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_248": {
									"entryPoint": 3000,
									"id": 248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_346": {
									"entryPoint": 2031,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_293": {
									"entryPoint": 3156,
									"id": 293,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_263": {
									"entryPoint": 3307,
									"id": 263,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@dao_3019": {
									"entryPoint": null,
									"id": 3019,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@entries_3275": {
									"entryPoint": null,
									"id": 3275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1035": {
									"entryPoint": 3371,
									"id": 1035,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1064": {
									"entryPoint": 3596,
									"id": 1064,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_1222": {
									"entryPoint": null,
									"id": 1222,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1233": {
									"entryPoint": null,
									"id": 1233,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_3169": {
									"entryPoint": 941,
									"id": 3169,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isSubdomainValid_3433": {
									"entryPoint": 2827,
									"id": 3433,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@protocolVersion_3692": {
									"entryPoint": 667,
									"id": 3692,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_763": {
									"entryPoint": 1460,
									"id": 763,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@register_3237": {
									"entryPoint": 1639,
									"id": 3237,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@subdomainRegistrar_3122": {
									"entryPoint": null,
									"id": 3122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsERC165InterfaceUnchecked_1493": {
									"entryPoint": 3459,
									"id": 1493,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsERC165_1330": {
									"entryPoint": 3408,
									"id": 1330,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1350": {
									"entryPoint": 3272,
									"id": 1350,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@targetInterfaceId_3270": {
									"entryPoint": null,
									"id": 3270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_806": {
									"entryPoint": 1252,
									"id": 806,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_785": {
									"entryPoint": 709,
									"id": 785,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1103": {
									"entryPoint": 3716,
									"id": 1103,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 4098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IDAO_$2980t_addresst_string_calldata_ptr": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_IDAO_$2980t_contract$_ENSSubdomainRegistrar_$3659": {
									"entryPoint": 4019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string_calldata": {
									"entryPoint": 4592,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed": {
									"entryPoint": 3917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ENSSubdomainRegistrar_$3659__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDAO_$2980__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 4855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12391:41",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:41",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "145:102:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "155:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "178:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "163:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "163:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "155:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "197:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "212:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "228:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "233:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "224:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "224:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "237:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "208:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "208:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "190:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "190:51:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "190:51:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ENSSubdomainRegistrar_$3659__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "114:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "125:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "136:4:41",
														"type": ""
													}
												],
												"src": "14:233:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "395:358:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "405:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "417:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "428:2:41",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "413:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "405:4:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "440:20:41",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "451:9:41"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "444:3:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "469:16:41",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "476:9:41"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "469:3:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:20:41",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "508:6:41"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "498:6:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "523:10:41",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "532:1:41",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "527:1:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "589:158:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "610:3:41"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "625:6:41"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "619:5:41"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "619:13:41"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "634:4:41",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "615:3:41"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "615:24:41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "603:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "603:37:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "603:37:41"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "653:14:41",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "663:4:41",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "657:2:41",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "680:19:41",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "691:3:41"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "696:2:41"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "687:3:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "687:12:41"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "680:3:41"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "712:25:41",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "726:6:41"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "734:2:41"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "722:3:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "722:15:41"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "712:6:41"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "553:1:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:4:41",
																		"type": "",
																		"value": "0x03"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "550:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "550:11:41"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "562:18:41",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "564:14:41",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "573:1:41"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:41",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "569:3:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "569:9:41"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "564:1:41"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "546:3:41",
																"statements": []
															},
															"src": "542:205:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "364:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "375:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "386:4:41",
														"type": ""
													}
												],
												"src": "252:501:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "803:86:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "867:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "876:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "879:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "869:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "869:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "869:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "826:5:41"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "837:5:41"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "852:3:41",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "857:1:41",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "848:3:41"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "848:11:41"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "861:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "844:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "844:19:41"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "833:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "833:31:41"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "823:2:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "823:42:41"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:50:41"
															},
															"nodeType": "YulIf",
															"src": "813:70:41"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "792:5:41",
														"type": ""
													}
												],
												"src": "758:131:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "964:177:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1010:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1019:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1022:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1012:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1012:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "985:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "994:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1006:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "977:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:32:41"
															},
															"nodeType": "YulIf",
															"src": "974:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1035:36:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1061:9:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1048:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:23:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1039:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1105:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1080:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1080:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1120:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1130:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "930:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "941:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "953:6:41",
														"type": ""
													}
												],
												"src": "894:247:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1260:102:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1270:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1282:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1293:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1278:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1270:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1312:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1343:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1348:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1339:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1339:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1352:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1335:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1335:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1323:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1305:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:51:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1305:51:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDAO_$2980__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1240:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1251:4:41",
														"type": ""
													}
												],
												"src": "1146:216:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1466:103:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1476:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1499:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1476:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1518:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1533:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1545:3:41",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1550:10:41",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1541:20:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:33:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:52:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1511:52:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1435:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1446:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1457:4:41",
														"type": ""
													}
												],
												"src": "1367:202:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1704:301:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1750:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1759:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1725:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1721:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1721:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1746:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1717:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:41"
															},
															"nodeType": "YulIf",
															"src": "1714:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1775:36:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1801:9:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1788:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:23:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1779:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1845:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1820:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1860:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1870:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1884:47:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1916:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1927:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1912:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1912:18:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1899:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:32:41"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1888:7:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1965:7:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1940:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:33:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:33:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1982:17:41",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1992:7:41"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IDAO_$2980t_contract$_ENSSubdomainRegistrar_$3659",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1662:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1673:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1685:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1693:6:41",
														"type": ""
													}
												],
												"src": "1574:431:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2042:95:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2059:1:41",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2066:3:41",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2071:10:41",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2062:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2062:20:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2052:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2052:31:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2099:1:41",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2102:4:41",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:15:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:15:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2123:1:41",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2126:4:41",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2116:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:15:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2116:15:41"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2010:127:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2238:960:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2284:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2293:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2296:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2286:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2286:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2286:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2259:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2268:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2251:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2251:32:41"
															},
															"nodeType": "YulIf",
															"src": "2248:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2309:36:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2322:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:23:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2313:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2379:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2354:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2354:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2394:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2404:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2418:46:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2449:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2460:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:18:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2432:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:32:41"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2422:6:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2473:28:41",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2483:18:41",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2477:2:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2528:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2537:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2540:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2530:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2530:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2530:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2516:6:41"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2524:2:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2513:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:14:41"
															},
															"nodeType": "YulIf",
															"src": "2510:34:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2553:32:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2567:9:41"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2578:6:41"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2563:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2563:22:41"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2557:2:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2633:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2642:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2645:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2635:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2635:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2635:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2612:2:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2616:4:41",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2608:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2608:13:41"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2623:7:41"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2604:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:27:41"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2597:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:35:41"
															},
															"nodeType": "YulIf",
															"src": "2594:55:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2658:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2681:2:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2668:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:16:41"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2662:2:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2707:22:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2709:16:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2709:18:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2709:18:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2699:2:41"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2703:2:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2696:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:10:41"
															},
															"nodeType": "YulIf",
															"src": "2693:36:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2738:17:41",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:41",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2748:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2748:7:41"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2742:2:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2764:23:41",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2778:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:9:41"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2768:6:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2796:71:41",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2818:6:41"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2842:2:41"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2846:4:41",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2838:3:41"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2838:13:41"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2853:2:41"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2834:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2834:22:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2858:2:41",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2830:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2830:31:41"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2863:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2826:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2826:40:41"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2814:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2814:53:41"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2800:10:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2926:22:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2928:16:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2928:18:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2928:18:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2885:10:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2897:2:41"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2882:2:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2882:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2905:10:41"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2917:6:41"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2902:2:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2902:22:41"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2879:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2879:46:41"
															},
															"nodeType": "YulIf",
															"src": "2876:72:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:2:41",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2968:10:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2957:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2957:22:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2957:22:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2995:6:41"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3003:2:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2988:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:18:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2988:18:41"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3052:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3061:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3064:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3054:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3054:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3054:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3029:2:41"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3033:2:41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3025:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3025:11:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3038:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:20:41"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3043:7:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3018:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:33:41"
															},
															"nodeType": "YulIf",
															"src": "3015:53:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3094:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3102:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3090:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3090:15:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3111:2:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3115:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3107:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3107:11:41"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3120:2:41"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3077:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:46:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3077:46:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3147:6:41"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3155:2:41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3143:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3143:15:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3160:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3139:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3139:24:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3165:1:41",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:35:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3132:35:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3176:16:41",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3186:6:41"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3176:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2196:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2207:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2219:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2227:6:41",
														"type": ""
													}
												],
												"src": "2142:1056:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3304:76:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3314:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3326:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3337:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3314:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3356:9:41"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3367:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:25:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3349:25:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3273:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3284:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3295:4:41",
														"type": ""
													}
												],
												"src": "3203:177:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3522:744:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3568:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3577:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3580:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3570:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3570:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3570:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3543:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3552:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3539:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3539:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3564:2:41",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3535:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:32:41"
															},
															"nodeType": "YulIf",
															"src": "3532:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3593:36:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3619:9:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3606:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3606:23:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3597:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3663:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3638:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3638:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3678:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3688:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3678:6:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3702:47:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3734:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3745:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3730:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3730:18:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3717:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3717:32:41"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3706:7:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3783:7:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3758:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:33:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3758:33:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3800:17:41",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3810:7:41"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3826:46:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3857:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3868:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3853:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3853:18:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3840:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:32:41"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3830:6:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3881:28:41",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3891:18:41",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3885:2:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3924:6:41"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3932:2:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3921:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:14:41"
															},
															"nodeType": "YulIf",
															"src": "3918:34:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3961:32:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3975:9:41"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:41"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3971:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:22:41"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3965:2:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4041:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4050:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4053:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4043:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4043:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4043:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4020:2:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4024:4:41",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4016:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4016:13:41"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4031:7:41"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4012:27:41"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4005:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:35:41"
															},
															"nodeType": "YulIf",
															"src": "4002:55:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4066:30:41",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4093:2:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4080:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:16:41"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4070:6:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4123:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4132:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4135:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4125:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4125:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4125:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4111:6:41"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4119:2:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4108:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:14:41"
															},
															"nodeType": "YulIf",
															"src": "4105:34:41"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4189:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4198:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4201:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4191:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4191:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4162:2:41"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4166:6:41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4158:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4158:15:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4175:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:24:41"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4180:7:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4151:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:37:41"
															},
															"nodeType": "YulIf",
															"src": "4148:57:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4214:21:41",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4228:2:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4232:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4224:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4224:11:41"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4214:6:41"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4244:16:41",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "4254:6:41"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4244:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IDAO_$2980t_addresst_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3464:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3475:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3487:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3495:6:41",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3503:6:41",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3511:6:41",
														"type": ""
													}
												],
												"src": "3385:881:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4366:92:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4376:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4388:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4399:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4384:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4376:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4418:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4443:6:41"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4436:6:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4436:14:41"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4429:6:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4429:22:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4411:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4411:41:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4411:41:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4335:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4346:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4357:4:41",
														"type": ""
													}
												],
												"src": "4271:187:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4637:234:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4699:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4684:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:41",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4677:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4677:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:41"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4743:34:41",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:41"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4814:14:41",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:42:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:42:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4838:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4850:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4861:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4838:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4628:4:41",
														"type": ""
													}
												],
												"src": "4463:408:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5050:234:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5067:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5060:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5060:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5101:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5112:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5097:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5097:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5117:2:41",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5090:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5090:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5090:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5140:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5151:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5136:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5136:18:41"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5156:34:41",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5129:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5129:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5129:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5211:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5222:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5207:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5207:18:41"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5227:14:41",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5200:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5200:42:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5200:42:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5251:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5263:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5274:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5259:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5259:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5251:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5027:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5041:4:41",
														"type": ""
													}
												],
												"src": "4876:408:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5463:236:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5480:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5491:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5473:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5473:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5473:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5514:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5525:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5510:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5510:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5530:2:41",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5503:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5503:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5553:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5564:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:18:41"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5569:34:41",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5542:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5624:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5635:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5620:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5620:18:41"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5640:16:41",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5613:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5613:44:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5613:44:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5666:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5678:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5689:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5674:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5666:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5440:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5454:4:41",
														"type": ""
													}
												],
												"src": "5289:410:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5811:87:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5821:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5833:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5844:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5829:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5829:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5821:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5863:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5878:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5886:4:41",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5874:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5874:17:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5856:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5856:36:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5856:36:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5780:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5791:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5802:4:41",
														"type": ""
													}
												],
												"src": "5704:194:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6077:246:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6087:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6087:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6128:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6139:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6124:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6124:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6144:2:41",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6117:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6117:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6117:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6167:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6178:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6163:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6163:18:41"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6183:34:41",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6156:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6156:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6238:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6249:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6234:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6234:18:41"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6254:26:41",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6227:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:54:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6227:54:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6290:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6302:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6313:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6298:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6298:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6290:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6054:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6068:4:41",
														"type": ""
													}
												],
												"src": "5903:420:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6395:200:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6412:3:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6405:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6405:19:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6405:19:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6450:3:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6455:4:41",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6446:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6446:14:41"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6462:5:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6469:6:41"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6433:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6433:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6433:43:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6500:3:41"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6505:6:41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6496:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6496:16:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6514:4:41",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6492:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6492:27:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:41",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6485:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6485:38:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6485:38:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6532:57:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6547:3:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6560:6:41"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6568:2:41",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6556:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6556:15:41"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6577:2:41",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6573:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6573:7:41"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6552:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6552:29:41"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6543:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6543:39:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6584:4:41",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6539:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6539:50:41"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6364:5:41",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6371:6:41",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6379:3:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6387:3:41",
														"type": ""
													}
												],
												"src": "6328:267:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6731:116:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6748:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6741:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6741:21:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6771:70:41",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6806:6:41"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6814:6:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6826:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6837:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6822:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6822:18:41"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "6779:26:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:62:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6771:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6692:9:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6703:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6711:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6722:4:41",
														"type": ""
													}
												],
												"src": "6600:247:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6999:124:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7022:3:41"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7027:6:41"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7035:6:41"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7009:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7009:33:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7009:33:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7051:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7065:3:41"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7070:6:41"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7061:16:41"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7055:2:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7093:2:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7097:1:41",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7086:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7086:13:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7086:13:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7108:9:41",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "7115:2:41"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7108:3:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6967:3:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6972:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6980:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6991:3:41",
														"type": ""
													}
												],
												"src": "6852:271:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7257:145:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7267:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7279:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7290:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7275:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7275:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7267:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7309:9:41"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7320:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7302:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:25:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7302:25:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7347:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7358:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7343:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7343:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7367:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7383:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7388:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7379:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7379:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7392:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7375:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7375:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7363:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7363:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7336:60:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7336:60:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7218:9:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7229:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7237:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7248:4:41",
														"type": ""
													}
												],
												"src": "7128:274:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7488:103:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7534:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7543:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7546:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7536:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7536:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7536:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7509:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7518:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7505:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7505:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7530:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7501:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:32:41"
															},
															"nodeType": "YulIf",
															"src": "7498:52:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7559:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7575:9:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7569:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:16:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7559:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7454:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7465:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7477:6:41",
														"type": ""
													}
												],
												"src": "7407:184:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7770:236:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7787:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7798:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7780:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7821:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7832:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:41",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7810:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7810:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7810:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7860:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7871:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7856:18:41"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7876:34:41",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7931:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7942:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7927:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7927:18:41"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7947:16:41",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7920:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7920:44:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7920:44:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7973:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7985:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7996:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7981:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7981:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7973:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7747:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7761:4:41",
														"type": ""
													}
												],
												"src": "7596:410:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8185:231:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8202:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8213:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8195:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8195:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8236:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8247:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8232:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8232:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8252:2:41",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8225:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8225:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8225:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8275:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8286:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8271:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8271:18:41"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8291:34:41",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8264:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8264:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8264:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8346:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8357:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8342:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:18:41"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8362:11:41",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8335:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8335:39:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8335:39:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8383:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8395:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8406:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8391:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8391:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8383:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8162:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8176:4:41",
														"type": ""
													}
												],
												"src": "8011:405:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8595:233:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8612:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8623:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8605:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8605:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8605:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8646:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8657:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8642:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8642:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8662:2:41",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8635:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8635:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8685:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8696:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8681:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8681:18:41"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8701:34:41",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8674:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8674:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8674:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8756:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8767:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8752:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8752:18:41"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8772:13:41",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8745:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8745:41:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8745:41:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8795:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8807:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8818:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8803:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8803:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8795:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8572:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8586:4:41",
														"type": ""
													}
												],
												"src": "8421:407:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9046:303:41",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9056:29:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9074:3:41",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9079:1:41",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9070:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9070:11:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9083:1:41",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9066:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9066:19:41"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9060:2:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9101:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9116:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9124:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9112:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9112:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9094:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9094:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9094:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9148:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9159:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9144:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9144:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9168:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9176:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9164:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9164:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9137:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9137:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9137:43:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9200:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9211:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9196:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9196:18:41"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9216:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9189:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9189:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9189:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9254:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9239:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9239:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9259:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9232:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9232:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9232:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9272:71:41",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9307:6:41"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9315:6:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9327:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9338:3:41",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9323:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9323:19:41"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "9280:26:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9280:63:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9272:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8983:9:41",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8994:6:41",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9002:6:41",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9010:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9018:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9026:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9037:4:41",
														"type": ""
													}
												],
												"src": "8833:516:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9432:199:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9478:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9487:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9490:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9480:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9480:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9480:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9453:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9462:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9449:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9449:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9445:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9445:32:41"
															},
															"nodeType": "YulIf",
															"src": "9442:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9503:29:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9522:9:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9516:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9516:16:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9507:5:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9585:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9594:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9597:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9587:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9587:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9587:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9554:5:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9575:5:41"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9568:6:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9568:13:41"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9561:6:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9561:21:41"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9551:2:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9551:32:41"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9544:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9544:40:41"
															},
															"nodeType": "YulIf",
															"src": "9541:60:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9610:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9620:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9398:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9409:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9421:6:41",
														"type": ""
													}
												],
												"src": "9354:277:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9821:271:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9831:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9843:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9854:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9839:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9839:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9831:4:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9867:29:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9885:3:41",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9890:1:41",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9881:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9881:11:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9894:1:41",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9877:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9877:19:41"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9871:2:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9912:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9927:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9935:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9923:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9923:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9905:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9905:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9905:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9959:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9970:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9955:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9955:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9979:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9987:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9975:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9975:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9948:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9948:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9948:43:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10011:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10022:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10007:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10007:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10031:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10039:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10027:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10027:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10000:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10000:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10000:43:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10063:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10074:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10059:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10059:18:41"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10079:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10052:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10052:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10052:34:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9766:9:41",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9777:6:41",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9785:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9793:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9801:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9812:4:41",
														"type": ""
													}
												],
												"src": "9636:456:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10198:102:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10208:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10220:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10231:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10216:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10208:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10250:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10265:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10281:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10286:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10277:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10277:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10290:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10273:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10273:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10261:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10261:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10243:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10243:51:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10243:51:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10167:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10178:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10189:4:41",
														"type": ""
													}
												],
												"src": "10097:203:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10337:95:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10354:1:41",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:3:41",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10366:10:41",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10357:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10357:20:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10347:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10347:31:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10394:1:41",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10397:4:41",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10387:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10387:15:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10387:15:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10418:1:41",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10421:4:41",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10411:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10411:15:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10411:15:41"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10305:127:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10484:185:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10523:111:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10544:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10551:3:41",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10556:10:41",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10547:3:41"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10547:20:41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10537:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10537:31:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10537:31:41"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10588:1:41",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10591:4:41",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10581:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10581:15:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10581:15:41"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10616:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10619:4:41",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10609:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10609:15:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10609:15:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10500:5:41"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10511:1:41",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10507:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10507:6:41"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10497:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10497:17:41"
															},
															"nodeType": "YulIf",
															"src": "10494:140:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10643:20:41",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10654:5:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10661:1:41",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10650:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10650:13:41"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10643:3:41"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10466:5:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10476:3:41",
														"type": ""
													}
												],
												"src": "10437:232:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10848:235:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10865:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10876:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10858:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10858:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10858:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10899:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10910:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10895:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10895:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10915:2:41",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10888:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10938:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10949:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10934:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10934:18:41"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10954:34:41",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10927:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10927:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10927:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11009:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11020:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11005:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11005:18:41"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11025:15:41",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10998:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10998:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10998:43:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11050:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11062:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11073:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11058:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11050:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10825:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10839:4:41",
														"type": ""
													}
												],
												"src": "10674:409:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11154:184:41",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11164:10:41",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11173:1:41",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11168:1:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11233:63:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11258:3:41"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11263:1:41"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11254:3:41"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11254:11:41"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11277:3:41"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11282:1:41"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11273:3:41"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11273:11:41"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11267:5:41"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11267:18:41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11247:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11247:39:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11247:39:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11194:1:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11197:6:41"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11191:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11191:13:41"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11205:19:41",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11207:15:41",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11216:1:41"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11219:2:41",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11212:3:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11212:10:41"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11207:1:41"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11187:3:41",
																"statements": []
															},
															"src": "11183:113:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11316:3:41"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11321:6:41"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11312:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11312:16:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11330:1:41",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11305:27:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11305:27:41"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11132:3:41",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11137:3:41",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11142:6:41",
														"type": ""
													}
												],
												"src": "11088:250:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11480:150:41",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11490:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11510:6:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11504:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11504:13:41"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11494:6:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11565:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11573:4:41",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11561:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11561:17:41"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11580:3:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11585:6:41"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11526:34:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11526:66:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11526:66:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11601:23:41",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11612:3:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11617:6:41"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11608:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11608:16:41"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11601:3:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11456:3:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11461:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11472:3:41",
														"type": ""
													}
												],
												"src": "11343:287:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11809:179:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11826:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11837:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11819:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11819:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11819:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11860:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11871:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11856:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11856:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11876:2:41",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11849:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11849:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11849:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11899:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11910:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11895:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11895:18:41"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11915:31:41",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11888:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11888:59:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11888:59:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11956:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11968:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11979:2:41",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11964:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11964:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11956:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11786:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11800:4:41",
														"type": ""
													}
												],
												"src": "11635:353:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12114:275:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12131:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12142:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12124:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "12124:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12124:21:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12154:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12174:6:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12168:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "12168:13:41"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12158:6:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12201:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12212:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12197:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12197:18:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12217:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12190:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "12190:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12190:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12272:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12280:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12268:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12268:15:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12289:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12300:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12285:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12285:18:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12305:6:41"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12233:34:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "12233:79:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12233:79:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12321:62:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12337:9:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "12356:6:41"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12364:2:41",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12352:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12352:15:41"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12373:2:41",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12369:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12369:7:41"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12348:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12348:29:41"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12333:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12333:45:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12380:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12329:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "12329:54:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12321:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12083:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12094:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12105:4:41",
														"type": ""
													}
												],
												"src": "11993:396:41"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_ENSSubdomainRegistrar_$3659__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xff))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IDAO_$2980__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_contract$_IDAO_$2980t_contract$_ENSSubdomainRegistrar_$3659(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_IDAO_$2980t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_calldata(value3, value4, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 41,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"713": [
									{
										"length": 32,
										"start": 719
									},
									{
										"length": 32,
										"start": 792
									},
									{
										"length": 32,
										"start": 1262
									},
									{
										"length": 32,
										"start": 1326
									},
									{
										"length": 32,
										"start": 1473
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x74574EB7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA2298B4B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xEDE49739 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF29EE125 EQ PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x77393 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2AE9C600 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x44162EF8 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFB SLOAD PUSH2 0xCB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x164 SWAP1 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB3 JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x12A PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH32 0x60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH32 0xDE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0xF2F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3AA SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x3CD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x3E7 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x47E DUP4 PUSH4 0x49C2AA3F PUSH1 0xE1 SHL PUSH2 0x95A JUMP JUMPDEST PUSH1 0xFB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x575 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x5A4 DUP3 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x5B0 DUP3 DUP3 PUSH1 0x1 PUSH2 0x7EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH32 0xDE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215 SWAP1 PUSH2 0x6A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER JUMPDEST DUP5 PUSH1 0x0 CALLDATASIZE PUSH2 0x9A4 JUMP JUMPDEST DUP5 PUSH2 0x6AF DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x761 JUMPI PUSH2 0x6BF DUP5 DUP5 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x6E0 JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH4 0x3A5BF49B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP3 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F2 SWAP3 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0xFB SLOAD PUSH4 0x89BB4145 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP6 ADD MSTORE SWAP2 SWAP4 POP AND SWAP1 PUSH4 0x89BB4145 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBC0B11FE649BB4D67C7FB40936163E5423F45C3AE83FBD8F8F8C75E1A3FA97AF DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH32 0x60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932 SWAP1 PUSH2 0x5B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x69C JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x822 JUMPI PUSH2 0x4DF DUP4 PUSH2 0xBB8 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x87C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x879 SWAP2 DUP2 ADD SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST POP PUSH2 0x4DF DUP4 DUP4 DUP4 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x98A DUP3 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7EF7C883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFDEF9106 SWAP1 PUSH2 0x9D8 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB6F8ED PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFDCCE17F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH2 0xABF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0xE0 SHL PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x38811E45 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xB2E JUMPI PUSH2 0xB2E PUSH2 0x12F7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x60 DUP2 GT DUP1 ISZERO PUSH2 0xB4C JUMPI POP PUSH1 0x7B DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0xB57 JUMPI POP PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x2F DUP2 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0xB6D JUMPI POP PUSH1 0x3A DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0xB78 JUMPI POP PUSH2 0xB97 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2D SUB PUSH2 0xB89 JUMPI POP PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0xBB2 JUMP JUMPDEST DUP1 PUSH2 0xBA1 DUP2 PUSH2 0x130D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB12 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC5D DUP4 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xC6A JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x4DF JUMPI PUSH2 0xC79 DUP4 DUP4 PUSH2 0xD2B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD3 DUP4 PUSH2 0xD50 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCE4 JUMPI POP PUSH2 0xCE4 DUP4 DUP4 PUSH2 0xD83 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCE4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 DUP3 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0xD83 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB2 JUMPI POP PUSH2 0xD7C DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xD83 JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xDF5 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE01 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xE29 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xE7A DUP7 DUP4 DUP4 DUP8 PUSH2 0xE84 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xEF3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0xEEC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30D JUMP JUMPDEST POP DUP2 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0xEFD DUP4 DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xF15 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF78 JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF56 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCE4 DUP2 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFD1 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFE1 DUP2 PUSH2 0xF81 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1020 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1063 JUMPI PUSH2 0x1063 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x108B JUMPI PUSH2 0x108B PUSH2 0xFEC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x10E7 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x10F7 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xEFD PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x11F0 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xE01 SWAP1 DUP4 ADD DUP5 DUP7 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x132D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1337 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x136A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1393 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212207C LOG3 BYTE SWAP2 MSTORE PUSH10 0x4A5F5B79AC28E8ED6377 0xFB SELFDESTRUCT 0xD8 CALLVALUE 0xB3 PUSH1 0x50 CALL INVALID PUSH12 0xC4B950AAA29C64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "626:2851:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:47;;;;;;;;;;-1:-1:-1;956:47:35;;;;-1:-1:-1;;;;;956:47:35;;;;;;-1:-1:-1;;;;;208:32:41;;;190:51;;178:2;163:18;956:47:35;;;;;;;;656:100:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3387:195:7:-;;;;;;;;;;-1:-1:-1;3387:195:7;;;;;:::i;:::-;;:::i;:::-;;1239:72:33;;;;;;;;;;-1:-1:-1;1299:4:33;;-1:-1:-1;;;;;1299:4:33;1239:72;;1276:31:36;;;;;;;;;;-1:-1:-1;1276:31:36;;;;;;;;;;;-1:-1:-1;;;;;;1529:33:41;;;1511:52;;1499:2;1484:18;1276:31:36;1367:202:41;1869:265:35;;;;;;;;;;-1:-1:-1;1869:265:35;;;;;:::i;:::-;;:::i;3901:220:7:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;:::-;;;3349:25:41;;;3337:2;3322:18;3006:131:7;3203:177:41;1020:106:36;;;;;;;;;;;;1086:40;1020:106;;781:89:35;;;;;;;;;;;;834:36;781:89;;2546:615;;;;;;;;;;-1:-1:-1;2546:615:35;;;;;:::i;:::-;;:::i;1427:39:36:-;;;;;;;;;;-1:-1:-1;1427:39:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4436:14:41;;4429:22;4411:41;;4399:2;4384:18;1427:39:36;4271:187:41;656:100:40;704:15;;:::i;:::-;-1:-1:-1;732:16:40;;;;;;;;740:1;732:16;;743:1;732:16;;;;-1:-1:-1;732:16:40;;;;;;;;656:100::o;3387:195:7:-;-1:-1:-1;;;;;1898:6:7;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:7;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:7;:20;-1:-1:-1;;;;;;;;;;;1536:65:4;-1:-1:-1;;;;;1536:65:4;;1457:151;1971:20:7;-1:-1:-1;;;;;1971:30:7;;1963:87;;;;-1:-1:-1;;;1963:87:7;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;1869:265:35:-;3279:19:6;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:6;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:6;1713:19:8;:23;;;3387:66:6;;-1:-1:-1;3436:12:6;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:6;;5491:2:41;3325:201:6;;;5473:21:41;5530:2;5510:18;;;5503:30;5569:34;5549:18;;;5542:62;-1:-1:-1;;;5620:18:41;;;5613:44;5674:19;;3325:201:6;5289:410:41;3325:201:6;3536:12;:16;;-1:-1:-1;;3536:16:6;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:6;;;;;3562:65;2008:67:35::1;2038:12;-1:-1:-1::0;;;2008:29:35::1;:67::i;:::-;2086:18;:40:::0;;-1:-1:-1;;;;;;2086:40:35::1;-1:-1:-1::0;;;;;2086:40:35;::::1;;::::0;;3647:99:6;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:6;;;3721:14;;-1:-1:-1;5856:36:41;;3721:14:6;;5844:2:41;5829:18;3721:14:6;;;;;;;3647:99;3269:483;1869:265:35;;:::o;3901:220:7:-;-1:-1:-1;;;;;1898:6:7;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:7;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:7;:20;-1:-1:-1;;;;;;;;;;;1536:65:4;-1:-1:-1;;;;;1536:65:4;;1457:151;1971:20:7;-1:-1:-1;;;;;1971:30:7;;1963:87;;;;-1:-1:-1;;;1963:87:7;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:7;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:7;;6105:2:41;2308:92:7;;;6087:21:41;6144:2;6124:18;;;6117:30;6183:34;6163:18;;;6156:62;6254:26;6234:18;;;6227:54;6298:19;;2308:92:7;5903:420:41;2308:92:7;-1:-1:-1;;;;;;;;;;;;3006:131:7;:::o;2546:615:35:-;1662:4:33;;834:36:35;;1656:67:33;;-1:-1:-1;;;;;1662:4:33;1676;929:10:9;1683:12:33;1697:13;1003:14:9;;1656:5:33;:67::i;:::-;2731:3:35;2748:18:::1;2731:3:::0;2748:9:::1;:18::i;:::-;2784:27:::0;;2779:315:::1;;2834:27;2851:9;;2834:16;:27::i;:::-;2829:119;;2921:9;;2889:43;;-1:-1:-1::0;;;2889:43:35::1;;;;;;;;;:::i;2829:119::-;2964:17;3000:9;;2984:27;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;3028:18:::1;::::0;-1:-1:-1;;;3028:54:35;;::::1;::::0;::::1;7302:25:41::0;;;-1:-1:-1;;;;;7363:32:41;;;7343:18;;;7336:60;2984:27:35;;-1:-1:-1;3028:18:35::1;::::0;:34:::1;::::0;7275:18:41;;3028:54:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2814:280;2779:315;3134:7;-1:-1:-1::0;;;;;3111:42:35::1;3125:7;-1:-1:-1::0;;;;;3111:42:35::1;;3143:9;;3111:42;;;;;;;:::i;:::-;;;;;;;;2694:467;2546:615:::0;;;;;:::o;3015:117:36:-;1662:4:33;;1086:40:36;;1656:67:33;;-1:-1:-1;;;;;1662:4:33;1676;929:10:9;1683:12:33;850:96:9;2820:944:4;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:4;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:4;;;;;;;;-1:-1:-1;;3383:63:4;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:4;;7798:2:41;3610:56:4;;;7780:21:41;7837:2;7817:18;;;7810:30;7876:34;7856:18;;;7849:62;-1:-1:-1;;;7927:18:41;;;7920:44;7981:19;;3610:56:4;7596:410:41;3379:302:4;-1:-1:-1;;;;;;;;;;;3496:28:4;;3488:82;;;;-1:-1:-1;;;3488:82:4;;8213:2:41;3488:82:4;;;8195:21:41;8252:2;8232:18;;;8225:30;8291:34;8271:18;;;8264:62;-1:-1:-1;;;8342:18:41;;;8335:39;8391:19;;3488:82:4;8011:405:41;3488:82:4;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;2407:261:36:-;5374:13:6;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:6;;;;;;;:::i;:::-;2562:47:36::1;2596:12;2562:33;:47::i;:::-;2622:17;:38:::0;;-1:-1:-1;;2622:38:36::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2407:261:36:o;1057:377:34:-;1203:54;;-1:-1:-1;;;1203:54:34;;-1:-1:-1;;;;;1203:18:34;;;;;:54;;1222:6;;1230:4;;1236:13;;1251:5;;;;1203:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1198:232;;1275:155;;-1:-1:-1;;;1275:155:34;;-1:-1:-1;;;;;9923:15:41;;;1275:155:34;;;9905:34:41;9975:15;;;9955:18;;;9948:43;10027:15;;10007:18;;;10000:43;10059:18;;;10052:34;;;9839:19;;1275:155:34;9636:456:41;1198:232:34;1057:377;;;;;;:::o;3426:463:36:-;-1:-1:-1;;;;;3490:20:36;;;;;;:7;:20;;;;;;;;3486:112;;;3534:52;;-1:-1:-1;;;3534:52:36;;-1:-1:-1;;;;;208:32:41;;3534:52:36;;;190:51:41;163:18;;3534:52:36;14:233:41;3486:112:36;3751:17;;3721:48;;-1:-1:-1;;;;;3721:29:36;;;3751:17;;3721:29;:48::i;:::-;3716:126;;3793:37;;-1:-1:-1;;;3793:37:36;;-1:-1:-1;;;;;208:32:41;;3793:37:36;;;190:51:41;163:18;;3793:37:36;14:233:41;3716:126:36;-1:-1:-1;;;;;3854:20:36;;;;;:7;:20;;;;;:27;;-1:-1:-1;;3854:27:36;3877:4;3854:27;;;3426:463::o;658:683:37:-;725:4;771:9;;;725:4;832:488;852:10;848:1;:14;832:488;;;880:10;899:9;;909:1;899:12;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;971:2:37;964:9;;:23;;;;;984:3;977:4;:10;;;964:23;960:64;;;1004:8;;;960:64;1082:2;1075:4;:9;;;:22;;;;;1095:2;1088:4;:9;;;1075:22;1071:63;;;1114:8;;;1071:63;1175:4;:10;;1183:2;1175:10;1171:51;;1202:8;;;1171:51;1307:5;1300:12;;;;;;;;;832:488;864:3;;;;:::i;:::-;;;;832:488;;;;1333:4;1326:11;;;;;658:683;;;;;:::o;1699:281:4:-;-1:-1:-1;;;;;1713:19:8;;;1772:106:4;;;;-1:-1:-1;;;1772:106:4;;10876:2:41;1772:106:4;;;10858:21:41;10915:2;10895:18;;;10888:30;10954:34;10934:18;;;10927:62;-1:-1:-1;;;11005:18:41;;;10998:43;11058:19;;1772:106:4;10674:409:41;1772:106:4;-1:-1:-1;;;;;;;;;;;1888:85:4;;-1:-1:-1;;;;;;1888:85:4;-1:-1:-1;;;;;1888:85:4;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;1043:110:33:-;5374:13:6;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:6;;;;;;;:::i;:::-;1134:4:33::1;:11:::0;;-1:-1:-1;;;;;;1134:11:33::1;-1:-1:-1::0;;;;;1134:11:33;;;::::1;::::0;;;::::1;::::0;;1043:110::o;1382:282:11:-;1469:4;1576:23;1591:7;1576:14;:23::i;:::-;:81;;;;;1603:54;1636:7;1645:11;1603:32;:54::i;:::-;1569:88;1382:282;-1:-1:-1;;;1382:282:11:o;2086:152:4:-;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:4;;;;;;;;2086:152;:::o;6685:198:8:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;726:438:11:-;790:4;997:79;1030:7;-1:-1:-1;;;997:32:11;:79::i;:::-;:160;;;;-1:-1:-1;1093:64:11;1126:7;-1:-1:-1;;;;;;1093:32:11;:64::i;:::-;1092:65;978:179;726:438;-1:-1:-1;;726:438:11:o;4454:658::-;4625:82;;;-1:-1:-1;;;;;;1529:33:41;;4625:82:11;;;;1511:52:41;;;;4625:82:11;;;;;;;;;;1484:18:41;;;;4625:82:11;;;;;;;;;-1:-1:-1;;;;;4625:82:11;-1:-1:-1;;;4625:82:11;;;4915:20;;4556:4;;4625:82;4556:4;;;;;;4625:82;4556:4;;4915:20;4880:7;4873:5;4862:86;4851:97;;4975:16;4961:30;;5025:4;5019:11;5004:26;;5057:7;:29;;;;;5082:4;5068:10;:18;;5057:29;:48;;;;;5104:1;5090:11;:15;5057:48;5050:55;4454:658;-1:-1:-1;;;;;;;4454:658:11:o;7069:325:8:-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:8;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:8:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:8;;;8124:60;;;;-1:-1:-1;;;8124:60:8;;11837:2:41;8124:60:8;;;11819:21:41;11876:2;11856:18;;;11849:30;11915:31;11895:18;;;11888:59;11964:18;;8124:60:8;11635:353:41;8124:60:8;-1:-1:-1;8219:10:8;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:8;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;252:501:41:-;428:2;413:18;;417:9;508:6;386:4;542:205;556:4;553:1;550:11;542:205;;;619:13;;634:4;615:24;603:37;;663:4;687:12;;;;722:15;;;;576:1;569:9;542:205;;;546:3;;;252:501;;;;:::o;758:131::-;-1:-1:-1;;;;;833:31:41;;823:42;;813:70;;879:1;876;869:12;894:247;953:6;1006:2;994:9;985:7;981:23;977:32;974:52;;;1022:1;1019;1012:12;974:52;1061:9;1048:23;1080:31;1105:5;1080:31;:::i;1574:431::-;1685:6;1693;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1801:9;1788:23;1820:31;1845:5;1820:31;:::i;:::-;1870:5;-1:-1:-1;1927:2:41;1912:18;;1899:32;1940:33;1899:32;1940:33;:::i;:::-;1992:7;1982:17;;;1574:431;;;;;:::o;2010:127::-;2071:10;2066:3;2062:20;2059:1;2052:31;2102:4;2099:1;2092:15;2126:4;2123:1;2116:15;2142:1056;2219:6;2227;2280:2;2268:9;2259:7;2255:23;2251:32;2248:52;;;2296:1;2293;2286:12;2248:52;2335:9;2322:23;2354:31;2379:5;2354:31;:::i;:::-;2404:5;-1:-1:-1;2460:2:41;2445:18;;2432:32;2483:18;2513:14;;;2510:34;;;2540:1;2537;2530:12;2510:34;2578:6;2567:9;2563:22;2553:32;;2623:7;2616:4;2612:2;2608:13;2604:27;2594:55;;2645:1;2642;2635:12;2594:55;2681:2;2668:16;2703:2;2699;2696:10;2693:36;;;2709:18;;:::i;:::-;2784:2;2778:9;2752:2;2838:13;;-1:-1:-1;;2834:22:41;;;2858:2;2830:31;2826:40;2814:53;;;2882:18;;;2902:22;;;2879:46;2876:72;;;2928:18;;:::i;:::-;2968:10;2964:2;2957:22;3003:2;2995:6;2988:18;3043:7;3038:2;3033;3029;3025:11;3021:20;3018:33;3015:53;;;3064:1;3061;3054:12;3015:53;3120:2;3115;3111;3107:11;3102:2;3094:6;3090:15;3077:46;3165:1;3160:2;3155;3147:6;3143:15;3139:24;3132:35;3186:6;3176:16;;;;;;;2142:1056;;;;;:::o;3385:881::-;3487:6;3495;3503;3511;3564:2;3552:9;3543:7;3539:23;3535:32;3532:52;;;3580:1;3577;3570:12;3532:52;3619:9;3606:23;3638:31;3663:5;3638:31;:::i;:::-;3688:5;-1:-1:-1;3745:2:41;3730:18;;3717:32;3758:33;3717:32;3758:33;:::i;:::-;3810:7;-1:-1:-1;3868:2:41;3853:18;;3840:32;3891:18;3921:14;;;3918:34;;;3948:1;3945;3938:12;3918:34;3986:6;3975:9;3971:22;3961:32;;4031:7;4024:4;4020:2;4016:13;4012:27;4002:55;;4053:1;4050;4043:12;4002:55;4093:2;4080:16;4119:2;4111:6;4108:14;4105:34;;;4135:1;4132;4125:12;4105:34;4180:7;4175:2;4166:6;4162:2;4158:15;4154:24;4151:37;4148:57;;;4201:1;4198;4191:12;4148:57;3385:881;;;;-1:-1:-1;;4232:2:41;4224:11;;-1:-1:-1;;;3385:881:41:o;4463:408::-;4665:2;4647:21;;;4704:2;4684:18;;;4677:30;4743:34;4738:2;4723:18;;4716:62;-1:-1:-1;;;4809:2:41;4794:18;;4787:42;4861:3;4846:19;;4463:408::o;4876:::-;5078:2;5060:21;;;5117:2;5097:18;;;5090:30;5156:34;5151:2;5136:18;;5129:62;-1:-1:-1;;;5222:2:41;5207:18;;5200:42;5274:3;5259:19;;4876:408::o;6328:267::-;6417:6;6412:3;6405:19;6469:6;6462:5;6455:4;6450:3;6446:14;6433:43;-1:-1:-1;6521:1:41;6496:16;;;6514:4;6492:27;;;6485:38;;;;6577:2;6556:15;;;-1:-1:-1;;6552:29:41;6543:39;;;6539:50;;6328:267::o;6600:247::-;6759:2;6748:9;6741:21;6722:4;6779:62;6837:2;6826:9;6822:18;6814:6;6806;6779:62;:::i;6852:271::-;7035:6;7027;7022:3;7009:33;6991:3;7061:16;;7086:13;;;7061:16;6852:271;-1:-1:-1;6852:271:41:o;7407:184::-;7477:6;7530:2;7518:9;7509:7;7505:23;7501:32;7498:52;;;7546:1;7543;7536:12;7498:52;-1:-1:-1;7569:16:41;;7407:184;-1:-1:-1;7407:184:41:o;8421:407::-;8623:2;8605:21;;;8662:2;8642:18;;;8635:30;8701:34;8696:2;8681:18;;8674:62;-1:-1:-1;;;8767:2:41;8752:18;;8745:41;8818:3;8803:19;;8421:407::o;8833:516::-;-1:-1:-1;;;;;9112:15:41;;;9094:34;;9164:15;;9159:2;9144:18;;9137:43;9211:2;9196:18;;9189:34;;;9259:3;9254:2;9239:18;;9232:31;;;9037:4;;9280:63;;9323:19;;9315:6;9307;9280:63;:::i;9354:277::-;9421:6;9474:2;9462:9;9453:7;9449:23;9445:32;9442:52;;;9490:1;9487;9480:12;9442:52;9522:9;9516:16;9575:5;9568:13;9561:21;9554:5;9551:32;9541:60;;9597:1;9594;9587:12;10305:127;10366:10;10361:3;10357:20;10354:1;10347:31;10397:4;10394:1;10387:15;10421:4;10418:1;10411:15;10437:232;10476:3;10497:17;;;10494:140;;10556:10;10551:3;10547:20;10544:1;10537:31;10591:4;10588:1;10581:15;10619:4;10616:1;10609:15;10494:140;-1:-1:-1;10661:1:41;10650:13;;10437:232::o;11088:250::-;11173:1;11183:113;11197:6;11194:1;11191:13;11183:113;;;11273:11;;;11267:18;11254:11;;;11247:39;11219:2;11212:10;11183:113;;;-1:-1:-1;;11330:1:41;11312:16;;11305:27;11088:250::o;11343:287::-;11472:3;11510:6;11504:13;11526:66;11585:6;11580:3;11573:4;11565:6;11561:17;11526:66;:::i;:::-;11608:16;;;;;11343:287;-1:-1:-1;;11343:287:41:o;11993:396::-;12142:2;12131:9;12124:21;12105:4;12174:6;12168:13;12217:6;12212:2;12201:9;12197:18;12190:34;12233:79;12305:6;12300:2;12289:9;12285:18;12280:2;12272:6;12268:15;12233:79;:::i;:::-;12373:2;12352:15;-1:-1:-1;;12348:29:41;12333:45;;;;12380:2;12329:54;;11993:396;-1:-1:-1;;11993:396:41:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1031200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REGISTER_DAO_PERMISSION_ID()": "261",
								"UPGRADE_REGISTRY_PERMISSION_ID()": "239",
								"dao()": "2387",
								"entries(address)": "2635",
								"initialize(address,address)": "infinite",
								"protocolVersion()": "infinite",
								"proxiableUUID()": "infinite",
								"register(address,address,string)": "infinite",
								"subdomainRegistrar()": "2327",
								"targetInterfaceId()": "2417",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 35,
									"value": "A0"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 35,
									"value": "40"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "MSTORE",
									"source": 35
								},
								{
									"begin": 1332,
									"end": 1336,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "CALLVALUE",
									"source": 35
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "DUP1",
									"source": 35
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "ISZERO",
									"source": 35
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "PUSH [tag]",
									"source": 35,
									"value": "1"
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "JUMPI",
									"source": 35
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "DUP1",
									"source": 35
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "REVERT",
									"source": 35
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "tag",
									"source": 35,
									"value": "1"
								},
								{
									"begin": 1602,
									"end": 1657,
									"name": "JUMPDEST",
									"source": 35
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1627,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 35,
									"value": "4"
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 35,
									"value": "5"
								},
								{
									"begin": 1627,
									"end": 1649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 35
								},
								{
									"begin": 1627,
									"end": 1649,
									"name": "tag",
									"source": 35,
									"value": "4"
								},
								{
									"begin": 1627,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 35
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH [tag]",
									"source": 35,
									"value": "14"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "JUMP",
									"source": 35
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6020,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 41,
									"value": "20"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 41,
									"value": "27"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 41,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 294,
									"end": 328,
									"name": "PUSH",
									"source": 41,
									"value": "496E697469616C697A61626C653A20636F6E747261637420697320696E697469"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 41,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "616C697A696E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 41,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 338,
									"end": 375,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 392,
									"end": 411,
									"name": "PUSH",
									"source": 41,
									"value": "84"
								},
								{
									"begin": 392,
									"end": 411,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6094,
									"end": 6109,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6109,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6140,
									"end": 6155,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 564,
									"end": 600,
									"name": "SWAP1",
									"source": 41
								},
								{
									"begin": 564,
									"end": 600,
									"name": "DUP2",
									"source": 41
								},
								{
									"begin": 564,
									"end": 600,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 6,
									"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 552,
									"end": 554,
									"name": "PUSH",
									"source": 41,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "LOG1",
									"source": 6
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5939,
									"end": 6219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 422,
									"end": 606,
									"name": "tag",
									"source": 41,
									"value": "14"
								},
								{
									"begin": 422,
									"end": 606,
									"name": "JUMPDEST",
									"source": 41
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 35,
									"value": "80"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "MLOAD",
									"source": 35
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH #[$]",
									"source": 35,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH [$]",
									"source": 35,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "CODECOPY",
									"source": 35
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "ASSIGNIMMUTABLE",
									"source": 35,
									"value": "713"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH #[$]",
									"source": 35,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 3477,
									"name": "RETURN",
									"source": 35
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ca31a9152694a5f5b79ac28e8ed6377fbffd834b36050f1fe6bc4b950aaa29c64736f6c63430008110033",
									".code": [
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "80"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "MSTORE",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "CALLDATASIZE",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "LT",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "CALLDATALOAD",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "SHR",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "4F1EF286"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "GT",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "14"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "4F1EF286"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "8"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "52D1902D"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "9"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "74574EB7"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "10"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "A2298B4B"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "11"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "EDE49739"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "12"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "F29EE125"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "13"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "REVERT",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "tag",
											"source": 35,
											"value": "14"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "77393"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "2AE9C600"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "3"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "3659CFE6"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "4162169F"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "5"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "44162EF8"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "6"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "485CC955"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "7"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "tag",
											"source": 35,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 626,
											"end": 3477,
											"name": "REVERT",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "tag",
											"source": 35,
											"value": "2"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "CALLVALUE",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "15"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "REVERT",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "tag",
											"source": 35,
											"value": "15"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH",
											"source": 35,
											"value": "FB"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SLOAD",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "16"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "AND",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "DUP2",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "tag",
											"source": 35,
											"value": "16"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "MLOAD",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 208,
											"end": 240,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 190,
											"end": 241,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 178,
											"end": 180,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "tag",
											"source": 35,
											"value": "18"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "MLOAD",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP2",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SUB",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "RETURN",
											"source": 35
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 40,
											"value": "3"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "CALLVALUE",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "DUP1",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "ISZERO",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "20"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPI",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH",
											"source": 40,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "DUP1",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "REVERT",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 40,
											"value": "20"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "POP",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "21"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 40,
											"value": "21"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH",
											"source": 40,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "MLOAD",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "18"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "SWAP2",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "SWAP1",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "24"
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 40
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "tag",
											"source": 33,
											"value": "5"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "CALLVALUE",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "30"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "tag",
											"source": 33,
											"value": "30"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1299,
											"end": 1303,
											"name": "PUSH",
											"source": 33,
											"value": "97"
										},
										{
											"begin": 1299,
											"end": 1303,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1299,
											"end": 1303,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "16"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "tag",
											"source": 36,
											"value": "6"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "CALLVALUE",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "ISZERO",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "35"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "JUMPI",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "PUSH",
											"source": 36,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "REVERT",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "tag",
											"source": 36,
											"value": "35"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "PUSH",
											"source": 36,
											"value": "C9"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "SLOAD",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "36"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "PUSH",
											"source": 36,
											"value": "E0"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "SHL",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "JUMP",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "tag",
											"source": 36,
											"value": "36"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "MLOAD",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1529,
											"end": 1562,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 1529,
											"end": 1562,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 1529,
											"end": 1562,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 1499,
											"end": 1501,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1502,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1276,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "18"
										},
										{
											"begin": 1367,
											"end": 1569,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 35,
											"value": "7"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "CALLVALUE",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "REVERT",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "26"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "42"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH",
											"source": 35,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "43"
										},
										{
											"begin": 1869,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 35,
											"value": "42"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "44"
										},
										{
											"begin": 1869,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3374,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 3349,
											"end": 3374,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 3349,
											"end": 3374,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 3337,
											"end": 3339,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3203,
											"end": 3380,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "tag",
											"source": 36,
											"value": "10"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "CALLVALUE",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "ISZERO",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "54"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "JUMPI",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH",
											"source": 36,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "REVERT",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "tag",
											"source": 36,
											"value": "54"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "POP",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "50"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 36,
											"value": "60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "JUMP",
											"source": 36
										},
										{
											"begin": 781,
											"end": 870,
											"name": "tag",
											"source": 35,
											"value": "11"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "CALLVALUE",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "58"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "REVERT",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "tag",
											"source": 35,
											"value": "58"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "50"
										},
										{
											"begin": 834,
											"end": 870,
											"name": "PUSH",
											"source": 35,
											"value": "DE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215"
										},
										{
											"begin": 781,
											"end": 870,
											"name": "DUP2",
											"source": 35
										},
										{
											"begin": 781,
											"end": 870,
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "tag",
											"source": 35,
											"value": "12"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "CALLVALUE",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "REVERT",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "tag",
											"source": 35,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "26"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "64"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "CALLDATASIZE",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH",
											"source": 35,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "65"
										},
										{
											"begin": 2546,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "tag",
											"source": 35,
											"value": "64"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "66"
										},
										{
											"begin": 2546,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 36,
											"value": "13"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "CALLVALUE",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ISZERO",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "67"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPI",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 36,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "REVERT",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 36,
											"value": "67"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "68"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "69"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "CALLDATASIZE",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 36,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "28"
										},
										{
											"begin": 1427,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 36,
											"value": "69"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 36,
											"value": "CA"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 36,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 36,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "KECCAK256",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SLOAD",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 36,
											"value": "FF"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "AND",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMP",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 36,
											"value": "68"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MLOAD",
											"source": 36
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 4429,
											"end": 4451,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 4411,
											"end": 4452,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 4411,
											"end": 4452,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4399,
											"end": 4401,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 4384,
											"end": 4402,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "18"
										},
										{
											"begin": 4271,
											"end": 4458,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 40,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "73"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "74"
										},
										{
											"begin": 704,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 40
										},
										{
											"begin": 704,
											"end": 719,
											"name": "tag",
											"source": 40,
											"value": "73"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 40,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP1",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MLOAD",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 40,
											"value": "60"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP3",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 40,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": 743,
											"end": 744,
											"name": "PUSH",
											"source": 40,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 40,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP3",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP1",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP1",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 40
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "713"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1608,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3486,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3468,
											"end": 3504,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3514,
											"end": 3575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3553,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3514,
											"end": 3575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "tag",
											"source": 35,
											"value": "44"
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5491,
											"end": 5493,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5494,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5530,
											"end": 5532,
											"name": "PUSH",
											"source": 41,
											"value": "2E"
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5503,
											"end": 5533,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "PUSH",
											"source": 41,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5542,
											"end": 5604,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5620,
											"end": 5638,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 5620,
											"end": 5638,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5620,
											"end": 5638,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5613,
											"end": 5657,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5674,
											"end": 5693,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 5674,
											"end": 5693,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5289,
											"end": 5699,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "106"
										},
										{
											"begin": 2038,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49C2AA3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "107"
										},
										{
											"begin": 2008,
											"end": 2075,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 2008,
											"end": 2075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "106"
										},
										{
											"begin": 2008,
											"end": 2075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 2086,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "FB"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SLOAD",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2126,
											"modifierDepth": 1,
											"name": "AND",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "DUP5",
											"source": 35
										},
										{
											"begin": 2086,
											"end": 2126,
											"modifierDepth": 1,
											"name": "AND",
											"source": 35
										},
										{
											"begin": 2086,
											"end": 2126,
											"modifierDepth": 1,
											"name": "OR",
											"source": 35
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SSTORE",
											"source": 35
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5856,
											"end": 5892,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 5856,
											"end": 5892,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5846,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 1869,
											"end": 2134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "713"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1608,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4034,
											"end": 4051,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4016,
											"end": 4052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4084,
											"end": 4101,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4107,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4109,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4062,
											"end": 4114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6087,
											"end": 6108,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6144,
											"end": 6146,
											"name": "PUSH",
											"source": 41,
											"value": "38"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6117,
											"end": 6147,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6183,
											"end": 6217,
											"name": "PUSH",
											"source": 41,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6156,
											"end": 6218,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6254,
											"end": 6280,
											"name": "PUSH",
											"source": 41,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6227,
											"end": 6281,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6298,
											"end": 6317,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 6298,
											"end": 6317,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5903,
											"end": 6323,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "tag",
											"source": 35,
											"value": "66"
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 33,
											"value": "97"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 834,
											"end": 870,
											"name": "PUSH",
											"source": 35,
											"value": "DE5E253D6956BC5FB69CFA564733633F4E53B143E42859306CD13CDC54856215"
										},
										{
											"begin": 834,
											"end": 870,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "126"
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "tag",
											"source": 33,
											"value": "127"
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1697,
											"end": 1710,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "131"
										},
										{
											"begin": 1656,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "tag",
											"source": 33,
											"value": "126"
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "DUP5",
											"source": 35
										},
										{
											"begin": 2748,
											"end": 2766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "133"
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "DUP2",
											"source": 35
										},
										{
											"begin": 2748,
											"end": 2757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "134"
										},
										{
											"begin": 2748,
											"end": 2766,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 2748,
											"end": 2766,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "133"
										},
										{
											"begin": 2748,
											"end": 2766,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 2784,
											"end": 2811,
											"name": "DUP3",
											"source": 35
										},
										{
											"begin": 2784,
											"end": 2811,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 2779,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "135"
										},
										{
											"begin": 2779,
											"end": 3094,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 2834,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "136"
										},
										{
											"begin": 2851,
											"end": 2860,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 35
										},
										{
											"begin": 2851,
											"end": 2860,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 35
										},
										{
											"begin": 2834,
											"end": 2850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "137"
										},
										{
											"begin": 2834,
											"end": 2861,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 2834,
											"end": 2861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "136"
										},
										{
											"begin": 2834,
											"end": 2861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 2829,
											"end": 2948,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "138"
										},
										{
											"begin": 2829,
											"end": 2948,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 2921,
											"end": 2930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 35
										},
										{
											"begin": 2921,
											"end": 2930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 35
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A5BF49B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 35
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 35
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "4"
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 35
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "78"
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 35
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 35
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 2889,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "140"
										},
										{
											"begin": 2889,
											"end": 2932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 2829,
											"end": 2948,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "138"
										},
										{
											"begin": 2829,
											"end": 2948,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 2964,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3009,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 35
										},
										{
											"begin": 3000,
											"end": 3009,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "141"
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "142"
										},
										{
											"begin": 2984,
											"end": 3011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "141"
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "MLOAD",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "DUP2",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "DUP2",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "KECCAK256",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "FB"
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "SLOAD",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89BB4145"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "DUP4",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "MSTORE",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "4"
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "DUP4",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 35
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7395,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 7363,
											"end": 7395,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 7363,
											"end": 7395,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7336,
											"end": 7396,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "SWAP2",
											"source": 35
										},
										{
											"begin": 2984,
											"end": 3011,
											"name": "SWAP4",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3028,
											"end": 3046,
											"modifierDepth": 1,
											"name": "AND",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "89BB4145"
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 7275,
											"end": 7293,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 7275,
											"end": 7293,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "145"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "145"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "147"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "147"
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 3028,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 2814,
											"end": 3094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 2779,
											"end": 3094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "135"
										},
										{
											"begin": 2779,
											"end": 3094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 3134,
											"end": 3141,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 35
										},
										{
											"begin": 3125,
											"end": 3132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 35
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "BC0B11FE649BB4D67C7FB40936163E5423F45C3AE83FBD8F8F8C75E1A3FA97AF"
										},
										{
											"begin": 3143,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 35
										},
										{
											"begin": 3143,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "148"
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 35,
											"value": "140"
										},
										{
											"begin": 3111,
											"end": 3153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 35,
											"value": "148"
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 35
										},
										{
											"begin": 3111,
											"end": 3153,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 35
										},
										{
											"begin": 2694,
											"end": 3161,
											"modifierDepth": 1,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"name": "POP",
											"source": 35
										},
										{
											"begin": 2546,
											"end": 3161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 35
										},
										{
											"begin": 3015,
											"end": 3132,
											"name": "tag",
											"source": 36,
											"value": "87"
										},
										{
											"begin": 3015,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 33,
											"value": "97"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 36,
											"value": "60B96FF9FB5F29153C29C1747515B8BE4EE523D686CC6F453EC294B0AFA72932"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "119"
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "127"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 971,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3330,
											"end": 3347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3311,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "52D1902D"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3383,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7800,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7780,
											"end": 7801,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 41,
											"value": "2E"
										},
										{
											"begin": 7817,
											"end": 7835,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 7817,
											"end": 7835,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7817,
											"end": 7835,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7810,
											"end": 7840,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7876,
											"end": 7910,
											"name": "PUSH",
											"source": 41,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7849,
											"end": 7911,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E206973206E6F742055555053"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7927,
											"end": 7945,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 7927,
											"end": 7945,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7927,
											"end": 7945,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7920,
											"end": 7964,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7981,
											"end": 8000,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 7981,
											"end": 8000,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7596,
											"end": 8006,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3524,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8213,
											"end": 8215,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8195,
											"end": 8216,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "PUSH",
											"source": 41,
											"value": "29"
										},
										{
											"begin": 8232,
											"end": 8250,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 8232,
											"end": 8250,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8232,
											"end": 8250,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8225,
											"end": 8255,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8291,
											"end": 8325,
											"name": "PUSH",
											"source": 41,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8264,
											"end": 8326,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A58589B1955555251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8335,
											"end": 8374,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8391,
											"end": 8410,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 8391,
											"end": 8410,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 8011,
											"end": 8416,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3447,
											"end": 3585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3712,
											"end": 3729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3694,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2668,
											"name": "tag",
											"source": 36,
											"value": "107"
										},
										{
											"begin": 2407,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "185"
										},
										{
											"begin": 2596,
											"end": 2608,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 36
										},
										{
											"begin": 2562,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "186"
										},
										{
											"begin": 2562,
											"end": 2609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 36
										},
										{
											"begin": 2562,
											"end": 2609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 36,
											"value": "185"
										},
										{
											"begin": 2562,
											"end": 2609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 36,
											"value": "C9"
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SLOAD",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2622,
											"end": 2660,
											"modifierDepth": 1,
											"name": "AND",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 36,
											"value": "E0"
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SWAP3",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SWAP3",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"modifierDepth": 1,
											"name": "SHR",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SWAP2",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SWAP2",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"modifierDepth": 1,
											"name": "OR",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 2622,
											"end": 2660,
											"name": "SSTORE",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 36
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "tag",
											"source": 34,
											"value": "131"
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7EF7C883"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "PUSH",
											"source": 34,
											"value": "FDEF9106"
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "190"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1236,
											"end": 1249,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1236,
											"end": 1249,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "191"
										},
										{
											"begin": 1203,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 34,
											"value": "190"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "GAS",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "STATICCALL",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "193"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATACOPY",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 34,
											"value": "193"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "NOT",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "194"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "195"
										},
										{
											"begin": 1203,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 34,
											"value": "194"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "196"
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CB6F8ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9923,
											"end": 9938,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9923,
											"end": 9938,
											"name": "DUP9",
											"source": 41
										},
										{
											"begin": 9923,
											"end": 9938,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH",
											"source": 34,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 9905,
											"end": 9939,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10027,
											"end": 10042,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 10027,
											"end": 10042,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10000,
											"end": 10043,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9839,
											"end": 9858,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 9839,
											"end": 9858,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "78"
										},
										{
											"begin": 9636,
											"end": 10092,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "tag",
											"source": 34,
											"value": "196"
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3426,
											"end": 3889,
											"name": "tag",
											"source": 36,
											"value": "134"
										},
										{
											"begin": 3426,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "AND",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "PUSH",
											"source": 36,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3497,
											"name": "PUSH",
											"source": 36,
											"value": "CA"
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "PUSH",
											"source": 36,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "KECCAK256",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "SLOAD",
											"source": 36
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "PUSH",
											"source": 36,
											"value": "FF"
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "AND",
											"source": 36
										},
										{
											"begin": 3486,
											"end": 3598,
											"name": "ISZERO",
											"source": 36
										},
										{
											"begin": 3486,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "200"
										},
										{
											"begin": 3486,
											"end": 3598,
											"name": "JUMPI",
											"source": 36
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MLOAD",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FDCCE17F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 36,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP3",
											"source": 36
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 36
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "78"
										},
										{
											"begin": 14,
											"end": 247,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3486,
											"end": 3598,
											"name": "tag",
											"source": 36,
											"value": "200"
										},
										{
											"begin": 3486,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 3751,
											"end": 3768,
											"name": "PUSH",
											"source": 36,
											"value": "C9"
										},
										{
											"begin": 3751,
											"end": 3768,
											"name": "SLOAD",
											"source": 36
										},
										{
											"begin": 3721,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "203"
										},
										{
											"begin": 3721,
											"end": 3769,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3721,
											"end": 3750,
											"name": "DUP4",
											"source": 36
										},
										{
											"begin": 3721,
											"end": 3750,
											"name": "AND",
											"source": 36
										},
										{
											"begin": 3721,
											"end": 3750,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 3751,
											"end": 3768,
											"name": "PUSH",
											"source": 36,
											"value": "E0"
										},
										{
											"begin": 3751,
											"end": 3768,
											"name": "SHL",
											"source": 36
										},
										{
											"begin": 3721,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "204"
										},
										{
											"begin": 3721,
											"end": 3769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 36
										},
										{
											"begin": 3721,
											"end": 3769,
											"name": "tag",
											"source": 36,
											"value": "203"
										},
										{
											"begin": 3721,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": 3716,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "205"
										},
										{
											"begin": 3716,
											"end": 3842,
											"name": "JUMPI",
											"source": 36
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "MLOAD",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38811E45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 240,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 208,
											"end": 240,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "PUSH",
											"source": 36,
											"value": "4"
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "DUP3",
											"source": 36
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "ADD",
											"source": 36
										},
										{
											"begin": 190,
											"end": 241,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 163,
											"end": 181,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 163,
											"end": 181,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 36,
											"value": "78"
										},
										{
											"begin": 14,
											"end": 247,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3716,
											"end": 3842,
											"name": "tag",
											"source": 36,
											"value": "205"
										},
										{
											"begin": 3716,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "AND",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "PUSH",
											"source": 36,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "DUP2",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3861,
											"name": "PUSH",
											"source": 36,
											"value": "CA"
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "PUSH",
											"source": 36,
											"value": "20"
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "KECCAK256",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3881,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3881,
											"name": "SLOAD",
											"source": 36
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3854,
											"end": 3881,
											"name": "AND",
											"source": 36
										},
										{
											"begin": 3877,
											"end": 3881,
											"name": "PUSH",
											"source": 36,
											"value": "1"
										},
										{
											"begin": 3854,
											"end": 3881,
											"name": "OR",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3881,
											"name": "SWAP1",
											"source": 36
										},
										{
											"begin": 3854,
											"end": 3881,
											"name": "SSTORE",
											"source": 36
										},
										{
											"begin": 3426,
											"end": 3889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 36
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "tag",
											"source": 37,
											"value": "137"
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 725,
											"end": 729,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "tag",
											"source": 37,
											"value": "208"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 852,
											"end": 862,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 848,
											"end": 862,
											"name": "LT",
											"source": 37
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "ISZERO",
											"source": 37
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "209"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 880,
											"end": 890,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "LT",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "212"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "212"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "213"
										},
										{
											"begin": 899,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "tag",
											"source": 37,
											"value": "212"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "CALLDATALOAD",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "PUSH",
											"source": 37,
											"value": "F8"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SHR",
											"source": 37
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 37,
											"value": "60"
										},
										{
											"begin": 964,
											"end": 973,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 964,
											"end": 973,
											"name": "GT",
											"source": 37
										},
										{
											"begin": 964,
											"end": 987,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 964,
											"end": 987,
											"name": "ISZERO",
											"source": 37
										},
										{
											"begin": 964,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "214"
										},
										{
											"begin": 964,
											"end": 987,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 964,
											"end": 987,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 37,
											"value": "7B"
										},
										{
											"begin": 977,
											"end": 981,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 977,
											"end": 987,
											"name": "PUSH",
											"source": 37,
											"value": "FF"
										},
										{
											"begin": 977,
											"end": 987,
											"name": "AND",
											"source": 37
										},
										{
											"begin": 977,
											"end": 987,
											"name": "LT",
											"source": 37
										},
										{
											"begin": 964,
											"end": 987,
											"name": "tag",
											"source": 37,
											"value": "214"
										},
										{
											"begin": 964,
											"end": 987,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "ISZERO",
											"source": 37
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "215"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "210"
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "tag",
											"source": 37,
											"value": "215"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 37,
											"value": "2F"
										},
										{
											"begin": 1075,
											"end": 1079,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH",
											"source": 37,
											"value": "FF"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "AND",
											"source": 37
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "GT",
											"source": 37
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "ISZERO",
											"source": 37
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "216"
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 37,
											"value": "3A"
										},
										{
											"begin": 1088,
											"end": 1092,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "PUSH",
											"source": 37,
											"value": "FF"
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "AND",
											"source": 37
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "LT",
											"source": 37
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "tag",
											"source": 37,
											"value": "216"
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "ISZERO",
											"source": 37
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "217"
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "210"
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "tag",
											"source": 37,
											"value": "217"
										},
										{
											"begin": 1071,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1175,
											"end": 1179,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "PUSH",
											"source": 37,
											"value": "FF"
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "AND",
											"source": 37
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 37,
											"value": "2D"
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "SUB",
											"source": 37
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "218"
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "210"
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "tag",
											"source": 37,
											"value": "218"
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "SWAP6",
											"source": 37
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "207"
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "tag",
											"source": 37,
											"value": "210"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 864,
											"end": 867,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 864,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "219"
										},
										{
											"begin": 864,
											"end": 867,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 864,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "220"
										},
										{
											"begin": 864,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 864,
											"end": 867,
											"name": "tag",
											"source": 37,
											"value": "219"
										},
										{
											"begin": 864,
											"end": 867,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 864,
											"end": 867,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 864,
											"end": 867,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 864,
											"end": 867,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "208"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "tag",
											"source": 37,
											"value": "209"
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 832,
											"end": 1320,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "PUSH",
											"source": 37,
											"value": "1"
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "SWAP4",
											"source": 37
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "tag",
											"source": 37,
											"value": "207"
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 658,
											"end": 1341,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 658,
											"end": 1341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1699,
											"end": 1980,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1699,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10876,
											"end": 10878,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 10879,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10915,
											"end": 10917,
											"name": "PUSH",
											"source": 41,
											"value": "2D"
										},
										{
											"begin": 10895,
											"end": 10913,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 10895,
											"end": 10913,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 10895,
											"end": 10913,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10888,
											"end": 10918,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10954,
											"end": 10988,
											"name": "PUSH",
											"source": 41,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 10934,
											"end": 10952,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 10934,
											"end": 10952,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 10934,
											"end": 10952,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10927,
											"end": 10989,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11005,
											"end": 11023,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 11005,
											"end": 11023,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 11005,
											"end": 11023,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10998,
											"end": 11041,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 11058,
											"end": 11077,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 11058,
											"end": 11077,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 10674,
											"end": 11083,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2480,
											"end": 2509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2538,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2607,
											"end": 2624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2567,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1043,
											"end": 1153,
											"name": "tag",
											"source": 33,
											"value": "186"
										},
										{
											"begin": 1043,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 33,
											"value": "97"
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1134,
											"end": 1145,
											"modifierDepth": 1,
											"name": "AND",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"modifierDepth": 1,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"modifierDepth": 1,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 1043,
											"end": 1153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1382,
											"end": 1664,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 1382,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1591,
											"end": 1598,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1576,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1576,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1576,
											"end": 1657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1645,
											"end": 1656,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1603,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1657,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1603,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1657,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1382,
											"end": 1664,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1382,
											"end": 1664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2152,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6780,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH data",
											"source": 8,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 6799,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 726,
											"end": 1164,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 726,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 790,
											"end": 794,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 997,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1157,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1157,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 997,
											"end": 1157,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1093,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1093,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1093,
											"end": 1157,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1093,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 978,
											"end": 1157,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 726,
											"end": 1164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 726,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 5112,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4454,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1529,
											"end": 1562,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 1529,
											"end": 1562,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1484,
											"end": 1502,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 1484,
											"end": 1502,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 1484,
											"end": 1502,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 1484,
											"end": 1502,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4915,
											"end": 4935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4915,
											"end": 4935,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4915,
											"end": 4935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4880,
											"end": 4887,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4873,
											"end": 4878,
											"name": "PUSH",
											"source": 11,
											"value": "7530"
										},
										{
											"begin": 4862,
											"end": 4948,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 4851,
											"end": 4948,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4851,
											"end": 4948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4975,
											"end": 4991,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4961,
											"end": 4991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4961,
											"end": 4991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5004,
											"end": 5030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5004,
											"end": 5030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5064,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5082,
											"end": 5086,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 5057,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5101,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5090,
											"end": 5105,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5057,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5105,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 5112,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4454,
											"end": 5112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7210,
											"end": 7222,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7235,
											"end": 7247,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7276,
											"end": 7295,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 7276,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7353,
											"end": 7360,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7372,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7386,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 7318,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7069,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7890,
											"end": 7897,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7939,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11837,
											"end": 11839,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11819,
											"end": 11840,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 11876,
											"end": 11878,
											"name": "PUSH",
											"source": 41,
											"value": "1D"
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11849,
											"end": 11879,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 11915,
											"end": 11946,
											"name": "PUSH",
											"source": 41,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 11895,
											"end": 11913,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 11895,
											"end": 11913,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 11895,
											"end": 11913,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11888,
											"end": 11947,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 11964,
											"end": 11982,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 11964,
											"end": 11982,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 11635,
											"end": 11988,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 8268,
											"end": 8278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8292,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 8260,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9012,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9262,
											"end": 9272,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9254,
											"end": 9273,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9247,
											"end": 9291,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 9335,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "74"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 252,
											"end": 753,
											"name": "tag",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 753,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 413,
											"end": 431,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 413,
											"end": 431,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 417,
											"end": 426,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 386,
											"end": 390,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "tag",
											"source": 41,
											"value": "288"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 556,
											"end": 560,
											"name": "PUSH",
											"source": 41,
											"value": "3"
										},
										{
											"begin": 553,
											"end": 554,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 550,
											"end": 561,
											"name": "LT",
											"source": 41
										},
										{
											"begin": 542,
											"end": 747,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 542,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "290"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 619,
											"end": 632,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 619,
											"end": 632,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 634,
											"end": 638,
											"name": "PUSH",
											"source": 41,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 639,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 603,
											"end": 640,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 603,
											"end": 640,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 663,
											"end": 667,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 699,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 687,
											"end": 699,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 687,
											"end": 699,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 687,
											"end": 699,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 722,
											"end": 737,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 722,
											"end": 737,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 722,
											"end": 737,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 722,
											"end": 737,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 41,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 578,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 542,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "288"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 542,
											"end": 747,
											"name": "tag",
											"source": 41,
											"value": "290"
										},
										{
											"begin": 542,
											"end": 747,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 546,
											"end": 549,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 546,
											"end": 549,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 546,
											"end": 549,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 252,
											"end": 753,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 252,
											"end": 753,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 252,
											"end": 753,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 252,
											"end": 753,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 252,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 758,
											"end": 889,
											"name": "tag",
											"source": 41,
											"value": "282"
										},
										{
											"begin": 758,
											"end": 889,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 833,
											"end": 864,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 833,
											"end": 864,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 823,
											"end": 865,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 823,
											"end": 865,
											"name": "EQ",
											"source": 41
										},
										{
											"begin": 813,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "88"
										},
										{
											"begin": 813,
											"end": 883,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 879,
											"end": 880,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 869,
											"end": 881,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 894,
											"end": 1141,
											"name": "tag",
											"source": 41,
											"value": "28"
										},
										{
											"begin": 894,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 953,
											"end": 959,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1008,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 994,
											"end": 1003,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 985,
											"end": 992,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 981,
											"end": 1004,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 977,
											"end": 1009,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "294"
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 1012,
											"end": 1024,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "tag",
											"source": 41,
											"value": "294"
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "244"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "282"
										},
										{
											"begin": 1080,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1574,
											"end": 2005,
											"name": "tag",
											"source": 41,
											"value": "43"
										},
										{
											"begin": 1574,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1685,
											"end": 1691,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 1746,
											"end": 1748,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 1725,
											"end": 1732,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 1721,
											"end": 1744,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 1714,
											"end": 1766,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 1714,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "299"
										},
										{
											"begin": 1714,
											"end": 1766,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 1752,
											"end": 1764,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 1714,
											"end": 1766,
											"name": "tag",
											"source": 41,
											"value": "299"
										},
										{
											"begin": 1714,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 1788,
											"end": 1811,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "300"
										},
										{
											"begin": 1845,
											"end": 1850,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "282"
										},
										{
											"begin": 1820,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "tag",
											"source": 41,
											"value": "300"
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 1912,
											"end": 1930,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 1912,
											"end": 1930,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "301"
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "282"
										},
										{
											"begin": 1940,
											"end": 1973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "tag",
											"source": 41,
											"value": "301"
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1992,
											"end": 1999,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 1982,
											"end": 1999,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 1982,
											"end": 1999,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 1982,
											"end": 1999,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 1574,
											"end": 2005,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 1574,
											"end": 2005,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 1574,
											"end": 2005,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 1574,
											"end": 2005,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 1574,
											"end": 2005,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 1574,
											"end": 2005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2010,
											"end": 2137,
											"name": "tag",
											"source": 41,
											"value": "91"
										},
										{
											"begin": 2010,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "PUSH",
											"source": 41,
											"value": "4E487B71"
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "PUSH",
											"source": 41,
											"value": "E0"
										},
										{
											"begin": 2062,
											"end": 2082,
											"name": "SHL",
											"source": 41
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2083,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "PUSH",
											"source": 41,
											"value": "41"
										},
										{
											"begin": 2099,
											"end": 2100,
											"name": "PUSH",
											"source": 41,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2107,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 2126,
											"end": 2130,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 2123,
											"end": 2124,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2131,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 2142,
											"end": 3198,
											"name": "tag",
											"source": 41,
											"value": "47"
										},
										{
											"begin": 2142,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2219,
											"end": 2225,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2259,
											"end": 2266,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 2255,
											"end": 2278,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 2251,
											"end": 2283,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 2248,
											"end": 2300,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 2248,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "304"
										},
										{
											"begin": 2248,
											"end": 2300,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 2248,
											"end": 2300,
											"name": "tag",
											"source": 41,
											"value": "304"
										},
										{
											"begin": 2248,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2322,
											"end": 2345,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 2354,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "305"
										},
										{
											"begin": 2379,
											"end": 2384,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2354,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "282"
										},
										{
											"begin": 2354,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2354,
											"end": 2385,
											"name": "tag",
											"source": 41,
											"value": "305"
										},
										{
											"begin": 2354,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2432,
											"end": 2464,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "PUSH",
											"source": 41,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 2510,
											"end": 2544,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 2510,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "306"
										},
										{
											"begin": 2510,
											"end": 2544,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2540,
											"end": 2541,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 2510,
											"end": 2544,
											"name": "tag",
											"source": 41,
											"value": "306"
										},
										{
											"begin": 2510,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2578,
											"end": 2584,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2553,
											"end": 2585,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 2553,
											"end": 2585,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2623,
											"end": 2630,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2608,
											"end": 2621,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2604,
											"end": 2631,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 2594,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "307"
										},
										{
											"begin": 2594,
											"end": 2649,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2645,
											"end": 2646,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2635,
											"end": 2647,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 2594,
											"end": 2649,
											"name": "tag",
											"source": 41,
											"value": "307"
										},
										{
											"begin": 2594,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2681,
											"end": 2683,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2668,
											"end": 2684,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 2703,
											"end": 2705,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 2693,
											"end": 2729,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 2693,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "309"
										},
										{
											"begin": 2693,
											"end": 2729,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "309"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "91"
										},
										{
											"begin": 2709,
											"end": 2727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "tag",
											"source": 41,
											"value": "309"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2784,
											"end": 2786,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2787,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 2752,
											"end": 2754,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 2838,
											"end": 2851,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2838,
											"end": 2851,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2834,
											"end": 2856,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2834,
											"end": 2856,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2834,
											"end": 2856,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 2858,
											"end": 2860,
											"name": "PUSH",
											"source": 41,
											"value": "3F"
										},
										{
											"begin": 2830,
											"end": 2861,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2826,
											"end": 2866,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 2814,
											"end": 2867,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2814,
											"end": 2867,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2814,
											"end": 2867,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 2902,
											"end": 2924,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2902,
											"end": 2924,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2902,
											"end": 2924,
											"name": "LT",
											"source": 41
										},
										{
											"begin": 2879,
											"end": 2925,
											"name": "OR",
											"source": 41
										},
										{
											"begin": 2876,
											"end": 2948,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 2876,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "311"
										},
										{
											"begin": 2876,
											"end": 2948,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "311"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "91"
										},
										{
											"begin": 2928,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "tag",
											"source": 41,
											"value": "311"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2968,
											"end": 2978,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2964,
											"end": 2966,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2979,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2995,
											"end": 3001,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2988,
											"end": 3006,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 3043,
											"end": 3050,
											"name": "DUP9",
											"source": 41
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 3029,
											"end": 3031,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 3025,
											"end": 3036,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3021,
											"end": 3041,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3018,
											"end": 3051,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "312"
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 3064,
											"end": 3065,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "tag",
											"source": 41,
											"value": "312"
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3120,
											"end": 3122,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 3115,
											"end": 3117,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "DUP7",
											"source": 41
										},
										{
											"begin": 3107,
											"end": 3118,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3077,
											"end": 3123,
											"name": "CALLDATACOPY",
											"source": 41
										},
										{
											"begin": 3165,
											"end": 3166,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3162,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 3147,
											"end": 3153,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3139,
											"end": 3163,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3132,
											"end": 3167,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 3186,
											"end": 3192,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3176,
											"end": 3192,
											"name": "SWAP6",
											"source": 41
										},
										{
											"begin": 3176,
											"end": 3192,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3176,
											"end": 3192,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3176,
											"end": 3192,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3176,
											"end": 3192,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3176,
											"end": 3192,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3176,
											"end": 3192,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2142,
											"end": 3198,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 2142,
											"end": 3198,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2142,
											"end": 3198,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 2142,
											"end": 3198,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2142,
											"end": 3198,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2142,
											"end": 3198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3385,
											"end": 4266,
											"name": "tag",
											"source": 41,
											"value": "65"
										},
										{
											"begin": 3385,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3503,
											"end": 3509,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 3552,
											"end": 3561,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 3543,
											"end": 3550,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 3539,
											"end": 3562,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 3532,
											"end": 3584,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 3532,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "315"
										},
										{
											"begin": 3532,
											"end": 3584,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 3580,
											"end": 3581,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 3532,
											"end": 3584,
											"name": "tag",
											"source": 41,
											"value": "315"
										},
										{
											"begin": 3532,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 3606,
											"end": 3629,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 3638,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "316"
										},
										{
											"begin": 3663,
											"end": 3668,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 3638,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "282"
										},
										{
											"begin": 3638,
											"end": 3669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3638,
											"end": 3669,
											"name": "tag",
											"source": 41,
											"value": "316"
										},
										{
											"begin": 3638,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3688,
											"end": 3693,
											"name": "SWAP4",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3745,
											"end": 3747,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3717,
											"end": 3749,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 3758,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "317"
										},
										{
											"begin": 3717,
											"end": 3749,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 3758,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "282"
										},
										{
											"begin": 3758,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3758,
											"end": 3791,
											"name": "tag",
											"source": 41,
											"value": "317"
										},
										{
											"begin": 3758,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3840,
											"end": 3872,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "PUSH",
											"source": 41,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3935,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3921,
											"end": 3935,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 3921,
											"end": 3935,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "318"
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "tag",
											"source": 41,
											"value": "318"
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3961,
											"end": 3993,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 3961,
											"end": 3993,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 4031,
											"end": 4038,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4012,
											"end": 4039,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 4002,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "319"
										},
										{
											"begin": 4002,
											"end": 4057,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 4043,
											"end": 4055,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 4002,
											"end": 4057,
											"name": "tag",
											"source": 41,
											"value": "319"
										},
										{
											"begin": 4002,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 4080,
											"end": 4096,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 4108,
											"end": 4122,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "320"
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 4125,
											"end": 4137,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "tag",
											"source": 41,
											"value": "320"
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 4180,
											"end": 4187,
											"name": "DUP9",
											"source": 41
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4162,
											"end": 4164,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 4158,
											"end": 4173,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4154,
											"end": 4178,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4151,
											"end": 4188,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 4148,
											"end": 4205,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 4148,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "321"
										},
										{
											"begin": 4148,
											"end": 4205,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 4201,
											"end": 4202,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4199,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 4148,
											"end": 4205,
											"name": "tag",
											"source": 41,
											"value": "321"
										},
										{
											"begin": 4148,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3385,
											"end": 4266,
											"name": "SWAP6",
											"source": 41
										},
										{
											"begin": 3385,
											"end": 4266,
											"name": "SWAP9",
											"source": 41
										},
										{
											"begin": 3385,
											"end": 4266,
											"name": "SWAP5",
											"source": 41
										},
										{
											"begin": 3385,
											"end": 4266,
											"name": "SWAP8",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 4224,
											"end": 4235,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4224,
											"end": 4235,
											"name": "SWAP5",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3385,
											"end": 4266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 4463,
											"end": 4871,
											"name": "tag",
											"source": 41,
											"value": "79"
										},
										{
											"begin": 4463,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 41,
											"value": "2C"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4677,
											"end": 4707,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4743,
											"end": 4777,
											"name": "PUSH",
											"source": 41,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 4738,
											"end": 4740,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4716,
											"end": 4778,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4809,
											"end": 4811,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4787,
											"end": 4829,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4861,
											"end": 4864,
											"name": "PUSH",
											"source": 41,
											"value": "80"
										},
										{
											"begin": 4846,
											"end": 4865,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4846,
											"end": 4865,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 4463,
											"end": 4871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 4876,
											"end": 5284,
											"name": "tag",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 4876,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 5060,
											"end": 5081,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 5060,
											"end": 5081,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5060,
											"end": 5081,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "PUSH",
											"source": 41,
											"value": "2C"
										},
										{
											"begin": 5097,
											"end": 5115,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 5097,
											"end": 5115,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5097,
											"end": 5115,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5090,
											"end": 5120,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5156,
											"end": 5190,
											"name": "PUSH",
											"source": 41,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5129,
											"end": 5191,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6163746976652070726F7879"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5222,
											"end": 5224,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5200,
											"end": 5242,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5274,
											"end": 5277,
											"name": "PUSH",
											"source": 41,
											"value": "80"
										},
										{
											"begin": 5259,
											"end": 5278,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5259,
											"end": 5278,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 4876,
											"end": 5284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 6328,
											"end": 6595,
											"name": "tag",
											"source": 41,
											"value": "283"
										},
										{
											"begin": 6328,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 6412,
											"end": 6415,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 6405,
											"end": 6424,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 6462,
											"end": 6467,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 6455,
											"end": 6459,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 6446,
											"end": 6460,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6433,
											"end": 6476,
											"name": "CALLDATACOPY",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6512,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6496,
											"end": 6512,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6496,
											"end": 6512,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6514,
											"end": 6518,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 6492,
											"end": 6519,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 6492,
											"end": 6519,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 6492,
											"end": 6519,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6485,
											"end": 6523,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6485,
											"end": 6523,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 6485,
											"end": 6523,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6485,
											"end": 6523,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6577,
											"end": 6579,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 6556,
											"end": 6571,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 6556,
											"end": 6571,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6556,
											"end": 6571,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6581,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 6543,
											"end": 6582,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 6543,
											"end": 6582,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6543,
											"end": 6582,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6539,
											"end": 6589,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6539,
											"end": 6589,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 6328,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 6600,
											"end": 6847,
											"name": "tag",
											"source": 41,
											"value": "140"
										},
										{
											"begin": 6600,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6757,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6722,
											"end": 6726,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "275"
										},
										{
											"begin": 6837,
											"end": 6839,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 6822,
											"end": 6840,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6814,
											"end": 6820,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 6806,
											"end": 6812,
											"name": "DUP7",
											"source": 41
										},
										{
											"begin": 6779,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "283"
										},
										{
											"begin": 6779,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 6852,
											"end": 7123,
											"name": "tag",
											"source": 41,
											"value": "142"
										},
										{
											"begin": 6852,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 7035,
											"end": 7041,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 7027,
											"end": 7033,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 7022,
											"end": 7025,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7009,
											"end": 7042,
											"name": "CALLDATACOPY",
											"source": 41
										},
										{
											"begin": 6991,
											"end": 6994,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6852,
											"end": 7123,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6852,
											"end": 7123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 7407,
											"end": 7591,
											"name": "tag",
											"source": 41,
											"value": "166"
										},
										{
											"begin": 7407,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 7477,
											"end": 7483,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 7518,
											"end": 7527,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 7505,
											"end": 7528,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 7501,
											"end": 7533,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 7498,
											"end": 7550,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 7498,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "334"
										},
										{
											"begin": 7498,
											"end": 7550,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 7536,
											"end": 7548,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 7498,
											"end": 7550,
											"name": "tag",
											"source": 41,
											"value": "334"
										},
										{
											"begin": 7498,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7569,
											"end": 7585,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 7569,
											"end": 7585,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 7407,
											"end": 7591,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7407,
											"end": 7591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 8421,
											"end": 8828,
											"name": "tag",
											"source": 41,
											"value": "183"
										},
										{
											"begin": 8421,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 8623,
											"end": 8625,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8662,
											"end": 8664,
											"name": "PUSH",
											"source": 41,
											"value": "2B"
										},
										{
											"begin": 8642,
											"end": 8660,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 8642,
											"end": 8660,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8642,
											"end": 8660,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8635,
											"end": 8665,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8701,
											"end": 8735,
											"name": "PUSH",
											"source": 41,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 8696,
											"end": 8698,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8674,
											"end": 8736,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8767,
											"end": 8769,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 8752,
											"end": 8770,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8752,
											"end": 8770,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8745,
											"end": 8786,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8818,
											"end": 8821,
											"name": "PUSH",
											"source": 41,
											"value": "80"
										},
										{
											"begin": 8803,
											"end": 8822,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8803,
											"end": 8822,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 8421,
											"end": 8828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 8833,
											"end": 9349,
											"name": "tag",
											"source": 41,
											"value": "191"
										},
										{
											"begin": 8833,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9112,
											"end": 9127,
											"name": "DUP7",
											"source": 41
										},
										{
											"begin": 9112,
											"end": 9127,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 9112,
											"end": 9127,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 9094,
											"end": 9128,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 9094,
											"end": 9128,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9164,
											"end": 9179,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 9164,
											"end": 9179,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 9159,
											"end": 9161,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9137,
											"end": 9180,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9211,
											"end": 9213,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9189,
											"end": 9223,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 9189,
											"end": 9223,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 9189,
											"end": 9223,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9259,
											"end": 9262,
											"name": "PUSH",
											"source": 41,
											"value": "80"
										},
										{
											"begin": 9254,
											"end": 9256,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9232,
											"end": 9263,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 9232,
											"end": 9263,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 9232,
											"end": 9263,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9037,
											"end": 9041,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9041,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 9280,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "258"
										},
										{
											"begin": 9280,
											"end": 9343,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 9323,
											"end": 9342,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 9323,
											"end": 9342,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9315,
											"end": 9321,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP7",
											"source": 41
										},
										{
											"begin": 9280,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "283"
										},
										{
											"begin": 9280,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 9354,
											"end": 9631,
											"name": "tag",
											"source": 41,
											"value": "195"
										},
										{
											"begin": 9354,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 9462,
											"end": 9471,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 9453,
											"end": 9460,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 9449,
											"end": 9472,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 9445,
											"end": 9477,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 9442,
											"end": 9494,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 9442,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "341"
										},
										{
											"begin": 9442,
											"end": 9494,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9488,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9480,
											"end": 9492,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 9442,
											"end": 9494,
											"name": "tag",
											"source": 41,
											"value": "341"
										},
										{
											"begin": 9442,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 9522,
											"end": 9531,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 9516,
											"end": 9532,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 9575,
											"end": 9580,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9568,
											"end": 9581,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 9561,
											"end": 9582,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 9554,
											"end": 9559,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 9551,
											"end": 9583,
											"name": "EQ",
											"source": 41
										},
										{
											"begin": 9541,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "244"
										},
										{
											"begin": 9541,
											"end": 9601,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 9594,
											"end": 9595,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9587,
											"end": 9599,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 10305,
											"end": 10432,
											"name": "tag",
											"source": 41,
											"value": "213"
										},
										{
											"begin": 10305,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 10366,
											"end": 10376,
											"name": "PUSH",
											"source": 41,
											"value": "4E487B71"
										},
										{
											"begin": 10361,
											"end": 10364,
											"name": "PUSH",
											"source": 41,
											"value": "E0"
										},
										{
											"begin": 10357,
											"end": 10377,
											"name": "SHL",
											"source": 41
										},
										{
											"begin": 10354,
											"end": 10355,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 10347,
											"end": 10378,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10397,
											"end": 10401,
											"name": "PUSH",
											"source": 41,
											"value": "32"
										},
										{
											"begin": 10394,
											"end": 10395,
											"name": "PUSH",
											"source": 41,
											"value": "4"
										},
										{
											"begin": 10387,
											"end": 10402,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10421,
											"end": 10425,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 10418,
											"end": 10419,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10426,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 10437,
											"end": 10669,
											"name": "tag",
											"source": 41,
											"value": "220"
										},
										{
											"begin": 10437,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 10476,
											"end": 10479,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10514,
											"name": "PUSH",
											"source": 41,
											"value": "1"
										},
										{
											"begin": 10497,
											"end": 10514,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 10497,
											"end": 10514,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10494,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "347"
										},
										{
											"begin": 10494,
											"end": 10634,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 10556,
											"end": 10566,
											"name": "PUSH",
											"source": 41,
											"value": "4E487B71"
										},
										{
											"begin": 10551,
											"end": 10554,
											"name": "PUSH",
											"source": 41,
											"value": "E0"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "SHL",
											"source": 41
										},
										{
											"begin": 10544,
											"end": 10545,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 10537,
											"end": 10568,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10591,
											"end": 10595,
											"name": "PUSH",
											"source": 41,
											"value": "11"
										},
										{
											"begin": 10588,
											"end": 10589,
											"name": "PUSH",
											"source": 41,
											"value": "4"
										},
										{
											"begin": 10581,
											"end": 10596,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10619,
											"end": 10623,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 10616,
											"end": 10617,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 10609,
											"end": 10624,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 10494,
											"end": 10634,
											"name": "tag",
											"source": 41,
											"value": "347"
										},
										{
											"begin": 10494,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10661,
											"end": 10662,
											"name": "PUSH",
											"source": 41,
											"value": "1"
										},
										{
											"begin": 10650,
											"end": 10663,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10650,
											"end": 10663,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 10437,
											"end": 10669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 11088,
											"end": 11338,
											"name": "tag",
											"source": 41,
											"value": "284"
										},
										{
											"begin": 11088,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 11173,
											"end": 11174,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "tag",
											"source": 41,
											"value": "350"
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 11197,
											"end": 11203,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 11194,
											"end": 11195,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 11191,
											"end": 11204,
											"name": "LT",
											"source": 41
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "352"
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 11273,
											"end": 11284,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 11273,
											"end": 11284,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 11273,
											"end": 11284,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 11254,
											"end": 11265,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 11254,
											"end": 11265,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 11254,
											"end": 11265,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11247,
											"end": 11286,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 11219,
											"end": 11221,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 11212,
											"end": 11222,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "350"
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "tag",
											"source": 41,
											"value": "352"
										},
										{
											"begin": 11183,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11330,
											"end": 11331,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11328,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 11312,
											"end": 11328,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11305,
											"end": 11332,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 11088,
											"end": 11338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 11343,
											"end": 11630,
											"name": "tag",
											"source": 41,
											"value": "261"
										},
										{
											"begin": 11343,
											"end": 11630,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 11472,
											"end": 11475,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 11510,
											"end": 11516,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 11504,
											"end": 11517,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 11526,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "354"
										},
										{
											"begin": 11585,
											"end": 11591,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 11580,
											"end": 11583,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 11573,
											"end": 11577,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 11565,
											"end": 11571,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 11561,
											"end": 11578,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11526,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "284"
										},
										{
											"begin": 11526,
											"end": 11592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 11526,
											"end": 11592,
											"name": "tag",
											"source": 41,
											"value": "354"
										},
										{
											"begin": 11526,
											"end": 11592,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 11608,
											"end": 11624,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 11608,
											"end": 11624,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 11608,
											"end": 11624,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 11608,
											"end": 11624,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11608,
											"end": 11624,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 11343,
											"end": 11630,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11343,
											"end": 11630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 11993,
											"end": 12389,
											"name": "tag",
											"source": 41,
											"value": "281"
										},
										{
											"begin": 11993,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 12142,
											"end": 12144,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 12131,
											"end": 12140,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 12124,
											"end": 12145,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 12105,
											"end": 12109,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 12174,
											"end": 12180,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 12168,
											"end": 12181,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 12217,
											"end": 12223,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 12212,
											"end": 12214,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12210,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 12197,
											"end": 12215,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 12190,
											"end": 12224,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 12233,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "357"
										},
										{
											"begin": 12305,
											"end": 12311,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 12300,
											"end": 12302,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 12289,
											"end": 12298,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 12280,
											"end": 12282,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 12272,
											"end": 12278,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 12268,
											"end": 12283,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 12233,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "284"
										},
										{
											"begin": 12233,
											"end": 12312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 12233,
											"end": 12312,
											"name": "tag",
											"source": 41,
											"value": "357"
										},
										{
											"begin": 12233,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 12373,
											"end": 12375,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 12352,
											"end": 12367,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12348,
											"end": 12377,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 12333,
											"end": 12378,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 12333,
											"end": 12378,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 12333,
											"end": 12378,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 12333,
											"end": 12378,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 12380,
											"end": 12382,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 12329,
											"end": 12383,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 12329,
											"end": 12383,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 11993,
											"end": 12389,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11993,
											"end": 12389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REGISTER_DAO_PERMISSION_ID()": "a2298b4b",
							"UPGRADE_REGISTRY_PERMISSION_ID()": "74574eb7",
							"dao()": "4162169f",
							"entries(address)": "f29ee125",
							"initialize(address,address)": "485cc955",
							"protocolVersion()": "2ae9c600",
							"proxiableUUID()": "52d1902d",
							"register(address,address,string)": "ede49739",
							"subdomainRegistrar()": "00077393",
							"targetInterfaceId()": "44162ef8",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractERC165SupportInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractInterfaceInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"name\":\"DaoUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"InvalidDaoSubdomain\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"DAORegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REGISTER_DAO_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_REGISTRY_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"entries\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"_managingDao\",\"type\":\"address\"},{\"internalType\":\"contract ENSSubdomainRegistrar\",\"name\":\"_subdomainRegistrar\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subdomainRegistrar\",\"outputs\":[{\"internalType\":\"contract ENSSubdomainRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaceId\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"errors\":{\"ContractAlreadyRegistered(address)\":[{\"params\":{\"registrant\":\"The address of the contract to be registered.\"}}],\"ContractERC165SupportInvalid(address)\":[{\"params\":{\"registrant\":\"The address of the contract.\"}}],\"ContractInterfaceInvalid(address)\":[{\"params\":{\"registrant\":\"The address of the contract to be registered.\"}}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"params\":{\"dao\":\"The associated DAO.\",\"permissionId\":\"The permission identifier.\",\"where\":\"The context in which the authorization reverted.\",\"who\":\"The address (EOA or contract) missing the permission.\"}}]},\"events\":{\"DAORegistered(address,address,string)\":{\"params\":{\"creator\":\"The address of the creator.\",\"dao\":\"The address of the DAO contract.\",\"subdomain\":\"The DAO subdomain.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"details\":\"Used to disallow initializing the implementation contract by an attacker for extra safety.\"},\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}},\"initialize(address,address)\":{\"params\":{\"_managingDao\":\"the managing DAO address.\",\"_subdomainRegistrar\":\"The `ENSSubdomainRegistrar` where `ENS` subdomain will be registered.\"}},\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_0\":\"Returns the semantic Aragon OSx protocol version number.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"register(address,address,string)\":{\"details\":\"A subdomain is unique within the Aragon DAO framework and can get stored here.\",\"params\":{\"creator\":\"The address of the creator.\",\"dao\":\"The address of the DAO contract.\",\"subdomain\":\"The DAO subdomain.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"Register your unique DAO subdomain\",\"version\":1},\"userdoc\":{\"errors\":{\"ContractAlreadyRegistered(address)\":[{\"notice\":\"Thrown if the contract is already registered.\"}],\"ContractERC165SupportInvalid(address)\":[{\"notice\":\"Thrown if the contract does not support ERC165.\"}],\"ContractInterfaceInvalid(address)\":[{\"notice\":\"Thrown if the contract does not support the required interface.\"}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"notice\":\"Thrown if a call is unauthorized in the associated DAO.\"}],\"InvalidDaoSubdomain(string)\":[{\"notice\":\"Thrown if the DAO subdomain doesn't match the regex `[0-9a-z\\\\-]`\"}]},\"events\":{\"DAORegistered(address,address,string)\":{\"notice\":\"Emitted when a new DAO is registered.\"}},\"kind\":\"user\",\"methods\":{\"REGISTER_DAO_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `register` function.\"},\"UPGRADE_REGISTRY_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `_authorizeUpgrade` function.\"},\"dao()\":{\"notice\":\"Returns the DAO contract.\"},\"entries(address)\":{\"notice\":\"The mapping containing the registry entries returning true for registered contract addresses.\"},\"initialize(address,address)\":{\"notice\":\"Initializes the contract.\"},\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"},\"register(address,address,string)\":{\"notice\":\"Registers a DAO by its address. If a non-empty subdomain name is provided that is not taken already, the DAO becomes the owner of the ENS name.\"},\"subdomainRegistrar()\":{\"notice\":\"The ENS subdomain registrar registering the DAO subdomains.\"},\"targetInterfaceId()\":{\"notice\":\"The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support.\"}},\"notice\":\"This contract provides the possibility to register a DAO.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/framework/dao/DAORegistry.sol\":\"DAORegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol\":{\"keccak256\":\"0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda\",\"urls\":[\"bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314\",\"dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":{\"keccak256\":\"0x94edef8687cf1335a114f7e7267fa92cb0d9e61afde8d62589aceede6c245caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dbcc182503f671c6bb7e2c24fe5f13e4c7604389d6cfccd074bc1d9fa7b86df\",\"dweb:/ipfs/QmdioHDNmTsJx9xMcwBvA7QJhC4MzTmDmWHiWsZpbETLXx\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol\":{\"keccak256\":\"0xb7919ce45b17fae018c501263ef7eb81b3c8e3fa81e99cc91aff719a6daaebe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2342dac876f5809e1460e9e0ef2560d1f739d35997d1e26c0cb2590927ca8a2f\",\"dweb:/ipfs/QmbBbLoCBdLxA66yeuT8xDCbPrFJD8HUWGmRW2Wq5k1cBx\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol\":{\"keccak256\":\"0x85b373d02d19374fe570af407f459768285704bf7f30ab17c30eabfb5a10e4c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046ce3d92d29806d7b447f7ab4227f19b0b2e5c75fd5b4a3fcaef7fe2442141\",\"dweb:/ipfs/QmRgnfWjFetrSJngkhU7Yui1ZcK1MeatvZDpvUTYNuYnND\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol\":{\"keccak256\":\"0x2ad7f2fc60ebe0f93745fe70247f6a854f66af732483fda2a3c5e055614445e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43922ba183ff20d87dce7fc5d715e626b26594151e36dcc8d7c6329b9a822963\",\"dweb:/ipfs/QmTg9uHTugTxzqddN68gnhNbGt4bGJBS9mQcss6GYggR4X\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol\":{\"keccak256\":\"0x411447c1e90c51e09702815a85ec725ffbbe37cf96e8cc4d2a8bd4ad8a59d73e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543aa2756447a428711b69aea79e9f4641c22f8330ba920b2a49fde8d9207f82\",\"dweb:/ipfs/QmTdpcYRWLH3BL7iytnqcSzRojTPe3YettKaTqeCvKPk54\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol\":{\"keccak256\":\"0xd95cd77684ba5752c428d7dceb4ecc6506ac94f4fbb910489637eb68dcd8e366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf1fee7770679bd935b8b5686789a4ecc532caeef5a9b8e1b60ae0c285e743e\",\"dweb:/ipfs/QmSaHBAqtDdbQLH6QN4EbupMrq2ah8g6fqE7fLX1u4cjMZ\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol\":{\"keccak256\":\"0xcfa52200edd337f2c6c5bf402352600584da033b21323603e53de33051a3e25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8355211d58db82660140191678ee342eb8a7ac46fa097ae8e03eef008f592e\",\"dweb:/ipfs/QmYDNiECPd4fJ7Vk9Xywfpg73rUvDpcYqas95ofGcpt7fM\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol\":{\"keccak256\":\"0xca1b3a16e7005533f2800a3e66fcdccf7c574deac7913d8c810f40aec1d58dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e38d5eb69e236c37e4a013628838070720c9e1923569650b01252868038c7a\",\"dweb:/ipfs/QmV397iZMRxtem79kJy5sueJadXoVL89gNViX2xciQHUrk\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol\":{\"keccak256\":\"0x5d81521cfae7d9a4475d27533cd8ed0d3475d369eb0674fd90ffbdbdf292faa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d244d15588785044b54c453ab6dc51c616ab70cb8b9e687d3e54565bcae97760\",\"dweb:/ipfs/QmXz4ZZBTFogdkdTV1mcE3ywvL2agKVZHLNNeRHCKVruYM\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol\":{\"keccak256\":\"0x390321fb58f7b927df9562450981e74b4be3907e7c09df321fd3b7409b63ae28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://045d12c6e0e4596b3672614751a9e75188183a89765a6abd938294e0294e9c56\",\"dweb:/ipfs/QmazngvagEoKe29s4M9Rv8KygWD5hrAtNPkYDPJ2pK13yx\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol\":{\"keccak256\":\"0x69748947093dd2fda9ddcebd0adf19a6d1e7600df1d4b1462a0417156caddca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2f86e50bd17c38fb10feb577d88d8970c585017a391ef10e3aaa3d50f81555\",\"dweb:/ipfs/QmaxLx2pqCUxf9W2dusfviZ9aSiTuVwuekGo73rjvmGifE\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol\":{\"keccak256\":\"0x7c5debb3c42cd9f5de2274ea7aa053f238608314b62db441c40e31cea2543fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e34ae2d84d542ffa6791486963f3fe04432a3ffd51877d441256dc2941914\",\"dweb:/ipfs/QmciS4mGAQ6KJtLiLcBFekHKhYAYMmubDWGkpZ3sUFtJPW\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x39b73389db9653916ceba024ca2ee4cf290d094c2b6da4175603279960983ebe\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://de141cf0323525da50a63e09c2548d4f6faf55c1c804f5dfa7afc612d376d4aa\",\"dweb:/ipfs/QmVn9zMpwmE3AQme4gWzD43AzCBzyRjRFzwjPUjyH8KQcA\"]},\"packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x214d611471514ee8c3a21de59447101f1cba44090ee078fa2ba758a2ea5016cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7e51fe2ff30eb754d8ed0a1e4512b35f31d3b7fd1817e277cbfc8721d87fbbf\",\"dweb:/ipfs/QmdLQ1SW4EjRjXMD4pdtJPTDHeZaieYEN3EeiyaV4dDYRX\"]},\"packages/contracts/src/framework/dao/DAORegistry.sol\":{\"keccak256\":\"0x7e3d87fb47cf393dd276fff3ef9d0d7b1520e83f50f5a48798ecff638b8a612a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://98b9a855dc46712d6d6f7493e759df09e2b2e3c030e3c5c9d31a7d6c29e9d581\",\"dweb:/ipfs/QmRG5eNuswrTErien6G88NaB9beE7PAqZY1LTnMACcneYR\"]},\"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":{\"keccak256\":\"0x5760ea1f3c55568c5dbad600f302bbb41a9d1a554915f16abda20252c71b706c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c90c8f71d32df5e83949f4745d733de85d5bcce680d19f7df765451adf81035e\",\"dweb:/ipfs/QmVNdBYuaqgaCGu526K88R9EqU9ERNxGeJ5FmEs2BSFTc4\"]},\"packages/contracts/src/framework/utils/RegistryUtils.sol\":{\"keccak256\":\"0x718a8a2b3b02a1f952e841bc78b806bbebbd5de4cf381feb2822e1c3fafb1070\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8dd179ac828b7fe125bfbf8984233ca9ddd3fca0b94ad65cd34696ecb89d0219\",\"dweb:/ipfs/Qmc611VvrtJMjf6eSjGequAV91UkPGEJjQHctKzGbCVB6a\"]},\"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":{\"keccak256\":\"0x041d159cdf42fba70edba3d9df8ee6e414751efc7175fe1943364bc2b5c2a46a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://80f06e0b26cfc651edace5be9d9f83dfa25e8aa5117e7250d74922c54e0362e6\",\"dweb:/ipfs/QmZMxc4tFxoxbSUuz8pTwiFj14M9Z6mChPASXGc36nuX6L\"]},\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]},\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":{\"keccak256\":\"0x53e693a16bda9b3483ce71a5b25a523961930c3f03ec381d9da0be9d37686599\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48336778e4f2097ff1fb1c4909d2be7a50dd6107f1c31c69aebb41e6162ef0e2\",\"dweb:/ipfs/QmNTEmpC3arZ5PPq7HX5SRwe9SNL5kLwnmG9zPfUkbi63B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 520,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 523,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 502,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 817,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1189,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2995,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "dao_",
								"offset": 0,
								"slot": "151",
								"type": "t_contract(IDAO)2980"
							},
							{
								"astId": 3044,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3270,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "targetInterfaceId",
								"offset": 0,
								"slot": "201",
								"type": "t_bytes4"
							},
							{
								"astId": 3275,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "entries",
								"offset": 0,
								"slot": "202",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3359,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "203",
								"type": "t_array(t_uint256)48_storage"
							},
							{
								"astId": 3122,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "subdomainRegistrar",
								"offset": 0,
								"slot": "251",
								"type": "t_contract(ENSSubdomainRegistrar)3659"
							},
							{
								"astId": 3242,
								"contract": "packages/contracts/src/framework/dao/DAORegistry.sol:DAORegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "252",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)48_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[48]",
								"numberOfBytes": "1536"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_contract(ENSSubdomainRegistrar)3659": {
								"encoding": "inplace",
								"label": "contract ENSSubdomainRegistrar",
								"numberOfBytes": "20"
							},
							"t_contract(IDAO)2980": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ContractAlreadyRegistered(address)": [
								{
									"notice": "Thrown if the contract is already registered."
								}
							],
							"ContractERC165SupportInvalid(address)": [
								{
									"notice": "Thrown if the contract does not support ERC165."
								}
							],
							"ContractInterfaceInvalid(address)": [
								{
									"notice": "Thrown if the contract does not support the required interface."
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"notice": "Thrown if a call is unauthorized in the associated DAO."
								}
							],
							"InvalidDaoSubdomain(string)": [
								{
									"notice": "Thrown if the DAO subdomain doesn't match the regex `[0-9a-z\\-]`"
								}
							]
						},
						"events": {
							"DAORegistered(address,address,string)": {
								"notice": "Emitted when a new DAO is registered."
							}
						},
						"kind": "user",
						"methods": {
							"REGISTER_DAO_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `register` function."
							},
							"UPGRADE_REGISTRY_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `_authorizeUpgrade` function."
							},
							"dao()": {
								"notice": "Returns the DAO contract."
							},
							"entries(address)": {
								"notice": "The mapping containing the registry entries returning true for registered contract addresses."
							},
							"initialize(address,address)": {
								"notice": "Initializes the contract."
							},
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							},
							"register(address,address,string)": {
								"notice": "Registers a DAO by its address. If a non-empty subdomain name is provided that is not taken already, the DAO becomes the owner of the ENS name."
							},
							"subdomainRegistrar()": {
								"notice": "The ENS subdomain registrar registering the DAO subdomains."
							},
							"targetInterfaceId()": {
								"notice": "The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support."
							}
						},
						"notice": "This contract provides the possibility to register a DAO.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol": {
				"InterfaceBasedRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractAlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractERC165SupportInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registrant",
									"type": "address"
								}
							],
							"name": "ContractInterfaceInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dao",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "permissionId",
									"type": "bytes32"
								}
							],
							"name": "DaoUnauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_REGISTRY_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dao",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "entries",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetInterfaceId",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"errors": {
							"ContractAlreadyRegistered(address)": [
								{
									"params": {
										"registrant": "The address of the contract to be registered."
									}
								}
							],
							"ContractERC165SupportInvalid(address)": [
								{
									"params": {
										"registrant": "The address of the contract."
									}
								}
							],
							"ContractInterfaceInvalid(address)": [
								{
									"params": {
										"registrant": "The address of the contract to be registered."
									}
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"params": {
										"dao": "The associated DAO.",
										"permissionId": "The permission identifier.",
										"where": "The context in which the authorization reverted.",
										"who": "The address (EOA or contract) missing the permission."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"dao()": {
								"returns": {
									"_0": "The DAO contract."
								}
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"title": "InterfaceBasedRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_REGISTRY_PERMISSION_ID()": "74574eb7",
							"dao()": "4162169f",
							"entries(address)": "f29ee125",
							"proxiableUUID()": "52d1902d",
							"targetInterfaceId()": "44162ef8",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractERC165SupportInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"ContractInterfaceInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"name\":\"DaoUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_REGISTRY_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"entries\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaceId\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"errors\":{\"ContractAlreadyRegistered(address)\":[{\"params\":{\"registrant\":\"The address of the contract to be registered.\"}}],\"ContractERC165SupportInvalid(address)\":[{\"params\":{\"registrant\":\"The address of the contract.\"}}],\"ContractInterfaceInvalid(address)\":[{\"params\":{\"registrant\":\"The address of the contract to be registered.\"}}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"params\":{\"dao\":\"The associated DAO.\",\"permissionId\":\"The permission identifier.\",\"where\":\"The context in which the authorization reverted.\",\"who\":\"The address (EOA or contract) missing the permission.\"}}]},\"kind\":\"dev\",\"methods\":{\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"InterfaceBasedRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"ContractAlreadyRegistered(address)\":[{\"notice\":\"Thrown if the contract is already registered.\"}],\"ContractERC165SupportInvalid(address)\":[{\"notice\":\"Thrown if the contract does not support ERC165.\"}],\"ContractInterfaceInvalid(address)\":[{\"notice\":\"Thrown if the contract does not support the required interface.\"}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"notice\":\"Thrown if a call is unauthorized in the associated DAO.\"}]},\"kind\":\"user\",\"methods\":{\"UPGRADE_REGISTRY_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `_authorizeUpgrade` function.\"},\"dao()\":{\"notice\":\"Returns the DAO contract.\"},\"entries(address)\":{\"notice\":\"The mapping containing the registry entries returning true for registered contract addresses.\"},\"targetInterfaceId()\":{\"notice\":\"The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support.\"}},\"notice\":\"An [ERC-165](https://eips.ethereum.org/EIPS/eip-165)-based registry for contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":\"InterfaceBasedRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol\":{\"keccak256\":\"0x94edef8687cf1335a114f7e7267fa92cb0d9e61afde8d62589aceede6c245caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dbcc182503f671c6bb7e2c24fe5f13e4c7604389d6cfccd074bc1d9fa7b86df\",\"dweb:/ipfs/QmdioHDNmTsJx9xMcwBvA7QJhC4MzTmDmWHiWsZpbETLXx\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x39b73389db9653916ceba024ca2ee4cf290d094c2b6da4175603279960983ebe\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://de141cf0323525da50a63e09c2548d4f6faf55c1c804f5dfa7afc612d376d4aa\",\"dweb:/ipfs/QmVn9zMpwmE3AQme4gWzD43AzCBzyRjRFzwjPUjyH8KQcA\"]},\"packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x214d611471514ee8c3a21de59447101f1cba44090ee078fa2ba758a2ea5016cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7e51fe2ff30eb754d8ed0a1e4512b35f31d3b7fd1817e277cbfc8721d87fbbf\",\"dweb:/ipfs/QmdLQ1SW4EjRjXMD4pdtJPTDHeZaieYEN3EeiyaV4dDYRX\"]},\"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol\":{\"keccak256\":\"0x5760ea1f3c55568c5dbad600f302bbb41a9d1a554915f16abda20252c71b706c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c90c8f71d32df5e83949f4745d733de85d5bcce680d19f7df765451adf81035e\",\"dweb:/ipfs/QmVNdBYuaqgaCGu526K88R9EqU9ERNxGeJ5FmEs2BSFTc4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 520,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 523,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 502,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 817,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1189,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2995,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "dao_",
								"offset": 0,
								"slot": "151",
								"type": "t_contract(IDAO)2980"
							},
							{
								"astId": 3044,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3270,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "targetInterfaceId",
								"offset": 0,
								"slot": "201",
								"type": "t_bytes4"
							},
							{
								"astId": 3275,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "entries",
								"offset": 0,
								"slot": "202",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3359,
								"contract": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol:InterfaceBasedRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "203",
								"type": "t_array(t_uint256)48_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)48_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[48]",
								"numberOfBytes": "1536"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_contract(IDAO)2980": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ContractAlreadyRegistered(address)": [
								{
									"notice": "Thrown if the contract is already registered."
								}
							],
							"ContractERC165SupportInvalid(address)": [
								{
									"notice": "Thrown if the contract does not support ERC165."
								}
							],
							"ContractInterfaceInvalid(address)": [
								{
									"notice": "Thrown if the contract does not support the required interface."
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"notice": "Thrown if a call is unauthorized in the associated DAO."
								}
							]
						},
						"kind": "user",
						"methods": {
							"UPGRADE_REGISTRY_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `_authorizeUpgrade` function."
							},
							"dao()": {
								"notice": "Returns the DAO contract."
							},
							"entries(address)": {
								"notice": "The mapping containing the registry entries returning true for registered contract addresses."
							},
							"targetInterfaceId()": {
								"notice": "The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support."
							}
						},
						"notice": "An [ERC-165](https://eips.ethereum.org/EIPS/eip-165)-based registry for contracts.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol": {
				"ENSSubdomainRegistrar": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "subnode",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "nodeOwner",
									"type": "address"
								}
							],
							"name": "AlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dao",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "permissionId",
									"type": "bytes32"
								}
							],
							"name": "DaoUnauthorized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "InvalidResolver",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REGISTER_ENS_SUBDOMAIN_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_REGISTRAR_PERMISSION_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dao",
							"outputs": [
								{
									"internalType": "contract IDAO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ens",
							"outputs": [
								{
									"internalType": "contract ENS",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IDAO",
									"name": "_managingDao",
									"type": "address"
								},
								{
									"internalType": "contract ENS",
									"name": "_ens",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_node",
									"type": "bytes32"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "node",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_targetAddress",
									"type": "address"
								}
							],
							"name": "registerSubnode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "resolver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_resolver",
									"type": "address"
								}
							],
							"name": "setDefaultResolver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"errors": {
							"AlreadyRegistered(bytes32,address)": [
								{
									"params": {
										"nodeOwner": "The node owner address.",
										"subnode": "The subnode namehash."
									}
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"params": {
										"dao": "The associated DAO.",
										"permissionId": "The permission identifier.",
										"where": "The context in which the authorization reverted.",
										"who": "The address (EOA or contract) missing the permission."
									}
								}
							],
							"InvalidResolver(bytes32,address)": [
								{
									"params": {
										"node": "The node namehash.",
										"resolver": "The node resolver address."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor",
								"details": "Used to disallow initializing the implementation contract by an attacker for extra safety."
							},
							"dao()": {
								"returns": {
									"_0": "The DAO contract."
								}
							},
							"initialize(address,address,bytes32)": {
								"params": {
									"_ens": "The interface of the ENS registry to be used.",
									"_managingDao": "The interface of the DAO managing the components permissions.",
									"_node": "The ENS parent domain node under which the subdomains are to be registered."
								}
							},
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_0": "Returns the semantic Aragon OSx protocol version number."
								}
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"registerSubnode(bytes32,address)": {
								"details": "It reverts with no message if this contract isn't the owner nor an approved operator for the given node.",
								"params": {
									"_label": "The labelhash of the subdomain name.",
									"_targetAddress": "The address to which the subdomain resolves."
								}
							},
							"setDefaultResolver(address)": {
								"params": {
									"_resolver": "The resolver contract to be used."
								}
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"title": "ENSSubdomainRegistrar",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1173:5873  contract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {... */\n  mstore(0x40, 0xa0)\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1088:1092  this */\n  address\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1045:1093  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":2612:2667  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":2637:2659  _disableInitializers() */\n  tag_4\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":2637:2657  _disableInitializers */\n  tag_5\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":2637:2659  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1173:5873  contract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {... */\n  jump(tag_14)\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6007:6020  _initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6006:6020  !_initializing */\n  iszero\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x27\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:328   */\n  0x496e697469616c697a61626c653a20636f6e747261637420697320696e697469\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0xc8, 0x616c697a696e67)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:375   */\n  mstore\n    /* \"#utility.yul\":392:411   */\n  0x84\n  add\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  sload(0x00)\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6094:6109  type(uint8).max */\n  0xff\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  swap1\n  dup2\n  and\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6078:6109  _initialized != type(uint8).max */\n  eq\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\n  tag_11\n  jumpi\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6125:6137  _initialized */\n  0x00\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6140:6155  type(uint8).max */\n  0xff\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n    /* \"#utility.yul\":564:600   */\n  swap1\n  dup2\n  mstore\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n  swap1\n    /* \"#utility.yul\":552:554   */\n  0x20\n    /* \"#utility.yul\":537:555   */\n  add\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\ntag_11:\n    /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":422:606   */\ntag_14:\n    /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1173:5873  contract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4da997d206bb2f0037763b1c2f093b76c8f62bf3113924d5c1a5ef58577f01c9\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1173:5873  contract ENSSubdomainRegistrar is UUPSUpgradeable, DaoAuthorizableUpgradeable, ProtocolVersion {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x52d1902d\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x9848ba51\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x9848ba51\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaf7b2fed\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc66485b2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd70754ec\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x52d1902d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6133f985\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x89bb4145\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x04f3bcec\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2ae9c600\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f15457f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4162169f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1986:2009  address public resolver */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      sload(0x67)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1986:2009  address public resolver */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3143:3338  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1771:1785  ENS public ens */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sload(0x65)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1239:1311  function dao() public view returns (IDAO) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1299:1303  dao_ */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1239:1311  function dao() public view returns (IDAO) {... */\n      jump(tag_18)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3657:3877  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_7:\n      tag_28\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2762:2893  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":2895:2920   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2883:2885   */\n      0x20\n        /* \"#utility.yul\":2868:2886   */\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2762:2893  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      tag_20\n        /* \"#utility.yul\":2749:2926   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3276:3696  function initialize(IDAO _managingDao, ENS _ens, bytes32 _node) external initializer {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_28\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4545:5103  function registerSubnode(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_28\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1601:1719  bytes32 public constant REGISTER_ENS_SUBDOMAIN_PERMISSION_ID =... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_47\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1673:1719  keccak256(\"REGISTER_ENS_SUBDOMAIN_PERMISSION\") */\n      0xbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1601:1719  bytes32 public constant REGISTER_ENS_SUBDOMAIN_PERMISSION_ID =... */\n      dup2\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1368:1476  bytes32 public constant UPGRADE_REGISTRAR_PERMISSION_ID =... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_47\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1435:1476  keccak256(\"UPGRADE_REGISTRAR_PERMISSION\") */\n      0xa1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1368:1476  bytes32 public constant UPGRADE_REGISTRAR_PERMISSION_ID =... */\n      dup2\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5278:5557  function setDefaultResolver(... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_28\n      tag_71\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1874:1893  bytes32 public node */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_47\n      sload(0x66)\n      dup2\n      jump\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n    tag_24:\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":704:719  uint8[3] memory */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      pop\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":740:741  1 */\n      0x01\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      dup2\n      mstore\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":743:744  4 */\n      0x04\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":732:748  return [1, 4, 0] */\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":656:756  function protocolVersion() public pure returns (uint8[3] memory) {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3143:3338  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1654:1660  __self */\n      immutable(\"0x4da997d206bb2f0037763b1c2f093b76c8f62bf3113924d5c1a5ef58577f01c9\")\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1637:1660  address(this) != __self */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1645:1649  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1637:1660  address(this) != __self */\n      sub\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1629:1709  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1751:1757  __self */\n      immutable(\"0x4da997d206bb2f0037763b1c2f093b76c8f62bf3113924d5c1a5ef58577f01c9\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1727:1757  _getImplementation() == __self */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1727:1747  _getImplementation() */\n      tag_84\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1254:1308  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1175:1315  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1727:1747  _getImplementation() */\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1727:1757  _getImplementation() == __self */\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1719:1806  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_88\n      jump\t// in\n    tag_86:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3224:3260  _authorizeUpgrade(newImplementation) */\n      tag_90\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3242:3259  newImplementation */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3224:3241  _authorizeUpgrade */\n      tag_91\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3224:3260  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_90:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3311:3323  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3321:3322  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3311:3323  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3270:3331  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_92\n      swap2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3292:3309  newImplementation */\n      dup4\n      swap2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3311:3323  new bytes(0) */\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3270:3291  _upgradeToAndCallUUPS */\n      tag_97\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3270:3331  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_92:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3143:3338  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3657:3877  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1654:1660  __self */\n      immutable(\"0x4da997d206bb2f0037763b1c2f093b76c8f62bf3113924d5c1a5ef58577f01c9\")\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1637:1660  address(this) != __self */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1645:1649  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1637:1660  address(this) != __self */\n      sub\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1629:1709  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_100:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1751:1757  __self */\n      immutable(\"0x4da997d206bb2f0037763b1c2f093b76c8f62bf3113924d5c1a5ef58577f01c9\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1727:1757  _getImplementation() == __self */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1727:1747  _getImplementation() */\n      tag_102\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1254:1308  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1175:1315  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1727:1747  _getImplementation() */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1727:1757  _getImplementation() == __self */\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":1719:1806  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_88\n      jump\t// in\n    tag_103:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3772:3808  _authorizeUpgrade(newImplementation) */\n      tag_106\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3790:3807  newImplementation */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3772:3789  _authorizeUpgrade */\n      tag_91\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3772:3808  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_106:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3818:3870  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_107\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3840:3857  newImplementation */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3859:3863  data */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3865:3869  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3818:3839  _upgradeToAndCallUUPS */\n      tag_97\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3818:3870  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_107:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":3657:3877  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2762:2893  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_48:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2840:2847  bytes32 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2080:2084  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2089:2095  __self */\n      immutable(\"0x4da997d206bb2f0037763b1c2f093b76c8f62bf3113924d5c1a5ef58577f01c9\")\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2072:2095  address(this) == __self */\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2064:2156  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2064:2156  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4746:4767   */\n      mstore\n        /* \"#utility.yul\":4803:4805   */\n      0x38\n        /* \"#utility.yul\":4783:4801   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4776:4806   */\n      mstore\n        /* \"#utility.yul\":4842:4876   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":4822:4840   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4815:4877   */\n      mstore\n        /* \"#utility.yul\":4913:4939   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":4893:4911   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4886:4940   */\n      mstore\n        /* \"#utility.yul\":4957:4976   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2064:2156  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_82\n        /* \"#utility.yul\":4562:4982   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2064:2156  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_109:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":2762:2893  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3276:3696  function initialize(IDAO _managingDao, ENS _ens, bytes32 _node) external initializer {... */\n    tag_55:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_114\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_114:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_118\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_118:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5171:5192   */\n      mstore\n        /* \"#utility.yul\":5228:5230   */\n      0x2e\n        /* \"#utility.yul\":5208:5226   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5201:5231   */\n      mstore\n        /* \"#utility.yul\":5267:5301   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":5247:5265   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5240:5302   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5318:5336   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5311:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_82\n        /* \"#utility.yul\":4987:5397   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_119:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_122\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_122:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3372:3419  __DaoAuthorizableUpgradeable_init(_managingDao) */\n      tag_124\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3406:3418  _managingDao */\n      dup5\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3372:3405  __DaoAuthorizableUpgradeable_init */\n      tag_125\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3372:3419  __DaoAuthorizableUpgradeable_init(_managingDao) */\n      jump\t// in\n    tag_124:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3432:3435  ens */\n      0x65\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3432:3442  ens = _ens */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3453:3457  node */\n      0x66\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3453:3465  node = _node */\n      dup4\n      swap1\n      sstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3501:3520  ens.resolver(_node) */\n      mload(0x40)\n      shl(0xe0, 0x0178b8bf)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2895:2920   */\n      dup5\n      swap1\n      mstore\n      0x00\n      swap2\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3432:3442  ens = _ens */\n      swap1\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3501:3513  ens.resolver */\n      0x0178b8bf\n      swap1\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3501:3520  ens.resolver(_node) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3478:3520  address nodeResolver = ens.resolver(_node) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3537:3563  nodeResolver == address(0) */\n      dup2\n      and\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3533:3653  if (nodeResolver == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3587:3641  InvalidResolver({node: _node, resolver: nodeResolver}) */\n      mload(0x40)\n      shl(0xe1, 0x0d7097c5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5832:5857   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5893:5925   */\n      dup3\n      and\n        /* \"#utility.yul\":5873:5891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5866:5926   */\n      mstore\n        /* \"#utility.yul\":5805:5823   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3587:3641  InvalidResolver({node: _node, resolver: nodeResolver}) */\n      tag_82\n        /* \"#utility.yul\":5658:5932   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3533:3653  if (nodeResolver == address(0)) {... */\n    tag_131:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3665:3673  resolver */\n      0x67\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3665:3688  resolver = nodeResolver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_134\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":6089:6125   */\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":6077:6079   */\n      0x20\n        /* \"#utility.yul\":6062:6080   */\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_134:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":3276:3696  function initialize(IDAO _managingDao, ENS _ens, bytes32 _node) external initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4545:5103  function registerSubnode(... */\n    tag_60:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      sload(0x33)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1673:1719  keccak256(\"REGISTER_ENS_SUBDOMAIN_PERMISSION\") */\n      0xbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1723  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_138\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1676:1680  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1683:1695  _msgSender() */\n    tag_139:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1697:1710  _permissionId */\n      dup5\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":1003:1017  bytes calldata */\n      0x00\n      calldatasize\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1661  _auth */\n      tag_143\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1723  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      jump\t// in\n    tag_138:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4698:4713  bytes32 subnode */\n      0x00\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4743:4747  node */\n      sload(0x66)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4749:4755  _label */\n      dup5\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4726:4756  abi.encodePacked(node, _label) */\n      add(0x20, mload(0x40))\n      tag_145\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":6293:6312   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":6337:6339   */\n      0x20\n        /* \"#utility.yul\":6328:6340   */\n      dup3\n      add\n        /* \"#utility.yul\":6321:6349   */\n      mstore\n        /* \"#utility.yul\":6374:6376   */\n      0x40\n        /* \"#utility.yul\":6365:6377   */\n      add\n      swap1\n        /* \"#utility.yul\":6136:6383   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4726:4756  abi.encodePacked(node, _label) */\n    tag_145:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      not(0x1f)\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4716:4757  keccak256(abi.encodePacked(node, _label)) */\n      dup1\n      mload\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4726:4756  abi.encodePacked(node, _label) */\n      0x20\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4716:4757  keccak256(abi.encodePacked(node, _label)) */\n      swap1\n      swap2\n      add\n      keccak256\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4791:4794  ens */\n      sload(0x65)\n      shl(0xe0, 0x02571be3)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4791:4809  ens.owner(subnode) */\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2895:2920   */\n      dup3\n      swap1\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4716:4757  keccak256(abi.encodePacked(node, _label)) */\n      swap1\n      swap3\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4768:4788  address currentOwner */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4791:4794  ens */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4791:4800  ens.owner */\n      0x02571be3\n      swap1\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4791:4809  ens.owner(subnode) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_150:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4768:4809  address currentOwner = ens.owner(subnode) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4826:4852  currentOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4822:4928  if (currentOwner != address(0)) {... */\n      tag_151\n      jumpi\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4876:4916  AlreadyRegistered(subnode, currentOwner) */\n      mload(0x40)\n      shl(0xe1, 0xfcad5d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5832:5857   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5893:5925   */\n      dup3\n      and\n        /* \"#utility.yul\":5873:5891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5866:5926   */\n      mstore\n        /* \"#utility.yul\":5805:5823   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4876:4916  AlreadyRegistered(subnode, currentOwner) */\n      tag_82\n        /* \"#utility.yul\":5658:5932   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4822:4928  if (currentOwner != address(0)) {... */\n    tag_151:\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4940:4943  ens */\n      sload(0x65)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4960:4964  node */\n      sload(0x66)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4940:4988  ens.setSubnodeOwner(node, _label, address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x06ab5923)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":6590:6615   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6631:6649   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6624:6658   */\n      dup8\n      swap1\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4982:4986  this */\n      address\n        /* \"#utility.yul\":6674:6692   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6667:6727   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4940:4943  ens */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4940:4959  ens.setSubnodeOwner */\n      0x06ab5923\n      swap1\n        /* \"#utility.yul\":6563:6581   */\n      0x64\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4940:4988  ens.setSubnodeOwner(node, _label, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4999:5002  ens */\n      sload(0x65)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5024:5032  resolver */\n      sload(0x67)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4999:5033  ens.setResolver(subnode, resolver) */\n      mload(0x40)\n      shl(0xe1, 0x0c4b7b85)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5832:5857   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5024:5032  resolver */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":5873:5891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5866:5926   */\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4999:5002  ens */\n      swap2\n      and\n      swap1\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4999:5014  ens.setResolver */\n      0x1896f70a\n      swap1\n        /* \"#utility.yul\":5805:5823   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4999:5033  ens.setResolver(subnode, resolver) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5053:5061  resolver */\n      sload(0x67)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5044:5095  Resolver(resolver).setAddr(subnode, _targetAddress) */\n      mload(0x40)\n      shl(0xe8, 0xd5fa2b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5832:5857   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5893:5925   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":5873:5891   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5866:5926   */\n      mstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5053:5061  resolver */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5044:5070  Resolver(resolver).setAddr */\n      0xd5fa2b00\n      swap2\n      pop\n        /* \"#utility.yul\":5805:5823   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5044:5095  Resolver(resolver).setAddr(subnode, _targetAddress) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4687:5103  {... */\n      pop\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4545:5103  function registerSubnode(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5278:5557  function setDefaultResolver(... */\n    tag_72:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      sload(0x33)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1673:1719  keccak256(\"REGISTER_ENS_SUBDOMAIN_PERMISSION\") */\n      0xbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1723  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_168\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1676:1680  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1683:1695  _msgSender() */\n      tag_139\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1723  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5408:5431  _resolver == address(0) */\n      dup3\n      and\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5404:5517  if (_resolver == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5478:5482  node */\n      sload(0x66)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5455:5505  InvalidResolver({node: node, resolver: _resolver}) */\n      mload(0x40)\n      shl(0xe1, 0x0d7097c5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5832:5857   */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5893:5925   */\n      dup4\n      and\n        /* \"#utility.yul\":5873:5891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5866:5926   */\n      mstore\n        /* \"#utility.yul\":5805:5823   */\n      0x44\n      add\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5455:5505  InvalidResolver({node: node, resolver: _resolver}) */\n      tag_82\n        /* \"#utility.yul\":5658:5932   */\n      jump\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5404:5517  if (_resolver == address(0)) {... */\n    tag_172:\n      pop\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5529:5537  resolver */\n      0x67\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5529:5549  resolver = _resolver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":5278:5557  function setDefaultResolver(... */\n      jump\t// out\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":4044:4162  function _authorizeUpgrade(... */\n    tag_91:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      sload(0x33)\n        /* \"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":1435:1476  keccak256(\"UPGRADE_REGISTRAR_PERMISSION\") */\n      0xa1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff\n      swap1\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1656:1723  _auth(dao_, address(this), _msgSender(), _permissionId, _msgData()) */\n      tag_107\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1662:1666  dao_ */\n      and\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1676:1680  this */\n      address\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1683:1695  _msgSender() */\n      tag_139\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2494:3416  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_97:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":689:755  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2910:2958  StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value */\n      sload\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2906:3410  if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2974:3011  _setImplementation(newImplementation) */\n      tag_186\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2993:3010  newImplementation */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2974:2992  _setImplementation */\n      tag_187\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2974:3011  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_186:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2494:3416  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2906:3410  if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_185:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3064:3081  newImplementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3046:3096  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3046:3098  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_190\n      swap2\n      dup2\n      add\n      swap1\n      tag_158\n      jump\t// in\n    tag_190:\n      0x01\n    tag_189:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3042:3333  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_191\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3262:3318  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7129:7131   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3262:3318  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7111:7132   */\n      mstore\n        /* \"#utility.yul\":7168:7170   */\n      0x2e\n        /* \"#utility.yul\":7148:7166   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7141:7171   */\n      mstore\n        /* \"#utility.yul\":7207:7241   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":7187:7205   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7180:7242   */\n      mstore\n      shl(0x90, 0x6f6e206973206e6f742055555053)\n        /* \"#utility.yul\":7258:7276   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7251:7295   */\n      mstore\n        /* \"#utility.yul\":7312:7331   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3262:3318  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      tag_82\n        /* \"#utility.yul\":6927:7337   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3042:3333  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_191:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3148:3176  slot == _IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3140:3222  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7544:7546   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3140:3222  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7526:7547   */\n      mstore\n        /* \"#utility.yul\":7583:7585   */\n      0x29\n        /* \"#utility.yul\":7563:7581   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7556:7586   */\n      mstore\n        /* \"#utility.yul\":7622:7656   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":7602:7620   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7595:7657   */\n      mstore\n      shl(0xba, 0x1a58589b1955555251)\n        /* \"#utility.yul\":7673:7691   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7666:7705   */\n      mstore\n        /* \"#utility.yul\":7722:7741   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3140:3222  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_82\n        /* \"#utility.yul\":7342:7747   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3140:3222  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n    tag_198:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3099:3237  returns (bytes32 slot) {... */\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3346:3399  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_186\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3364:3381  newImplementation */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3383:3387  data */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3389:3398  forceCall */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3346:3363  _upgradeToAndCall */\n      tag_202\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3346:3399  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1043:1153  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */\n    tag_125:\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7954:7956   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7936:7957   */\n      mstore\n        /* \"#utility.yul\":7993:7995   */\n      0x2b\n        /* \"#utility.yul\":7973:7991   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7966:7996   */\n      mstore\n        /* \"#utility.yul\":8032:8066   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":8012:8030   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8005:8067   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":8083:8101   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8076:8117   */\n      mstore\n        /* \"#utility.yul\":8134:8153   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_82\n        /* \"#utility.yul\":7752:8159   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n    tag_205:\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1134:1138  dao_ */\n      0x33\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1134:1145  dao_ = _dao */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":1043:1153  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */\n      jump\t// out\n        /* \"packages/contracts/src/core/utils/auth.sol\":1057:1434  function _auth(... */\n    tag_143:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x7ef7c883)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1221  _dao.hasPermission */\n      dup8\n      and\n      swap1\n      0xfdef9106\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      tag_212\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1222:1228  _where */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1230:1234  _who */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1236:1249  _permissionId */\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1251:1256  _data */\n      dup9\n      swap1\n      dup9\n      swap1\n        /* \"packages/contracts/src/core/utils/auth.sol\":1203:1257  _dao.hasPermission(_where, _who, _permissionId, _data) */\n      0x04\n      add\n      tag_213\n      jump\t// in\n    tag_212:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1198:1430  if (!_dao.hasPermission(_where, _who, _permissionId, _data))... */\n      tag_218\n      jumpi\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      mload(0x40)\n      shl(0xe2, 0x0cb6f8ed)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9400:9415   */\n      dup1\n      dup9\n      and\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9382:9416   */\n      mstore\n        /* \"#utility.yul\":9452:9467   */\n      dup1\n      dup8\n      and\n        /* \"#utility.yul\":9432:9450   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9425:9468   */\n      mstore\n        /* \"#utility.yul\":9504:9519   */\n      dup6\n      and\n        /* \"#utility.yul\":9484:9502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9477:9520   */\n      mstore\n        /* \"#utility.yul\":9536:9554   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":9529:9563   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9316:9335   */\n      0x84\n      add\n        /* \"packages/contracts/src/core/utils/auth.sol\":1275:1430  DaoUnauthorized({... */\n      tag_82\n        /* \"#utility.yul\":9113:9569   */\n      jump\n        /* \"packages/contracts/src/core/utils/auth.sol\":1198:1430  if (!_dao.hasPermission(_where, _who, _permissionId, _data))... */\n    tag_218:\n        /* \"packages/contracts/src/core/utils/auth.sol\":1057:1434  function _auth(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1406:1665  function _setImplementation(address newImplementation) private {... */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1479:1574  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9776:9778   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1479:1574  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9758:9779   */\n      mstore\n        /* \"#utility.yul\":9815:9817   */\n      0x2d\n        /* \"#utility.yul\":9795:9813   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9788:9818   */\n      mstore\n        /* \"#utility.yul\":9854:9888   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":9834:9852   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9827:9889   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":9905:9923   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9898:9941   */\n      mstore\n        /* \"#utility.yul\":9958:9977   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1479:1574  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_82\n        /* \"#utility.yul\":9574:9983   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1479:1574  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_226:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1584:1658  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1406:1665  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2057:2322  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_202:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2165:2194  _upgradeTo(newImplementation) */\n      tag_231\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2176:2193  newImplementation */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2165:2175  _upgradeTo */\n      tag_232\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2165:2194  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_231:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2222:2223  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2212  data */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2219  data.length */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2223  data.length > 0 */\n      gt\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2236  data.length > 0 || forceCall */\n      dup1\n      tag_233\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2227:2236  forceCall */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2236  data.length > 0 || forceCall */\n    tag_233:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2204:2316  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2252:2305  Address.functionDelegateCall(newImplementation, data) */\n      tag_134\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2281:2298  newImplementation */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2300:2304  data */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2252:2280  Address.functionDelegateCall */\n      tag_236\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2252:2305  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1771:1923  function _upgradeTo(address newImplementation) internal {... */\n    tag_232:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1837:1874  _setImplementation(newImplementation) */\n      tag_239\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1856:1873  newImplementation */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1837:1855  _setImplementation */\n      tag_187\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1837:1874  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_239:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1889:1916  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1771:1923  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_236:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6757:6769  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_241\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6809:6815  target */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6817:6821  data */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6788:6808  functionDelegateCall */\n      tag_242\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_241:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n    tag_242:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7199:7211  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7224:7236  bool success */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7238:7261  bytes memory returndata */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7265:7271  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7265:7284  target.delegatecall */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7285:7289  data */\n      dup6\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n      mload(0x40)\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_248\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_247)\n    tag_248:\n      0x60\n      swap2\n      pop\n    tag_247:\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_249\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7334:7340  target */\n      dup7\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7342:7349  success */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7351:7361  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7363:7375  errorMessage */\n      dup8\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n      tag_250\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_249:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_250:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_255\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10737:10739   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10719:10740   */\n      mstore\n        /* \"#utility.yul\":10776:10778   */\n      0x1d\n        /* \"#utility.yul\":10756:10774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10749:10779   */\n      mstore\n        /* \"#utility.yul\":10815:10846   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":10795:10813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10788:10847   */\n      mstore\n        /* \"#utility.yul\":10864:10882   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_82\n        /* \"#utility.yul\":10535:10888   */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n    tag_255:\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8201:8218  return returndata */\n      jump(tag_259)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_252:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_259\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_260\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_259:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_260:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      dup2\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      iszero\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      tag_262\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_262:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:723   */\n    tag_26:\n        /* \"#utility.yul\":398:400   */\n      0x60\n        /* \"#utility.yul\":383:401   */\n      dup2\n      add\n        /* \"#utility.yul\":387:396   */\n      dup2\n        /* \"#utility.yul\":478:484   */\n      dup4\n        /* \"#utility.yul\":356:360   */\n      0x00\n        /* \"#utility.yul\":512:717   */\n    tag_271:\n        /* \"#utility.yul\":526:530   */\n      0x03\n        /* \"#utility.yul\":523:524   */\n      dup2\n        /* \"#utility.yul\":520:531   */\n      lt\n        /* \"#utility.yul\":512:717   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":589:602   */\n      dup2\n      mload\n        /* \"#utility.yul\":604:608   */\n      0xff\n        /* \"#utility.yul\":585:609   */\n      and\n        /* \"#utility.yul\":573:610   */\n      dup4\n      mstore\n        /* \"#utility.yul\":633:637   */\n      0x20\n        /* \"#utility.yul\":657:669   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":692:707   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":546:547   */\n      0x01\n        /* \"#utility.yul\":539:548   */\n      add\n        /* \"#utility.yul\":512:717   */\n      jump(tag_271)\n    tag_273:\n        /* \"#utility.yul\":516:519   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":222:723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":728:859   */\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":803:834   */\n      dup2\n      and\n        /* \"#utility.yul\":793:835   */\n      dup2\n      eq\n        /* \"#utility.yul\":783:853   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":849:850   */\n      0x00\n        /* \"#utility.yul\":846:847   */\n      dup1\n        /* \"#utility.yul\":839:851   */\n      revert\n        /* \"#utility.yul\":864:1111   */\n    tag_30:\n        /* \"#utility.yul\":923:929   */\n      0x00\n        /* \"#utility.yul\":976:978   */\n      0x20\n        /* \"#utility.yul\":964:973   */\n      dup3\n        /* \"#utility.yul\":955:962   */\n      dup5\n        /* \"#utility.yul\":951:974   */\n      sub\n        /* \"#utility.yul\":947:979   */\n      slt\n        /* \"#utility.yul\":944:996   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":992:993   */\n      0x00\n        /* \"#utility.yul\":989:990   */\n      dup1\n        /* \"#utility.yul\":982:994   */\n      revert\n        /* \"#utility.yul\":944:996   */\n    tag_277:\n        /* \"#utility.yul\":1031:1040   */\n      dup2\n        /* \"#utility.yul\":1018:1041   */\n      calldataload\n        /* \"#utility.yul\":1050:1081   */\n      tag_241\n        /* \"#utility.yul\":1075:1080   */\n      dup2\n        /* \"#utility.yul\":1050:1081   */\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":1556:1683   */\n    tag_95:\n        /* \"#utility.yul\":1617:1627   */\n      0x4e487b71\n        /* \"#utility.yul\":1612:1615   */\n      0xe0\n        /* \"#utility.yul\":1608:1628   */\n      shl\n        /* \"#utility.yul\":1605:1606   */\n      0x00\n        /* \"#utility.yul\":1598:1629   */\n      mstore\n        /* \"#utility.yul\":1648:1652   */\n      0x41\n        /* \"#utility.yul\":1645:1646   */\n      0x04\n        /* \"#utility.yul\":1638:1653   */\n      mstore\n        /* \"#utility.yul\":1672:1676   */\n      0x24\n        /* \"#utility.yul\":1669:1670   */\n      0x00\n        /* \"#utility.yul\":1662:1677   */\n      revert\n        /* \"#utility.yul\":1688:2744   */\n    tag_44:\n        /* \"#utility.yul\":1765:1771   */\n      0x00\n        /* \"#utility.yul\":1773:1779   */\n      dup1\n        /* \"#utility.yul\":1826:1828   */\n      0x40\n        /* \"#utility.yul\":1814:1823   */\n      dup4\n        /* \"#utility.yul\":1805:1812   */\n      dup6\n        /* \"#utility.yul\":1801:1824   */\n      sub\n        /* \"#utility.yul\":1797:1829   */\n      slt\n        /* \"#utility.yul\":1794:1846   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1842:1843   */\n      0x00\n        /* \"#utility.yul\":1839:1840   */\n      dup1\n        /* \"#utility.yul\":1832:1844   */\n      revert\n        /* \"#utility.yul\":1794:1846   */\n    tag_283:\n        /* \"#utility.yul\":1881:1890   */\n      dup3\n        /* \"#utility.yul\":1868:1891   */\n      calldataload\n        /* \"#utility.yul\":1900:1931   */\n      tag_284\n        /* \"#utility.yul\":1925:1930   */\n      dup2\n        /* \"#utility.yul\":1900:1931   */\n      tag_266\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1950:1955   */\n      swap2\n      pop\n        /* \"#utility.yul\":2006:2008   */\n      0x20\n        /* \"#utility.yul\":1991:2009   */\n      dup4\n      add\n        /* \"#utility.yul\":1978:2010   */\n      calldataload\n        /* \"#utility.yul\":2029:2047   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2059:2073   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2056:2090   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2083:2084   */\n      dup1\n        /* \"#utility.yul\":2076:2088   */\n      revert\n        /* \"#utility.yul\":2056:2090   */\n    tag_285:\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2113:2122   */\n      dup6\n        /* \"#utility.yul\":2109:2131   */\n      add\n        /* \"#utility.yul\":2099:2131   */\n      swap2\n      pop\n        /* \"#utility.yul\":2169:2176   */\n      dup6\n        /* \"#utility.yul\":2162:2166   */\n      0x1f\n        /* \"#utility.yul\":2158:2160   */\n      dup4\n        /* \"#utility.yul\":2154:2167   */\n      add\n        /* \"#utility.yul\":2150:2177   */\n      slt\n        /* \"#utility.yul\":2140:2195   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2191:2192   */\n      0x00\n        /* \"#utility.yul\":2188:2189   */\n      dup1\n        /* \"#utility.yul\":2181:2193   */\n      revert\n        /* \"#utility.yul\":2140:2195   */\n    tag_286:\n        /* \"#utility.yul\":2227:2229   */\n      dup2\n        /* \"#utility.yul\":2214:2230   */\n      calldataload\n        /* \"#utility.yul\":2249:2251   */\n      dup2\n        /* \"#utility.yul\":2245:2247   */\n      dup2\n        /* \"#utility.yul\":2242:2252   */\n      gt\n        /* \"#utility.yul\":2239:2275   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2255:2273   */\n      tag_288\n      tag_95\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2330:2332   */\n      0x40\n        /* \"#utility.yul\":2324:2333   */\n      mload\n        /* \"#utility.yul\":2298:2300   */\n      0x1f\n        /* \"#utility.yul\":2384:2397   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2380:2402   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2404:2406   */\n      0x3f\n        /* \"#utility.yul\":2376:2407   */\n      add\n        /* \"#utility.yul\":2372:2412   */\n      and\n        /* \"#utility.yul\":2360:2413   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2428:2446   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2448:2470   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2425:2471   */\n      or\n        /* \"#utility.yul\":2422:2494   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":2474:2492   */\n      tag_290\n      tag_95\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2514:2524   */\n      dup2\n        /* \"#utility.yul\":2510:2512   */\n      0x40\n        /* \"#utility.yul\":2503:2525   */\n      mstore\n        /* \"#utility.yul\":2549:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2547   */\n      dup2\n        /* \"#utility.yul\":2534:2552   */\n      mstore\n        /* \"#utility.yul\":2589:2596   */\n      dup9\n        /* \"#utility.yul\":2584:2586   */\n      0x20\n        /* \"#utility.yul\":2579:2581   */\n      dup5\n        /* \"#utility.yul\":2575:2577   */\n      dup8\n        /* \"#utility.yul\":2571:2582   */\n      add\n        /* \"#utility.yul\":2567:2587   */\n      add\n        /* \"#utility.yul\":2564:2597   */\n      gt\n        /* \"#utility.yul\":2561:2614   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":2610:2611   */\n      0x00\n        /* \"#utility.yul\":2607:2608   */\n      dup1\n        /* \"#utility.yul\":2600:2612   */\n      revert\n        /* \"#utility.yul\":2561:2614   */\n    tag_291:\n        /* \"#utility.yul\":2666:2668   */\n      dup3\n        /* \"#utility.yul\":2661:2663   */\n      0x20\n        /* \"#utility.yul\":2657:2659   */\n      dup7\n        /* \"#utility.yul\":2653:2664   */\n      add\n        /* \"#utility.yul\":2648:2650   */\n      0x20\n        /* \"#utility.yul\":2640:2646   */\n      dup4\n        /* \"#utility.yul\":2636:2651   */\n      add\n        /* \"#utility.yul\":2623:2669   */\n      calldatacopy\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2706:2708   */\n      0x20\n        /* \"#utility.yul\":2701:2703   */\n      dup5\n        /* \"#utility.yul\":2693:2699   */\n      dup4\n        /* \"#utility.yul\":2689:2704   */\n      add\n        /* \"#utility.yul\":2685:2709   */\n      add\n        /* \"#utility.yul\":2678:2713   */\n      mstore\n        /* \"#utility.yul\":2732:2738   */\n      dup1\n        /* \"#utility.yul\":2722:2738   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1688:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2931:3411   */\n    tag_54:\n        /* \"#utility.yul\":3032:3038   */\n      0x00\n        /* \"#utility.yul\":3040:3046   */\n      dup1\n        /* \"#utility.yul\":3048:3054   */\n      0x00\n        /* \"#utility.yul\":3101:3103   */\n      0x60\n        /* \"#utility.yul\":3089:3098   */\n      dup5\n        /* \"#utility.yul\":3080:3087   */\n      dup7\n        /* \"#utility.yul\":3076:3099   */\n      sub\n        /* \"#utility.yul\":3072:3104   */\n      slt\n        /* \"#utility.yul\":3069:3121   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":3117:3118   */\n      0x00\n        /* \"#utility.yul\":3114:3115   */\n      dup1\n        /* \"#utility.yul\":3107:3119   */\n      revert\n        /* \"#utility.yul\":3069:3121   */\n    tag_294:\n        /* \"#utility.yul\":3156:3165   */\n      dup4\n        /* \"#utility.yul\":3143:3166   */\n      calldataload\n        /* \"#utility.yul\":3175:3206   */\n      tag_295\n        /* \"#utility.yul\":3200:3205   */\n      dup2\n        /* \"#utility.yul\":3175:3206   */\n      tag_266\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3225:3230   */\n      swap3\n      pop\n        /* \"#utility.yul\":3282:3284   */\n      0x20\n        /* \"#utility.yul\":3267:3285   */\n      dup5\n      add\n        /* \"#utility.yul\":3254:3286   */\n      calldataload\n        /* \"#utility.yul\":3295:3328   */\n      tag_296\n        /* \"#utility.yul\":3254:3286   */\n      dup2\n        /* \"#utility.yul\":3295:3328   */\n      tag_266\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2931:3411   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3347:3354   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3401:3403   */\n      0x40\n        /* \"#utility.yul\":3386:3404   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3373:3405   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2931:3411   */\n      jump\t// out\n        /* \"#utility.yul\":3416:3731   */\n    tag_59:\n        /* \"#utility.yul\":3484:3490   */\n      0x00\n        /* \"#utility.yul\":3492:3498   */\n      dup1\n        /* \"#utility.yul\":3545:3547   */\n      0x40\n        /* \"#utility.yul\":3533:3542   */\n      dup4\n        /* \"#utility.yul\":3524:3531   */\n      dup6\n        /* \"#utility.yul\":3520:3543   */\n      sub\n        /* \"#utility.yul\":3516:3548   */\n      slt\n        /* \"#utility.yul\":3513:3565   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3561:3562   */\n      0x00\n        /* \"#utility.yul\":3558:3559   */\n      dup1\n        /* \"#utility.yul\":3551:3563   */\n      revert\n        /* \"#utility.yul\":3513:3565   */\n    tag_298:\n        /* \"#utility.yul\":3597:3606   */\n      dup3\n        /* \"#utility.yul\":3584:3607   */\n      calldataload\n        /* \"#utility.yul\":3574:3607   */\n      swap2\n      pop\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup4\n        /* \"#utility.yul\":3642:3660   */\n      add\n        /* \"#utility.yul\":3629:3661   */\n      calldataload\n        /* \"#utility.yul\":3670:3701   */\n      tag_299\n        /* \"#utility.yul\":3695:3700   */\n      dup2\n        /* \"#utility.yul\":3670:3701   */\n      tag_266\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3720:3725   */\n      dup1\n        /* \"#utility.yul\":3710:3725   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3416:3731   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3736:4144   */\n    tag_83:\n        /* \"#utility.yul\":3938:3940   */\n      0x20\n        /* \"#utility.yul\":3920:3941   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3977:3979   */\n      0x2c\n        /* \"#utility.yul\":3957:3975   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3950:3980   */\n      mstore\n        /* \"#utility.yul\":4016:4050   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":4011:4013   */\n      0x40\n        /* \"#utility.yul\":3996:4014   */\n      dup3\n      add\n        /* \"#utility.yul\":3989:4051   */\n      mstore\n      shl(0xa2, 0x19195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":4082:4084   */\n      0x60\n        /* \"#utility.yul\":4067:4085   */\n      dup3\n      add\n        /* \"#utility.yul\":4060:4102   */\n      mstore\n        /* \"#utility.yul\":4134:4137   */\n      0x80\n        /* \"#utility.yul\":4119:4138   */\n      add\n      swap1\n        /* \"#utility.yul\":3736:4144   */\n      jump\t// out\n        /* \"#utility.yul\":4149:4557   */\n    tag_88:\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4333:4354   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4390:4392   */\n      0x2c\n        /* \"#utility.yul\":4370:4388   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4363:4393   */\n      mstore\n        /* \"#utility.yul\":4429:4463   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":4424:4426   */\n      0x40\n        /* \"#utility.yul\":4409:4427   */\n      dup3\n      add\n        /* \"#utility.yul\":4402:4464   */\n      mstore\n      shl(0xa0, 0x6163746976652070726f7879)\n        /* \"#utility.yul\":4495:4497   */\n      0x60\n        /* \"#utility.yul\":4480:4498   */\n      dup3\n      add\n        /* \"#utility.yul\":4473:4515   */\n      mstore\n        /* \"#utility.yul\":4547:4550   */\n      0x80\n        /* \"#utility.yul\":4532:4551   */\n      add\n      swap1\n        /* \"#utility.yul\":4149:4557   */\n      jump\t// out\n        /* \"#utility.yul\":5402:5653   */\n    tag_130:\n        /* \"#utility.yul\":5472:5478   */\n      0x00\n        /* \"#utility.yul\":5525:5527   */\n      0x20\n        /* \"#utility.yul\":5513:5522   */\n      dup3\n        /* \"#utility.yul\":5504:5511   */\n      dup5\n        /* \"#utility.yul\":5500:5523   */\n      sub\n        /* \"#utility.yul\":5496:5528   */\n      slt\n        /* \"#utility.yul\":5493:5545   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":5541:5542   */\n      0x00\n        /* \"#utility.yul\":5538:5539   */\n      dup1\n        /* \"#utility.yul\":5531:5543   */\n      revert\n        /* \"#utility.yul\":5493:5545   */\n    tag_305:\n        /* \"#utility.yul\":5573:5582   */\n      dup2\n        /* \"#utility.yul\":5567:5583   */\n      mload\n        /* \"#utility.yul\":5592:5623   */\n      tag_241\n        /* \"#utility.yul\":5617:5622   */\n      dup2\n        /* \"#utility.yul\":5592:5623   */\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":6738:6922   */\n    tag_158:\n        /* \"#utility.yul\":6808:6814   */\n      0x00\n        /* \"#utility.yul\":6861:6863   */\n      0x20\n        /* \"#utility.yul\":6849:6858   */\n      dup3\n        /* \"#utility.yul\":6840:6847   */\n      dup5\n        /* \"#utility.yul\":6836:6859   */\n      sub\n        /* \"#utility.yul\":6832:6864   */\n      slt\n        /* \"#utility.yul\":6829:6881   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":6877:6878   */\n      0x00\n        /* \"#utility.yul\":6874:6875   */\n      dup1\n        /* \"#utility.yul\":6867:6879   */\n      revert\n        /* \"#utility.yul\":6829:6881   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":6900:6916   */\n      mload\n      swap2\n        /* \"#utility.yul\":6738:6922   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8164:8826   */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8443:8458   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":8425:8459   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8495:8510   */\n      dup6\n      and\n        /* \"#utility.yul\":8490:8492   */\n      0x20\n        /* \"#utility.yul\":8475:8493   */\n      dup3\n      add\n        /* \"#utility.yul\":8468:8511   */\n      mstore\n        /* \"#utility.yul\":8542:8544   */\n      0x40\n        /* \"#utility.yul\":8527:8545   */\n      dup2\n      add\n        /* \"#utility.yul\":8520:8554   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8590:8593   */\n      0x80\n        /* \"#utility.yul\":8585:8587   */\n      0x60\n        /* \"#utility.yul\":8570:8588   */\n      dup3\n      add\n        /* \"#utility.yul\":8563:8594   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8610:8629   */\n      dup2\n      add\n        /* \"#utility.yul\":8603:8638   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":8368:8372   */\n      0x00\n        /* \"#utility.yul\":8631:8637   */\n      dup3\n        /* \"#utility.yul\":8681:8687   */\n      dup5\n        /* \"#utility.yul\":8405:8408   */\n      0xa0\n        /* \"#utility.yul\":8660:8679   */\n      dup5\n      add\n        /* \"#utility.yul\":8647:8696   */\n      calldatacopy\n        /* \"#utility.yul\":8746:8747   */\n      0x00\n        /* \"#utility.yul\":8740:8743   */\n      0xa0\n        /* \"#utility.yul\":8731:8737   */\n      dup5\n        /* \"#utility.yul\":8720:8729   */\n      dup5\n        /* \"#utility.yul\":8716:8738   */\n      add\n        /* \"#utility.yul\":8712:8744   */\n      add\n        /* \"#utility.yul\":8705:8748   */\n      mstore\n        /* \"#utility.yul\":8816:8819   */\n      0xa0\n        /* \"#utility.yul\":8809:8811   */\n      0x1f\n        /* \"#utility.yul\":8805:8812   */\n      not\n        /* \"#utility.yul\":8800:8802   */\n      0x1f\n        /* \"#utility.yul\":8792:8798   */\n      dup6\n        /* \"#utility.yul\":8788:8803   */\n      add\n        /* \"#utility.yul\":8784:8813   */\n      and\n        /* \"#utility.yul\":8773:8782   */\n      dup4\n        /* \"#utility.yul\":8769:8814   */\n      add\n        /* \"#utility.yul\":8765:8820   */\n      add\n        /* \"#utility.yul\":8757:8820   */\n      swap1\n      pop\n        /* \"#utility.yul\":8164:8826   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8831:9108   */\n    tag_217:\n        /* \"#utility.yul\":8898:8904   */\n      0x00\n        /* \"#utility.yul\":8951:8953   */\n      0x20\n        /* \"#utility.yul\":8939:8948   */\n      dup3\n        /* \"#utility.yul\":8930:8937   */\n      dup5\n        /* \"#utility.yul\":8926:8949   */\n      sub\n        /* \"#utility.yul\":8922:8954   */\n      slt\n        /* \"#utility.yul\":8919:8971   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8967:8968   */\n      0x00\n        /* \"#utility.yul\":8964:8965   */\n      dup1\n        /* \"#utility.yul\":8957:8969   */\n      revert\n        /* \"#utility.yul\":8919:8971   */\n    tag_318:\n        /* \"#utility.yul\":8999:9008   */\n      dup2\n        /* \"#utility.yul\":8993:9009   */\n      mload\n        /* \"#utility.yul\":9052:9057   */\n      dup1\n        /* \"#utility.yul\":9045:9058   */\n      iszero\n        /* \"#utility.yul\":9038:9059   */\n      iszero\n        /* \"#utility.yul\":9031:9036   */\n      dup2\n        /* \"#utility.yul\":9028:9060   */\n      eq\n        /* \"#utility.yul\":9018:9078   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":9074:9075   */\n      0x00\n        /* \"#utility.yul\":9071:9072   */\n      dup1\n        /* \"#utility.yul\":9064:9076   */\n      revert\n        /* \"#utility.yul\":9988:10238   */\n    tag_267:\n        /* \"#utility.yul\":10073:10074   */\n      0x00\n        /* \"#utility.yul\":10083:10196   */\n    tag_323:\n        /* \"#utility.yul\":10097:10103   */\n      dup4\n        /* \"#utility.yul\":10094:10095   */\n      dup2\n        /* \"#utility.yul\":10091:10104   */\n      lt\n        /* \"#utility.yul\":10083:10196   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":10173:10184   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10167:10185   */\n      mload\n        /* \"#utility.yul\":10154:10165   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10147:10186   */\n      mstore\n        /* \"#utility.yul\":10119:10121   */\n      0x20\n        /* \"#utility.yul\":10112:10122   */\n      add\n        /* \"#utility.yul\":10083:10196   */\n      jump(tag_323)\n    tag_325:\n      pop\n      pop\n        /* \"#utility.yul\":10230:10231   */\n      0x00\n        /* \"#utility.yul\":10212:10228   */\n      swap2\n      add\n        /* \"#utility.yul\":10205:10232   */\n      mstore\n        /* \"#utility.yul\":9988:10238   */\n      jump\t// out\n        /* \"#utility.yul\":10243:10530   */\n    tag_245:\n        /* \"#utility.yul\":10372:10375   */\n      0x00\n        /* \"#utility.yul\":10410:10416   */\n      dup3\n        /* \"#utility.yul\":10404:10417   */\n      mload\n        /* \"#utility.yul\":10426:10492   */\n      tag_327\n        /* \"#utility.yul\":10485:10491   */\n      dup2\n        /* \"#utility.yul\":10480:10483   */\n      dup5\n        /* \"#utility.yul\":10473:10477   */\n      0x20\n        /* \"#utility.yul\":10465:10471   */\n      dup8\n        /* \"#utility.yul\":10461:10478   */\n      add\n        /* \"#utility.yul\":10426:10492   */\n      tag_267\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10508:10524   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":10243:10530   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10893:11289   */\n    tag_265:\n        /* \"#utility.yul\":11042:11044   */\n      0x20\n        /* \"#utility.yul\":11031:11040   */\n      dup2\n        /* \"#utility.yul\":11024:11045   */\n      mstore\n        /* \"#utility.yul\":11005:11009   */\n      0x00\n        /* \"#utility.yul\":11074:11080   */\n      dup3\n        /* \"#utility.yul\":11068:11081   */\n      mload\n        /* \"#utility.yul\":11117:11123   */\n      dup1\n        /* \"#utility.yul\":11112:11114   */\n      0x20\n        /* \"#utility.yul\":11101:11110   */\n      dup5\n        /* \"#utility.yul\":11097:11115   */\n      add\n        /* \"#utility.yul\":11090:11124   */\n      mstore\n        /* \"#utility.yul\":11133:11212   */\n      tag_330\n        /* \"#utility.yul\":11205:11211   */\n      dup2\n        /* \"#utility.yul\":11200:11202   */\n      0x40\n        /* \"#utility.yul\":11189:11198   */\n      dup6\n        /* \"#utility.yul\":11185:11203   */\n      add\n        /* \"#utility.yul\":11180:11182   */\n      0x20\n        /* \"#utility.yul\":11172:11178   */\n      dup8\n        /* \"#utility.yul\":11168:11183   */\n      add\n        /* \"#utility.yul\":11133:11212   */\n      tag_267\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11273:11275   */\n      0x1f\n        /* \"#utility.yul\":11252:11267   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":11248:11277   */\n      and\n        /* \"#utility.yul\":11233:11278   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":11280:11282   */\n      0x40\n        /* \"#utility.yul\":11229:11283   */\n      add\n      swap3\n        /* \"#utility.yul\":10893:11289   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa264697066735822122020cfd720c4bde774e8f09bf9367e906cb1b55d660ae8952018d7ffe52c36f9dc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3496": {
									"entryPoint": null,
									"id": 3496,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_663": {
									"entryPoint": 34,
									"id": 663,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:608:41",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:41",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:229:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:41",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:41"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:34:41",
																		"type": "",
																		"value": "Initializable: contract is initi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "360:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:41"
																	},
																	{
																		"hexValue": "616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "365:9:41",
																		"type": "",
																		"value": "alizing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:37:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:37:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "384:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "407:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "384:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:41",
														"type": ""
													}
												],
												"src": "14:403:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:87:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "529:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "586:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "594:4:41",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:17:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:36:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "564:36:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "488:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "510:4:41",
														"type": ""
													}
												],
												"src": "422:184:41"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 41,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611379610118600039600081816102ce01528181610317015281816103b6015281816103f6015261048901526113796000f3fe6080604052600436106100c25760003560e01c806352d1902d1161007f5780639848ba51116100595780639848ba51146101fc578063af7b2fed14610230578063c66485b214610264578063d70754ec1461028457600080fd5b806352d1902d146101995780636133f985146101bc57806389bb4145146101dc57600080fd5b806304f3bcec146100c75780632ae9c600146101045780633659cfe6146101265780633f15457f146101485780634162169f146101685780634f1ef28614610186575b600080fd5b3480156100d357600080fd5b506067546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011057600080fd5b5061011961029a565b6040516100fb9190610f94565b34801561013257600080fd5b50610146610141366004610fdd565b6102c4565b005b34801561015457600080fd5b506065546100e7906001600160a01b031681565b34801561017457600080fd5b506033546001600160a01b03166100e7565b610146610194366004611010565b6103ac565b3480156101a557600080fd5b506101ae61047c565b6040519081526020016100fb565b3480156101c857600080fd5b506101466101d73660046110d4565b61052f565b3480156101e857600080fd5b506101466101f7366004611115565b610724565b34801561020857600080fd5b506101ae7fbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c1481565b34801561023c57600080fd5b506101ae7fa1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff81565b34801561027057600080fd5b5061014661027f366004610fdd565b61099b565b34801561029057600080fd5b506101ae60665481565b6102a2610f76565b5060408051606081018252600181526004602082015260009181019190915290565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103155760405162461bcd60e51b815260040161030c90611145565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661035e6000805160206112fd833981519152546001600160a01b031690565b6001600160a01b0316146103845760405162461bcd60e51b815260040161030c90611191565b61038d81610a34565b604080516000808252602082019092526103a991839190610a6d565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103f45760405162461bcd60e51b815260040161030c90611145565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661043d6000805160206112fd833981519152546001600160a01b031690565b6001600160a01b0316146104635760405162461bcd60e51b815260040161030c90611191565b61046c82610a34565b61047882826001610a6d565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461051c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161030c565b506000805160206112fd83398151915290565b600054610100900460ff161580801561054f5750600054600160ff909116105b806105695750303b158015610569575060005460ff166001145b6105cc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161030c565b6000805460ff1916600117905580156105ef576000805461ff0019166101001790555b6105f884610bdd565b606580546001600160a01b0319166001600160a01b0385169081179091556066839055604051630178b8bf60e01b81526004810184905260009190630178b8bf90602401602060405180830381865afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d91906111dd565b90506001600160a01b0381166106b857604051630d7097c560e11b8152600481018490526001600160a01b038216602482015260440161030c565b606780546001600160a01b0319166001600160a01b0392909216919091179055801561071e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6033547fbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c1490610762906001600160a01b031630335b84600036610c6a565b600060665484604051602001610782929190918252602082015260400190565b60408051808303601f190181529082905280516020909101206065546302571be360e01b8352600483018290529092506000916001600160a01b03909116906302571be390602401602060405180830381865afa1580156107e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b91906111dd565b90506001600160a01b038116156108465760405162fcad5d60e11b8152600481018390526001600160a01b038216602482015260440161030c565b6065546066546040516306ab592360e01b81526004810191909152602481018790523060448201526001600160a01b03909116906306ab5923906064016020604051808303816000875af11580156108a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c691906111fa565b50606554606754604051630c4b7b8560e11b8152600481018590526001600160a01b039182166024820152911690631896f70a90604401600060405180830381600087803b15801561091757600080fd5b505af115801561092b573d6000803e3d6000fd5b505060675460405162d5fa2b60e81b8152600481018690526001600160a01b038881166024830152909116925063d5fa2b009150604401600060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b505050505050505050565b6033547fbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14906109d4906001600160a01b03163033610759565b6001600160a01b038216610a1157606654604051630d7097c560e11b815260048101919091526001600160a01b038316602482015260440161030c565b50606780546001600160a01b0319166001600160a01b0392909216919091179055565b6033547fa1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff90610478906001600160a01b03163033610759565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610aa557610aa083610d26565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610aff575060408051601f3d908101601f19168201909252610afc918101906111fa565b60015b610b625760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161030c565b6000805160206112fd8339815191528114610bd15760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161030c565b50610aa0838383610dc2565b600054610100900460ff16610c485760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161030c565b603380546001600160a01b0319166001600160a01b0392909216919091179055565b604051637ef7c88360e11b81526001600160a01b0387169063fdef910690610c9e9088908890889088908890600401611213565b602060405180830381865afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf9190611267565b610d1e57604051630cb6f8ed60e21b81526001600160a01b0380881660048301528087166024830152851660448201526064810184905260840161030c565b505050505050565b6001600160a01b0381163b610d935760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161030c565b6000805160206112fd83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610dcb83610de7565b600082511180610dd85750805b15610aa05761071e8383610e27565b610df081610d26565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610e4c838360405180606001604052806027815260200161131d60279139610e53565b9392505050565b6060600080856001600160a01b031685604051610e7091906112ad565b600060405180830381855af49150503d8060008114610eab576040519150601f19603f3d011682016040523d82523d6000602084013e610eb0565b606091505b5091509150610ec186838387610ecb565b9695505050505050565b60608315610f3a578251600003610f33576001600160a01b0385163b610f335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161030c565b5081610f44565b610f448383610f4c565b949350505050565b815115610f5c5781518083602001fd5b8060405162461bcd60e51b815260040161030c91906112c9565b60405180606001604052806003906020820280368337509192915050565b60608101818360005b6003811015610fbf57815160ff16835260209283019290910190600101610f9d565b50505092915050565b6001600160a01b03811681146103a957600080fd5b600060208284031215610fef57600080fd5b8135610e4c81610fc8565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561102357600080fd5b823561102e81610fc8565b9150602083013567ffffffffffffffff8082111561104b57600080fd5b818501915085601f83011261105f57600080fd5b81358181111561107157611071610ffa565b604051601f8201601f19908116603f0116810190838211818310171561109957611099610ffa565b816040528281528860208487010111156110b257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000606084860312156110e957600080fd5b83356110f481610fc8565b9250602084013561110481610fc8565b929592945050506040919091013590565b6000806040838503121561112857600080fd5b82359150602083013561113a81610fc8565b809150509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156111ef57600080fd5b8151610e4c81610fc8565b60006020828403121561120c57600080fd5b5051919050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60006020828403121561127957600080fd5b81518015158114610e4c57600080fd5b60005b838110156112a457818101518382015260200161128c565b50506000910152565b600082516112bf818460208701611289565b9190910192915050565b60208152600082518060208401526112e8816040850160208701611289565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122020cfd720c4bde774e8f09bf9367e906cb1b55d660ae8952018d7ffe52c36f9dc64736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D PUSH2 0x22 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1379 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2CE ADD MSTORE DUP2 DUP2 PUSH2 0x317 ADD MSTORE DUP2 DUP2 PUSH2 0x3B6 ADD MSTORE DUP2 DUP2 PUSH2 0x3F6 ADD MSTORE PUSH2 0x489 ADD MSTORE PUSH2 0x1379 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x9848BA51 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9848BA51 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xAF7B2FED EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xC66485B2 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xD70754EC EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x6133F985 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x89BB4145 EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F3BCEC EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x2AE9C600 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x186 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x67 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xF94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH32 0xA1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x66 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xF76 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x38D DUP2 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3A9 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x43D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x46C DUP3 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x478 DUP3 DUP3 PUSH1 0x1 PUSH2 0xA6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x54F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x569 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x5F8 DUP5 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x66 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x178B8BF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH4 0x178B8BF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x659 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD7097C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 SWAP1 PUSH2 0x762 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER JUMPDEST DUP5 PUSH1 0x0 CALLDATASIZE PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 SLOAD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x782 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x65 SLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0xFCAD5D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6AB5923 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6AB5923 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x11FA JUMP JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC4B7B85 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH3 0xD5FA2B PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xD5FA2B00 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 SWAP1 PUSH2 0x9D4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA11 JUMPI PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD7097C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x30C JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH32 0xA1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF SWAP1 PUSH2 0x478 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x759 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA5 JUMPI PUSH2 0xAA0 DUP4 PUSH2 0xD26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAFF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAFC SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST POP PUSH2 0xAA0 DUP4 DUP4 DUP4 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7EF7C883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFDEF9106 SWAP1 PUSH2 0xC9E SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB6F8ED PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDCB DUP4 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xDD8 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xAA0 JUMPI PUSH2 0x71E DUP4 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE4C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x131D PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xE53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xE70 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEC1 DUP7 DUP4 DUP4 DUP8 PUSH2 0xECB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF3A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0xF33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30C JUMP JUMPDEST POP DUP2 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0xF44 DUP4 DUP4 PUSH2 0xF4C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xF5C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xFBF JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF9D JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE4C DUP2 PUSH2 0xFC8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x102E DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x104B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1071 JUMPI PUSH2 0x1071 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1099 JUMPI PUSH2 0x1099 PUSH2 0xFFA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x10F4 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1104 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x113A DUP2 PUSH2 0xFC8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE4C DUP2 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12A4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x128C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x12BF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12E8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122020 0xCF 0xD7 KECCAK256 0xC4 0xBD 0xE7 PUSH21 0xE8F09BF9367E906CB1B55D660AE8952018D7FFE52C CALLDATASIZE 0xF9 0xDC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1173:4700:38:-:0;;;1088:4:29;1045:48;;2612:55:38;;;;;;;;;-1:-1:-1;2637:22:38;:20;:22::i;:::-;1173:4700;;5939:280:6;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:6;;216:2:41;5998:66:6;;;198:21:41;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:41;;;338:37;392:19;;5998:66:6;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:6;6140:15;6125:30;;;;;;6174:28;;564:36:41;;;6174:28:6;;552:2:41;537:18;6174:28:6;;;;;;;6074:139;5939:280::o;422:184:41:-;1173:4700:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REGISTER_ENS_SUBDOMAIN_PERMISSION_ID_3464": {
									"entryPoint": null,
									"id": 3464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_REGISTRAR_PERMISSION_ID_3458": {
									"entryPoint": null,
									"id": 3458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__DaoAuthorizableUpgradeable_init_3009": {
									"entryPoint": 3037,
									"id": 3009,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_auth_3095": {
									"entryPoint": 3178,
									"id": 3095,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3558": {
									"entryPoint": 2612,
									"id": 3558,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getImplementation_1989": {
									"entryPoint": null,
									"id": 1989,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgData_1184": {
									"entryPoint": null,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_msgSender_1175": {
									"entryPoint": null,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2718": {
									"entryPoint": 3916,
									"id": 2718,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_2013": {
									"entryPoint": 3366,
									"id": 2013,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_2111": {
									"entryPoint": 2669,
									"id": 2111,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_2058": {
									"entryPoint": 3522,
									"id": 2058,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_2028": {
									"entryPoint": 3559,
									"id": 2028,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@dao_3019": {
									"entryPoint": null,
									"id": 3019,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ens_3468": {
									"entryPoint": null,
									"id": 3468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_2606": {
									"entryPoint": 3623,
									"id": 2606,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_2635": {
									"entryPoint": 3667,
									"id": 2635,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_2751": {
									"entryPoint": null,
									"id": 2751,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_2762": {
									"entryPoint": null,
									"id": 2762,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_3547": {
									"entryPoint": 1327,
									"id": 3547,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_2407": {
									"entryPoint": null,
									"id": 2407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@node_3471": {
									"entryPoint": null,
									"id": 3471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@protocolVersion_3692": {
									"entryPoint": 666,
									"id": 3692,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_2339": {
									"entryPoint": 1148,
									"id": 2339,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerSubnode_3626": {
									"entryPoint": 1828,
									"id": 3626,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@resolver_3474": {
									"entryPoint": null,
									"id": 3474,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDefaultResolver_3653": {
									"entryPoint": 2459,
									"id": 3653,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_2382": {
									"entryPoint": 940,
									"id": 2382,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_2361": {
									"entryPoint": 708,
									"id": 2361,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2674": {
									"entryPoint": 3787,
									"id": 2674,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 4112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IDAO_$2980t_contract$_ENS_$148t_bytes32": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ENS_$148__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDAO_$2980__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4090,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11291:41",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:41",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:41",
														"type": ""
													}
												],
												"src": "14:203:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "365:358:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "375:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "387:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "398:2:41",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "383:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "375:4:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "410:20:41",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "421:9:41"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "414:3:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "439:16:41",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "446:9:41"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "439:3:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "464:20:41",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "478:6:41"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "468:6:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "493:10:41",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "502:1:41",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "497:1:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "559:158:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "580:3:41"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "595:6:41"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "589:5:41"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "589:13:41"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "604:4:41",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "585:3:41"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "585:24:41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "573:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "573:37:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "573:37:41"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "623:14:41",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "633:4:41",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "627:2:41",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "650:19:41",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "661:3:41"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "666:2:41"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "657:3:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "657:12:41"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "650:3:41"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "682:25:41",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "696:6:41"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "704:2:41"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:15:41"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "682:6:41"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "523:1:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:4:41",
																		"type": "",
																		"value": "0x03"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "520:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:11:41"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "532:18:41",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "534:14:41",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "543:1:41"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "546:1:41",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "539:3:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "539:9:41"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "534:1:41"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "516:3:41",
																"statements": []
															},
															"src": "512:205:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "334:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "345:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "356:4:41",
														"type": ""
													}
												],
												"src": "222:501:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:86:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "837:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "846:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "849:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "796:5:41"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "807:5:41"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "822:3:41",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "827:1:41",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "818:3:41"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "818:11:41"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "831:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "814:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "814:19:41"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "803:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "803:31:41"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "793:2:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "793:42:41"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:50:41"
															},
															"nodeType": "YulIf",
															"src": "783:70:41"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "762:5:41",
														"type": ""
													}
												],
												"src": "728:131:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:177:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "980:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "992:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "982:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "982:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "955:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "964:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "976:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "947:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:32:41"
															},
															"nodeType": "YulIf",
															"src": "944:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1005:36:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1031:9:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1018:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1018:23:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1009:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1075:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1050:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1090:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1100:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "900:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "911:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "923:6:41",
														"type": ""
													}
												],
												"src": "864:247:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1228:102:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1238:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1250:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1261:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1238:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1280:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1295:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1311:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1316:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1307:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1307:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1320:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1291:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1291:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1273:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:51:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1273:51:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ENS_$148__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1197:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1208:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1219:4:41",
														"type": ""
													}
												],
												"src": "1116:214:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:102:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1459:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1459:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1516:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1532:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1537:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1528:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1528:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1541:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1512:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1512:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:51:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:51:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDAO_$2980__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1418:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1429:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1440:4:41",
														"type": ""
													}
												],
												"src": "1335:216:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1588:95:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:41",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1612:3:41",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1617:10:41",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:20:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:31:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:41",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1648:4:41",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:15:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:15:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1669:1:41",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:4:41",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1662:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:15:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1662:15:41"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1556:127:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1784:960:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1830:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1839:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1832:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1832:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1832:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1805:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1801:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1801:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:32:41"
															},
															"nodeType": "YulIf",
															"src": "1794:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1855:36:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1881:9:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1868:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:23:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1859:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1925:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1900:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1900:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1940:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1950:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1964:46:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1995:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2006:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1991:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1991:18:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1978:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:32:41"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1968:6:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2019:28:41",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2029:18:41",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2023:2:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2074:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2076:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2076:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2062:6:41"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2070:2:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2059:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2059:14:41"
															},
															"nodeType": "YulIf",
															"src": "2056:34:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2099:32:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2113:9:41"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:41"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:22:41"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2103:2:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2179:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2191:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2181:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2181:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2181:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2158:2:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2162:4:41",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:13:41"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2169:7:41"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:27:41"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:35:41"
															},
															"nodeType": "YulIf",
															"src": "2140:55:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2204:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2227:2:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2214:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2214:16:41"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2208:2:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2253:22:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2255:16:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2255:18:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2255:18:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2245:2:41"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2249:2:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2242:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:10:41"
															},
															"nodeType": "YulIf",
															"src": "2239:36:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2284:17:41",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2298:2:41",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2294:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:7:41"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2288:2:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2310:23:41",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2330:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2324:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:9:41"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2314:6:41",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2342:71:41",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2364:6:41"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2388:2:41"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2392:4:41",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2384:3:41"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2384:13:41"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2399:2:41"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2380:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2380:22:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2404:2:41",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2376:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2376:31:41"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2409:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2372:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2372:40:41"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2360:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2360:53:41"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2346:10:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2472:22:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2474:16:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2474:18:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2474:18:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2431:10:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2443:2:41"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2428:2:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2428:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2451:10:41"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2463:6:41"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2448:2:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:22:41"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2425:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:46:41"
															},
															"nodeType": "YulIf",
															"src": "2422:72:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2510:2:41",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2514:10:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2503:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:22:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2503:22:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2541:6:41"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2549:2:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2534:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:18:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2534:18:41"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2607:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2610:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2600:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2600:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2575:2:41"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2579:2:41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2571:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2571:11:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2584:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2567:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2567:20:41"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2589:7:41"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2564:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:33:41"
															},
															"nodeType": "YulIf",
															"src": "2561:53:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2648:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2636:15:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2657:2:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2661:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2653:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2653:11:41"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2666:2:41"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2623:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:46:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2623:46:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:41"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2701:2:41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2689:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2689:15:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2706:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:24:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2711:1:41",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:35:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2678:35:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2722:16:41",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2732:6:41"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1742:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1753:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1765:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1773:6:41",
														"type": ""
													}
												],
												"src": "1688:1056:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2850:76:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2860:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2872:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2883:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2868:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2860:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2902:9:41"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2913:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:25:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2895:25:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2819:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2830:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2841:4:41",
														"type": ""
													}
												],
												"src": "2749:177:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3059:352:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3105:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3114:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3117:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3107:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3107:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3107:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3080:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3076:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3101:2:41",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3072:32:41"
															},
															"nodeType": "YulIf",
															"src": "3069:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3130:36:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3156:9:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3143:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:23:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3134:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3200:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3175:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3175:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3175:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3215:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3225:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3215:6:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3239:47:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3271:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3282:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3267:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3267:18:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3254:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3254:32:41"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3243:7:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3320:7:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3295:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:33:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3295:33:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3337:17:41",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3347:7:41"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:41"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3363:42:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3401:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3386:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3386:18:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3373:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:32:41"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3363:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IDAO_$2980t_contract$_ENS_$148t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3009:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3020:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3032:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3040:6:41",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3048:6:41",
														"type": ""
													}
												],
												"src": "2931:480:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3503:228:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3549:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3558:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3561:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3551:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3551:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3551:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3524:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3533:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3520:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3545:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3516:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:32:41"
															},
															"nodeType": "YulIf",
															"src": "3513:52:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3574:33:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3597:9:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3584:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:23:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3574:6:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3616:45:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:41"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3629:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:32:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3620:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3695:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3670:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3670:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3710:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3720:5:41"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3461:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3472:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3484:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3492:6:41",
														"type": ""
													}
												],
												"src": "3416:315:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3910:234:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3927:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3938:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3920:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3961:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3972:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3957:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3977:2:41",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3950:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4000:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4011:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3996:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3996:18:41"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4016:34:41",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3989:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "3989:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3989:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4071:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4082:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4067:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4067:18:41"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4087:14:41",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4060:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:42:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4060:42:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4111:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4123:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4134:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4119:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4119:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4111:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3887:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3901:4:41",
														"type": ""
													}
												],
												"src": "3736:408:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4323:234:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4333:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4374:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4385:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4370:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4390:2:41",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4363:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4363:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4424:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4409:18:41"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4429:34:41",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4402:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4402:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4484:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4495:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4480:18:41"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4500:14:41",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4473:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:42:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4473:42:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4524:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4300:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4314:4:41",
														"type": ""
													}
												],
												"src": "4149:408:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4736:246:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4753:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4746:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4746:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4787:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4798:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4783:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4783:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:41",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:18:41"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4842:34:41",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4815:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4897:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4908:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4893:18:41"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4913:26:41",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4886:54:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4886:54:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4949:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4961:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4972:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "4957:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4949:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4713:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4727:4:41",
														"type": ""
													}
												],
												"src": "4562:420:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:236:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5178:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5171:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5171:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5212:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5223:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5208:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5208:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5228:2:41",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5201:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5201:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5251:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5262:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5247:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5247:18:41"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5267:34:41",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5240:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5240:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5240:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5322:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5333:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5318:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5318:18:41"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5338:16:41",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5311:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:44:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5311:44:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5138:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5152:4:41",
														"type": ""
													}
												],
												"src": "4987:410:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5483:170:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5529:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5538:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5541:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5531:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5531:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5531:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5504:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5500:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5500:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5496:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:32:41"
															},
															"nodeType": "YulIf",
															"src": "5493:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5554:29:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5573:9:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5567:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5567:16:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5558:5:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5617:5:41"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5592:24:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5592:31:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5632:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5642:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5632:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5449:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5460:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5472:6:41",
														"type": ""
													}
												],
												"src": "5402:251:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5787:145:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5797:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5809:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5820:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5805:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5797:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5839:9:41"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5850:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5832:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:25:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5832:25:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5877:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5888:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5873:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5873:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5897:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5913:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5918:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5909:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5909:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5922:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5905:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5905:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5893:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5893:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5866:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:60:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5866:60:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5748:9:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5759:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5767:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5778:4:41",
														"type": ""
													}
												],
												"src": "5658:274:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6044:87:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6054:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6066:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6054:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6096:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6111:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6119:4:41",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6107:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6107:17:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:36:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6089:36:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6013:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6024:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6035:4:41",
														"type": ""
													}
												],
												"src": "5937:194:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6283:100:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6300:3:41"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6305:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6293:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6293:19:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6293:19:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6332:3:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6337:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6328:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6328:12:41"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6342:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6321:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:28:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6321:28:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6358:19:41",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6369:3:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6374:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6365:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6365:12:41"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6358:3:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6251:3:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6256:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6264:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6275:3:41",
														"type": ""
													}
												],
												"src": "6136:247:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6545:188:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6555:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6567:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6578:2:41",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6563:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6563:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6555:4:41"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6597:9:41"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6608:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:25:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6590:25:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6635:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6646:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6631:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6631:18:41"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6651:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6624:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6624:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6678:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6689:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6674:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6674:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "6698:6:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6714:3:41",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6719:1:41",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6710:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6710:11:41"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6723:1:41",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6706:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6706:19:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6694:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6694:32:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6667:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:60:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6667:60:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6498:9:41",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6509:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6517:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6525:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6536:4:41",
														"type": ""
													}
												],
												"src": "6388:345:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6819:103:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6865:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6874:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6877:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6867:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6867:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6867:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6840:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6849:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6836:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6836:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6832:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6832:32:41"
															},
															"nodeType": "YulIf",
															"src": "6829:52:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6890:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6906:9:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6900:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "6900:16:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6890:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6785:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6796:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6808:6:41",
														"type": ""
													}
												],
												"src": "6738:184:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7101:236:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7118:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7129:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7111:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7111:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7111:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7152:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7163:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7148:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7148:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7168:2:41",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7141:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7141:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7191:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7202:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7187:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7187:18:41"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7207:34:41",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7180:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7180:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7262:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7273:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7258:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7258:18:41"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7278:16:41",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7251:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7251:44:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7251:44:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7304:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7316:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7327:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7312:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7078:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7092:4:41",
														"type": ""
													}
												],
												"src": "6927:410:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7516:231:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7533:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7544:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7526:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7526:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7526:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7567:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7578:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7563:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7563:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7583:2:41",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7556:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7556:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7606:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7617:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7602:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7602:18:41"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7622:34:41",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7595:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7595:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7677:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7688:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7673:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7673:18:41"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7693:11:41",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7666:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7666:39:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7666:39:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7714:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7726:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7737:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7722:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7714:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7493:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7507:4:41",
														"type": ""
													}
												],
												"src": "7342:405:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7926:233:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7943:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7954:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7936:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7936:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7936:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7977:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7988:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7973:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7973:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7993:2:41",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8016:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8027:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8012:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8012:18:41"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8032:34:41",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8005:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8005:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8005:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8087:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8098:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8083:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8083:18:41"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8103:13:41",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8076:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:41:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8076:41:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8126:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8138:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8149:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8134:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8134:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8126:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7903:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7917:4:41",
														"type": ""
													}
												],
												"src": "7752:407:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8377:449:41",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8387:29:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8405:3:41",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8410:1:41",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8401:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8401:11:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8414:1:41",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:19:41"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8391:2:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8432:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8447:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8455:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8443:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8443:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8479:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8490:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8475:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8475:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8499:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8507:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8495:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8495:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8468:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8468:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8468:43:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8531:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8542:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8527:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8527:18:41"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8547:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8520:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8520:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8574:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8585:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8570:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8590:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8563:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:31:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8563:31:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8614:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8625:3:41",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8610:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8610:19:41"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8631:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8603:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8603:35:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8603:35:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8664:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8675:3:41",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8660:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8660:19:41"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8681:6:41"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8689:6:41"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8647:12:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8647:49:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8647:49:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8720:9:41"
																					},
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "8731:6:41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8716:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8716:22:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8740:3:41",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8712:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8712:32:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8746:1:41",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8705:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8705:43:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8757:63:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8773:9:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value4",
																								"nodeType": "YulIdentifier",
																								"src": "8792:6:41"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8800:2:41",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8788:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8788:15:41"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8809:2:41",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8805:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8805:7:41"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8784:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8784:29:41"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8769:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8769:45:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8816:3:41",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8765:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8765:55:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8757:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8314:9:41",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8325:6:41",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8333:6:41",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8341:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8349:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8357:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8368:4:41",
														"type": ""
													}
												],
												"src": "8164:662:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8909:199:41",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8955:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8964:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8967:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8957:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8957:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8957:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8930:7:41"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8939:9:41"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8926:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8926:23:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8951:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:32:41"
															},
															"nodeType": "YulIf",
															"src": "8919:52:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8980:29:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8999:9:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8993:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "8993:16:41"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8984:5:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9062:16:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9071:1:41",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9074:1:41",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9064:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9064:12:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9064:12:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9031:5:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9052:5:41"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9045:6:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9045:13:41"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9038:6:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9038:21:41"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9028:2:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9028:32:41"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9021:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9021:40:41"
															},
															"nodeType": "YulIf",
															"src": "9018:60:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9087:15:41",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9097:5:41"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9087:6:41"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8875:9:41",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8886:7:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8898:6:41",
														"type": ""
													}
												],
												"src": "8831:277:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9298:271:41",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9308:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9320:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9331:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9316:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9316:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9308:4:41"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9344:29:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9362:3:41",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9367:1:41",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9358:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9358:11:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9371:1:41",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:19:41"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9348:2:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9389:9:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9404:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9412:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9400:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9400:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9382:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9382:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9382:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9436:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9447:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9432:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9432:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9456:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9464:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9452:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9452:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9425:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9425:43:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9488:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9499:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9484:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9484:18:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "9508:6:41"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9516:2:41"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9504:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9504:15:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9477:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9477:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9477:43:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9540:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9551:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9536:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9536:18:41"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9556:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9529:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9529:34:41"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9243:9:41",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9254:6:41",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9262:6:41",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9270:6:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9278:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9289:4:41",
														"type": ""
													}
												],
												"src": "9113:456:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9748:235:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9765:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9776:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9758:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9758:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9758:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9799:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9810:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9795:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9795:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9815:2:41",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9838:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9849:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9834:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9834:18:41"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9854:34:41",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9827:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:62:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9827:62:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9909:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9920:2:41",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9905:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9905:18:41"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9925:15:41",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9898:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9898:43:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9898:43:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9950:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9962:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9973:3:41",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9958:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "9958:19:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9950:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9725:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9739:4:41",
														"type": ""
													}
												],
												"src": "9574:409:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10054:184:41",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10064:10:41",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10073:1:41",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10068:1:41",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10133:63:41",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10158:3:41"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10163:1:41"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10154:3:41"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10154:11:41"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10177:3:41"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10182:1:41"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10173:3:41"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10173:11:41"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10167:5:41"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10167:18:41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10147:6:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10147:39:41"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10147:39:41"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10094:1:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10097:6:41"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10091:2:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:13:41"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10105:19:41",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10107:15:41",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10116:1:41"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10119:2:41",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10112:3:41"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10112:10:41"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10107:1:41"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10087:3:41",
																"statements": []
															},
															"src": "10083:113:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10216:3:41"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10221:6:41"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10212:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10212:16:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10230:1:41",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10205:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10205:27:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10205:27:41"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10032:3:41",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10037:3:41",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10042:6:41",
														"type": ""
													}
												],
												"src": "9988:250:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10380:150:41",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10390:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10410:6:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10404:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10404:13:41"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10394:6:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10465:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10473:4:41",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10461:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10461:17:41"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10480:3:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10485:6:41"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10426:34:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10426:66:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10426:66:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10501:23:41",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10512:3:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10517:6:41"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:16:41"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10501:3:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10356:3:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10361:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10372:3:41",
														"type": ""
													}
												],
												"src": "10243:287:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10709:179:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10726:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10719:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10719:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10719:21:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:18:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10776:2:41",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:30:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:30:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10799:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10810:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10795:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10795:18:41"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10815:31:41",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10788:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10788:59:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10788:59:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10856:26:41",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10868:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10879:2:41",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10864:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "10864:18:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10856:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10686:9:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10700:4:41",
														"type": ""
													}
												],
												"src": "10535:353:41"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11014:275:41",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11031:9:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11042:2:41",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11024:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11024:21:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11024:21:41"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11054:27:41",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11074:6:41"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11068:5:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11068:13:41"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11058:6:41",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11101:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11112:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11097:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11097:18:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11117:6:41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11090:6:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11090:34:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11090:34:41"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11172:6:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11180:2:41",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11168:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11168:15:41"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11189:9:41"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11200:2:41",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11185:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11185:18:41"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11205:6:41"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11133:34:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11133:79:41"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11133:79:41"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11221:62:41",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11237:9:41"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "11256:6:41"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11264:2:41",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11252:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11252:15:41"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11273:2:41",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11269:3:41"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11269:7:41"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "11248:3:41"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11248:29:41"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11233:3:41"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11233:45:41"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11280:2:41",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11229:3:41"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:54:41"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11221:4:41"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10983:9:41",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10994:6:41",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11005:4:41",
														"type": ""
													}
												],
												"src": "10893:396:41"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint8_$3_memory_ptr__to_t_array$_t_uint8_$3_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x03) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xff))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ENS_$148__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IDAO_$2980__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_IDAO_$2980t_contract$_ENS_$148t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), value4)\n        calldatacopy(add(headStart, 160), value3, value4)\n        mstore(add(add(headStart, value4), 160), 0)\n        tail := add(add(headStart, and(add(value4, 31), not(31))), 160)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32__to_t_address_t_address_t_address_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 41,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2289": [
									{
										"length": 32,
										"start": 718
									},
									{
										"length": 32,
										"start": 791
									},
									{
										"length": 32,
										"start": 950
									},
									{
										"length": 32,
										"start": 1014
									},
									{
										"length": 32,
										"start": 1161
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100c25760003560e01c806352d1902d1161007f5780639848ba51116100595780639848ba51146101fc578063af7b2fed14610230578063c66485b214610264578063d70754ec1461028457600080fd5b806352d1902d146101995780636133f985146101bc57806389bb4145146101dc57600080fd5b806304f3bcec146100c75780632ae9c600146101045780633659cfe6146101265780633f15457f146101485780634162169f146101685780634f1ef28614610186575b600080fd5b3480156100d357600080fd5b506067546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011057600080fd5b5061011961029a565b6040516100fb9190610f94565b34801561013257600080fd5b50610146610141366004610fdd565b6102c4565b005b34801561015457600080fd5b506065546100e7906001600160a01b031681565b34801561017457600080fd5b506033546001600160a01b03166100e7565b610146610194366004611010565b6103ac565b3480156101a557600080fd5b506101ae61047c565b6040519081526020016100fb565b3480156101c857600080fd5b506101466101d73660046110d4565b61052f565b3480156101e857600080fd5b506101466101f7366004611115565b610724565b34801561020857600080fd5b506101ae7fbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c1481565b34801561023c57600080fd5b506101ae7fa1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff81565b34801561027057600080fd5b5061014661027f366004610fdd565b61099b565b34801561029057600080fd5b506101ae60665481565b6102a2610f76565b5060408051606081018252600181526004602082015260009181019190915290565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103155760405162461bcd60e51b815260040161030c90611145565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661035e6000805160206112fd833981519152546001600160a01b031690565b6001600160a01b0316146103845760405162461bcd60e51b815260040161030c90611191565b61038d81610a34565b604080516000808252602082019092526103a991839190610a6d565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103f45760405162461bcd60e51b815260040161030c90611145565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661043d6000805160206112fd833981519152546001600160a01b031690565b6001600160a01b0316146104635760405162461bcd60e51b815260040161030c90611191565b61046c82610a34565b61047882826001610a6d565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461051c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161030c565b506000805160206112fd83398151915290565b600054610100900460ff161580801561054f5750600054600160ff909116105b806105695750303b158015610569575060005460ff166001145b6105cc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161030c565b6000805460ff1916600117905580156105ef576000805461ff0019166101001790555b6105f884610bdd565b606580546001600160a01b0319166001600160a01b0385169081179091556066839055604051630178b8bf60e01b81526004810184905260009190630178b8bf90602401602060405180830381865afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d91906111dd565b90506001600160a01b0381166106b857604051630d7097c560e11b8152600481018490526001600160a01b038216602482015260440161030c565b606780546001600160a01b0319166001600160a01b0392909216919091179055801561071e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6033547fbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c1490610762906001600160a01b031630335b84600036610c6a565b600060665484604051602001610782929190918252602082015260400190565b60408051808303601f190181529082905280516020909101206065546302571be360e01b8352600483018290529092506000916001600160a01b03909116906302571be390602401602060405180830381865afa1580156107e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b91906111dd565b90506001600160a01b038116156108465760405162fcad5d60e11b8152600481018390526001600160a01b038216602482015260440161030c565b6065546066546040516306ab592360e01b81526004810191909152602481018790523060448201526001600160a01b03909116906306ab5923906064016020604051808303816000875af11580156108a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c691906111fa565b50606554606754604051630c4b7b8560e11b8152600481018590526001600160a01b039182166024820152911690631896f70a90604401600060405180830381600087803b15801561091757600080fd5b505af115801561092b573d6000803e3d6000fd5b505060675460405162d5fa2b60e81b8152600481018690526001600160a01b038881166024830152909116925063d5fa2b009150604401600060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b505050505050505050565b6033547fbbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14906109d4906001600160a01b03163033610759565b6001600160a01b038216610a1157606654604051630d7097c560e11b815260048101919091526001600160a01b038316602482015260440161030c565b50606780546001600160a01b0319166001600160a01b0392909216919091179055565b6033547fa1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff90610478906001600160a01b03163033610759565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610aa557610aa083610d26565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610aff575060408051601f3d908101601f19168201909252610afc918101906111fa565b60015b610b625760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161030c565b6000805160206112fd8339815191528114610bd15760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161030c565b50610aa0838383610dc2565b600054610100900460ff16610c485760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161030c565b603380546001600160a01b0319166001600160a01b0392909216919091179055565b604051637ef7c88360e11b81526001600160a01b0387169063fdef910690610c9e9088908890889088908890600401611213565b602060405180830381865afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf9190611267565b610d1e57604051630cb6f8ed60e21b81526001600160a01b0380881660048301528087166024830152851660448201526064810184905260840161030c565b505050505050565b6001600160a01b0381163b610d935760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161030c565b6000805160206112fd83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610dcb83610de7565b600082511180610dd85750805b15610aa05761071e8383610e27565b610df081610d26565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610e4c838360405180606001604052806027815260200161131d60279139610e53565b9392505050565b6060600080856001600160a01b031685604051610e7091906112ad565b600060405180830381855af49150503d8060008114610eab576040519150601f19603f3d011682016040523d82523d6000602084013e610eb0565b606091505b5091509150610ec186838387610ecb565b9695505050505050565b60608315610f3a578251600003610f33576001600160a01b0385163b610f335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161030c565b5081610f44565b610f448383610f4c565b949350505050565b815115610f5c5781518083602001fd5b8060405162461bcd60e51b815260040161030c91906112c9565b60405180606001604052806003906020820280368337509192915050565b60608101818360005b6003811015610fbf57815160ff16835260209283019290910190600101610f9d565b50505092915050565b6001600160a01b03811681146103a957600080fd5b600060208284031215610fef57600080fd5b8135610e4c81610fc8565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561102357600080fd5b823561102e81610fc8565b9150602083013567ffffffffffffffff8082111561104b57600080fd5b818501915085601f83011261105f57600080fd5b81358181111561107157611071610ffa565b604051601f8201601f19908116603f0116810190838211818310171561109957611099610ffa565b816040528281528860208487010111156110b257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000606084860312156110e957600080fd5b83356110f481610fc8565b9250602084013561110481610fc8565b929592945050506040919091013590565b6000806040838503121561112857600080fd5b82359150602083013561113a81610fc8565b809150509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156111ef57600080fd5b8151610e4c81610fc8565b60006020828403121561120c57600080fd5b5051919050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60006020828403121561127957600080fd5b81518015158114610e4c57600080fd5b60005b838110156112a457818101518382015260200161128c565b50506000910152565b600082516112bf818460208701611289565b9190910192915050565b60208152600082518060208401526112e8816040850160208701611289565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122020cfd720c4bde774e8f09bf9367e906cb1b55d660ae8952018d7ffe52c36f9dc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x9848BA51 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9848BA51 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xAF7B2FED EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xC66485B2 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xD70754EC EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x6133F985 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x89BB4145 EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F3BCEC EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x2AE9C600 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x186 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x67 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xF94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH32 0xA1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x66 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xF76 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x38D DUP2 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3A9 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x43D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x46C DUP3 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x478 DUP3 DUP3 PUSH1 0x1 PUSH2 0xA6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x54F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x569 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x5F8 DUP5 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x66 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x178B8BF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH4 0x178B8BF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x659 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD7097C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 SWAP1 PUSH2 0x762 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER JUMPDEST DUP5 PUSH1 0x0 CALLDATASIZE PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 SLOAD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x782 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x65 SLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0xFCAD5D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6AB5923 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6AB5923 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x11FA JUMP JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC4B7B85 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH3 0xD5FA2B PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xD5FA2B00 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH32 0xBBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14 SWAP1 PUSH2 0x9D4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA11 JUMPI PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD7097C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x30C JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH32 0xA1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF SWAP1 PUSH2 0x478 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER PUSH2 0x759 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA5 JUMPI PUSH2 0xAA0 DUP4 PUSH2 0xD26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAFF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAFC SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST POP PUSH2 0xAA0 DUP4 DUP4 DUP4 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7EF7C883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFDEF9106 SWAP1 PUSH2 0xC9E SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCB6F8ED PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDCB DUP4 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xDD8 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xAA0 JUMPI PUSH2 0x71E DUP4 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE4C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x131D PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xE53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xE70 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEC1 DUP7 DUP4 DUP4 DUP8 PUSH2 0xECB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF3A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0xF33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30C JUMP JUMPDEST POP DUP2 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0xF44 DUP4 DUP4 PUSH2 0xF4C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xF5C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xFBF JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF9D JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE4C DUP2 PUSH2 0xFC8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x102E DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x104B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1071 JUMPI PUSH2 0x1071 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1099 JUMPI PUSH2 0x1099 PUSH2 0xFFA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x10F4 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1104 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x113A DUP2 PUSH2 0xFC8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE4C DUP2 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12A4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x128C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x12BF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12E8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122020 0xCF 0xD7 KECCAK256 0xC4 0xBD 0xE7 PUSH21 0xE8F09BF9367E906CB1B55D660AE8952018D7FFE52C CALLDATASIZE 0xF9 0xDC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1173:4700:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1986:23;;;;;;;;;;-1:-1:-1;1986:23:38;;;;-1:-1:-1;;;;;1986:23:38;;;;;;-1:-1:-1;;;;;178:32:41;;;160:51;;148:2;133:18;1986:23:38;;;;;;;;656:100:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3143:195:29:-;;;;;;;;;;-1:-1:-1;3143:195:29;;;;;:::i;:::-;;:::i;:::-;;1771:14:38;;;;;;;;;;-1:-1:-1;1771:14:38;;;;-1:-1:-1;;;;;1771:14:38;;;1239:72:33;;;;;;;;;;-1:-1:-1;1299:4:33;;-1:-1:-1;;;;;1299:4:33;1239:72;;3657:220:29;;;;;;:::i;:::-;;:::i;2762:131::-;;;;;;;;;;;;;:::i;:::-;;;2895:25:41;;;2883:2;2868:18;2762:131:29;2749:177:41;3276:420:38;;;;;;;;;;-1:-1:-1;3276:420:38;;;;;:::i;:::-;;:::i;4545:558::-;;;;;;;;;;-1:-1:-1;4545:558:38;;;;;:::i;:::-;;:::i;1601:118::-;;;;;;;;;;;;1673:46;1601:118;;1368:108;;;;;;;;;;;;1435:41;1368:108;;5278:279;;;;;;;;;;-1:-1:-1;5278:279:38;;;;;:::i;:::-;;:::i;1874:19::-;;;;;;;;;;;;;;;;656:100:40;704:15;;:::i;:::-;-1:-1:-1;732:16:40;;;;;;;;740:1;732:16;;743:1;732:16;;;;-1:-1:-1;732:16:40;;;;;;;;656:100::o;3143:195:29:-;-1:-1:-1;;;;;1654:6:29;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:29;;;;;;;:::i;:::-;;;;;;;;;1751:6;-1:-1:-1;;;;;1727:30:29;:20;-1:-1:-1;;;;;;;;;;;1254:54:27;-1:-1:-1;;;;;1254:54:27;;1175:140;1727:20:29;-1:-1:-1;;;;;1727:30:29;;1719:87;;;;-1:-1:-1;;;1719:87:29;;;;;;;:::i;:::-;3224:36:::1;3242:17;3224;:36::i;:::-;3311:12;::::0;;3321:1:::1;3311:12:::0;;;::::1;::::0;::::1;::::0;;;3270:61:::1;::::0;3292:17;;3311:12;3270:21:::1;:61::i;:::-;3143:195:::0;:::o;3657:220::-;-1:-1:-1;;;;;1654:6:29;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:29;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:29;:20;-1:-1:-1;;;;;;;;;;;1254:54:27;-1:-1:-1;;;;;1254:54:27;;1175:140;1727:20:29;-1:-1:-1;;;;;1727:30:29;;1719:87;;;;-1:-1:-1;;;1719:87:29;;;;;;;:::i;:::-;3772:36:::1;3790:17;3772;:36::i;:::-;3818:52;3840:17;3859:4;3865;3818:21;:52::i;:::-;3657:220:::0;;:::o;2762:131::-;2840:7;2080:4;-1:-1:-1;;;;;2089:6:29;2072:23;;2064:92;;;;-1:-1:-1;;;2064:92:29;;4764:2:41;2064:92:29;;;4746:21:41;4803:2;4783:18;;;4776:30;4842:34;4822:18;;;4815:62;4913:26;4893:18;;;4886:54;4957:19;;2064:92:29;4562:420:41;2064:92:29;-1:-1:-1;;;;;;;;;;;;2762:131:29;:::o;3276:420:38:-;3279:19:6;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:6;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:6;1713:19:8;:23;;;3387:66:6;;-1:-1:-1;3436:12:6;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:6;;5189:2:41;3325:201:6;;;5171:21:41;5228:2;5208:18;;;5201:30;5267:34;5247:18;;;5240:62;-1:-1:-1;;;5318:18:41;;;5311:44;5372:19;;3325:201:6;4987:410:41;3325:201:6;3536:12;:16;;-1:-1:-1;;3536:16:6;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:6;;;;;3562:65;3372:47:38::1;3406:12;3372:33;:47::i;:::-;3432:3;:10:::0;;-1:-1:-1;;;;;;3432:10:38::1;-1:-1:-1::0;;;;;3432:10:38;::::1;::::0;;::::1;::::0;;;3453:4:::1;:12:::0;;;3501:19:::1;::::0;-1:-1:-1;;;3501:19:38;;::::1;::::0;::::1;2895:25:41::0;;;-1:-1:-1;;3432:10:38;3501:12:::1;::::0;2868:18:41;;3501:19:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3478:42:::0;-1:-1:-1;;;;;;3537:26:38;::::1;3533:120;;3587:54;::::0;-1:-1:-1;;;3587:54:38;;::::1;::::0;::::1;5832:25:41::0;;;-1:-1:-1;;;;;5893:32:41;;5873:18;;;5866:60;5805:18;;3587:54:38::1;5658:274:41::0;3533:120:38::1;3665:8;:23:::0;;-1:-1:-1;;;;;;3665:23:38::1;-1:-1:-1::0;;;;;3665:23:38;;;::::1;::::0;;;::::1;::::0;;3647:99:6;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:6;;;3721:14;;-1:-1:-1;6089:36:41;;3721:14:6;;6077:2:41;6062:18;3721:14:6;;;;;;;3647:99;3269:483;3276:420:38;;;:::o;4545:558::-;1662:4:33;;1673:46:38;;1656:67:33;;-1:-1:-1;;;;;1662:4:33;1676;929:10:9;1683:12:33;1697:13;1003:14:9;;1656:5:33;:67::i;:::-;4698:15:38::1;4743:4;;4749:6;4726:30;;;;;;;;6293:19:41::0;;;6337:2;6328:12;;6321:28;6374:2;6365:12;;6136:247;4726:30:38::1;;::::0;;;;::::1;-1:-1:-1::0;;4726:30:38;;;;;;;4716:41;;4726:30:::1;4716:41:::0;;::::1;::::0;4791:3:::1;::::0;-1:-1:-1;;;4791:18:38;;::::1;::::0;::::1;2895:25:41::0;;;4716:41:38;;-1:-1:-1;4768:20:38::1;::::0;-1:-1:-1;;;;;4791:3:38;;::::1;::::0;:9:::1;::::0;2868:18:41;;4791::38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4768:41:::0;-1:-1:-1;;;;;;4826:26:38;::::1;::::0;4822:106:::1;;4876:40;::::0;-1:-1:-1;;;4876:40:38;;::::1;::::0;::::1;5832:25:41::0;;;-1:-1:-1;;;;;5893:32:41;;5873:18;;;5866:60;5805:18;;4876:40:38::1;5658:274:41::0;4822:106:38::1;4940:3;::::0;4960:4:::1;::::0;4940:48:::1;::::0;-1:-1:-1;;;4940:48:38;;::::1;::::0;::::1;6590:25:41::0;;;;6631:18;;;6624:34;;;4982:4:38::1;6674:18:41::0;;;6667:60;-1:-1:-1;;;;;4940:3:38;;::::1;::::0;:19:::1;::::0;6563:18:41;;4940:48:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4999:3:38::1;::::0;5024:8:::1;::::0;4999:34:::1;::::0;-1:-1:-1;;;4999:34:38;;::::1;::::0;::::1;5832:25:41::0;;;-1:-1:-1;;;;;5024:8:38;;::::1;5873:18:41::0;;;5866:60;4999:3:38;::::1;::::0;:15:::1;::::0;5805:18:41;;4999:34:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5053:8:38::1;::::0;5044:51:::1;::::0;-1:-1:-1;;;5044:51:38;;::::1;::::0;::::1;5832:25:41::0;;;-1:-1:-1;;;;;5893:32:41;;;5873:18;;;5866:60;5053:8:38;;::::1;::::0;-1:-1:-1;5044:26:38::1;::::0;-1:-1:-1;5805:18:41;;5044:51:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4687:416;;4545:558:::0;;;:::o;5278:279::-;1662:4:33;;1673:46:38;;1656:67:33;;-1:-1:-1;;;;;1662:4:33;1676;929:10:9;1683:12:33;850:96:9;1656:67:33;-1:-1:-1;;;;;5408:23:38;::::1;5404:113;;5478:4;::::0;5455:50:::1;::::0;-1:-1:-1;;;5455:50:38;;::::1;::::0;::::1;5832:25:41::0;;;;-1:-1:-1;;;;;5893:32:41;;5873:18;;;5866:60;5805:18;;5455:50:38::1;5658:274:41::0;5404:113:38::1;-1:-1:-1::0;5529:8:38::1;:20:::0;;-1:-1:-1;;;;;;5529:20:38::1;-1:-1:-1::0;;;;;5529:20:38;;;::::1;::::0;;;::::1;::::0;;5278:279::o;4044:118::-;1662:4:33;;1435:41:38;;1656:67:33;;-1:-1:-1;;;;;1662:4:33;1676;929:10:9;1683:12:33;850:96:9;2494:922:27;689:66;2910:48;;;2906:504;;;2974:37;2993:17;2974:18;:37::i;:::-;2494:922;;;:::o;2906:504::-;3064:17;-1:-1:-1;;;;;3046:50:27;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:52:27;;;;;;;;-1:-1:-1;;3046:52:27;;;;;;;;;;;;:::i;:::-;;;3042:291;;3262:56;;-1:-1:-1;;;3262:56:27;;7129:2:41;3262:56:27;;;7111:21:41;7168:2;7148:18;;;7141:30;7207:34;7187:18;;;7180:62;-1:-1:-1;;;7258:18:41;;;7251:44;7312:19;;3262:56:27;6927:410:41;3042:291:27;-1:-1:-1;;;;;;;;;;;3148:28:27;;3140:82;;;;-1:-1:-1;;;3140:82:27;;7544:2:41;3140:82:27;;;7526:21:41;7583:2;7563:18;;;7556:30;7622:34;7602:18;;;7595:62;-1:-1:-1;;;7673:18:41;;;7666:39;7722:19;;3140:82:27;7342:405:41;3140:82:27;3099:138;3346:53;3364:17;3383:4;3389:9;3346:17;:53::i;1043:110:33:-;5374:13:6;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:6;;7954:2:41;5366:69:6;;;7936:21:41;7993:2;7973:18;;;7966:30;8032:34;8012:18;;;8005:62;-1:-1:-1;;;8083:18:41;;;8076:41;8134:19;;5366:69:6;7752:407:41;5366:69:6;1134:4:33::1;:11:::0;;-1:-1:-1;;;;;;1134:11:33::1;-1:-1:-1::0;;;;;1134:11:33;;;::::1;::::0;;;::::1;::::0;;1043:110::o;1057:377:34:-;1203:54;;-1:-1:-1;;;1203:54:34;;-1:-1:-1;;;;;1203:18:34;;;;;:54;;1222:6;;1230:4;;1236:13;;1251:5;;;;1203:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1198:232;;1275:155;;-1:-1:-1;;;1275:155:34;;-1:-1:-1;;;;;9400:15:41;;;1275:155:34;;;9382:34:41;9452:15;;;9432:18;;;9425:43;9504:15;;9484:18;;;9477:43;9536:18;;;9529:34;;;9316:19;;1275:155:34;9113:456:41;1198:232:34;1057:377;;;;;;:::o;1406:259:27:-;-1:-1:-1;;;;;1713:19:8;;;1479:95:27;;;;-1:-1:-1;;;1479:95:27;;9776:2:41;1479:95:27;;;9758:21:41;9815:2;9795:18;;;9788:30;9854:34;9834:18;;;9827:62;-1:-1:-1;;;9905:18:41;;;9898:43;9958:19;;1479:95:27;9574:409:41;1479:95:27;-1:-1:-1;;;;;;;;;;;1584:74:27;;-1:-1:-1;;;;;;1584:74:27;-1:-1:-1;;;;;1584:74:27;;;;;;;;;;1406:259::o;2057:265::-;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;1771:152::-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:27;;;;;;;;1771:152;:::o;6674:198:30:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:30:o;7058:325::-;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:30;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:30:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:8;;;8113:60:30;;;;-1:-1:-1;;;8113:60:30;;10737:2:41;8113:60:30;;;10719:21:41;10776:2;10756:18;;;10749:30;10815:31;10795:18;;;10788:59;10864:18;;8113:60:30;10535:353:41;8113:60:30;-1:-1:-1;8208:10:30;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:30;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;222:501:41:-;398:2;383:18;;387:9;478:6;356:4;512:205;526:4;523:1;520:11;512:205;;;589:13;;604:4;585:24;573:37;;633:4;657:12;;;;692:15;;;;546:1;539:9;512:205;;;516:3;;;222:501;;;;:::o;728:131::-;-1:-1:-1;;;;;803:31:41;;793:42;;783:70;;849:1;846;839:12;864:247;923:6;976:2;964:9;955:7;951:23;947:32;944:52;;;992:1;989;982:12;944:52;1031:9;1018:23;1050:31;1075:5;1050:31;:::i;1556:127::-;1617:10;1612:3;1608:20;1605:1;1598:31;1648:4;1645:1;1638:15;1672:4;1669:1;1662:15;1688:1056;1765:6;1773;1826:2;1814:9;1805:7;1801:23;1797:32;1794:52;;;1842:1;1839;1832:12;1794:52;1881:9;1868:23;1900:31;1925:5;1900:31;:::i;:::-;1950:5;-1:-1:-1;2006:2:41;1991:18;;1978:32;2029:18;2059:14;;;2056:34;;;2086:1;2083;2076:12;2056:34;2124:6;2113:9;2109:22;2099:32;;2169:7;2162:4;2158:2;2154:13;2150:27;2140:55;;2191:1;2188;2181:12;2140:55;2227:2;2214:16;2249:2;2245;2242:10;2239:36;;;2255:18;;:::i;:::-;2330:2;2324:9;2298:2;2384:13;;-1:-1:-1;;2380:22:41;;;2404:2;2376:31;2372:40;2360:53;;;2428:18;;;2448:22;;;2425:46;2422:72;;;2474:18;;:::i;:::-;2514:10;2510:2;2503:22;2549:2;2541:6;2534:18;2589:7;2584:2;2579;2575;2571:11;2567:20;2564:33;2561:53;;;2610:1;2607;2600:12;2561:53;2666:2;2661;2657;2653:11;2648:2;2640:6;2636:15;2623:46;2711:1;2706:2;2701;2693:6;2689:15;2685:24;2678:35;2732:6;2722:16;;;;;;;1688:1056;;;;;:::o;2931:480::-;3032:6;3040;3048;3101:2;3089:9;3080:7;3076:23;3072:32;3069:52;;;3117:1;3114;3107:12;3069:52;3156:9;3143:23;3175:31;3200:5;3175:31;:::i;:::-;3225:5;-1:-1:-1;3282:2:41;3267:18;;3254:32;3295:33;3254:32;3295:33;:::i;:::-;2931:480;;3347:7;;-1:-1:-1;;;3401:2:41;3386:18;;;;3373:32;;2931:480::o;3416:315::-;3484:6;3492;3545:2;3533:9;3524:7;3520:23;3516:32;3513:52;;;3561:1;3558;3551:12;3513:52;3597:9;3584:23;3574:33;;3657:2;3646:9;3642:18;3629:32;3670:31;3695:5;3670:31;:::i;:::-;3720:5;3710:15;;;3416:315;;;;;:::o;3736:408::-;3938:2;3920:21;;;3977:2;3957:18;;;3950:30;4016:34;4011:2;3996:18;;3989:62;-1:-1:-1;;;4082:2:41;4067:18;;4060:42;4134:3;4119:19;;3736:408::o;4149:::-;4351:2;4333:21;;;4390:2;4370:18;;;4363:30;4429:34;4424:2;4409:18;;4402:62;-1:-1:-1;;;4495:2:41;4480:18;;4473:42;4547:3;4532:19;;4149:408::o;5402:251::-;5472:6;5525:2;5513:9;5504:7;5500:23;5496:32;5493:52;;;5541:1;5538;5531:12;5493:52;5573:9;5567:16;5592:31;5617:5;5592:31;:::i;6738:184::-;6808:6;6861:2;6849:9;6840:7;6836:23;6832:32;6829:52;;;6877:1;6874;6867:12;6829:52;-1:-1:-1;6900:16:41;;6738:184;-1:-1:-1;6738:184:41:o;8164:662::-;-1:-1:-1;;;;;8443:15:41;;;8425:34;;8495:15;;8490:2;8475:18;;8468:43;8542:2;8527:18;;8520:34;;;8590:3;8585:2;8570:18;;8563:31;;;8610:19;;8603:35;;;8368:4;8631:6;8681;8405:3;8660:19;;8647:49;8746:1;8740:3;8731:6;8720:9;8716:22;8712:32;8705:43;8816:3;8809:2;8805:7;8800:2;8792:6;8788:15;8784:29;8773:9;8769:45;8765:55;8757:63;;8164:662;;;;;;;;:::o;8831:277::-;8898:6;8951:2;8939:9;8930:7;8926:23;8922:32;8919:52;;;8967:1;8964;8957:12;8919:52;8999:9;8993:16;9052:5;9045:13;9038:21;9031:5;9028:32;9018:60;;9074:1;9071;9064:12;9988:250;10073:1;10083:113;10097:6;10094:1;10091:13;10083:113;;;10173:11;;;10167:18;10154:11;;;10147:39;10119:2;10112:10;10083:113;;;-1:-1:-1;;10230:1:41;10212:16;;10205:27;9988:250::o;10243:287::-;10372:3;10410:6;10404:13;10426:66;10485:6;10480:3;10473:4;10465:6;10461:17;10426:66;:::i;:::-;10508:16;;;;;10243:287;-1:-1:-1;;10243:287:41:o;10893:396::-;11042:2;11031:9;11024:21;11005:4;11074:6;11068:13;11117:6;11112:2;11101:9;11097:18;11090:34;11133:79;11205:6;11200:2;11189:9;11185:18;11180:2;11172:6;11168:15;11133:79;:::i;:::-;11273:2;11252:15;-1:-1:-1;;11248:29:41;11233:45;;;;11280:2;11229:54;;10893:396;-1:-1:-1;;10893:396:41:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "997000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID()": "217",
								"UPGRADE_REGISTRAR_PERMISSION_ID()": "239",
								"dao()": "2409",
								"ens()": "2393",
								"initialize(address,address,bytes32)": "infinite",
								"node()": "2383",
								"protocolVersion()": "infinite",
								"proxiableUUID()": "infinite",
								"registerSubnode(bytes32,address)": "infinite",
								"resolver()": "2327",
								"setDefaultResolver(address)": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH",
									"source": 38,
									"value": "A0"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH",
									"source": 38,
									"value": "40"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 1088,
									"end": 1092,
									"name": "ADDRESS",
									"source": 29
								},
								{
									"begin": 1045,
									"end": 1093,
									"name": "PUSH",
									"source": 29,
									"value": "80"
								},
								{
									"begin": 1045,
									"end": 1093,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "CALLVALUE",
									"source": 38
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "ISZERO",
									"source": 38
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "1"
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "JUMPI",
									"source": 38
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "REVERT",
									"source": 38
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "tag",
									"source": 38,
									"value": "1"
								},
								{
									"begin": 2612,
									"end": 2667,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2637,
									"end": 2659,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "4"
								},
								{
									"begin": 2637,
									"end": 2657,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "5"
								},
								{
									"begin": 2637,
									"end": 2659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 2637,
									"end": 2659,
									"name": "tag",
									"source": 38,
									"value": "4"
								},
								{
									"begin": 2637,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "14"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6020,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 41,
									"value": "20"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 41,
									"value": "27"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 41,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 294,
									"end": 328,
									"name": "PUSH",
									"source": 41,
									"value": "496E697469616C697A61626C653A20636F6E747261637420697320696E697469"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 41,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "616C697A696E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 41,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 338,
									"end": 375,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 392,
									"end": 411,
									"name": "PUSH",
									"source": 41,
									"value": "84"
								},
								{
									"begin": 392,
									"end": 411,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6094,
									"end": 6109,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6109,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6140,
									"end": 6155,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 564,
									"end": 600,
									"name": "SWAP1",
									"source": 41
								},
								{
									"begin": 564,
									"end": 600,
									"name": "DUP2",
									"source": 41
								},
								{
									"begin": 564,
									"end": 600,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 6,
									"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 552,
									"end": 554,
									"name": "PUSH",
									"source": 41,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "ADD",
									"source": 41
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "LOG1",
									"source": 6
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5939,
									"end": 6219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 422,
									"end": 606,
									"name": "tag",
									"source": 41,
									"value": "14"
								},
								{
									"begin": 422,
									"end": 606,
									"name": "JUMPDEST",
									"source": 41
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH",
									"source": 38,
									"value": "80"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH #[$]",
									"source": 38,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH [$]",
									"source": 38,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "CODECOPY",
									"source": 38
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "ASSIGNIMMUTABLE",
									"source": 38,
									"value": "2289"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH #[$]",
									"source": 38,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 5873,
									"name": "RETURN",
									"source": 38
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020cfd720c4bde774e8f09bf9367e906cb1b55d660ae8952018d7ffe52c36f9dc64736f6c63430008110033",
									".code": [
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "80"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "CALLDATASIZE",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "E0"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "SHR",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "52D1902D"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "15"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "9848BA51"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "16"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "9848BA51"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "11"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "AF7B2FED"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "12"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "C66485B2"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "13"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "D70754EC"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "14"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "tag",
											"source": 38,
											"value": "16"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "52D1902D"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "8"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "6133F985"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "9"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "89BB4145"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "10"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "tag",
											"source": 38,
											"value": "15"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "4F3BCEC"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "2"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "2AE9C600"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "3"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "3659CFE6"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "3F15457F"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "5"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "4162169F"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "6"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "4F1EF286"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "7"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "tag",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1173,
											"end": 5873,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "tag",
											"source": 38,
											"value": "2"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "CALLVALUE",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "17"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "tag",
											"source": 38,
											"value": "17"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "PUSH",
											"source": 38,
											"value": "67"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "18"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "tag",
											"source": 38,
											"value": "18"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "tag",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "RETURN",
											"source": 38
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 40,
											"value": "3"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "CALLVALUE",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "DUP1",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "ISZERO",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPI",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH",
											"source": 40,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "DUP1",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "REVERT",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 40,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "POP",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "23"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "24"
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 40,
											"value": "23"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH",
											"source": 40,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "MLOAD",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "20"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "SWAP2",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "SWAP1",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "26"
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 40
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "tag",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "CALLVALUE",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "27"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "tag",
											"source": 29,
											"value": "27"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "28"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "29"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "30"
										},
										{
											"begin": 3143,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "tag",
											"source": 29,
											"value": "29"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "31"
										},
										{
											"begin": 3143,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "tag",
											"source": 29,
											"value": "28"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "STOP",
											"source": 29
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "tag",
											"source": 38,
											"value": "5"
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "CALLVALUE",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "32"
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "tag",
											"source": 38,
											"value": "32"
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "PUSH",
											"source": 38,
											"value": "65"
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "18"
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1771,
											"end": 1785,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "tag",
											"source": 33,
											"value": "6"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "CALLVALUE",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "37"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "tag",
											"source": 33,
											"value": "37"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1299,
											"end": 1303,
											"name": "PUSH",
											"source": 33,
											"value": "33"
										},
										{
											"begin": 1299,
											"end": 1303,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1299,
											"end": 1303,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "18"
										},
										{
											"begin": 1239,
											"end": 1311,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "tag",
											"source": 29,
											"value": "7"
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "28"
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "43"
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "44"
										},
										{
											"begin": 3657,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "tag",
											"source": 29,
											"value": "43"
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "45"
										},
										{
											"begin": 3657,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "tag",
											"source": 29,
											"value": "8"
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "CALLVALUE",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "46"
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "tag",
											"source": 29,
											"value": "46"
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "47"
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "48"
										},
										{
											"begin": 2762,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "tag",
											"source": 29,
											"value": "47"
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 2883,
											"end": 2885,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2926,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "tag",
											"source": 38,
											"value": "9"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "CALLVALUE",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "51"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "tag",
											"source": 38,
											"value": "51"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "28"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "53"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "CALLDATASIZE",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "54"
										},
										{
											"begin": 3276,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "tag",
											"source": 38,
											"value": "53"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "55"
										},
										{
											"begin": 3276,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "tag",
											"source": 38,
											"value": "10"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "CALLVALUE",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "56"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "tag",
											"source": 38,
											"value": "56"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "28"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "58"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "CALLDATASIZE",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "59"
										},
										{
											"begin": 4545,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "tag",
											"source": 38,
											"value": "58"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "60"
										},
										{
											"begin": 4545,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 38,
											"value": "11"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "CALLVALUE",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "61"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 38,
											"value": "61"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "47"
										},
										{
											"begin": 1673,
											"end": 1719,
											"name": "PUSH",
											"source": 38,
											"value": "BBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "tag",
											"source": 38,
											"value": "12"
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "CALLVALUE",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "65"
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "tag",
											"source": 38,
											"value": "65"
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "47"
										},
										{
											"begin": 1435,
											"end": 1476,
											"name": "PUSH",
											"source": 38,
											"value": "A1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF"
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1368,
											"end": 1476,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "tag",
											"source": 38,
											"value": "13"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "CALLVALUE",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "69"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "tag",
											"source": 38,
											"value": "69"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "28"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "71"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "CALLDATASIZE",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "30"
										},
										{
											"begin": 5278,
											"end": 5557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "tag",
											"source": 38,
											"value": "71"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "72"
										},
										{
											"begin": 5278,
											"end": 5557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "tag",
											"source": 38,
											"value": "14"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "CALLVALUE",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "73"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "tag",
											"source": 38,
											"value": "73"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "47"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "PUSH",
											"source": 38,
											"value": "66"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 656,
											"end": 756,
											"name": "tag",
											"source": 40,
											"value": "24"
										},
										{
											"begin": 656,
											"end": 756,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "77"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 40,
											"value": "78"
										},
										{
											"begin": 704,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 40
										},
										{
											"begin": 704,
											"end": 719,
											"name": "tag",
											"source": 40,
											"value": "77"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "JUMPDEST",
											"source": 40
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 40,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP1",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MLOAD",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 40,
											"value": "60"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP3",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 40,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": 743,
											"end": 744,
											"name": "PUSH",
											"source": 40,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "PUSH",
											"source": 40,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP3",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "ADD",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP1",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP2",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": 732,
											"end": 748,
											"name": "SWAP1",
											"source": 40
										},
										{
											"begin": 656,
											"end": 756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 40
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "tag",
											"source": 29,
											"value": "31"
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "PUSHIMMUTABLE",
											"source": 29,
											"value": "2289"
										},
										{
											"begin": 1637,
											"end": 1660,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1645,
											"end": 1649,
											"name": "ADDRESS",
											"source": 29
										},
										{
											"begin": 1637,
											"end": 1660,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "81"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "82"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "83"
										},
										{
											"begin": 1629,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "tag",
											"source": 29,
											"value": "82"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "tag",
											"source": 29,
											"value": "81"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "PUSHIMMUTABLE",
											"source": 29,
											"value": "2289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1757,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1727,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "SLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1175,
											"end": 1315,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1727,
											"end": 1747,
											"name": "tag",
											"source": 29,
											"value": "84"
										},
										{
											"begin": 1727,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1757,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1727,
											"end": 1757,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "86"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "82"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "88"
										},
										{
											"begin": 1719,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "tag",
											"source": 29,
											"value": "86"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3224,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "90"
										},
										{
											"begin": 3242,
											"end": 3259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3224,
											"end": 3241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "91"
										},
										{
											"begin": 3224,
											"end": 3260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3224,
											"end": 3260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 29,
											"value": "90"
										},
										{
											"begin": 3224,
											"end": 3260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3321,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3270,
											"end": 3331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "92"
										},
										{
											"begin": 3270,
											"end": 3331,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3292,
											"end": 3309,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 3292,
											"end": 3309,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3270,
											"end": 3291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "97"
										},
										{
											"begin": 3270,
											"end": 3331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3270,
											"end": 3331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 29,
											"value": "92"
										},
										{
											"begin": 3270,
											"end": 3331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3143,
											"end": 3338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "tag",
											"source": 29,
											"value": "45"
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "PUSHIMMUTABLE",
											"source": 29,
											"value": "2289"
										},
										{
											"begin": 1637,
											"end": 1660,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1645,
											"end": 1649,
											"name": "ADDRESS",
											"source": 29
										},
										{
											"begin": 1637,
											"end": 1660,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "82"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "83"
										},
										{
											"begin": 1629,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "tag",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 1629,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "PUSHIMMUTABLE",
											"source": 29,
											"value": "2289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1757,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1727,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "102"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "SLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1175,
											"end": 1315,
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1727,
											"end": 1747,
											"name": "tag",
											"source": 29,
											"value": "102"
										},
										{
											"begin": 1727,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1757,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1727,
											"end": 1757,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "103"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "82"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "88"
										},
										{
											"begin": 1719,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "tag",
											"source": 29,
											"value": "103"
										},
										{
											"begin": 1719,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3772,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "106"
										},
										{
											"begin": 3790,
											"end": 3807,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3772,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "91"
										},
										{
											"begin": 3772,
											"end": 3808,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3772,
											"end": 3808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 29,
											"value": "106"
										},
										{
											"begin": 3772,
											"end": 3808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3818,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "107"
										},
										{
											"begin": 3840,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3859,
											"end": 3863,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3865,
											"end": 3869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 3818,
											"end": 3839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "97"
										},
										{
											"begin": 3818,
											"end": 3870,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3818,
											"end": 3870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 29,
											"value": "107"
										},
										{
											"begin": 3818,
											"end": 3870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3657,
											"end": 3877,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3657,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "tag",
											"source": 29,
											"value": "48"
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2840,
											"end": 2847,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2084,
											"name": "ADDRESS",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "PUSHIMMUTABLE",
											"source": 29,
											"value": "2289"
										},
										{
											"begin": 2072,
											"end": 2095,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 2072,
											"end": 2095,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "109"
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4746,
											"end": 4767,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 41,
											"value": "38"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4776,
											"end": 4806,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4842,
											"end": 4876,
											"name": "PUSH",
											"source": 41,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4815,
											"end": 4877,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4913,
											"end": 4939,
											"name": "PUSH",
											"source": 41,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4886,
											"end": 4940,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4957,
											"end": 4976,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 4957,
											"end": 4976,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "82"
										},
										{
											"begin": 4562,
											"end": 4982,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "tag",
											"source": 29,
											"value": "109"
										},
										{
											"begin": 2064,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2762,
											"end": 2893,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2762,
											"end": 2893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "tag",
											"source": 38,
											"value": "55"
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5192,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5228,
											"end": 5230,
											"name": "PUSH",
											"source": 41,
											"value": "2E"
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5201,
											"end": 5231,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5267,
											"end": 5301,
											"name": "PUSH",
											"source": 41,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5240,
											"end": 5302,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5311,
											"end": 5355,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4987,
											"end": 5397,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3372,
											"end": 3419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "124"
										},
										{
											"begin": 3406,
											"end": 3418,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 3372,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "125"
										},
										{
											"begin": 3372,
											"end": 3419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 3372,
											"end": 3419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "124"
										},
										{
											"begin": 3372,
											"end": 3419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "65"
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3432,
											"end": 3442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3442,
											"modifierDepth": 1,
											"name": "OR",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "SSTORE",
											"source": 38
										},
										{
											"begin": 3453,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "66"
										},
										{
											"begin": 3453,
											"end": 3465,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 3453,
											"end": 3465,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3453,
											"end": 3465,
											"name": "SSTORE",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 3520,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "178B8BF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 3520,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 3501,
											"end": 3520,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "178B8BF"
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "128"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3520,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "128"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "129"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "130"
										},
										{
											"begin": 3501,
											"end": 3520,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "129"
										},
										{
											"begin": 3501,
											"end": 3520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3478,
											"end": 3520,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3537,
											"end": 3563,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3537,
											"end": 3563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 3533,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "131"
										},
										{
											"begin": 3533,
											"end": 3653,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 3587,
											"end": 3641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D7097C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 3587,
											"end": 3641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3587,
											"end": 3641,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5866,
											"end": 5926,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3587,
											"end": 3641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "82"
										},
										{
											"begin": 5658,
											"end": 5932,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3533,
											"end": 3653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "131"
										},
										{
											"begin": 3533,
											"end": 3653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "67"
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3688,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"modifierDepth": 1,
											"name": "OR",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SSTORE",
											"source": 38
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6089,
											"end": 6125,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 6089,
											"end": 6125,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3276,
											"end": 3696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "tag",
											"source": 38,
											"value": "60"
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 33,
											"value": "33"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 1673,
											"end": 1719,
											"name": "PUSH",
											"source": 38,
											"value": "BBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14"
										},
										{
											"begin": 1673,
											"end": 1719,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "138"
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "tag",
											"source": 33,
											"value": "139"
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1697,
											"end": 1710,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "143"
										},
										{
											"begin": 1656,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "tag",
											"source": 33,
											"value": "138"
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4698,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "66"
										},
										{
											"begin": 4743,
											"end": 4747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 4749,
											"end": 4755,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "145"
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6340,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6328,
											"end": 6340,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 6365,
											"end": 6377,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6365,
											"end": 6377,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 6136,
											"end": 6383,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "145"
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4716,
											"end": 4757,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4716,
											"end": 4757,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4726,
											"end": 4756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 4716,
											"end": 4757,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4716,
											"end": 4757,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 4716,
											"end": 4757,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4716,
											"end": 4757,
											"name": "KECCAK256",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "65"
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2571BE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2895,
											"end": 2920,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4716,
											"end": 4757,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4716,
											"end": 4757,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 4788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4788,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "2571BE3"
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "149"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "149"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "150"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "130"
										},
										{
											"begin": 4791,
											"end": 4809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "150"
										},
										{
											"begin": 4791,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4768,
											"end": 4809,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4826,
											"end": 4852,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4826,
											"end": 4852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 4826,
											"end": 4852,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4822,
											"end": 4928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "151"
										},
										{
											"begin": 4822,
											"end": 4928,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 4876,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4876,
											"end": 4916,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCAD5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4876,
											"end": 4916,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4876,
											"end": 4916,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4876,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 4876,
											"end": 4916,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4876,
											"end": 4916,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5866,
											"end": 5926,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4876,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "82"
										},
										{
											"begin": 5658,
											"end": 5932,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 4822,
											"end": 4928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "151"
										},
										{
											"begin": 4822,
											"end": 4928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "65"
										},
										{
											"begin": 4940,
											"end": 4943,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 4960,
											"end": 4964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "66"
										},
										{
											"begin": 4960,
											"end": 4964,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4940,
											"end": 4988,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6AB5923"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4940,
											"end": 4988,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 4940,
											"end": 4988,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 6631,
											"end": 6649,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 6631,
											"end": 6649,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 6631,
											"end": 6649,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6624,
											"end": 6658,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 6624,
											"end": 6658,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 6624,
											"end": 6658,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4982,
											"end": 4986,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 38
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 6667,
											"end": 6727,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4940,
											"end": 4943,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4943,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4943,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "6AB5923"
										},
										{
											"begin": 4940,
											"end": 4959,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 6563,
											"end": 6581,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 6563,
											"end": 6581,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "156"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4988,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "156"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "157"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "158"
										},
										{
											"begin": 4940,
											"end": 4988,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "157"
										},
										{
											"begin": 4940,
											"end": 4988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4999,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "65"
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 5024,
											"end": 5032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "67"
										},
										{
											"begin": 5024,
											"end": 5032,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 5033,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4B7B85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4999,
											"end": 5033,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 4999,
											"end": 5033,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5024,
											"end": 5032,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 5024,
											"end": 5032,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5024,
											"end": 5032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5866,
											"end": 5926,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "1896F70A"
										},
										{
											"begin": 4999,
											"end": 5014,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "160"
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5033,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "160"
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "162"
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5033,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "162"
										},
										{
											"begin": 4999,
											"end": 5033,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5053,
											"end": 5061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "67"
										},
										{
											"begin": 5053,
											"end": 5061,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 5044,
											"end": 5095,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5FA2B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5095,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 5044,
											"end": 5095,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "DUP7",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "DUP9",
											"source": 41
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5866,
											"end": 5926,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5053,
											"end": 5061,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5053,
											"end": 5061,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 5053,
											"end": 5061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 5053,
											"end": 5061,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "D5FA2B00"
										},
										{
											"begin": 5044,
											"end": 5070,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "164"
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5095,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "164"
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "166"
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5095,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "166"
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 5044,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4687,
											"end": 5103,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4687,
											"end": 5103,
											"modifierDepth": 1,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4545,
											"end": 5103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "tag",
											"source": 38,
											"value": "72"
										},
										{
											"begin": 5278,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 33,
											"value": "33"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 1673,
											"end": 1719,
											"name": "PUSH",
											"source": 38,
											"value": "BBDFD23F099D7ED9F535E0F97D2123EFB1332B16E023B8359B3B879EAECD3C14"
										},
										{
											"begin": 1673,
											"end": 1719,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "168"
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "139"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "tag",
											"source": 33,
											"value": "168"
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5408,
											"end": 5431,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5408,
											"end": 5431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 5404,
											"end": 5517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "172"
										},
										{
											"begin": 5404,
											"end": 5517,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 5478,
											"end": 5482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "66"
										},
										{
											"begin": 5478,
											"end": 5482,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": 5455,
											"end": 5505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5505,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D7097C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5505,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5455,
											"end": 5505,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 5455,
											"end": 5505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 5455,
											"end": 5505,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5455,
											"end": 5505,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 5832,
											"end": 5857,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5866,
											"end": 5926,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5455,
											"end": 5505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "82"
										},
										{
											"begin": 5658,
											"end": 5932,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 5404,
											"end": 5517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 38,
											"value": "172"
										},
										{
											"begin": 5404,
											"end": 5517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 38,
											"value": "67"
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"modifierDepth": 1,
											"name": "OR",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "SSTORE",
											"source": 38
										},
										{
											"begin": 5278,
											"end": 5557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4044,
											"end": 4162,
											"name": "tag",
											"source": 38,
											"value": "91"
										},
										{
											"begin": 4044,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 33,
											"value": "33"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 1435,
											"end": 1476,
											"name": "PUSH",
											"source": 38,
											"value": "A1FCBA4EFB1E94B7648F5E0504BFD39734AEAD5F17965D12705915D771C859FF"
										},
										{
											"begin": 1435,
											"end": 1476,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "107"
										},
										{
											"begin": 1656,
											"end": 1723,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "139"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 3416,
											"name": "tag",
											"source": 27,
											"value": "97"
										},
										{
											"begin": 2494,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 689,
											"end": 755,
											"name": "PUSH",
											"source": 27,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 2910,
											"end": 2958,
											"name": "SLOAD",
											"source": 27
										},
										{
											"begin": 2910,
											"end": 2958,
											"name": "PUSH",
											"source": 27,
											"value": "FF"
										},
										{
											"begin": 2910,
											"end": 2958,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 2906,
											"end": 3410,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 2906,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "185"
										},
										{
											"begin": 2906,
											"end": 3410,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 2974,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "186"
										},
										{
											"begin": 2993,
											"end": 3010,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 2974,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "187"
										},
										{
											"begin": 2974,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2974,
											"end": 3011,
											"name": "tag",
											"source": 27,
											"value": "186"
										},
										{
											"begin": 2974,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2494,
											"end": 3416,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2494,
											"end": 3416,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2494,
											"end": 3416,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2494,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2906,
											"end": 3410,
											"name": "tag",
											"source": 27,
											"value": "185"
										},
										{
											"begin": 2906,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 3064,
											"end": 3081,
											"name": "DUP3",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3096,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3096,
											"name": "PUSH",
											"source": 27,
											"value": "52D1902D"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "E0"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "SHL",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "SUB",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP7",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "GAS",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "STATICCALL",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "SWAP3",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "189"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "1F"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "RETURNDATASIZE",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP3",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "SWAP3",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "190"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "158"
										},
										{
											"begin": 3046,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "tag",
											"source": 27,
											"value": "190"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "PUSH",
											"source": 27,
											"value": "1"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "tag",
											"source": 27,
											"value": "189"
										},
										{
											"begin": 3046,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 3042,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "191"
										},
										{
											"begin": 3042,
											"end": 3333,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 7129,
											"end": 7131,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "DUP3",
											"source": 27
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": 7111,
											"end": 7132,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "PUSH",
											"source": 41,
											"value": "2E"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7141,
											"end": 7171,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7207,
											"end": 7241,
											"name": "PUSH",
											"source": 41,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 7187,
											"end": 7205,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 7187,
											"end": 7205,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7187,
											"end": 7205,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E206973206E6F742055555053"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7251,
											"end": 7295,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7312,
											"end": 7331,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 7312,
											"end": 7331,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "82"
										},
										{
											"begin": 6927,
											"end": 7337,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3042,
											"end": 3333,
											"name": "tag",
											"source": 27,
											"value": "191"
										},
										{
											"begin": 3042,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3176,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3148,
											"end": 3176,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "198"
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 7544,
											"end": 7546,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "DUP3",
											"source": 27
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7583,
											"end": 7585,
											"name": "PUSH",
											"source": 41,
											"value": "29"
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7556,
											"end": 7586,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7622,
											"end": 7656,
											"name": "PUSH",
											"source": 41,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 7602,
											"end": 7620,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 7602,
											"end": 7620,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7602,
											"end": 7620,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7595,
											"end": 7657,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A58589B1955555251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7666,
											"end": 7705,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7722,
											"end": 7741,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 7722,
											"end": 7741,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "82"
										},
										{
											"begin": 7342,
											"end": 7747,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "tag",
											"source": 27,
											"value": "198"
										},
										{
											"begin": 3140,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 3099,
											"end": 3237,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "186"
										},
										{
											"begin": 3364,
											"end": 3381,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 3346,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "202"
										},
										{
											"begin": 3346,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1043,
											"end": 1153,
											"name": "tag",
											"source": 33,
											"value": "125"
										},
										{
											"begin": 1043,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7954,
											"end": 7956,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7957,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 7993,
											"end": 7995,
											"name": "PUSH",
											"source": 41,
											"value": "2B"
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 7966,
											"end": 7996,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "PUSH",
											"source": 41,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8005,
											"end": 8067,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8076,
											"end": 8117,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8134,
											"end": 8153,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 8134,
											"end": 8153,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 7752,
											"end": 8159,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 33,
											"value": "33"
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1134,
											"end": 1145,
											"modifierDepth": 1,
											"name": "AND",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"modifierDepth": 1,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"modifierDepth": 1,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 1043,
											"end": 1153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "tag",
											"source": 34,
											"value": "143"
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7EF7C883"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "PUSH",
											"source": 34,
											"value": "FDEF9106"
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "212"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1236,
											"end": 1249,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1236,
											"end": 1249,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "213"
										},
										{
											"begin": 1203,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 34,
											"value": "212"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "GAS",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "STATICCALL",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "215"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATACOPY",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 34,
											"value": "215"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "NOT",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "216"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "217"
										},
										{
											"begin": 1203,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "tag",
											"source": 34,
											"value": "216"
										},
										{
											"begin": 1203,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "218"
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CB6F8ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9400,
											"end": 9415,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9400,
											"end": 9415,
											"name": "DUP9",
											"source": 41
										},
										{
											"begin": 9400,
											"end": 9415,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH",
											"source": 34,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9452,
											"end": 9467,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9452,
											"end": 9467,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 9452,
											"end": 9467,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9425,
											"end": 9468,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9504,
											"end": 9519,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 9504,
											"end": 9519,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 9484,
											"end": 9502,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 9484,
											"end": 9502,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 9484,
											"end": 9502,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9477,
											"end": 9520,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9536,
											"end": 9554,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 9536,
											"end": 9554,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 9536,
											"end": 9554,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9529,
											"end": 9563,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 9529,
											"end": 9563,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 9529,
											"end": 9563,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9316,
											"end": 9335,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 9316,
											"end": 9335,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1275,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "82"
										},
										{
											"begin": 9113,
											"end": 9569,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "tag",
											"source": 34,
											"value": "218"
										},
										{
											"begin": 1198,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1057,
											"end": 1434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1406,
											"end": 1665,
											"name": "tag",
											"source": 27,
											"value": "187"
										},
										{
											"begin": 1406,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "226"
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "DUP3",
											"source": 27
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "ADD",
											"source": 27
										},
										{
											"begin": 9758,
											"end": 9779,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9815,
											"end": 9817,
											"name": "PUSH",
											"source": 41,
											"value": "2D"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9788,
											"end": 9818,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9854,
											"end": 9888,
											"name": "PUSH",
											"source": 41,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9827,
											"end": 9889,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 9898,
											"end": 9941,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9958,
											"end": 9977,
											"name": "PUSH",
											"source": 41,
											"value": "84"
										},
										{
											"begin": 9958,
											"end": 9977,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "82"
										},
										{
											"begin": 9574,
											"end": 9983,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "tag",
											"source": 27,
											"value": "226"
										},
										{
											"begin": 1479,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "AND",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SWAP3",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SWAP3",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "OR",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1584,
											"end": 1658,
											"name": "SSTORE",
											"source": 27
										},
										{
											"begin": 1406,
											"end": 1665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2057,
											"end": 2322,
											"name": "tag",
											"source": 27,
											"value": "202"
										},
										{
											"begin": 2057,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2165,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "231"
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 2165,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "232"
										},
										{
											"begin": 2165,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 2165,
											"end": 2194,
											"name": "tag",
											"source": 27,
											"value": "231"
										},
										{
											"begin": 2165,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2222,
											"end": 2223,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2212,
											"name": "DUP3",
											"source": 27
										},
										{
											"begin": 2208,
											"end": 2219,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "GT",
											"source": 27
										},
										{
											"begin": 2208,
											"end": 2236,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 2208,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "233"
										},
										{
											"begin": 2208,
											"end": 2236,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 2208,
											"end": 2236,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 2208,
											"end": 2236,
											"name": "tag",
											"source": 27,
											"value": "233"
										},
										{
											"begin": 2208,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 2204,
											"end": 2316,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 2204,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "186"
										},
										{
											"begin": 2204,
											"end": 2316,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 2252,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "134"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "DUP4",
											"source": 27
										},
										{
											"begin": 2252,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "236"
										},
										{
											"begin": 2252,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1771,
											"end": 1923,
											"name": "tag",
											"source": 27,
											"value": "232"
										},
										{
											"begin": 1771,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 1837,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "239"
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 1837,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "187"
										},
										{
											"begin": 1837,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 1837,
											"end": 1874,
											"name": "tag",
											"source": 27,
											"value": "239"
										},
										{
											"begin": 1837,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "DUP3",
											"source": 27
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "AND",
											"source": 27
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "PUSH",
											"source": 27,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 1889,
											"end": 1916,
											"name": "LOG2",
											"source": 27
										},
										{
											"begin": 1771,
											"end": 1923,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 1771,
											"end": 1923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "tag",
											"source": 30,
											"value": "236"
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6757,
											"end": 6769,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "241"
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 30,
											"value": "27"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH data",
											"source": 30,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 30,
											"value": "27"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "CODECOPY",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "242"
										},
										{
											"begin": 6788,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "tag",
											"source": 30,
											"value": "241"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6781,
											"end": 6865,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "tag",
											"source": 30,
											"value": "242"
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7211,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7261,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "244"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "245"
										},
										{
											"begin": 7265,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 30,
											"value": "244"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DELEGATECALL",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "248"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "3F"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "247"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 30,
											"value": "248"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 30,
											"value": "247"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "249"
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 7342,
											"end": 7349,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 7351,
											"end": 7361,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 7307,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "250"
										},
										{
											"begin": 7307,
											"end": 7376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "tag",
											"source": 30,
											"value": "249"
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7300,
											"end": 7376,
											"name": "SWAP7",
											"source": 30
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "SWAP6",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7058,
											"end": 7383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 30,
											"value": "250"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "252"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "255"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "255"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 10737,
											"end": 10739,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 10719,
											"end": 10740,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10776,
											"end": 10778,
											"name": "PUSH",
											"source": 41,
											"value": "1D"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10749,
											"end": 10779,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10815,
											"end": 10846,
											"name": "PUSH",
											"source": 41,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 10795,
											"end": 10813,
											"name": "PUSH",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 10795,
											"end": 10813,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 10795,
											"end": 10813,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10788,
											"end": 10847,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "PUSH",
											"source": 41,
											"value": "64"
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "82"
										},
										{
											"begin": 10535,
											"end": 10888,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 30,
											"value": "255"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "259"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 30,
											"value": "252"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "259"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "260"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 30,
											"value": "259"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 30
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 30,
											"value": "260"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "262"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 30,
											"value": "262"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "82"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "265"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 723,
											"name": "tag",
											"source": 41,
											"value": "26"
										},
										{
											"begin": 222,
											"end": 723,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 383,
											"end": 401,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 387,
											"end": 396,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 356,
											"end": 360,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "tag",
											"source": 41,
											"value": "271"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 526,
											"end": 530,
											"name": "PUSH",
											"source": 41,
											"value": "3"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 520,
											"end": 531,
											"name": "LT",
											"source": 41
										},
										{
											"begin": 512,
											"end": 717,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 512,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "273"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 589,
											"end": 602,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 589,
											"end": 602,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 604,
											"end": 608,
											"name": "PUSH",
											"source": 41,
											"value": "FF"
										},
										{
											"begin": 585,
											"end": 609,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 573,
											"end": 610,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 573,
											"end": 610,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 633,
											"end": 637,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 669,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 657,
											"end": 669,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 657,
											"end": 669,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 657,
											"end": 669,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 692,
											"end": 707,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 692,
											"end": 707,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 692,
											"end": 707,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 692,
											"end": 707,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 546,
											"end": 547,
											"name": "PUSH",
											"source": 41,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 548,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 512,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "271"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 512,
											"end": 717,
											"name": "tag",
											"source": 41,
											"value": "273"
										},
										{
											"begin": 512,
											"end": 717,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 222,
											"end": 723,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 222,
											"end": 723,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 222,
											"end": 723,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 222,
											"end": 723,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 222,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 728,
											"end": 859,
											"name": "tag",
											"source": 41,
											"value": "266"
										},
										{
											"begin": 728,
											"end": 859,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 803,
											"end": 834,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 803,
											"end": 834,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 793,
											"end": 835,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 793,
											"end": 835,
											"name": "EQ",
											"source": 41
										},
										{
											"begin": 783,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "92"
										},
										{
											"begin": 783,
											"end": 853,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 849,
											"end": 850,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 839,
											"end": 851,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 864,
											"end": 1111,
											"name": "tag",
											"source": 41,
											"value": "30"
										},
										{
											"begin": 864,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 923,
											"end": 929,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 978,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 973,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 955,
											"end": 962,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 951,
											"end": 974,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 947,
											"end": 979,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 944,
											"end": 996,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 944,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "277"
										},
										{
											"begin": 944,
											"end": 996,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 992,
											"end": 993,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 990,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 982,
											"end": 994,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 944,
											"end": 996,
											"name": "tag",
											"source": 41,
											"value": "277"
										},
										{
											"begin": 944,
											"end": 996,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 1018,
											"end": 1041,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "241"
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "266"
										},
										{
											"begin": 1050,
											"end": 1081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1556,
											"end": 1683,
											"name": "tag",
											"source": 41,
											"value": "95"
										},
										{
											"begin": 1556,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "PUSH",
											"source": 41,
											"value": "4E487B71"
										},
										{
											"begin": 1612,
											"end": 1615,
											"name": "PUSH",
											"source": 41,
											"value": "E0"
										},
										{
											"begin": 1608,
											"end": 1628,
											"name": "SHL",
											"source": 41
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1629,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 1648,
											"end": 1652,
											"name": "PUSH",
											"source": 41,
											"value": "41"
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 41,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1653,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 41,
											"value": "24"
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1677,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 1688,
											"end": 2744,
											"name": "tag",
											"source": 41,
											"value": "44"
										},
										{
											"begin": 1688,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1779,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1823,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 1805,
											"end": 1812,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 1801,
											"end": 1824,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 1794,
											"end": 1846,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 1794,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "283"
										},
										{
											"begin": 1794,
											"end": 1846,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 1832,
											"end": 1844,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 1794,
											"end": 1846,
											"name": "tag",
											"source": 41,
											"value": "283"
										},
										{
											"begin": 1794,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1881,
											"end": 1890,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 1868,
											"end": 1891,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 1900,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "284"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 1900,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "266"
										},
										{
											"begin": 1900,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 1900,
											"end": 1931,
											"name": "tag",
											"source": 41,
											"value": "284"
										},
										{
											"begin": 1900,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 1978,
											"end": 2010,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 2029,
											"end": 2047,
											"name": "PUSH",
											"source": 41,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "285"
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2076,
											"end": 2088,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "tag",
											"source": 41,
											"value": "285"
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2113,
											"end": 2122,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 2109,
											"end": 2131,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2099,
											"end": 2131,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 2099,
											"end": 2131,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 2162,
											"end": 2166,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2150,
											"end": 2177,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 2140,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "286"
										},
										{
											"begin": 2140,
											"end": 2195,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2181,
											"end": 2193,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 2140,
											"end": 2195,
											"name": "tag",
											"source": 41,
											"value": "286"
										},
										{
											"begin": 2140,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2227,
											"end": 2229,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2214,
											"end": 2230,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2242,
											"end": 2252,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 2239,
											"end": 2275,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 2239,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "288"
										},
										{
											"begin": 2239,
											"end": 2275,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "288"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "95"
										},
										{
											"begin": 2255,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "tag",
											"source": 41,
											"value": "288"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2330,
											"end": 2332,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 2298,
											"end": 2300,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 2404,
											"end": 2406,
											"name": "PUSH",
											"source": 41,
											"value": "3F"
										},
										{
											"begin": 2376,
											"end": 2407,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2372,
											"end": 2412,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2428,
											"end": 2446,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2428,
											"end": 2446,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2428,
											"end": 2446,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "LT",
											"source": 41
										},
										{
											"begin": 2425,
											"end": 2471,
											"name": "OR",
											"source": 41
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "290"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2474,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "290"
										},
										{
											"begin": 2474,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "95"
										},
										{
											"begin": 2474,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2474,
											"end": 2492,
											"name": "tag",
											"source": 41,
											"value": "290"
										},
										{
											"begin": 2474,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2514,
											"end": 2524,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2510,
											"end": 2512,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2525,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 2589,
											"end": 2596,
											"name": "DUP9",
											"source": 41
										},
										{
											"begin": 2584,
											"end": 2586,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 2579,
											"end": 2581,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 2575,
											"end": 2577,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2564,
											"end": 2597,
											"name": "GT",
											"source": 41
										},
										{
											"begin": 2561,
											"end": 2614,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 2561,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "291"
										},
										{
											"begin": 2561,
											"end": 2614,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2608,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 2561,
											"end": 2614,
											"name": "tag",
											"source": 41,
											"value": "291"
										},
										{
											"begin": 2561,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2659,
											"name": "DUP7",
											"source": 41
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2648,
											"end": 2650,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2636,
											"end": 2651,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2623,
											"end": 2669,
											"name": "CALLDATACOPY",
											"source": 41
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2708,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 2689,
											"end": 2704,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 2678,
											"end": 2713,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 2732,
											"end": 2738,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 2722,
											"end": 2738,
											"name": "SWAP6",
											"source": 41
										},
										{
											"begin": 2722,
											"end": 2738,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2722,
											"end": 2738,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2722,
											"end": 2738,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2722,
											"end": 2738,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2722,
											"end": 2738,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 2722,
											"end": 2738,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 1688,
											"end": 2744,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 1688,
											"end": 2744,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 1688,
											"end": 2744,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 1688,
											"end": 2744,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 1688,
											"end": 2744,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 1688,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 2931,
											"end": 3411,
											"name": "tag",
											"source": 41,
											"value": "54"
										},
										{
											"begin": 2931,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3103,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 3089,
											"end": 3098,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 3080,
											"end": 3087,
											"name": "DUP7",
											"source": 41
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 3072,
											"end": 3104,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "294"
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3115,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3107,
											"end": 3119,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "tag",
											"source": 41,
											"value": "294"
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 3175,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "295"
										},
										{
											"begin": 3200,
											"end": 3205,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 3175,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "266"
										},
										{
											"begin": 3175,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3175,
											"end": 3206,
											"name": "tag",
											"source": 41,
											"value": "295"
										},
										{
											"begin": 3175,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3225,
											"end": 3230,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3282,
											"end": 3284,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3254,
											"end": 3286,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 3295,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "296"
										},
										{
											"begin": 3254,
											"end": 3286,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 3295,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "266"
										},
										{
											"begin": 3295,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3295,
											"end": 3328,
											"name": "tag",
											"source": 41,
											"value": "296"
										},
										{
											"begin": 3295,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 2931,
											"end": 3411,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 2931,
											"end": 3411,
											"name": "SWAP6",
											"source": 41
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "SWAP5",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3373,
											"end": 3405,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 3373,
											"end": 3405,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 2931,
											"end": 3411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3416,
											"end": 3731,
											"name": "tag",
											"source": 41,
											"value": "59"
										},
										{
											"begin": 3416,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 3524,
											"end": 3531,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 3520,
											"end": 3543,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 3516,
											"end": 3548,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "298"
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 3561,
											"end": 3562,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "tag",
											"source": 41,
											"value": "298"
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 3574,
											"end": 3607,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 3574,
											"end": 3607,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3629,
											"end": 3661,
											"name": "CALLDATALOAD",
											"source": 41
										},
										{
											"begin": 3670,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "299"
										},
										{
											"begin": 3695,
											"end": 3700,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 3670,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "266"
										},
										{
											"begin": 3670,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3670,
											"end": 3701,
											"name": "tag",
											"source": 41,
											"value": "299"
										},
										{
											"begin": 3670,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3720,
											"end": 3725,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3710,
											"end": 3725,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 3710,
											"end": 3725,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3710,
											"end": 3725,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3416,
											"end": 3731,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 3416,
											"end": 3731,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3416,
											"end": 3731,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 3416,
											"end": 3731,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 3416,
											"end": 3731,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 3416,
											"end": 3731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 3736,
											"end": 4144,
											"name": "tag",
											"source": 41,
											"value": "83"
										},
										{
											"begin": 3736,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 3920,
											"end": 3941,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 3920,
											"end": 3941,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 3920,
											"end": 3941,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 3977,
											"end": 3979,
											"name": "PUSH",
											"source": 41,
											"value": "2C"
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3950,
											"end": 3980,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "PUSH",
											"source": 41,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4014,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 3996,
											"end": 4014,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 3989,
											"end": 4051,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4060,
											"end": 4102,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4134,
											"end": 4137,
											"name": "PUSH",
											"source": 41,
											"value": "80"
										},
										{
											"begin": 4119,
											"end": 4138,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4119,
											"end": 4138,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 3736,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 4149,
											"end": 4557,
											"name": "tag",
											"source": 41,
											"value": "88"
										},
										{
											"begin": 4149,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4390,
											"end": 4392,
											"name": "PUSH",
											"source": 41,
											"value": "2C"
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4363,
											"end": 4393,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4429,
											"end": 4463,
											"name": "PUSH",
											"source": 41,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4402,
											"end": 4464,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6163746976652070726F7879"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4473,
											"end": 4515,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 4547,
											"end": 4550,
											"name": "PUSH",
											"source": 41,
											"value": "80"
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 4149,
											"end": 4557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 5402,
											"end": 5653,
											"name": "tag",
											"source": 41,
											"value": "130"
										},
										{
											"begin": 5402,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 5472,
											"end": 5478,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 5504,
											"end": 5511,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 5500,
											"end": 5523,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 5496,
											"end": 5528,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 5493,
											"end": 5545,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 5493,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "305"
										},
										{
											"begin": 5493,
											"end": 5545,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 5541,
											"end": 5542,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5539,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 5531,
											"end": 5543,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 5493,
											"end": 5545,
											"name": "tag",
											"source": 41,
											"value": "305"
										},
										{
											"begin": 5493,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 5573,
											"end": 5582,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 5567,
											"end": 5583,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 5592,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "241"
										},
										{
											"begin": 5617,
											"end": 5622,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 5592,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "266"
										},
										{
											"begin": 5592,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 6738,
											"end": 6922,
											"name": "tag",
											"source": 41,
											"value": "158"
										},
										{
											"begin": 6738,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 6808,
											"end": 6814,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6858,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 6840,
											"end": 6847,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 6836,
											"end": 6859,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 6829,
											"end": 6881,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 6829,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "312"
										},
										{
											"begin": 6829,
											"end": 6881,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 6877,
											"end": 6878,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6875,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 6867,
											"end": 6879,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 6829,
											"end": 6881,
											"name": "tag",
											"source": 41,
											"value": "312"
										},
										{
											"begin": 6829,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6900,
											"end": 6916,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 6900,
											"end": 6916,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 6738,
											"end": 6922,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6738,
											"end": 6922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "tag",
											"source": 41,
											"value": "213"
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8443,
											"end": 8458,
											"name": "DUP7",
											"source": 41
										},
										{
											"begin": 8443,
											"end": 8458,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 8443,
											"end": 8458,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 8425,
											"end": 8459,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8425,
											"end": 8459,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8495,
											"end": 8510,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 8495,
											"end": 8510,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 8490,
											"end": 8492,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8468,
											"end": 8511,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8542,
											"end": 8544,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8520,
											"end": 8554,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 8520,
											"end": 8554,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 8520,
											"end": 8554,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8590,
											"end": 8593,
											"name": "PUSH",
											"source": 41,
											"value": "80"
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "PUSH",
											"source": 41,
											"value": "60"
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8563,
											"end": 8594,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 8563,
											"end": 8594,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 8563,
											"end": 8594,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8610,
											"end": 8629,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 8610,
											"end": 8629,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8368,
											"end": 8372,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8637,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8681,
											"end": 8687,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 8405,
											"end": 8408,
											"name": "PUSH",
											"source": 41,
											"value": "A0"
										},
										{
											"begin": 8660,
											"end": 8679,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 8660,
											"end": 8679,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8647,
											"end": 8696,
											"name": "CALLDATACOPY",
											"source": 41
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 8740,
											"end": 8743,
											"name": "PUSH",
											"source": 41,
											"value": "A0"
										},
										{
											"begin": 8731,
											"end": 8737,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 8716,
											"end": 8738,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8712,
											"end": 8744,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8705,
											"end": 8748,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 8816,
											"end": 8819,
											"name": "PUSH",
											"source": 41,
											"value": "A0"
										},
										{
											"begin": 8809,
											"end": 8811,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 8805,
											"end": 8812,
											"name": "NOT",
											"source": 41
										},
										{
											"begin": 8800,
											"end": 8802,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 8792,
											"end": 8798,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 8788,
											"end": 8803,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8784,
											"end": 8813,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 8773,
											"end": 8782,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 8769,
											"end": 8814,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8765,
											"end": 8820,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 8757,
											"end": 8820,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 8757,
											"end": 8820,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "SWAP7",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "SWAP6",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"name": "POP",
											"source": 41
										},
										{
											"begin": 8164,
											"end": 8826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 8831,
											"end": 9108,
											"name": "tag",
											"source": 41,
											"value": "217"
										},
										{
											"begin": 8831,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8953,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 8930,
											"end": 8937,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 8926,
											"end": 8949,
											"name": "SUB",
											"source": 41
										},
										{
											"begin": 8922,
											"end": 8954,
											"name": "SLT",
											"source": 41
										},
										{
											"begin": 8919,
											"end": 8971,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 8919,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "318"
										},
										{
											"begin": 8919,
											"end": 8971,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 8967,
											"end": 8968,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8965,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 8919,
											"end": 8971,
											"name": "tag",
											"source": 41,
											"value": "318"
										},
										{
											"begin": 8919,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 8999,
											"end": 9008,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 8993,
											"end": 9009,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 9052,
											"end": 9057,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9045,
											"end": 9058,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 9038,
											"end": 9059,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 9028,
											"end": 9060,
											"name": "EQ",
											"source": 41
										},
										{
											"begin": 9018,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "241"
										},
										{
											"begin": 9018,
											"end": 9078,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 9074,
											"end": 9075,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9072,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 9064,
											"end": 9076,
											"name": "REVERT",
											"source": 41
										},
										{
											"begin": 9988,
											"end": 10238,
											"name": "tag",
											"source": 41,
											"value": "267"
										},
										{
											"begin": 9988,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "tag",
											"source": 41,
											"value": "323"
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 10097,
											"end": 10103,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 10094,
											"end": 10095,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 10091,
											"end": 10104,
											"name": "LT",
											"source": 41
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "ISZERO",
											"source": 41
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "325"
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "JUMPI",
											"source": 41
										},
										{
											"begin": 10173,
											"end": 10184,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 10173,
											"end": 10184,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 10173,
											"end": 10184,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 10154,
											"end": 10165,
											"name": "DUP4",
											"source": 41
										},
										{
											"begin": 10154,
											"end": 10165,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 10154,
											"end": 10165,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10147,
											"end": 10186,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 10119,
											"end": 10121,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10122,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "323"
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "tag",
											"source": 41,
											"value": "325"
										},
										{
											"begin": 10083,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10230,
											"end": 10231,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10228,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 10212,
											"end": 10228,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10205,
											"end": 10232,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 9988,
											"end": 10238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 10243,
											"end": 10530,
											"name": "tag",
											"source": 41,
											"value": "245"
										},
										{
											"begin": 10243,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 10372,
											"end": 10375,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 10410,
											"end": 10416,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 10404,
											"end": 10417,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 10426,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "327"
										},
										{
											"begin": 10485,
											"end": 10491,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 10480,
											"end": 10483,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 10473,
											"end": 10477,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10471,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 10461,
											"end": 10478,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10426,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "267"
										},
										{
											"begin": 10426,
											"end": 10492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 10426,
											"end": 10492,
											"name": "tag",
											"source": 41,
											"value": "327"
										},
										{
											"begin": 10426,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 10508,
											"end": 10524,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 10508,
											"end": 10524,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 10508,
											"end": 10524,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 10508,
											"end": 10524,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 10508,
											"end": 10524,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 10243,
											"end": 10530,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10243,
											"end": 10530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 10893,
											"end": 11289,
											"name": "tag",
											"source": 41,
											"value": "265"
										},
										{
											"begin": 10893,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 11042,
											"end": 11044,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 11031,
											"end": 11040,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 11024,
											"end": 11045,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 11005,
											"end": 11009,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 11074,
											"end": 11080,
											"name": "DUP3",
											"source": 41
										},
										{
											"begin": 11068,
											"end": 11081,
											"name": "MLOAD",
											"source": 41
										},
										{
											"begin": 11117,
											"end": 11123,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 11112,
											"end": 11114,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 11101,
											"end": 11110,
											"name": "DUP5",
											"source": 41
										},
										{
											"begin": 11097,
											"end": 11115,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11090,
											"end": 11124,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 11133,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "330"
										},
										{
											"begin": 11205,
											"end": 11211,
											"name": "DUP2",
											"source": 41
										},
										{
											"begin": 11200,
											"end": 11202,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 11189,
											"end": 11198,
											"name": "DUP6",
											"source": 41
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 41,
											"value": "20"
										},
										{
											"begin": 11172,
											"end": 11178,
											"name": "DUP8",
											"source": 41
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11133,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 41,
											"value": "267"
										},
										{
											"begin": 11133,
											"end": 11212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 41
										},
										{
											"begin": 11133,
											"end": 11212,
											"name": "tag",
											"source": 41,
											"value": "330"
										},
										{
											"begin": 11133,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 41
										},
										{
											"begin": 11273,
											"end": 11275,
											"name": "PUSH",
											"source": 41,
											"value": "1F"
										},
										{
											"begin": 11252,
											"end": 11267,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11248,
											"end": 11277,
											"name": "AND",
											"source": 41
										},
										{
											"begin": 11233,
											"end": 11278,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 11233,
											"end": 11278,
											"name": "SWAP1",
											"source": 41
										},
										{
											"begin": 11233,
											"end": 11278,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": 11233,
											"end": 11278,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11280,
											"end": 11282,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 11229,
											"end": 11283,
											"name": "ADD",
											"source": 41
										},
										{
											"begin": 11229,
											"end": 11283,
											"name": "SWAP3",
											"source": 41
										},
										{
											"begin": 10893,
											"end": 11289,
											"name": "SWAP2",
											"source": 41
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10893,
											"end": 11289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 41
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
								"packages/contracts/src/core/utils/auth.sol",
								"packages/contracts/src/framework/dao/DAORegistry.sol",
								"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
								"packages/contracts/src/framework/utils/RegistryUtils.sol",
								"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID()": "9848ba51",
							"UPGRADE_REGISTRAR_PERMISSION_ID()": "af7b2fed",
							"dao()": "4162169f",
							"ens()": "3f15457f",
							"initialize(address,address,bytes32)": "6133f985",
							"node()": "d70754ec",
							"protocolVersion()": "2ae9c600",
							"proxiableUUID()": "52d1902d",
							"registerSubnode(bytes32,address)": "89bb4145",
							"resolver()": "04f3bcec",
							"setDefaultResolver(address)": "c66485b2",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subnode\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"nodeOwner\",\"type\":\"address\"}],\"name\":\"AlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"name\":\"DaoUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"InvalidResolver\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_REGISTRAR_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"_managingDao\",\"type\":\"address\"},{\"internalType\":\"contract ENS\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"node\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_targetAddress\",\"type\":\"address\"}],\"name\":\"registerSubnode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setDefaultResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"errors\":{\"AlreadyRegistered(bytes32,address)\":[{\"params\":{\"nodeOwner\":\"The node owner address.\",\"subnode\":\"The subnode namehash.\"}}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"params\":{\"dao\":\"The associated DAO.\",\"permissionId\":\"The permission identifier.\",\"where\":\"The context in which the authorization reverted.\",\"who\":\"The address (EOA or contract) missing the permission.\"}}],\"InvalidResolver(bytes32,address)\":[{\"params\":{\"node\":\"The node namehash.\",\"resolver\":\"The node resolver address.\"}}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"details\":\"Used to disallow initializing the implementation contract by an attacker for extra safety.\"},\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}},\"initialize(address,address,bytes32)\":{\"params\":{\"_ens\":\"The interface of the ENS registry to be used.\",\"_managingDao\":\"The interface of the DAO managing the components permissions.\",\"_node\":\"The ENS parent domain node under which the subdomains are to be registered.\"}},\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_0\":\"Returns the semantic Aragon OSx protocol version number.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"registerSubnode(bytes32,address)\":{\"details\":\"It reverts with no message if this contract isn't the owner nor an approved operator for the given node.\",\"params\":{\"_label\":\"The labelhash of the subdomain name.\",\"_targetAddress\":\"The address to which the subdomain resolves.\"}},\"setDefaultResolver(address)\":{\"params\":{\"_resolver\":\"The resolver contract to be used.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"ENSSubdomainRegistrar\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyRegistered(bytes32,address)\":[{\"notice\":\"Thrown if the subnode is already registered.\"}],\"DaoUnauthorized(address,address,address,bytes32)\":[{\"notice\":\"Thrown if a call is unauthorized in the associated DAO.\"}],\"InvalidResolver(bytes32,address)\":[{\"notice\":\"Thrown if node's resolver is invalid.\"}]},\"kind\":\"user\",\"methods\":{\"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `registerSubnode` and `setDefaultResolver` function.\"},\"UPGRADE_REGISTRAR_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `_authorizeUpgrade` function.\"},\"dao()\":{\"notice\":\"Returns the DAO contract.\"},\"ens()\":{\"notice\":\"The ENS registry contract\"},\"initialize(address,address,bytes32)\":{\"notice\":\"Initializes the component by - checking that the contract is the domain node owner or an approved operator - initializing the underlying component - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID - setting the ENS contract, the domain node hash, and resolver.\"},\"node()\":{\"notice\":\"The namehash of the domain on which subdomains are registered.\"},\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"},\"registerSubnode(bytes32,address)\":{\"notice\":\"Registers a new subdomain with this registrar as the owner and set the target address in the resolver.\"},\"resolver()\":{\"notice\":\"The address of the ENS resolver resolving the names to an address.\"},\"setDefaultResolver(address)\":{\"notice\":\"Sets the default resolver contract address that the subdomains being registered will use.\"}},\"notice\":\"This contract registers ENS subdomains under a parent domain specified in the initialization process and maintains ownership of the subdomain since only the resolver address is set. This contract must either be the domain node owner or an approved operator of the node owner. The default resolver being used is the one specified in the parent domain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":\"ENSSubdomainRegistrar\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol\":{\"keccak256\":\"0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda\",\"urls\":[\"bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314\",\"dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol\":{\"keccak256\":\"0xb7919ce45b17fae018c501263ef7eb81b3c8e3fa81e99cc91aff719a6daaebe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2342dac876f5809e1460e9e0ef2560d1f739d35997d1e26c0cb2590927ca8a2f\",\"dweb:/ipfs/QmbBbLoCBdLxA66yeuT8xDCbPrFJD8HUWGmRW2Wq5k1cBx\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol\":{\"keccak256\":\"0x85b373d02d19374fe570af407f459768285704bf7f30ab17c30eabfb5a10e4c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046ce3d92d29806d7b447f7ab4227f19b0b2e5c75fd5b4a3fcaef7fe2442141\",\"dweb:/ipfs/QmRgnfWjFetrSJngkhU7Yui1ZcK1MeatvZDpvUTYNuYnND\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol\":{\"keccak256\":\"0x2ad7f2fc60ebe0f93745fe70247f6a854f66af732483fda2a3c5e055614445e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43922ba183ff20d87dce7fc5d715e626b26594151e36dcc8d7c6329b9a822963\",\"dweb:/ipfs/QmTg9uHTugTxzqddN68gnhNbGt4bGJBS9mQcss6GYggR4X\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol\":{\"keccak256\":\"0x411447c1e90c51e09702815a85ec725ffbbe37cf96e8cc4d2a8bd4ad8a59d73e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543aa2756447a428711b69aea79e9f4641c22f8330ba920b2a49fde8d9207f82\",\"dweb:/ipfs/QmTdpcYRWLH3BL7iytnqcSzRojTPe3YettKaTqeCvKPk54\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol\":{\"keccak256\":\"0xd95cd77684ba5752c428d7dceb4ecc6506ac94f4fbb910489637eb68dcd8e366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf1fee7770679bd935b8b5686789a4ecc532caeef5a9b8e1b60ae0c285e743e\",\"dweb:/ipfs/QmSaHBAqtDdbQLH6QN4EbupMrq2ah8g6fqE7fLX1u4cjMZ\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol\":{\"keccak256\":\"0xcfa52200edd337f2c6c5bf402352600584da033b21323603e53de33051a3e25d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8355211d58db82660140191678ee342eb8a7ac46fa097ae8e03eef008f592e\",\"dweb:/ipfs/QmYDNiECPd4fJ7Vk9Xywfpg73rUvDpcYqas95ofGcpt7fM\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol\":{\"keccak256\":\"0xca1b3a16e7005533f2800a3e66fcdccf7c574deac7913d8c810f40aec1d58dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e38d5eb69e236c37e4a013628838070720c9e1923569650b01252868038c7a\",\"dweb:/ipfs/QmV397iZMRxtem79kJy5sueJadXoVL89gNViX2xciQHUrk\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol\":{\"keccak256\":\"0x5d81521cfae7d9a4475d27533cd8ed0d3475d369eb0674fd90ffbdbdf292faa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d244d15588785044b54c453ab6dc51c616ab70cb8b9e687d3e54565bcae97760\",\"dweb:/ipfs/QmXz4ZZBTFogdkdTV1mcE3ywvL2agKVZHLNNeRHCKVruYM\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol\":{\"keccak256\":\"0x390321fb58f7b927df9562450981e74b4be3907e7c09df321fd3b7409b63ae28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://045d12c6e0e4596b3672614751a9e75188183a89765a6abd938294e0294e9c56\",\"dweb:/ipfs/QmazngvagEoKe29s4M9Rv8KygWD5hrAtNPkYDPJ2pK13yx\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol\":{\"keccak256\":\"0x69748947093dd2fda9ddcebd0adf19a6d1e7600df1d4b1462a0417156caddca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2f86e50bd17c38fb10feb577d88d8970c585017a391ef10e3aaa3d50f81555\",\"dweb:/ipfs/QmaxLx2pqCUxf9W2dusfviZ9aSiTuVwuekGo73rjvmGifE\"]},\"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol\":{\"keccak256\":\"0x7c5debb3c42cd9f5de2274ea7aa053f238608314b62db441c40e31cea2543fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e34ae2d84d542ffa6791486963f3fe04432a3ffd51877d441256dc2941914\",\"dweb:/ipfs/QmciS4mGAQ6KJtLiLcBFekHKhYAYMmubDWGkpZ3sUFtJPW\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x39b73389db9653916ceba024ca2ee4cf290d094c2b6da4175603279960983ebe\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://de141cf0323525da50a63e09c2548d4f6faf55c1c804f5dfa7afc612d376d4aa\",\"dweb:/ipfs/QmVn9zMpwmE3AQme4gWzD43AzCBzyRjRFzwjPUjyH8KQcA\"]},\"packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x214d611471514ee8c3a21de59447101f1cba44090ee078fa2ba758a2ea5016cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7e51fe2ff30eb754d8ed0a1e4512b35f31d3b7fd1817e277cbfc8721d87fbbf\",\"dweb:/ipfs/QmdLQ1SW4EjRjXMD4pdtJPTDHeZaieYEN3EeiyaV4dDYRX\"]},\"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol\":{\"keccak256\":\"0x041d159cdf42fba70edba3d9df8ee6e414751efc7175fe1943364bc2b5c2a46a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://80f06e0b26cfc651edace5be9d9f83dfa25e8aa5117e7250d74922c54e0362e6\",\"dweb:/ipfs/QmZMxc4tFxoxbSUuz8pTwiFj14M9Z6mChPASXGc36nuX6L\"]},\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]},\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":{\"keccak256\":\"0x53e693a16bda9b3483ce71a5b25a523961930c3f03ec381d9da0be9d37686599\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48336778e4f2097ff1fb1c4909d2be7a50dd6107f1c31c69aebb41e6162ef0e2\",\"dweb:/ipfs/QmNTEmpC3arZ5PPq7HX5SRwe9SNL5kLwnmG9zPfUkbi63B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 520,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 523,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1189,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2995,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "dao_",
								"offset": 0,
								"slot": "51",
								"type": "t_contract(IDAO)2980"
							},
							{
								"astId": 3044,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3468,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "ens",
								"offset": 0,
								"slot": "101",
								"type": "t_contract(ENS)148"
							},
							{
								"astId": 3471,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "node",
								"offset": 0,
								"slot": "102",
								"type": "t_bytes32"
							},
							{
								"astId": 3474,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "resolver",
								"offset": 0,
								"slot": "103",
								"type": "t_address"
							},
							{
								"astId": 3658,
								"contract": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol:ENSSubdomainRegistrar",
								"label": "__gap",
								"offset": 0,
								"slot": "104",
								"type": "t_array(t_uint256)47_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)47_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[47]",
								"numberOfBytes": "1504"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ENS)148": {
								"encoding": "inplace",
								"label": "contract ENS",
								"numberOfBytes": "20"
							},
							"t_contract(IDAO)2980": {
								"encoding": "inplace",
								"label": "contract IDAO",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"errors": {
							"AlreadyRegistered(bytes32,address)": [
								{
									"notice": "Thrown if the subnode is already registered."
								}
							],
							"DaoUnauthorized(address,address,address,bytes32)": [
								{
									"notice": "Thrown if a call is unauthorized in the associated DAO."
								}
							],
							"InvalidResolver(bytes32,address)": [
								{
									"notice": "Thrown if node's resolver is invalid."
								}
							]
						},
						"kind": "user",
						"methods": {
							"REGISTER_ENS_SUBDOMAIN_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `registerSubnode` and `setDefaultResolver` function."
							},
							"UPGRADE_REGISTRAR_PERMISSION_ID()": {
								"notice": "The ID of the permission required to call the `_authorizeUpgrade` function."
							},
							"dao()": {
								"notice": "Returns the DAO contract."
							},
							"ens()": {
								"notice": "The ENS registry contract"
							},
							"initialize(address,address,bytes32)": {
								"notice": "Initializes the component by - checking that the contract is the domain node owner or an approved operator - initializing the underlying component - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID - setting the ENS contract, the domain node hash, and resolver."
							},
							"node()": {
								"notice": "The namehash of the domain on which subdomains are registered."
							},
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							},
							"registerSubnode(bytes32,address)": {
								"notice": "Registers a new subdomain with this registrar as the owner and set the target address in the resolver."
							},
							"resolver()": {
								"notice": "The address of the ENS resolver resolving the names to an address."
							},
							"setDefaultResolver(address)": {
								"notice": "Sets the default resolver contract address that the subdomains being registered will use."
							}
						},
						"notice": "This contract registers ENS subdomains under a parent domain specified in the initialization process and maintains ownership of the subdomain since only the resolver address is set. This contract must either be the domain node owner or an approved operator of the node owner. The default resolver being used is the one specified in the parent domain.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"IProtocolVersion": {
					"abi": [
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "_version",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"kind": "dev",
						"methods": {
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_version": "Returns the semantic Aragon OSx protocol version number."
								}
							}
						},
						"title": "IProtocolVersion",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"protocolVersion()": "2ae9c600"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"_version\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"kind\":\"dev\",\"methods\":{\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_version\":\"Returns the semantic Aragon OSx protocol version number.\"}}},\"title\":\"IProtocolVersion\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"}},\"notice\":\"An interface defining the semantic Aragon OSx protocol version number.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":\"IProtocolVersion\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							}
						},
						"notice": "An interface defining the semantic Aragon OSx protocol version number.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"ProtocolVersion": {
					"abi": [
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2023",
						"custom:security-contact": "sirt@aragon.org",
						"details": "Do not add any new variables to this contract that would shift down storage in the inheritance chain.",
						"kind": "dev",
						"methods": {
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_0": "Returns the semantic Aragon OSx protocol version number."
								}
							}
						},
						"title": "ProtocolVersion",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"protocolVersion()": "2ae9c600"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"details\":\"Do not add any new variables to this contract that would shift down storage in the inheritance chain.\",\"kind\":\"dev\",\"methods\":{\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_0\":\"Returns the semantic Aragon OSx protocol version number.\"}}},\"title\":\"ProtocolVersion\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"}},\"notice\":\"An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":\"ProtocolVersion\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]},\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":{\"keccak256\":\"0x53e693a16bda9b3483ce71a5b25a523961930c3f03ec381d9da0be9d37686599\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48336778e4f2097ff1fb1c4909d2be7a50dd6107f1c31c69aebb41e6162ef0e2\",\"dweb:/ipfs/QmNTEmpC3arZ5PPq7HX5SRwe9SNL5kLwnmG9zPfUkbi63B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							}
						},
						"notice": "An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						]
					},
					"id": 12,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "415:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "801:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "844:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:0"
									},
									"scope": 11,
									"src": "774:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 12,
							"src": "405:447:0",
							"usedErrors": []
						}
					],
					"src": "100:753:0"
				},
				"id": 0
			},
			"https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
					"exportedSymbols": {
						"ENS": [
							148
						]
					},
					"id": 149,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 13,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ENS",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 148,
							"linearizedBaseContracts": [
								148
							],
							"name": "ENS",
							"nameLocation": "36:3:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ce0457fe73731f824cc272376169235128c118b49d344817417c6d108d155e82",
									"id": 21,
									"name": "NewOwner",
									"nameLocation": "125:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "150:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "134:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "label",
												"nameLocation": "172:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "156:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "187:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "179:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:60:1"
									},
									"src": "119:75:1"
								},
								{
									"anonymous": false,
									"eventSelector": "d4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d266",
									"id": 27,
									"name": "Transfer",
									"nameLocation": "283:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "308:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "292:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 22,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:37:1"
									},
									"src": "277:52:1"
								},
								{
									"anonymous": false,
									"eventSelector": "335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a0",
									"id": 33,
									"name": "NewResolver",
									"nameLocation": "393:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 28,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "435:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "427:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:40:1"
									},
									"src": "387:58:1"
								},
								{
									"anonymous": false,
									"eventSelector": "1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa68",
									"id": 39,
									"name": "NewTTL",
									"nameLocation": "502:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "525:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "509:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 34,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "538:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "531:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 36,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "531:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:34:1"
									},
									"src": "496:47:1"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 47,
									"name": "ApprovalForAll",
									"nameLocation": "607:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "647:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "631:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "678:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "662:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "701:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "696:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "696:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:94:1"
									},
									"src": "601:115:1"
								},
								{
									"functionSelector": "cf408823",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRecord",
									"nameLocation": "731:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "758:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "750:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "780:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "772:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "803:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "795:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "828:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "821:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 54,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "821:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:97:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:1"
									},
									"scope": 148,
									"src": "722:125:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5ef2c7f0",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSubnodeRecord",
									"nameLocation": "862:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "896:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "888:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 59,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "label",
												"nameLocation": "918:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "910:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 61,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "941:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "933:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "964:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "956:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "989:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "982:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 67,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "982:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:120:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:1"
									},
									"scope": 148,
									"src": "853:155:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06ab5923",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSubnodeOwner",
									"nameLocation": "1023:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1056:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1048:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 72,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "label",
												"nameLocation": "1078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 74,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1101:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1093:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:74:1"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 79,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:9:1"
									},
									"scope": 148,
									"src": "1014:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1896f70a",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setResolver",
									"nameLocation": "1155:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1175:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1167:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "1189:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1181:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:32:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:1"
									},
									"scope": 148,
									"src": "1146:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0fc9c3",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "1223:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1240:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1232:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 90,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1254:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1246:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:29:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:0:1"
									},
									"scope": 148,
									"src": "1214:56:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "14ab9038",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTTL",
									"nameLocation": "1285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1300:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1292:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 97,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "1313:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1306:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 99,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1306:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:26:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1326:0:1"
									},
									"scope": 148,
									"src": "1276:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1342:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1368:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1360:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1383:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1378:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1378:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:33:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1401:0:1"
									},
									"scope": 148,
									"src": "1333:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02571be3",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1417:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1431:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1423:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:14:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1460:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:9:1"
									},
									"scope": 148,
									"src": "1408:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0178b8bf",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resolver",
									"nameLocation": "1484:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1501:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1493:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:14:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1530:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:9:1"
									},
									"scope": 148,
									"src": "1475:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "16a25cbd",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ttl",
									"nameLocation": "1554:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1566:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1558:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:14:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1595:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 128,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1595:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1594:8:1"
									},
									"scope": 148,
									"src": "1545:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f79fe538",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recordExists",
									"nameLocation": "1618:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1639:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1631:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 132,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1630:14:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:6:1"
									},
									"scope": 148,
									"src": "1609:65:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1689:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1723:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1715:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1746:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1738:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:55:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1784:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1784:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:6:1"
									},
									"scope": 148,
									"src": "1680:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 149,
							"src": "26:1766:1",
							"usedErrors": []
						}
					],
					"src": "0:1793:1"
				},
				"id": 1
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							169
						]
					},
					"id": 170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:2",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 169,
							"linearizedBaseContracts": [
								169
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "276:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "302:68:2",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 156,
									"name": "Upgraded",
									"nameLocation": "381:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "406:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "390:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:32:2"
									},
									"src": "375:47:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "428:67:2",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 163,
									"name": "AdminChanged",
									"nameLocation": "506:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "527:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "519:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:41:2"
									},
									"src": "500:60:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "566:59:2",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 168,
									"name": "BeaconUpgraded",
									"nameLocation": "636:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "667:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "651:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:24:2"
									},
									"src": "630:45:2"
								}
							],
							"scope": 170,
							"src": "266:411:2",
							"usedErrors": []
						}
					],
					"src": "107:571:2"
				},
				"id": 2
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							179
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:3",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 179,
							"linearizedBaseContracts": [
								179
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "352:28:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "387:438:3",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "839:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:3"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 175,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:3"
									},
									"scope": 179,
									"src": "830:57:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 180,
							"src": "342:547:3",
							"usedErrors": []
						}
					],
					"src": "113:777:3"
				},
				"id": 3
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1148
						],
						"ERC1967UpgradeUpgradeable": [
							503
						],
						"IBeaconUpgradeable": [
							513
						],
						"IERC1822ProxiableUpgradeable": [
							179
						],
						"IERC1967Upgradeable": [
							169
						],
						"Initializable": [
							682
						],
						"StorageSlotUpgradeable": [
							1300
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 514,
							"src": "141:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 170,
							"src": "184:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 180,
							"src": "235:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 1149,
							"src": "292:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 1301,
							"src": "337:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 683,
							"src": "386:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 189,
										"name": "Initializable",
										"nameLocations": [
											"656:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 682,
										"src": "656:13:4"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "656:13:4"
								},
								{
									"baseName": {
										"id": 191,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"671:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 169,
										"src": "671:19:4"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "671:19:4"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 188,
								"nodeType": "StructuredDocumentation",
								"src": "424:184:4",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503,
								169,
								682
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "627:25:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "756:7:4",
										"statements": []
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 195,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 194,
												"name": "onlyInitializing",
												"nameLocations": [
													"739:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 627,
												"src": "739:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "739:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "706:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:4"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:4"
									},
									"scope": 503,
									"src": "697:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "838:7:4",
										"statements": []
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 200,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 627,
												"src": "821:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "778:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:4"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:4"
									},
									"scope": 503,
									"src": "769:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 207,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "954:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "929:108:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 205,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "929:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "971:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1044:214:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 211,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1289:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "1263:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 209,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1263:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1312:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "1519:89:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 219,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "1574:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 217,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "1536:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1300_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1559:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1222,
															"src": "1536:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1196_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1536:59:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1196_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1596:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1195,
													"src": "1536:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 216,
												"id": 222,
												"nodeType": "Return",
												"src": "1529:72:4"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1385:67:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1466:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:2:4"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1510:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:9:4"
									},
									"scope": 503,
									"src": "1457:151:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "1762:218:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 233,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1810:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 231,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "1780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1148_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1799:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 836,
																"src": "1780:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1780:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1830:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1772:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1772:106:4"
											},
											{
												"expression": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 241,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "1926:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 238,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "1888:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1300_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1911:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1222,
																"src": "1888:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1196_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1888:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1196_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1948:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1195,
														"src": "1888:65:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 244,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1956:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1888:85:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1888:85:4"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "1614:80:4",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1708:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1735:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1727:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:27:4"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:0:4"
									},
									"scope": 503,
									"src": "1699:281:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "2142:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "2171:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 254,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2152:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2152:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 259,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "2213:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 258,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2204:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "EmitStatement",
												"src": "2199:32:4"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1986:95:4",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2095:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2114:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2106:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:27:4"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2142:0:4"
									},
									"scope": 503,
									"src": "2086:152:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2470:178:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "2491:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 273,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2480:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2480:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 277,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2523:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2528:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2523:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2537:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2523:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 281,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2542:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2523:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "2519:123:4",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "2553:89:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 286,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "2607:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 287,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "2626:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 283,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "2567:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1148_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2586:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1035,
																	"src": "2567:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2567:64:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 289,
															"nodeType": "ExpressionStatement",
															"src": "2567:64:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "2244:123:4",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2381:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2407:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2399:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2439:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2426:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2426:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2450:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2445:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:62:4"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:4"
									},
									"scope": 503,
									"src": "2372:276:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "2922:842:4",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 305,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "3274:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 303,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "3236:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1300_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3259:14:4",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1233,
															"src": "3236:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1199_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3236:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1199_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3290:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1198,
													"src": "3236:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 343,
													"nodeType": "Block",
													"src": "3365:393:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 328,
																		"nodeType": "Block",
																		"src": "3470:115:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 324,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 322,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 319,
																								"src": "3496:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 323,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 211,
																								"src": "3504:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3496:28:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3526:43:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 321,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3488:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3488:82:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 327,
																				"nodeType": "ExpressionStatement",
																				"src": "3488:82:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 329,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 320,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 319,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3464:4:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 329,
																				"src": "3456:12:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 318,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3456:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3455:14:4"
																	},
																	"src": "3447:138:4"
																},
																{
																	"block": {
																		"id": 334,
																		"nodeType": "Block",
																		"src": "3592:89:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 331,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3617:48:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 330,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3610:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3610:56:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 333,
																				"nodeType": "ExpressionStatement",
																				"src": "3610:56:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 335,
																	"nodeType": "TryCatchClause",
																	"src": "3586:95:4"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 314,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 296,
																				"src": "3412:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 313,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "3383:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$179_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3383:47:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$179",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3431:13:4",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "3383:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3383:63:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 336,
															"nodeType": "TryStatement",
															"src": "3379:302:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 338,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "3712:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 339,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "3731:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 340,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "3737:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 337,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "3694:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3694:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 342,
															"nodeType": "ExpressionStatement",
															"src": "3694:53:4"
														}
													]
												},
												"id": 344,
												"nodeType": "IfStatement",
												"src": "3232:526:4",
												"trueBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "3297:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "3330:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "3311:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3311:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 311,
															"nodeType": "ExpressionStatement",
															"src": "3311:37:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "2654:161:4",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2829:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2859:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2851:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2851:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2891:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2878:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2878:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2902:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2897:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2897:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2850:62:4"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2922:0:4"
									},
									"scope": 503,
									"src": "2820:944:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "3770:189:4",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 350,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "3990:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "3964:106:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 348,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3964:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4004:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "4185:80:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 358,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "4240:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 356,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "4202:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1300_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4225:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1222,
															"src": "4202:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1196_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4202:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1196_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4253:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1195,
													"src": "4202:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 355,
												"id": 361,
												"nodeType": "Return",
												"src": "4195:63:4"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "4077:50:4",
										"text": " @dev Returns the current admin."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4141:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4150:2:4"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "4176:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4175:9:4"
									},
									"scope": 503,
									"src": "4132:133:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "4392:167:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 370,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "4410:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4430:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4422:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 371,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4422:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4422:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4410:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4434:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4402:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4402:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "4402:73:4"
											},
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "4523:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 379,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "4485:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1300_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4508:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1222,
																"src": "4485:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1196_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4485:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1196_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4536:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1195,
														"src": "4485:56:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 385,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4544:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4485:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "4485:67:4"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "4271:71:4",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4356:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4374:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "4366:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:18:4"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4392:0:4"
									},
									"scope": 503,
									"src": "4347:212:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "4719:86:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 396,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "4747:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4747:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4760:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 395,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "4734:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4734:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "EmitStatement",
												"src": "4729:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4789:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 401,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "4779:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4779:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "4779:19:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "4565:100:4",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4679:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4700:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "4692:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:18:4"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4719:0:4"
									},
									"scope": 503,
									"src": "4670:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "4811:232:4",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 410,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5074:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "5048:107:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 408,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5048:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5089:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "5272:81:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 418,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "5327:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 416,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "5289:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1300_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5312:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1222,
															"src": "5289:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1196_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5289:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1196_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5341:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1195,
													"src": "5289:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 415,
												"id": 421,
												"nodeType": "Return",
												"src": "5282:64:4"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "5162:51:4",
										"text": " @dev Returns the current beacon."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5227:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5237:2:4"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "5263:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5262:9:4"
									},
									"scope": 503,
									"src": "5218:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "5482:368:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 432,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "5530:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "5500:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1148_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5519:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 836,
																"src": "5500:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5500:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5542:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5492:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5492:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "5492:90:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 441,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 426,
																					"src": "5662:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 440,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 513,
																				"src": "5643:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$513_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5643:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$513",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5673:14:4",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 512,
																		"src": "5643:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5643:46:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 438,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "5613:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1148_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5632:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 836,
																"src": "5613:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5613:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5704:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5592:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:172:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "5592:172:4"
											},
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 452,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "5812:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 449,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "5774:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1300_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5797:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1222,
																"src": "5774:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1196_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5774:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1196_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1195,
														"src": "5774:57:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 455,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "5834:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5774:69:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "5774:69:4"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "5359:71:4",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5444:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5463:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "5455:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:19:4"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5482:0:4"
									},
									"scope": 503,
									"src": "5435:415:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "6249:239:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "6270:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6259:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6259:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "6259:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 474,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "6310:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 473,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "6295:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6295:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "EmitStatement",
												"src": "6290:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 477,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "6334:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6339:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6334:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6348:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6334:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 481,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "6353:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6334:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "6330:152:4",
												"trueBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "6364:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 487,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 462,
																						"src": "6437:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 486,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 513,
																					"src": "6418:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$513_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6418:29:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$513",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6448:14:4",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 512,
																			"src": "6418:44:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6418:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 491,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6466:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 483,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "6378:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1148_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6397:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1035,
																	"src": "6378:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6378:93:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "6378:93:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "5856:292:4",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6162:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6194:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "6186:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6218:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "6205:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6205:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6229:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "6224:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6224:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:54:4"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6249:0:4"
									},
									"scope": 503,
									"src": "6153:335:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "6494:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 502,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "6773:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "6753:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 499,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6753:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 501,
										"length": {
											"hexValue": "3530",
											"id": 500,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6761:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "6753:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 504,
							"src": "609:6172:4",
							"usedErrors": []
						}
					],
					"src": "116:6666:4"
				},
				"id": 4
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							513
						]
					},
					"id": 514,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 513,
							"linearizedBaseContracts": [
								513
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "208:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "233:162:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "409:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:5"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:5"
									},
									"scope": 513,
									"src": "400:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 514,
							"src": "198:262:5",
							"usedErrors": []
						}
					],
					"src": "93:368:5"
				},
				"id": 5
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1148
						],
						"Initializable": [
							682
						]
					},
					"id": 683,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 683,
							"sourceUnit": 1149,
							"src": "138:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:6",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 682,
							"linearizedBaseContracts": [
								682
							],
							"name": "Initializable",
							"nameLocation": "2412:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:6",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 520,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "2546:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 519,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:6",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 523,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "2675:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 522,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:6",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 528,
									"name": "Initialized",
									"nameLocation": "2809:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2821:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 525,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:6"
									},
									"src": "2803:33:6"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "3269:483:6",
										"statements": [
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "3279:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 531,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:6",
													"subExpression": {
														"id": 533,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3302:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 537,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "3347:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 538,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 520,
																				"src": "3365:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 542,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:6",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 547,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$682",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$682",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 546,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 545,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 548,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 543,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1148,
																						"src": "3388:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1148_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:6",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 836,
																					"src": "3388:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 551,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 520,
																				"src": "3436:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 555,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:6"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 560,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3536:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:6"
											},
											{
												"condition": {
													"id": 564,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "3566:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "3562:65:6",
												"trueBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "3582:45:6",
													"statements": [
														{
															"expression": {
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 565,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "3596:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 568,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:6"
														}
													]
												}
											},
											{
												"id": 571,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:6"
											},
											{
												"condition": {
													"id": 572,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "3651:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "3647:99:6",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "3667:79:6",
													"statements": [
														{
															"expression": {
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 573,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "3681:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 576,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 577,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "3721:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "3716:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:6",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 584,
									"name": "initializer",
									"nameLocation": "3255:11:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:6"
									},
									"src": "3246:506:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "4863:255:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:6",
																"subExpression": {
																	"id": 590,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4882:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 592,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "4899:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 593,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "4914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:6"
											},
											{
												"expression": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 599,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4982:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 600,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "4997:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:6"
											},
											{
												"expression": {
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 603,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "5014:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:6"
											},
											{
												"id": 607,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:6"
											},
											{
												"expression": {
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 608,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "5055:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 613,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "5103:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 612,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "5091:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "EmitStatement",
												"src": "5086:25:6"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:6",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 617,
									"name": "reinitializer",
									"nameLocation": "4834:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4848:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 586,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:6"
									},
									"src": "4825:293:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5356:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "5374:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:6"
											},
											{
												"id": 625,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:6"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:6",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 627,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:6"
									},
									"src": "5328:125:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5988:231:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:6",
															"subExpression": {
																"id": 632,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "6007:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 637,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "6078:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 639,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 638,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "6074:139:6",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "6111:102:6",
													"statements": [
														{
															"expression": {
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 644,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "6125:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 646,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 645,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:6",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 655,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 654,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 653,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:6",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 652,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "6174:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "EmitStatement",
															"src": "6169:33:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:6",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:6"
									},
									"scope": 682,
									"src": "5939:280:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "6393:36:6",
										"statements": [
											{
												"expression": {
													"id": 669,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 520,
													"src": "6410:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 668,
												"id": 670,
												"nodeType": "Return",
												"src": "6403:19:6"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:6",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:6"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "6386:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 666,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:6"
									},
									"scope": 682,
									"src": "6329:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "6601:37:6",
										"statements": [
											{
												"expression": {
													"id": 678,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 523,
													"src": "6618:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 677,
												"id": 679,
												"nodeType": "Return",
												"src": "6611:20:6"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:6",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:6"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "6595:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:6"
									},
									"scope": 682,
									"src": "6545:93:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 683,
							"src": "2394:4246:6",
							"usedErrors": []
						}
					],
					"src": "113:6528:6"
				},
				"id": 6
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1148
						],
						"ERC1967UpgradeUpgradeable": [
							503
						],
						"IBeaconUpgradeable": [
							513
						],
						"IERC1822ProxiableUpgradeable": [
							179
						],
						"IERC1967Upgradeable": [
							169
						],
						"Initializable": [
							682
						],
						"StorageSlotUpgradeable": [
							1300
						],
						"UUPSUpgradeable": [
							818
						]
					},
					"id": 819,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 684,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:7"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 685,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 180,
							"src": "140:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 686,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 504,
							"src": "197:50:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 687,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 683,
							"src": "248:29:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 689,
										"name": "Initializable",
										"nameLocations": [
											"965:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 682,
										"src": "965:13:7"
									},
									"id": 690,
									"nodeType": "InheritanceSpecifier",
									"src": "965:13:7"
								},
								{
									"baseName": {
										"id": 691,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"980:28:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 179,
										"src": "980:28:7"
									},
									"id": 692,
									"nodeType": "InheritanceSpecifier",
									"src": "980:28:7"
								},
								{
									"baseName": {
										"id": 693,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1010:25:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 503,
										"src": "1010:25:7"
									},
									"id": 694,
									"nodeType": "InheritanceSpecifier",
									"src": "1010:25:7"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 688,
								"nodeType": "StructuredDocumentation",
								"src": "279:648:7",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 818,
							"linearizedBaseContracts": [
								818,
								503,
								169,
								179,
								682
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "946:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "1102:7:7",
										"statements": []
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 697,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 696,
												"name": "onlyInitializing",
												"nameLocations": [
													"1085:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 627,
												"src": "1085:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1085:16:7"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "1051:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:2:7"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:7"
									},
									"scope": 818,
									"src": "1042:67:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "1185:7:7",
										"statements": []
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 703,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 702,
												"name": "onlyInitializing",
												"nameLocations": [
													"1168:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 627,
												"src": "1168:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1168:16:7"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "1124:32:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:7"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:0:7"
									},
									"scope": 818,
									"src": "1115:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1197:87:7",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 713,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1315:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 818,
									"src": "1289:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 708,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1289:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 711,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1332:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$818",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$818",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 710,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1324:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 709,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1324:7:7",
												"typeDescriptions": {}
											}
										},
										"id": 712,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1324:13:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "1863:205:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 719,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1889:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$818",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$818",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 717,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1881:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1881:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 721,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1898:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1881:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1873:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "1873:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 727,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "1971:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1971:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 729,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1995:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1971:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "1963:87:7"
											},
											{
												"id": 734,
												"nodeType": "PlaceholderStatement",
												"src": "2060:1:7"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "1344:493:7",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 736,
									"name": "onlyProxy",
									"nameLocation": "1851:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:7"
									},
									"src": "1842:226:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "2298:120:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2324:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$818",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$818",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2316:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 740,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2316:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2316:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 744,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "2333:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2316:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:92:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "2308:92:7"
											},
											{
												"id": 749,
												"nodeType": "PlaceholderStatement",
												"src": "2410:1:7"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2074:195:7",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 751,
									"name": "notDelegated",
									"nameLocation": "2283:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:2:7"
									},
									"src": "2274:144:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										178
									],
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "3093:44:7",
										"statements": [
											{
												"expression": {
													"id": 760,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 211,
													"src": "3110:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 759,
												"id": 761,
												"nodeType": "Return",
												"src": "3103:27:7"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "2424:577:7",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 756,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 755,
												"name": "notDelegated",
												"nameLocations": [
													"3062:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 751,
												"src": "3062:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3062:12:7"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3015:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 754,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3053:8:7"
									},
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:7"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3084:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 757,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:9:7"
									},
									"scope": 818,
									"src": "3006:131:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "3458:124:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "3486:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 771,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "3468:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3468:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "3468:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "3536:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3565:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3555:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 777,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3559:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3555:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3569:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 775,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3514:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3514:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "3514:61:7"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "3143:239:7",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "3659cfe6",
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 769,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 768,
												"name": "onlyProxy",
												"nameLocations": [
													"3448:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 736,
												"src": "3448:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3448:9:7"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3396:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3414:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "3406:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:27:7"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3458:0:7"
									},
									"scope": 818,
									"src": "3387:195:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "4006:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 796,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4034:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 795,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4016:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4016:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "4016:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 800,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4084:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "4103:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4109:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 799,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "4062:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "4062:52:7"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "3588:308:7",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 793,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 792,
												"name": "onlyProxy",
												"nameLocations": [
													"3996:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 736,
												"src": "3996:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3996:9:7"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3910:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3935:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3927:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3967:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3954:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 789,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3954:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3926:46:7"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4006:0:7"
									},
									"scope": 818,
									"src": "3901:220:7",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "4127:397:7",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4538:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4564:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "4556:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:27:7"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4599:0:7"
									},
									"scope": 818,
									"src": "4529:71:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "4606:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 817,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4885:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 818,
									"src": "4865:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 814,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4865:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 816,
										"length": {
											"hexValue": "3530",
											"id": 815,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4873:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4865:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 819,
							"src": "928:3965:7",
							"usedErrors": []
						}
					],
					"src": "115:4779:7"
				},
				"id": 7
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1148
						]
					},
					"id": 1149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 820,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 821,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1148,
							"linearizedBaseContracts": [
								1148
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "1489:254:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 829,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "1713:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 828,
												"id": 834,
												"nodeType": "Return",
												"src": "1706:30:8"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1443:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:8"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1483:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:8"
									},
									"scope": 1148,
									"src": "1423:320:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2729:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 847,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1148",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1148",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 845,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 850,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "2772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:8"
											},
											{
												"assignments": [
													856,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "2824:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 855,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 857,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "2842:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 859,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "2864:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2893:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:8"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2677:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2704:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:8"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:8"
									},
									"scope": 1148,
									"src": "2658:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "3801:96:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "3840:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3848:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 880,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															928,
															972
														],
														"referencedDeclaration": 972,
														"src": "3818:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 879,
												"id": 886,
												"nodeType": "Return",
												"src": "3811:79:8"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3734:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3750:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:8"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3787:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 877,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:8"
									},
									"scope": 1148,
									"src": "3712:185:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "4266:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 901,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "4305:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "4313:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 904,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "4322:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 900,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															928,
															972
														],
														"referencedDeclaration": 972,
														"src": "4283:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 899,
												"id": 906,
												"nodeType": "Return",
												"src": "4276:59:8"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "4150:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "4174:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 892,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "4201:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:8"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "4252:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 897,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:8"
									},
									"scope": 1148,
									"src": "4119:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "4817:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "4856:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "4864:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 923,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "4870:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 920,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															928,
															972
														],
														"referencedDeclaration": 972,
														"src": "4834:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 919,
												"id": 926,
												"nodeType": "Return",
												"src": "4827:94:8"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "4735:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "4751:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "4770:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:8"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "4803:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:8"
									},
									"scope": 1148,
									"src": "4704:224:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "5355:267:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 945,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1148",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1148",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 943,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 948,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "5398:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:8"
											},
											{
												"assignments": [
													954,
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "5457:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 953,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "5471:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 955,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"arguments": [
														{
															"id": 961,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "5524:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 957,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "5498:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 959,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "5517:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "5573:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "5581:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 967,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "5590:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 968,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "5602:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 964,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "5546:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 941,
												"id": 970,
												"nodeType": "Return",
												"src": "5539:76:8"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5216:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5240:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 932,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5290:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:8"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5341:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:8"
									},
									"scope": 1148,
									"src": "5176:446:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "5899:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "5935:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5943:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 982,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															989,
															1018
														],
														"referencedDeclaration": 1018,
														"src": "5916:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 981,
												"id": 987,
												"nodeType": "Return",
												"src": "5909:80:8"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "5827:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "5843:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:8"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "5885:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:8"
									},
									"scope": 1148,
									"src": "5799:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "6338:168:8",
										"statements": [
											{
												"assignments": [
													1002,
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "6349:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1001,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "6363:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1003,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1007,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "6408:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1005,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "6390:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "6457:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "6465:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1013,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "6474:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1014,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "6486:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1010,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "6430:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1016,
												"nodeType": "Return",
												"src": "6423:76:8"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "6217:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "6241:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "6268:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:8"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "6324:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:8"
									},
									"scope": 1148,
									"src": "6180:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "6782:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1029,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "6820:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "6828:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1028,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1035,
															1064
														],
														"referencedDeclaration": 1064,
														"src": "6799:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1033,
												"nodeType": "Return",
												"src": "6792:84:8"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6715:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6731:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:8"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6768:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:8"
									},
									"scope": 1148,
									"src": "6685:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "7224:170:8",
										"statements": [
											{
												"assignments": [
													1048,
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "7235:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1047,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "7249:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1049,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"arguments": [
														{
															"id": 1053,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "7296:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1051,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "7276:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1057,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "7345:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "7353:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1059,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "7362:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1060,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "7374:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1056,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "7318:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1062,
												"nodeType": "Return",
												"src": "7311:76:8"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "7108:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "7132:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "7159:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:8"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "7210:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:8"
									},
									"scope": 1148,
									"src": "7069:325:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "7876:434:8",
										"statements": [
											{
												"condition": {
													"id": 1078,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1069,
													"src": "7890:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "8246:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1096,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "8268:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1097,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "8280:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1095,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "8260:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1099,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:8"
														}
													]
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "7886:418:8",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "7899:341:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1079,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "7917:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1091,
															"nodeType": "IfStatement",
															"src": "7913:286:8",
															"trueBody": {
																"id": 1090,
																"nodeType": "Block",
																"src": "7941:258:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1085,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1067,
																							"src": "8143:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1084,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 836,
																						"src": "8132:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1086,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1083,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1089,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1092,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "8219:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1077,
															"id": 1093,
															"nodeType": "Return",
															"src": "8212:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "7727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "7751:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "7773:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "7806:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1072,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:8"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "7862:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1075,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:8"
									},
									"scope": 1148,
									"src": "7682:628:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "8691:135:8",
										"statements": [
											{
												"condition": {
													"id": 1115,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1106,
													"src": "8705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "8762:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1120,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "8784:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1121,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "8796:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1119,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "8776:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1123,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:8"
														}
													]
												},
												"id": 1125,
												"nodeType": "IfStatement",
												"src": "8701:119:8",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "8714:42:8",
													"statements": [
														{
															"expression": {
																"id": 1116,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "8735:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1114,
															"id": 1117,
															"nodeType": "Return",
															"src": "8728:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:8",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "8566:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "8588:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "8621:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1109,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:8"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "8677:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:8"
									},
									"scope": 1148,
									"src": "8531:295:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "8915:457:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1134,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "8991:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "9321:45:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1141,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "9342:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1140,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:8"
														}
													]
												},
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "8987:379:8",
												"trueBody": {
													"id": 1139,
													"nodeType": "Block",
													"src": "9014:301:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1129,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1129,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:8",
																	"valueSize": 1
																}
															],
															"id": 1138,
															"nodeType": "InlineAssembly",
															"src": "9163:142:8"
														}
													]
												}
											}
										]
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "8849:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "8874:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:8"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:8"
									},
									"scope": 1148,
									"src": "8832:540:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1149,
							"src": "194:9180:8",
							"usedErrors": []
						}
					],
					"src": "101:9274:8"
				},
				"id": 8
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1148
						],
						"ContextUpgradeable": [
							1190
						],
						"Initializable": [
							682
						]
					},
					"id": 1191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1191,
							"sourceUnit": 683,
							"src": "110:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1153,
										"name": "Initializable",
										"nameLocations": [
											"691:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 682,
										"src": "691:13:9"
									},
									"id": 1154,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:9"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1152,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1190,
							"linearizedBaseContracts": [
								1190,
								682
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "763:7:9",
										"statements": []
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1156,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 627,
												"src": "746:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:9"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:9"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:9"
									},
									"scope": 1190,
									"src": "711:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "838:7:9",
										"statements": []
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1162,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 627,
												"src": "821:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:9"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:9"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:9"
									},
									"scope": 1190,
									"src": "776:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "912:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1171,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1173,
												"nodeType": "Return",
												"src": "922:17:9"
											}
										]
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:9"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "903:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:9"
									},
									"scope": 1190,
									"src": "850:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "1019:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1180,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1179,
												"id": 1182,
												"nodeType": "Return",
												"src": "1029:15:9"
											}
										]
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:9"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1003:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:9"
									},
									"scope": 1190,
									"src": "952:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:9",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1189,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1190,
									"src": "1316:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1186,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1188,
										"length": {
											"hexValue": "3530",
											"id": 1187,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1191,
							"src": "651:693:9",
							"usedErrors": []
						}
					],
					"src": "86:1259:9"
				},
				"id": 9
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							1300
						]
					},
					"id": 1301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1193,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 1300,
							"linearizedBaseContracts": [
								1300
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1428:22:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 1196,
									"members": [
										{
											"constant": false,
											"id": 1195,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1494:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1196,
											"src": "1486:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1194,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1486:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1464:11:10",
									"nodeType": "StructDefinition",
									"scope": 1300,
									"src": "1457:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 1199,
									"members": [
										{
											"constant": false,
											"id": 1198,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1546:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1199,
											"src": "1541:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1197,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1541:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1519:11:10",
									"nodeType": "StructDefinition",
									"scope": 1300,
									"src": "1512:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 1202,
									"members": [
										{
											"constant": false,
											"id": 1201,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1601:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1202,
											"src": "1593:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1200,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1593:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1571:11:10",
									"nodeType": "StructDefinition",
									"scope": 1300,
									"src": "1564:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 1205,
									"members": [
										{
											"constant": false,
											"id": 1204,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1656:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1205,
											"src": "1648:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1203,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1648:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1626:11:10",
									"nodeType": "StructDefinition",
									"scope": 1300,
									"src": "1619:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.StringSlot",
									"id": 1208,
									"members": [
										{
											"constant": false,
											"id": 1207,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1709:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "1702:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1206,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1702:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1681:10:10",
									"nodeType": "StructDefinition",
									"scope": 1300,
									"src": "1674:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BytesSlot",
									"id": 1211,
									"members": [
										{
											"constant": false,
											"id": 1210,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1760:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "1754:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1209,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1754:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1734:9:10",
									"nodeType": "StructDefinition",
									"scope": 1300,
									"src": "1727:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "1954:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2016:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2030:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2040:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1218,
														"isOffset": false,
														"isSlot": true,
														"src": "2030:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1214,
														"isOffset": false,
														"isSlot": false,
														"src": "2040:4:10",
														"valueSize": 1
													}
												],
												"id": 1220,
												"nodeType": "InlineAssembly",
												"src": "2007:47:10"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "1778:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1879:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1902:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1894:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:14:10"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1951:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1931:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1196_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 1217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1216,
														"name": "AddressSlot",
														"nameLocations": [
															"1931:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1196,
														"src": "1931:11:10"
													},
													"referencedDeclaration": 1196,
													"src": "1931:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1196_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:23:10"
									},
									"scope": 1300,
									"src": "1870:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "2242:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2304:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2318:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2328:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1229,
														"isOffset": false,
														"isSlot": true,
														"src": "2318:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1225,
														"isOffset": false,
														"isSlot": false,
														"src": "2328:4:10",
														"valueSize": 1
													}
												],
												"id": 1231,
												"nodeType": "InlineAssembly",
												"src": "2295:47:10"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "2066:87:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2167:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2190:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2182:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:14:10"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2239:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2219:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1199_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 1228,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1227,
														"name": "BooleanSlot",
														"nameLocations": [
															"2219:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1199,
														"src": "2219:11:10"
													},
													"referencedDeclaration": 1199,
													"src": "2219:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1199_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:23:10"
									},
									"scope": 1300,
									"src": "2158:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "2530:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2592:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2606:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2616:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1240,
														"isOffset": false,
														"isSlot": true,
														"src": "2606:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1236,
														"isOffset": false,
														"isSlot": false,
														"src": "2616:4:10",
														"valueSize": 1
													}
												],
												"id": 1242,
												"nodeType": "InlineAssembly",
												"src": "2583:47:10"
											}
										]
									},
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "2354:87:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2455:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2478:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2470:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:14:10"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2527:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2507:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1202_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 1239,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1238,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2507:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1202,
														"src": "2507:11:10"
													},
													"referencedDeclaration": 1202,
													"src": "2507:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1202_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:23:10"
									},
									"scope": 1300,
									"src": "2446:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "2818:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2880:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2894:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2904:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1251,
														"isOffset": false,
														"isSlot": true,
														"src": "2894:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1247,
														"isOffset": false,
														"isSlot": false,
														"src": "2904:4:10",
														"valueSize": 1
													}
												],
												"id": 1253,
												"nodeType": "InlineAssembly",
												"src": "2871:47:10"
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "2642:87:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2743:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2766:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2758:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:14:10"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2815:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2795:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1205_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 1250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1249,
														"name": "Uint256Slot",
														"nameLocations": [
															"2795:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1205,
														"src": "2795:11:10"
													},
													"referencedDeclaration": 1205,
													"src": "2795:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1205_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:23:10"
									},
									"scope": 1300,
									"src": "2734:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "3103:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3165:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3179:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3189:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1262,
														"isOffset": false,
														"isSlot": true,
														"src": "3179:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1258,
														"isOffset": false,
														"isSlot": false,
														"src": "3189:4:10",
														"valueSize": 1
													}
												],
												"id": 1264,
												"nodeType": "InlineAssembly",
												"src": "3156:47:10"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "2930:86:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3030:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3052:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3044:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:14:10"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3100:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3081:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1208_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 1261,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1260,
														"name": "StringSlot",
														"nameLocations": [
															"3081:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1208,
														"src": "3081:10:10"
													},
													"referencedDeclaration": 1208,
													"src": "3081:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1208_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:22:10"
									},
									"scope": 1300,
									"src": "3021:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "3411:112:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3473:44:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3487:20:10",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3497:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1273,
														"isOffset": false,
														"isSlot": true,
														"src": "3487:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1269,
														"isOffset": false,
														"isSlot": true,
														"src": "3497:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1275,
												"nodeType": "InlineAssembly",
												"src": "3464:53:10"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "3215:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3330:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3359:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "3344:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3344:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:22:10"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3408:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "3389:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1208_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 1272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1271,
														"name": "StringSlot",
														"nameLocations": [
															"3389:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1208,
														"src": "3389:10:10"
													},
													"referencedDeclaration": 1208,
													"src": "3389:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1208_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:22:10"
									},
									"scope": 1300,
									"src": "3321:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "3699:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3761:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3775:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3785:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3775:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1284,
														"isOffset": false,
														"isSlot": true,
														"src": "3775:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1280,
														"isOffset": false,
														"isSlot": false,
														"src": "3785:4:10",
														"valueSize": 1
													}
												],
												"id": 1286,
												"nodeType": "InlineAssembly",
												"src": "3752:47:10"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "3529:85:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3628:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3649:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3641:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:14:10"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3696:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3678:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1211_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 1283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1282,
														"name": "BytesSlot",
														"nameLocations": [
															"3678:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1211,
														"src": "3678:9:10"
													},
													"referencedDeclaration": 1211,
													"src": "3678:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1211_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:21:10"
									},
									"scope": 1300,
									"src": "3619:186:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "4002:112:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4064:44:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4078:20:10",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4088:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1295,
														"isOffset": false,
														"isSlot": true,
														"src": "4078:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1291,
														"isOffset": false,
														"isSlot": true,
														"src": "4088:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1297,
												"nodeType": "InlineAssembly",
												"src": "4055:53:10"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "3811:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3924:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3951:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "3937:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3937:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:21:10"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3999:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "3981:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1211_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 1294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1293,
														"name": "BytesSlot",
														"nameLocations": [
															"3981:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1211,
														"src": "3981:9:10"
													},
													"referencedDeclaration": 1211,
													"src": "3981:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1211_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:21:10"
									},
									"scope": 1300,
									"src": "3915:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1301,
							"src": "1420:2696:10",
							"usedErrors": []
						}
					],
					"src": "193:3924:10"
				},
				"id": 10
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
					"exportedSymbols": {
						"ERC165CheckerUpgradeable": [
							1494
						],
						"IERC165Upgradeable": [
							1506
						]
					},
					"id": 1495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:11"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 1507,
							"src": "146:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC165CheckerUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1304,
								"nodeType": "StructuredDocumentation",
								"src": "182:277:11",
								"text": " @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."
							},
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494
							],
							"name": "ERC165CheckerUpgradeable",
							"nameLocation": "468:24:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1307,
									"mutability": "constant",
									"name": "_INTERFACE_ID_INVALID",
									"nameLocation": "597:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "573:58:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1305,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "573:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786666666666666666",
										"id": 1306,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "621:10:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967295_by_1",
											"typeString": "int_const 4294967295"
										},
										"value": "0xffffffff"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "796:368:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1316,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "1030:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1318,
																			"name": "IERC165Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "1044:18:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1506_$",
																				"typeString": "type(contract IERC165Upgradeable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1506_$",
																				"typeString": "type(contract IERC165Upgradeable)"
																			}
																		],
																		"id": 1317,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1039:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1039:24:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$1506",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1064:11:11",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1039:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1315,
															"name": "supportsERC165InterfaceUnchecked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "997:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "997:79:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1092:65:11",
														"subExpression": {
															"arguments": [
																{
																	"id": 1323,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "1126:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1324,
																	"name": "_INTERFACE_ID_INVALID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "1135:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 1322,
																"name": "supportsERC165InterfaceUnchecked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "1093:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (address,bytes4) view returns (bool)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1093:64:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "997:160:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1328,
												"nodeType": "Return",
												"src": "978:179:11"
											}
										]
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "638:83:11",
										"text": " @dev Returns true if `account` supports the {IERC165} interface."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsERC165",
									"nameLocation": "735:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "758:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "750:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:17:11"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "790:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "790:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:6:11"
									},
									"scope": 1494,
									"src": "726:438:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "1475:189:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1341,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "1591:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1340,
															"name": "supportsERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "1576:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1576:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"id": 1344,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "1636:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1345,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "1645:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1343,
															"name": "supportsERC165InterfaceUnchecked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "1603:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1603:54:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1576:81:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1348,
												"nodeType": "Return",
												"src": "1569:88:11"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "1170:207:11",
										"text": " @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1391:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1417:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1409:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1433:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1426:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1426:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:37:11"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1469:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:6:11"
									},
									"scope": 1494,
									"src": "1382:282:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "2188:560:11",
										"statements": [
											{
												"assignments": [
													1366
												],
												"declarations": [
													{
														"constant": false,
														"id": 1366,
														"mutability": "mutable",
														"name": "interfaceIdsSupported",
														"nameLocation": "2311:21:11",
														"nodeType": "VariableDeclaration",
														"scope": 1405,
														"src": "2297:35:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[]"
														},
														"typeName": {
															"baseType": {
																"id": 1364,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "2297:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1365,
															"nodeType": "ArrayTypeName",
															"src": "2297:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1373,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1370,
																"name": "interfaceIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "2346:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2359:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2346:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2335:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bool[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1367,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "2339:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1368,
															"nodeType": "ArrayTypeName",
															"src": "2339:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2297:69:11"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1375,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "2438:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1374,
														"name": "supportsERC165",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "2423:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1402,
												"nodeType": "IfStatement",
												"src": "2419:284:11",
												"trueBody": {
													"id": 1401,
													"nodeType": "Block",
													"src": "2448:255:11",
													"statements": [
														{
															"body": {
																"id": 1399,
																"nodeType": "Block",
																"src": "2575:118:11",
																"statements": [
																	{
																		"expression": {
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1388,
																					"name": "interfaceIdsSupported",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1366,
																					"src": "2593:21:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																						"typeString": "bool[] memory"
																					}
																				},
																				"id": 1390,
																				"indexExpression": {
																					"id": 1389,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1378,
																					"src": "2615:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2593:24:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1392,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1353,
																						"src": "2653:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"baseExpression": {
																							"id": 1393,
																							"name": "interfaceIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1356,
																							"src": "2662:12:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						},
																						"id": 1395,
																						"indexExpression": {
																							"id": 1394,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1378,
																							"src": "2675:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2662:15:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 1391,
																					"name": "supportsERC165InterfaceUnchecked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "2620:32:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																						"typeString": "function (address,bytes4) view returns (bool)"
																					}
																				},
																				"id": 1396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2620:58:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2593:85:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1398,
																		"nodeType": "ExpressionStatement",
																		"src": "2593:85:11"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1381,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "2545:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1382,
																		"name": "interfaceIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "2549:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																			"typeString": "bytes4[] memory"
																		}
																	},
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2562:6:11",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2549:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2545:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1400,
															"initializationExpression": {
																"assignments": [
																	1378
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1378,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2538:1:11",
																		"nodeType": "VariableDeclaration",
																		"scope": 1400,
																		"src": "2530:9:11",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1377,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2530:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1380,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2542:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2530:13:11"
															},
															"loopExpression": {
																"expression": {
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2570:3:11",
																	"subExpression": {
																		"id": 1385,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "2570:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1387,
																"nodeType": "ExpressionStatement",
																"src": "2570:3:11"
															},
															"nodeType": "ForStatement",
															"src": "2525:168:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1403,
													"name": "interfaceIdsSupported",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1366,
													"src": "2720:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"functionReturnParameters": 1361,
												"id": 1404,
												"nodeType": "Return",
												"src": "2713:28:11"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "1670:374:11",
										"text": " @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedInterfaces",
									"nameLocation": "2058:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2098:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2090:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "interfaceIds",
												"nameLocation": "2131:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2115:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1354,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "2115:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1355,
													"nodeType": "ArrayTypeName",
													"src": "2115:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:69:11"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2173:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1358,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "2173:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1359,
													"nodeType": "ArrayTypeName",
													"src": "2173:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:15:11"
									},
									"scope": 1494,
									"src": "2049:699:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "3190:436:11",
										"statements": [
											{
												"condition": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3246:24:11",
													"subExpression": {
														"arguments": [
															{
																"id": 1418,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "3262:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1417,
															"name": "supportsERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "3247:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3247:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"nodeType": "IfStatement",
												"src": "3242:67:11",
												"trueBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "3272:37:11",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3293:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1416,
															"id": 1422,
															"nodeType": "Return",
															"src": "3286:12:11"
														}
													]
												}
											},
											{
												"body": {
													"id": 1447,
													"nodeType": "Block",
													"src": "3428:134:11",
													"statements": [
														{
															"condition": {
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3446:59:11",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1437,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "3480:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1438,
																				"name": "interfaceIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1412,
																				"src": "3489:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"id": 1440,
																			"indexExpression": {
																				"id": 1439,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "3502:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3489:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1436,
																		"name": "supportsERC165InterfaceUnchecked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "3447:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																			"typeString": "function (address,bytes4) view returns (bool)"
																		}
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3447:58:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1446,
															"nodeType": "IfStatement",
															"src": "3442:110:11",
															"trueBody": {
																"id": 1445,
																"nodeType": "Block",
																"src": "3507:45:11",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3532:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1416,
																		"id": 1444,
																		"nodeType": "Return",
																		"src": "3525:12:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1429,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "3398:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1430,
															"name": "interfaceIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "3402:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3415:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3402:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3398:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"initializationExpression": {
													"assignments": [
														1426
													],
													"declarations": [
														{
															"constant": false,
															"id": 1426,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3391:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1448,
															"src": "3383:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1425,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3383:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1428,
													"initialValue": {
														"hexValue": "30",
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3383:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3423:3:11",
														"subExpression": {
															"id": 1433,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "3423:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1435,
													"nodeType": "ExpressionStatement",
													"src": "3423:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3378:184:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3615:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1416,
												"id": 1450,
												"nodeType": "Return",
												"src": "3608:11:11"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "2754:324:11",
										"text": " @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsAllInterfaces",
									"nameLocation": "3092:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3122:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3114:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "interfaceIds",
												"nameLocation": "3147:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3131:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1410,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "3131:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1411,
													"nodeType": "ArrayTypeName",
													"src": "3131:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:47:11"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3184:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3184:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3183:6:11"
									},
									"scope": 1494,
									"src": "3083:543:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "4562:550:11",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "encodedParams",
														"nameLocation": "4609:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "4596:26:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1462,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4596:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1471,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1466,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "4648:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1506_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4667:17:11",
																"memberName": "supportsInterface",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1505,
																"src": "4648:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function IERC165Upgradeable.supportsInterface(bytes4) view returns (bool)"
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4685:8:11",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4648:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1469,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "4695:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1464,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4625:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4629:18:11",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4625:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4625:82:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4596:111:11"
											},
											{
												"assignments": [
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4754:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "4749:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1472,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4749:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"nodeType": "VariableDeclarationStatement",
												"src": "4749:12:11"
											},
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "4779:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "4771:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4771:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"nodeType": "VariableDeclarationStatement",
												"src": "4771:18:11"
											},
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "4807:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "4799:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4799:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"nodeType": "VariableDeclarationStatement",
												"src": "4799:19:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4837:203:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4851:97:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4873:5:11",
																		"type": "",
																		"value": "30000"
																	},
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "4880:7:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "encodedParams",
																				"nodeType": "YulIdentifier",
																				"src": "4893:13:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4908:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4889:24:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "encodedParams",
																				"nodeType": "YulIdentifier",
																				"src": "4921:13:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4915:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4915:20:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4937:4:11",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4943:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "4862:10:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4862:86:11"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "4851:7:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4961:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "4975:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:16:11"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "4961:10:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5004:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5025:4:11",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5019:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:11:11"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "5004:11:11"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1455,
														"isOffset": false,
														"isSlot": false,
														"src": "4880:7:11",
														"valueSize": 1
													},
													{
														"declaration": 1463,
														"isOffset": false,
														"isSlot": false,
														"src": "4893:13:11",
														"valueSize": 1
													},
													{
														"declaration": 1463,
														"isOffset": false,
														"isSlot": false,
														"src": "4921:13:11",
														"valueSize": 1
													},
													{
														"declaration": 1476,
														"isOffset": false,
														"isSlot": false,
														"src": "4961:10:11",
														"valueSize": 1
													},
													{
														"declaration": 1479,
														"isOffset": false,
														"isSlot": false,
														"src": "5004:11:11",
														"valueSize": 1
													},
													{
														"declaration": 1473,
														"isOffset": false,
														"isSlot": false,
														"src": "4851:7:11",
														"valueSize": 1
													}
												],
												"id": 1481,
												"nodeType": "InlineAssembly",
												"src": "4828:212:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1482,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "5057:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1483,
																"name": "returnSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "5068:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30783230",
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5082:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "0x20"
															},
															"src": "5068:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5057:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1487,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "5090:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5104:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5090:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5057:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1491,
												"nodeType": "Return",
												"src": "5050:55:11"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "3632:817:11",
										"text": " @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsERC165InterfaceUnchecked",
									"nameLocation": "4463:32:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4504:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4496:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4520:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4513:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4513:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4495:37:11"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4556:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4556:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:6:11"
									},
									"scope": 1494,
									"src": "4454:658:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1495,
							"src": "460:4654:11",
							"usedErrors": []
						}
					],
					"src": "121:4994:11"
				},
				"id": 11
			},
			"https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1506
						]
					},
					"id": 1507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1497,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1506,
							"linearizedBaseContracts": [
								1506
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "812:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:12"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "855:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:12"
									},
									"scope": 1506,
									"src": "785:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1507,
							"src": "405:458:12",
							"usedErrors": []
						}
					],
					"src": "100:764:12"
				},
				"id": 12
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
					"exportedSymbols": {
						"IABIResolver": [
							1726
						],
						"IAddrResolver": [
							1744
						],
						"IAddressResolver": [
							1765
						],
						"IContentHashResolver": [
							1782
						],
						"IDNSRecordResolver": [
							1815
						],
						"IDNSZoneResolver": [
							1834
						],
						"IERC165": [
							11
						],
						"IExtendedResolver": [
							1846
						],
						"IInterfaceResolver": [
							1867
						],
						"INameResolver": [
							1884
						],
						"IPubkeyResolver": [
							1905
						],
						"ITextResolver": [
							1928
						],
						"Resolver": [
							1705
						]
					},
					"id": 1706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1508,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:13"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
							"file": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/introspection/IERC165.sol",
							"id": 1509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 12,
							"src": "57:128:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
							"file": "./profiles/IABIResolver.sol",
							"id": 1510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1727,
							"src": "186:37:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
							"file": "./profiles/IAddressResolver.sol",
							"id": 1511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1766,
							"src": "224:41:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
							"file": "./profiles/IAddrResolver.sol",
							"id": 1512,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1745,
							"src": "266:38:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
							"file": "./profiles/IContentHashResolver.sol",
							"id": 1513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1783,
							"src": "305:45:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
							"file": "./profiles/IDNSRecordResolver.sol",
							"id": 1514,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1816,
							"src": "351:43:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
							"file": "./profiles/IDNSZoneResolver.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1835,
							"src": "395:41:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
							"file": "./profiles/IInterfaceResolver.sol",
							"id": 1516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1868,
							"src": "437:43:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
							"file": "./profiles/INameResolver.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1885,
							"src": "481:38:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
							"file": "./profiles/IPubkeyResolver.sol",
							"id": 1518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1906,
							"src": "520:40:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
							"file": "./profiles/ITextResolver.sol",
							"id": 1519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1929,
							"src": "561:38:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
							"file": "./profiles/IExtendedResolver.sol",
							"id": 1520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1706,
							"sourceUnit": 1847,
							"src": "600:42:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1522,
										"name": "IERC165",
										"nameLocations": [
											"773:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "773:7:13"
									},
									"id": 1523,
									"nodeType": "InheritanceSpecifier",
									"src": "773:7:13"
								},
								{
									"baseName": {
										"id": 1524,
										"name": "IABIResolver",
										"nameLocations": [
											"786:12:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1726,
										"src": "786:12:13"
									},
									"id": 1525,
									"nodeType": "InheritanceSpecifier",
									"src": "786:12:13"
								},
								{
									"baseName": {
										"id": 1526,
										"name": "IAddressResolver",
										"nameLocations": [
											"804:16:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1765,
										"src": "804:16:13"
									},
									"id": 1527,
									"nodeType": "InheritanceSpecifier",
									"src": "804:16:13"
								},
								{
									"baseName": {
										"id": 1528,
										"name": "IAddrResolver",
										"nameLocations": [
											"826:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1744,
										"src": "826:13:13"
									},
									"id": 1529,
									"nodeType": "InheritanceSpecifier",
									"src": "826:13:13"
								},
								{
									"baseName": {
										"id": 1530,
										"name": "IContentHashResolver",
										"nameLocations": [
											"845:20:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1782,
										"src": "845:20:13"
									},
									"id": 1531,
									"nodeType": "InheritanceSpecifier",
									"src": "845:20:13"
								},
								{
									"baseName": {
										"id": 1532,
										"name": "IDNSRecordResolver",
										"nameLocations": [
											"871:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1815,
										"src": "871:18:13"
									},
									"id": 1533,
									"nodeType": "InheritanceSpecifier",
									"src": "871:18:13"
								},
								{
									"baseName": {
										"id": 1534,
										"name": "IDNSZoneResolver",
										"nameLocations": [
											"895:16:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1834,
										"src": "895:16:13"
									},
									"id": 1535,
									"nodeType": "InheritanceSpecifier",
									"src": "895:16:13"
								},
								{
									"baseName": {
										"id": 1536,
										"name": "IInterfaceResolver",
										"nameLocations": [
											"917:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1867,
										"src": "917:18:13"
									},
									"id": 1537,
									"nodeType": "InheritanceSpecifier",
									"src": "917:18:13"
								},
								{
									"baseName": {
										"id": 1538,
										"name": "INameResolver",
										"nameLocations": [
											"941:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1884,
										"src": "941:13:13"
									},
									"id": 1539,
									"nodeType": "InheritanceSpecifier",
									"src": "941:13:13"
								},
								{
									"baseName": {
										"id": 1540,
										"name": "IPubkeyResolver",
										"nameLocations": [
											"960:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1905,
										"src": "960:15:13"
									},
									"id": 1541,
									"nodeType": "InheritanceSpecifier",
									"src": "960:15:13"
								},
								{
									"baseName": {
										"id": 1542,
										"name": "ITextResolver",
										"nameLocations": [
											"981:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1928,
										"src": "981:13:13"
									},
									"id": 1543,
									"nodeType": "InheritanceSpecifier",
									"src": "981:13:13"
								},
								{
									"baseName": {
										"id": 1544,
										"name": "IExtendedResolver",
										"nameLocations": [
											"1000:17:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1846,
										"src": "1000:17:13"
									},
									"id": 1545,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:17:13"
								}
							],
							"canonicalName": "Resolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1521,
								"nodeType": "StructuredDocumentation",
								"src": "644:102:13",
								"text": " A generic resolver interface which includes all the functions including the ones deprecated"
							},
							"fullyImplemented": false,
							"id": 1705,
							"linearizedBaseContracts": [
								1705,
								1846,
								1928,
								1905,
								1884,
								1867,
								1834,
								1815,
								1782,
								1744,
								1765,
								1726,
								11
							],
							"name": "Resolver",
							"nameLocation": "757:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0424b6fe0d9c3bdbece0e7879dc241bb0c22e900be8b6c168b4ee08bd9bf83bc",
									"id": 1551,
									"name": "ContentChanged",
									"nameLocation": "1058:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1089:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "1073:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"indexed": false,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1103:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "1095:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:36:13"
									},
									"src": "1052:57:13"
								},
								{
									"functionSelector": "a22cb465",
									"id": 1558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1124:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1142:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1151:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:15:13"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:0:13"
									},
									"scope": 1705,
									"src": "1115:51:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a4b91a01",
									"id": 1567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1181:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1197:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1189:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "1211:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1203:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1226:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1221:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1221:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:47:13"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:0:13"
									},
									"scope": 1705,
									"src": "1172:73:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1260:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1285:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "1277:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1302:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "1294:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:35:13"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:0:13"
									},
									"scope": 1705,
									"src": "1251:70:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9784b3e",
									"id": 1583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedFor",
									"nameLocation": "1336:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1367:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1359:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1390:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1382:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1577,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "1412:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1404:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:77:13"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:0:13"
									},
									"scope": 1705,
									"src": "1327:109:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "623195b0",
									"id": 1592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setABI",
									"nameLocation": "1451:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1475:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1467:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1584,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "contentType",
												"nameLocation": "1497:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1489:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1533:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1518:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1518:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:86:13"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1552:0:13"
									},
									"scope": 1705,
									"src": "1442:111:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5fa2b00",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddr",
									"nameLocation": "1568:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1584:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1576:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1598:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1590:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:28:13"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:0:13"
									},
									"scope": 1705,
									"src": "1559:54:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8b95dd71",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddr",
									"nameLocation": "1628:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1644:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "1636:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1600,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "coinType",
												"nameLocation": "1658:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "1650:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1683:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "1668:16:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1668:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1635:50:13"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:13"
									},
									"scope": 1705,
									"src": "1619:76:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "304e6ade",
									"id": 1615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContenthash",
									"nameLocation": "1710:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1733:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1725:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1609,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1754:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1739:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:35:13"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:13"
									},
									"scope": 1705,
									"src": "1701:68:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "76196c88",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDnsrr",
									"nameLocation": "1784:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1801:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "1793:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1822:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "1807:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1807:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:35:13"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1836:0:13"
									},
									"scope": 1705,
									"src": "1775:62:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "77372213",
									"id": 1629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setName",
									"nameLocation": "1852:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1868:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "1860:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1623,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1890:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "1874:21:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1874:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:37:13"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1905:0:13"
									},
									"scope": 1705,
									"src": "1843:63:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "29cd62ea",
									"id": 1638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPubkey",
									"nameLocation": "1921:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1939:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1931:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1953:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1945:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1632,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1964:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1956:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:36:13"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:13"
									},
									"scope": 1705,
									"src": "1912:64:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "10f13a8c",
									"id": 1647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setText",
									"nameLocation": "1991:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2016:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2008:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1639,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2046:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2030:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1641,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2030:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2075:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2059:21:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2059:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:88:13"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2095:0:13"
									},
									"scope": 1705,
									"src": "1982:114:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e59d895d",
									"id": 1656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterface",
									"nameLocation": "2111:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2141:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "2133:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "2162:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "2155:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2155:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "2191:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "2183:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:85:13"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2217:0:13"
									},
									"scope": 1705,
									"src": "2102:116:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ac9650d8",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nameLocation": "2233:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2269:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2252:21:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1657,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2252:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1658,
													"nodeType": "ArrayTypeName",
													"src": "2252:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:37:13"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "2313:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2298:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1661,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2298:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1662,
													"nodeType": "ArrayTypeName",
													"src": "2298:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:24:13"
									},
									"scope": 1705,
									"src": "2224:98:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e32954eb",
									"id": 1676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicallWithNodeCheck",
									"nameLocation": "2337:22:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "nodehash",
												"nameLocation": "2377:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2369:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2412:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2395:21:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1668,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2395:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1669,
													"nodeType": "ArrayTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2359:63:13"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "2456:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2441:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1672,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2441:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1673,
													"nodeType": "ArrayTypeName",
													"src": "2441:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:24:13"
									},
									"scope": 1705,
									"src": "2328:137:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2dff6941",
									"id": 1683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "content",
									"nameLocation": "2511:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2527:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2519:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1677,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2518:14:13"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2556:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1680,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2556:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:9:13"
									},
									"scope": 1705,
									"src": "2502:63:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e89401a1",
									"id": 1690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multihash",
									"nameLocation": "2580:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2598:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2590:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2590:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2589:14:13"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2627:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2627:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:14:13"
									},
									"scope": 1705,
									"src": "2571:70:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c3d014d6",
									"id": 1697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContent",
									"nameLocation": "2656:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2675:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2667:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2689:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2681:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1693,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2681:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:28:13"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:13"
									},
									"scope": 1705,
									"src": "2647:57:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa4cb547",
									"id": 1704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMultihash",
									"nameLocation": "2719:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2740:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "2732:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2761:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "2746:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1700,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2746:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:35:13"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2775:0:13"
									},
									"scope": 1705,
									"src": "2710:66:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1706,
							"src": "747:2031:13",
							"usedErrors": []
						}
					],
					"src": "31:2748:13"
				},
				"id": 13
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IABIResolver.sol",
					"exportedSymbols": {
						"IABIResolver": [
							1726
						]
					},
					"id": 1727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1707,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IABIResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1726,
							"linearizedBaseContracts": [
								1726
							],
							"name": "IABIResolver",
							"nameLocation": "68:12:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "aa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe3",
									"id": 1713,
									"name": "ABIChanged",
									"nameLocation": "93:10:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "120:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "104:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1708,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"indexed": true,
												"mutability": "mutable",
												"name": "contentType",
												"nameLocation": "142:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "126:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "103:51:14"
									},
									"src": "87:68:14"
								},
								{
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "161:310:14",
										"text": " Returns the ABI associated with an ENS node.\n Defined in EIP205.\n @param node The ENS node to query\n @param contentTypes A bitwise OR of the ABI formats accepted by the caller.\n @return contentType The content type of the return value\n @return data The ABI data"
									},
									"functionSelector": "2203ab56",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ABI",
									"nameLocation": "485:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "506:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "498:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1715,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "contentTypes",
												"nameLocation": "528:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "520:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:58:14"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "570:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "579:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "579:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:23:14"
									},
									"scope": 1726,
									"src": "476:117:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1727,
							"src": "58:537:14",
							"usedErrors": []
						}
					],
					"src": "32:564:14"
				},
				"id": 14
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddrResolver.sol",
					"exportedSymbols": {
						"IAddrResolver": [
							1744
						]
					},
					"id": 1745,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1728,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAddrResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1729,
								"nodeType": "StructuredDocumentation",
								"src": "58:61:15",
								"text": " Interface for the legacy (ETH-only) addr function."
							},
							"fullyImplemented": false,
							"id": 1744,
							"linearizedBaseContracts": [
								1744
							],
							"name": "IAddrResolver",
							"nameLocation": "130:13:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd2",
									"id": 1735,
									"name": "AddrChanged",
									"nameLocation": "156:11:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "184:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "168:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"indexed": false,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "198:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "190:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:33:15"
									},
									"src": "150:51:15"
								},
								{
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "207:148:15",
										"text": " Returns the address associated with an ENS node.\n @param node The ENS node to query.\n @return The associated address."
									},
									"functionSelector": "3b3b57de",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addr",
									"nameLocation": "369:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "382:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "374:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:14:15"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "411:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:15:15",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:17:15"
									},
									"scope": 1744,
									"src": "360:68:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1745,
							"src": "120:310:15",
							"usedErrors": []
						}
					],
					"src": "32:399:15"
				},
				"id": 15
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IAddressResolver.sol",
					"exportedSymbols": {
						"IAddressResolver": [
							1765
						]
					},
					"id": 1766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1746,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAddressResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1747,
								"nodeType": "StructuredDocumentation",
								"src": "58:59:16",
								"text": " Interface for the new (multicoin) addr function."
							},
							"fullyImplemented": false,
							"id": 1765,
							"linearizedBaseContracts": [
								1765
							],
							"name": "IAddressResolver",
							"nameLocation": "128:16:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "65412581168e88a1e60c6459d7f44ae83ad0832e670826c05a4e2476b57af752",
									"id": 1755,
									"name": "AddressChanged",
									"nameLocation": "157:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "197:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "181:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1748,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"indexed": false,
												"mutability": "mutable",
												"name": "coinType",
												"nameLocation": "219:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "211:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "243:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "237:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "237:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:88:16"
									},
									"src": "151:109:16"
								},
								{
									"functionSelector": "f1cb7e06",
									"id": 1764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addr",
									"nameLocation": "275:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "297:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "289:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "coinType",
												"nameLocation": "319:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "311:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:54:16"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "357:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "357:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:14:16"
									},
									"scope": 1765,
									"src": "266:105:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1766,
							"src": "118:255:16",
							"usedErrors": []
						}
					],
					"src": "32:342:16"
				},
				"id": 16
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IContentHashResolver.sol",
					"exportedSymbols": {
						"IContentHashResolver": [
							1782
						]
					},
					"id": 1783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1767,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IContentHashResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1782,
							"linearizedBaseContracts": [
								1782
							],
							"name": "IContentHashResolver",
							"nameLocation": "68:20:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d7578",
									"id": 1773,
									"name": "ContenthashChanged",
									"nameLocation": "101:18:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "136:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "120:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"indexed": false,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "148:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "142:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "142:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "119:34:17"
									},
									"src": "95:59:17"
								},
								{
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "160:156:17",
										"text": " Returns the contenthash associated with an ENS node.\n @param node The ENS node to query.\n @return The associated contenthash."
									},
									"functionSelector": "bc1c58d1",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contenthash",
									"nameLocation": "330:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "350:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "342:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:14:17"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "379:12:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "379:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:14:17"
									},
									"scope": 1782,
									"src": "321:72:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1783,
							"src": "58:337:17",
							"usedErrors": []
						}
					],
					"src": "32:364:17"
				},
				"id": 17
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol",
					"exportedSymbols": {
						"IDNSRecordResolver": [
							1815
						]
					},
					"id": 1816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDNSRecordResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1815,
							"linearizedBaseContracts": [
								1815
							],
							"name": "IDNSRecordResolver",
							"nameLocation": "68:18:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "52a608b3303a48862d07a73d82fa221318c0027fbbcfb1b2329bface3f19ff2b",
									"id": 1794,
									"name": "DNSRecordChanged",
									"nameLocation": "190:16:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "232:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "216:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "252:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "246:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "246:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"indexed": false,
												"mutability": "mutable",
												"name": "resource",
												"nameLocation": "273:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "266:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1789,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "266:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"indexed": false,
												"mutability": "mutable",
												"name": "record",
												"nameLocation": "297:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "291:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "291:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:103:18"
									},
									"src": "184:126:18"
								},
								{
									"anonymous": false,
									"eventSelector": "03528ed0c2a3ebc993b12ce3c16bb382f9c7d88ef7d8a1bf290eaf35955a1207",
									"id": 1802,
									"name": "DNSRecordDeleted",
									"nameLocation": "412:16:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "445:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "429:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1795,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "457:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "451:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1797,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "451:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"indexed": false,
												"mutability": "mutable",
												"name": "resource",
												"nameLocation": "470:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "463:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1799,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "463:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:51:18"
									},
									"src": "406:74:18"
								},
								{
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "486:391:18",
										"text": " Obtain a DNS record.\n @param node the namehash of the node for which to fetch the record\n @param name the keccak-256 hash of the fully-qualified name for which to fetch the record\n @param resource the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\n @return the DNS record in wire format if present, otherwise empty"
									},
									"functionSelector": "a8fa5682",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dnsRecord",
									"nameLocation": "891:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "918:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "910:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1804,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "940:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "932:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1806,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "resource",
												"nameLocation": "961:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "954:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1808,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "954:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:75:18"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "999:12:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "999:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:14:18"
									},
									"scope": 1815,
									"src": "882:131:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1816,
							"src": "58:957:18",
							"usedErrors": []
						}
					],
					"src": "32:984:18"
				},
				"id": 18
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol",
					"exportedSymbols": {
						"IDNSZoneResolver": [
							1834
						]
					},
					"id": 1835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1817,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDNSZoneResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1834,
							"linearizedBaseContracts": [
								1834
							],
							"name": "IDNSZoneResolver",
							"nameLocation": "68:16:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8f15ed4b723ef428f250961da8315675b507046737e19319fc1a4d81bfe87f85",
									"id": 1825,
									"name": "DNSZonehashChanged",
									"nameLocation": "180:18:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "224:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "208:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1818,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastzonehash",
												"nameLocation": "244:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "238:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "238:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"indexed": false,
												"mutability": "mutable",
												"name": "zonehash",
												"nameLocation": "272:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "266:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "266:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:88:19"
									},
									"src": "174:113:19"
								},
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "293:143:19",
										"text": " zonehash obtains the hash for the zone.\n @param node The ENS node to query.\n @return The associated contenthash."
									},
									"functionSelector": "5c98042b",
									"id": 1833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "zonehash",
									"nameLocation": "450:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "467:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "459:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1827,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:14:19"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "496:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "496:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:14:19"
									},
									"scope": 1834,
									"src": "441:69:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1835,
							"src": "58:454:19",
							"usedErrors": []
						}
					],
					"src": "32:481:19"
				},
				"id": 19
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IExtendedResolver.sol",
					"exportedSymbols": {
						"IExtendedResolver": [
							1846
						]
					},
					"id": 1847,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1836,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExtendedResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1846,
							"linearizedBaseContracts": [
								1846
							],
							"name": "IExtendedResolver",
							"nameLocation": "67:17:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9061b923",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resolve",
									"nameLocation": "100:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "130:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "117:17:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1837,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "117:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "157:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "144:17:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "144:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:60:20"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "191:12:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "191:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:14:20"
									},
									"scope": 1846,
									"src": "91:114:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1847,
							"src": "57:150:20",
							"usedErrors": []
						}
					],
					"src": "32:176:20"
				},
				"id": 20
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IInterfaceResolver.sol",
					"exportedSymbols": {
						"IInterfaceResolver": [
							1867
						]
					},
					"id": 1868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1848,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IInterfaceResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1867,
							"linearizedBaseContracts": [
								1867
							],
							"name": "IInterfaceResolver",
							"nameLocation": "68:18:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa",
									"id": 1856,
									"name": "InterfaceChanged",
									"nameLocation": "99:16:21",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "141:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "125:20:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1849,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "170:11:21",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "155:26:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1851,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "155:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"indexed": false,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "199:11:21",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "191:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:101:21"
									},
									"src": "93:124:21"
								},
								{
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "223:626:21",
										"text": " Returns the address of a contract that implements the specified interface for this name.\n If an implementer has not been set for this interfaceID and name, the resolver will query\n the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that\n contract implements EIP165 and returns `true` for the specified interfaceID, its address\n will be returned.\n @param node The ENS node to query.\n @param interfaceID The EIP 165 interface ID to check for.\n @return The address that implements this interface, or 0 if the interface is unsupported."
									},
									"functionSelector": "124a319c",
									"id": 1866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceImplementer",
									"nameLocation": "863:20:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "901:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "893:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "922:11:21",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "915:18:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "915:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:56:21"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "963:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:9:21"
									},
									"scope": 1867,
									"src": "854:118:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1868,
							"src": "58:916:21",
							"usedErrors": []
						}
					],
					"src": "32:943:21"
				},
				"id": 21
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/INameResolver.sol",
					"exportedSymbols": {
						"INameResolver": [
							1884
						]
					},
					"id": 1885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1869,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INameResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1884,
							"linearizedBaseContracts": [
								1884
							],
							"name": "INameResolver",
							"nameLocation": "68:13:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f7",
									"id": 1875,
									"name": "NameChanged",
									"nameLocation": "94:11:22",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "122:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "106:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "135:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "128:11:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1872,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "128:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:35:22"
									},
									"src": "88:53:22"
								},
								{
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "147:189:22",
										"text": " Returns the name associated with an ENS node, for reverse records.\n Defined in EIP181.\n @param node The ENS node to query.\n @return The associated name."
									},
									"functionSelector": "691f3431",
									"id": 1883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "350:4:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "363:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "355:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1877,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:14:22"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "392:13:22",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "392:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:15:22"
									},
									"scope": 1884,
									"src": "341:66:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1885,
							"src": "58:351:22",
							"usedErrors": []
						}
					],
					"src": "32:378:22"
				},
				"id": 22
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/IPubkeyResolver.sol",
					"exportedSymbols": {
						"IPubkeyResolver": [
							1905
						]
					},
					"id": 1906,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1886,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:23"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPubkeyResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1905,
							"linearizedBaseContracts": [
								1905
							],
							"name": "IPubkeyResolver",
							"nameLocation": "68:15:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e46",
									"id": 1894,
									"name": "PubkeyChanged",
									"nameLocation": "96:13:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "126:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "110:20:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1887,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"indexed": false,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "140:1:23",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "132:9:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1889,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"indexed": false,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "151:1:23",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "143:9:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:44:23"
									},
									"src": "90:64:23"
								},
								{
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "160:294:23",
										"text": " Returns the SECP256k1 public key associated with an ENS node.\n Defined in EIP 619.\n @param node The ENS node to query\n @return x The X coordinate of the curve point for the public key.\n @return y The Y coordinate of the curve point for the public key."
									},
									"functionSelector": "c8690233",
									"id": 1904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pubkey",
									"nameLocation": "468:6:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "483:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "475:12:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:14:23"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "520:1:23",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "512:9:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "531:1:23",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "523:9:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1901,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:22:23"
									},
									"scope": 1905,
									"src": "459:75:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1906,
							"src": "58:478:23",
							"usedErrors": []
						}
					],
					"src": "32:505:23"
				},
				"id": 23
			},
			"https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/profiles/ITextResolver.sol",
					"exportedSymbols": {
						"ITextResolver": [
							1928
						]
					},
					"id": 1929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1907,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:24"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITextResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1928,
							"linearizedBaseContracts": [
								1928
							],
							"name": "ITextResolver",
							"nameLocation": "68:13:24",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "448bc014f1536726cf8d54ff3d6481ed3cbc683c2591ca204274009afa09b1a1",
									"id": 1917,
									"name": "TextChanged",
									"nameLocation": "94:11:24",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "131:4:24",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "115:20:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"indexed": true,
												"mutability": "mutable",
												"name": "indexedKey",
												"nameLocation": "160:10:24",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "145:25:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1910,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "145:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"indexed": false,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "187:3:24",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "180:10:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1912,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "180:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "207:5:24",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "200:12:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1914,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "200:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:113:24"
									},
									"src": "88:131:24"
								},
								{
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "225:206:24",
										"text": " Returns the text data associated with an ENS node and key.\n @param node The ENS node to query.\n @param key The text data key to query.\n @return The associated text data."
									},
									"functionSelector": "59d1d43c",
									"id": 1927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "text",
									"nameLocation": "445:4:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "467:4:24",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "459:12:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "497:3:24",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "481:19:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "481:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:57:24"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "530:13:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "530:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:15:24"
									},
									"scope": 1928,
									"src": "436:109:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1929,
							"src": "58:489:24",
							"usedErrors": []
						}
					],
					"src": "32:516:24"
				},
				"id": 24
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1949
						]
					},
					"id": 1950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1930,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:25"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1931,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:25",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 1949,
							"linearizedBaseContracts": [
								1949
							],
							"name": "IERC1967",
							"nameLocation": "276:8:25",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "291:68:25",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1936,
									"name": "Upgraded",
									"nameLocation": "370:8:25",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "395:14:25",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "379:30:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:32:25"
									},
									"src": "364:47:25"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:25",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1943,
									"name": "AdminChanged",
									"nameLocation": "495:12:25",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "516:13:25",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "508:21:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "539:8:25",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "531:16:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:41:25"
									},
									"src": "489:60:25"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1944,
										"nodeType": "StructuredDocumentation",
										"src": "555:59:25",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1948,
									"name": "BeaconUpgraded",
									"nameLocation": "625:14:25",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "656:6:25",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "640:22:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:24:25"
									},
									"src": "619:45:25"
								}
							],
							"scope": 1950,
							"src": "266:400:25",
							"usedErrors": []
						}
					],
					"src": "107:560:25"
				},
				"id": 25
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1959
						]
					},
					"id": 1960,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:26"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1952,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:26",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1959,
							"linearizedBaseContracts": [
								1959
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "352:17:26",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "376:438:26",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "828:13:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:26"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "867:7:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1955,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:26"
									},
									"scope": 1959,
									"src": "819:57:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1960,
							"src": "342:536:26",
							"usedErrors": []
						}
					],
					"src": "113:766:26"
				},
				"id": 26
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							2719
						],
						"ERC1967Upgrade": [
							2263
						],
						"IBeacon": [
							2273
						],
						"IERC1822Proxiable": [
							1959
						],
						"IERC1967": [
							1949
						],
						"StorageSlot": [
							2829
						]
					},
					"id": 2264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1961,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:27"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2264,
							"sourceUnit": 2274,
							"src": "141:31:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1963,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2264,
							"sourceUnit": 1950,
							"src": "173:39:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
							"file": "../../interfaces/draft-IERC1822.sol",
							"id": 1964,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2264,
							"sourceUnit": 1960,
							"src": "213:45:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1965,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2264,
							"sourceUnit": 2720,
							"src": "259:33:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1966,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2264,
							"sourceUnit": 2830,
							"src": "293:37:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1968,
										"name": "IERC1967",
										"nameLocations": [
											"553:8:27"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1949,
										"src": "553:8:27"
									},
									"id": 1969,
									"nodeType": "InheritanceSpecifier",
									"src": "553:8:27"
								}
							],
							"canonicalName": "ERC1967Upgrade",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1967,
								"nodeType": "StructuredDocumentation",
								"src": "332:184:27",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 2263,
							"linearizedBaseContracts": [
								2263,
								1949
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "535:14:27",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1972,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "672:14:27",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "647:108:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1970,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:27",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 1971,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "689:66:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "762:214:27",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 1976,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1007:20:27",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "981:115:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1974,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:27",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1975,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1030:66:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "1237:78:27",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1984,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "1281:20:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1982,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "1254:11:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1266:14:27",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2751,
															"src": "1254:26:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1254:48:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1303:5:27",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2724,
													"src": "1254:54:27",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1981,
												"id": 1987,
												"nodeType": "Return",
												"src": "1247:61:27"
											}
										]
									},
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "1103:67:27",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1184:18:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:2:27"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1228:7:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:9:27"
									},
									"scope": 2263,
									"src": "1175:140:27",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "1469:196:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1998,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "1506:17:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1996,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2719,
																	"src": "1487:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$2719_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1495:10:27",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2407,
																"src": "1487:18:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1487:37:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1526:47:27",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 1995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1479:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:95:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "1479:95:27"
											},
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2006,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "1611:20:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2003,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "1584:11:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1596:14:27",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2751,
																"src": "1584:26:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1584:48:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1633:5:27",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2724,
														"src": "1584:54:27",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2009,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "1641:17:27",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1584:74:27",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "1584:74:27"
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "1321:80:27",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1415:18:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1442:17:27",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "1434:25:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:27:27"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:0:27"
									},
									"scope": 2263,
									"src": "1406:259:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "1827:96:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2020,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "1856:17:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2019,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "1837:18:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:37:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "1837:37:27"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2024,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "1898:17:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2023,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "1889:8:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:27:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2026,
												"nodeType": "EmitStatement",
												"src": "1884:32:27"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "1671:95:27",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1780:10:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1799:17:27",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "1791:25:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:27:27"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:27"
									},
									"scope": 2263,
									"src": "1771:152:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "2155:167:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2039,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "2176:17:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2038,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2028,
														"src": "2165:10:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2165:29:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "2165:29:27"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2042,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2033,
																"src": "2208:4:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2213:6:27",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2208:11:27",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:1:27",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2208:15:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 2046,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2035,
														"src": "2227:9:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2208:28:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "IfStatement",
												"src": "2204:112:27",
												"trueBody": {
													"id": 2055,
													"nodeType": "Block",
													"src": "2238:78:27",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2051,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2031,
																		"src": "2281:17:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2052,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2033,
																		"src": "2300:4:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2048,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2719,
																		"src": "2252:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2719_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2260:20:27",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2606,
																	"src": "2252:28:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2252:53:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2054,
															"nodeType": "ExpressionStatement",
															"src": "2252:53:27"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "1929:123:27",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2066:17:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2092:17:27",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2084:25:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2124:4:27",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2111:17:27",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2111:5:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2135:9:27",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2130:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2130:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:62:27"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:0:27"
									},
									"scope": 2263,
									"src": "2057:265:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "2596:820:27",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 2070,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "2937:14:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2068,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "2910:11:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2922:14:27",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2762,
															"src": "2910:26:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2728_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2910:42:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$2728_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot storage pointer"
														}
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2953:5:27",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2727,
													"src": "2910:48:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2108,
													"nodeType": "Block",
													"src": "3028:382:27",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2093,
																		"nodeType": "Block",
																		"src": "3122:115:27",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 2089,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2087,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2084,
																								"src": "3148:4:27",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 2088,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1976,
																								"src": "3156:20:27",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3148:28:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 2090,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3178:43:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 2086,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3140:7:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 2091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3140:82:27",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2092,
																				"nodeType": "ExpressionStatement",
																				"src": "3140:82:27"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2094,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2085,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2084,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3116:4:27",
																				"nodeType": "VariableDeclaration",
																				"scope": 2094,
																				"src": "3108:12:27",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 2083,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3108:7:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3107:14:27"
																	},
																	"src": "3099:138:27"
																},
																{
																	"block": {
																		"id": 2099,
																		"nodeType": "Block",
																		"src": "3244:89:27",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 2096,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3269:48:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 2095,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3262:6:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2097,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3262:56:27",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2098,
																				"nodeType": "ExpressionStatement",
																				"src": "3262:56:27"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2100,
																	"nodeType": "TryCatchClause",
																	"src": "3238:95:27"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2079,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "3064:17:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2078,
																			"name": "IERC1822Proxiable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "3046:17:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1959_$",
																				"typeString": "type(contract IERC1822Proxiable)"
																			}
																		},
																		"id": 2080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3046:36:27",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822Proxiable_$1959",
																			"typeString": "contract IERC1822Proxiable"
																		}
																	},
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3083:13:27",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1958,
																	"src": "3046:50:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3046:52:27",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2101,
															"nodeType": "TryStatement",
															"src": "3042:291:27"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2103,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "3364:17:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2104,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "3383:4:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2105,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2065,
																		"src": "3389:9:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2102,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "3346:17:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3346:53:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2107,
															"nodeType": "ExpressionStatement",
															"src": "3346:53:27"
														}
													]
												},
												"id": 2109,
												"nodeType": "IfStatement",
												"src": "2906:504:27",
												"trueBody": {
													"id": 2077,
													"nodeType": "Block",
													"src": "2960:62:27",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2074,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "2993:17:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2073,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "2974:18:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2974:37:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2076,
															"nodeType": "ExpressionStatement",
															"src": "2974:37:27"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "2328:161:27",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2503:21:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2533:17:27",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2525:25:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2565:4:27",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2552:17:27",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2552:5:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2576:9:27",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2571:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:62:27"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2596:0:27"
									},
									"scope": 2263,
									"src": "2494:922:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "3422:189:27",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 2115,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "3642:11:27",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "3616:106:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2113,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3616:7:27",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 2114,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3656:66:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2127,
										"nodeType": "Block",
										"src": "3837:69:27",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2123,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "3881:11:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2121,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "3854:11:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3866:14:27",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2751,
															"src": "3854:26:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3854:39:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3894:5:27",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2724,
													"src": "3854:45:27",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2120,
												"id": 2126,
												"nodeType": "Return",
												"src": "3847:52:27"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "3729:50:27",
										"text": " @dev Returns the current admin."
									},
									"id": 2128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "3793:9:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3802:2:27"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "3828:7:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3828:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3827:9:27"
									},
									"scope": 2263,
									"src": "3784:122:27",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2153,
										"nodeType": "Block",
										"src": "4033:156:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2135,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2131,
																"src": "4051:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4071:1:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4063:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2136,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4063:7:27",
																		"typeDescriptions": {}
																	}
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4063:10:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4051:22:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4075:40:27",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 2134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4043:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4043:73:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "4043:73:27"
											},
											{
												"expression": {
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2147,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "4153:11:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2144,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "4126:11:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4138:14:27",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2751,
																"src": "4126:26:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4126:39:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4166:5:27",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2724,
														"src": "4126:45:27",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2150,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "4174:8:27",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4126:56:27",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2152,
												"nodeType": "ExpressionStatement",
												"src": "4126:56:27"
											}
										]
									},
									"documentation": {
										"id": 2129,
										"nodeType": "StructuredDocumentation",
										"src": "3912:71:27",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 2154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3997:9:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4015:8:27",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "4007:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:18:27"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4033:0:27"
									},
									"scope": 2263,
									"src": "3988:201:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "4349:86:27",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2161,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "4377:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4377:11:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2163,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "4390:8:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2160,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "4364:12:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4364:35:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "EmitStatement",
												"src": "4359:40:27"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "4419:8:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2166,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2154,
														"src": "4409:9:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:19:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "4409:19:27"
											}
										]
									},
									"documentation": {
										"id": 2155,
										"nodeType": "StructuredDocumentation",
										"src": "4195:100:27",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4309:12:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4330:8:27",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "4322:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4322:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:18:27"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4349:0:27"
									},
									"scope": 2263,
									"src": "4300:135:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "4441:232:27",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 2175,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "4704:12:27",
									"nodeType": "VariableDeclaration",
									"scope": 2263,
									"src": "4678:107:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2173,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4678:7:27",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 2174,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4719:66:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2187,
										"nodeType": "Block",
										"src": "4902:70:27",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2183,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "4946:12:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2181,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "4919:11:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4931:14:27",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2751,
															"src": "4919:26:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4919:40:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4960:5:27",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2724,
													"src": "4919:46:27",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2180,
												"id": 2186,
												"nodeType": "Return",
												"src": "4912:53:27"
											}
										]
									},
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "4792:51:27",
										"text": " @dev Returns the current beacon."
									},
									"id": 2188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "4857:10:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4867:2:27"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "4893:7:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:9:27"
									},
									"scope": 2263,
									"src": "4848:124:27",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "5101:324:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2197,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "5138:9:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2195,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2719,
																	"src": "5119:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$2719_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5127:10:27",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2407,
																"src": "5119:18:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5119:29:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5150:39:27",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 2194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5111:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5111:79:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "5111:79:27"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2206,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2191,
																					"src": "5248:9:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2205,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2273,
																				"src": "5240:7:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$2273_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 2207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5240:18:27",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$2273",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5259:14:27",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2272,
																		"src": "5240:33:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5240:35:27",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2203,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2719,
																	"src": "5221:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$2719_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5229:10:27",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2407,
																"src": "5221:18:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:55:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:50:27",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 2202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5200:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5200:150:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "5200:150:27"
											},
											{
												"expression": {
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2217,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "5387:12:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2214,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "5360:11:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5372:14:27",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2751,
																"src": "5360:26:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5360:40:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5401:5:27",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2724,
														"src": "5360:46:27",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2220,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "5409:9:27",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5360:58:27",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2222,
												"nodeType": "ExpressionStatement",
												"src": "5360:58:27"
											}
										]
									},
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "4978:71:27",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5063:10:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5082:9:27",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "5074:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5074:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5073:19:27"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5101:0:27"
									},
									"scope": 2263,
									"src": "5054:371:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "5824:217:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2235,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "5845:9:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2234,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "5834:10:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5834:21:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2237,
												"nodeType": "ExpressionStatement",
												"src": "5834:21:27"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2239,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "5885:9:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2238,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "5870:14:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:25:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2241,
												"nodeType": "EmitStatement",
												"src": "5865:30:27"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2242,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "5909:4:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5914:6:27",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5909:11:27",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5923:1:27",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5909:15:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 2246,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "5928:9:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5909:28:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2260,
												"nodeType": "IfStatement",
												"src": "5905:130:27",
												"trueBody": {
													"id": 2259,
													"nodeType": "Block",
													"src": "5939:96:27",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2252,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2227,
																						"src": "5990:9:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2251,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2273,
																					"src": "5982:7:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$2273_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 2253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5982:18:27",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$2273",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6001:14:27",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2272,
																			"src": "5982:33:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5982:35:27",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2256,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2229,
																		"src": "6019:4:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2248,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2719,
																		"src": "5953:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2719_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5961:20:27",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2606,
																	"src": "5953:28:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5953:71:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2258,
															"nodeType": "ExpressionStatement",
															"src": "5953:71:27"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "5431:292:27",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "5737:23:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5769:9:27",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "5761:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5761:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5793:4:27",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "5780:17:27",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5780:5:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "5804:9:27",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "5799:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5799:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5760:54:27"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5824:0:27"
									},
									"scope": 2263,
									"src": "5728:313:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2264,
							"src": "517:5526:27",
							"usedErrors": []
						}
					],
					"src": "116:5928:27"
				},
				"id": 27
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							2273
						]
					},
					"id": 2274,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:28"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2266,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:28",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 2273,
							"linearizedBaseContracts": [
								2273
							],
							"name": "IBeacon",
							"nameLocation": "208:7:28",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "222:162:28",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 2272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "398:14:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:28"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "438:7:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:9:28"
									},
									"scope": 2273,
									"src": "389:58:28",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2274,
							"src": "198:251:28",
							"usedErrors": []
						}
					],
					"src": "93:357:28"
				},
				"id": 28
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"Address": [
							2719
						],
						"ERC1967Upgrade": [
							2263
						],
						"IBeacon": [
							2273
						],
						"IERC1822Proxiable": [
							1959
						],
						"IERC1967": [
							1949
						],
						"StorageSlot": [
							2829
						],
						"UUPSUpgradeable": [
							2389
						]
					},
					"id": 2390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2275,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:29"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/interfaces/draft-IERC1822.sol",
							"file": "../../interfaces/draft-IERC1822.sol",
							"id": 2276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2390,
							"sourceUnit": 1960,
							"src": "140:45:29",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
							"file": "../ERC1967/ERC1967Upgrade.sol",
							"id": 2277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2390,
							"sourceUnit": 2264,
							"src": "186:39:29",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2279,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"913:17:29"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1959,
										"src": "913:17:29"
									},
									"id": 2280,
									"nodeType": "InheritanceSpecifier",
									"src": "913:17:29"
								},
								{
									"baseName": {
										"id": 2281,
										"name": "ERC1967Upgrade",
										"nameLocations": [
											"932:14:29"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2263,
										"src": "932:14:29"
									},
									"id": 2282,
									"nodeType": "InheritanceSpecifier",
									"src": "932:14:29"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2278,
								"nodeType": "StructuredDocumentation",
								"src": "227:648:29",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 2389,
							"linearizedBaseContracts": [
								2389,
								2263,
								1949,
								1959
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "894:15:29",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "953:87:29",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 2289,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1071:6:29",
									"nodeType": "VariableDeclaration",
									"scope": 2389,
									"src": "1045:48:29",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2284,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1045:7:29",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 2287,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1088:4:29",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$2389",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$2389",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 2286,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1080:7:29",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 2285,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1080:7:29",
												"typeDescriptions": {}
											}
										},
										"id": 2288,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1080:13:29",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "1619:205:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2295,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1645:4:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$2389",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$2389",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1637:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2293,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1637:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1637:13:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2297,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "1654:6:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1637:23:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1662:46:29",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 2292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1629:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1629:80:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2301,
												"nodeType": "ExpressionStatement",
												"src": "1629:80:29"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2303,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1989,
																	"src": "1727:18:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1727:20:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2305,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "1751:6:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1727:30:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1759:46:29",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 2302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1719:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1719:87:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2309,
												"nodeType": "ExpressionStatement",
												"src": "1719:87:29"
											},
											{
												"id": 2310,
												"nodeType": "PlaceholderStatement",
												"src": "1816:1:29"
											}
										]
									},
									"documentation": {
										"id": 2290,
										"nodeType": "StructuredDocumentation",
										"src": "1100:493:29",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 2312,
									"name": "onlyProxy",
									"nameLocation": "1607:9:29",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:2:29"
									},
									"src": "1598:226:29",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "2054:120:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2318,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2080:4:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$2389",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$2389",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2072:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2316,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2072:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2072:13:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2320,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "2089:6:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2072:23:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2097:58:29",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 2315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2064:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2064:92:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "2064:92:29"
											},
											{
												"id": 2325,
												"nodeType": "PlaceholderStatement",
												"src": "2166:1:29"
											}
										]
									},
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "1830:195:29",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 2327,
									"name": "notDelegated",
									"nameLocation": "2039:12:29",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:29"
									},
									"src": "2030:144:29",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1958
									],
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "2849:44:29",
										"statements": [
											{
												"expression": {
													"id": 2336,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1976,
													"src": "2866:20:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2335,
												"id": 2337,
												"nodeType": "Return",
												"src": "2859:27:29"
											}
										]
									},
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "2180:577:29",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2331,
												"name": "notDelegated",
												"nameLocations": [
													"2818:12:29"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2327,
												"src": "2818:12:29"
											},
											"nodeType": "ModifierInvocation",
											"src": "2818:12:29"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "2771:13:29",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2330,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2809:8:29"
									},
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2784:2:29"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "2840:7:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2840:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2839:9:29"
									},
									"scope": 2389,
									"src": "2762:131:29",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "3214:124:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2348,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "3242:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2347,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2388,
														"src": "3224:17:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3224:36:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2350,
												"nodeType": "ExpressionStatement",
												"src": "3224:36:29"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2352,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "3292:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3321:1:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3311:9:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 2353,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3315:5:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3311:12:29",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3325:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2351,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "3270:21:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 2358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:61:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2359,
												"nodeType": "ExpressionStatement",
												"src": "3270:61:29"
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "2899:239:29",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "3659cfe6",
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2344,
												"name": "onlyProxy",
												"nameLocations": [
													"3204:9:29"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2312,
												"src": "3204:9:29"
											},
											"nodeType": "ModifierInvocation",
											"src": "3204:9:29"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3152:9:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3170:17:29",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "3162:25:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:27:29"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3214:0:29"
									},
									"scope": 2389,
									"src": "3143:195:29",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "3762:115:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2372,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2364,
															"src": "3790:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2371,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2388,
														"src": "3772:17:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:36:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "3772:36:29"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2376,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2364,
															"src": "3840:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2377,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "3859:4:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3865:4:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2375,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "3818:21:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:52:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "3818:52:29"
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "3344:308:29",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2368,
												"name": "onlyProxy",
												"nameLocations": [
													"3752:9:29"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2312,
												"src": "3752:9:29"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:9:29"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3666:16:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3691:17:29",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "3683:25:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3723:4:29",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "3710:17:29",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3710:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3682:46:29"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3762:0:29"
									},
									"scope": 2389,
									"src": "3657:220:29",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2383,
										"nodeType": "StructuredDocumentation",
										"src": "3883:397:29",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 2388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4294:17:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4320:17:29",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "4312:25:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4312:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4311:27:29"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4355:0:29"
									},
									"scope": 2389,
									"src": "4285:71:29",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2390,
							"src": "876:3482:29",
							"usedErrors": []
						}
					],
					"src": "115:4244:29"
				},
				"id": 29
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2719
						]
					},
					"id": 2720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:30"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2392,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:30",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2719,
							"linearizedBaseContracts": [
								2719
							],
							"name": "Address",
							"nameLocation": "202:7:30",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "1478:254:30",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2400,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2395,
																"src": "1702:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:30",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:30",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2399,
												"id": 2405,
												"nodeType": "Return",
												"src": "1695:30:30"
											}
										]
									},
									"documentation": {
										"id": 2393,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:30",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "1432:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:30"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "1472:4:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:30"
									},
									"scope": 2719,
									"src": "1412:320:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2440,
										"nodeType": "Block",
										"src": "2718:241:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2418,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2719",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2719",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2416,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:30",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:30",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2421,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "2761:6:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2425,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:30"
											},
											{
												"assignments": [
													2427,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2427,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:30",
														"nodeType": "VariableDeclaration",
														"scope": 2440,
														"src": "2813:12:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2426,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2434,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2428,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "2831:9:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:30",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2430,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "2853:6:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "2882:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2439,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:30"
											}
										]
									},
									"documentation": {
										"id": 2408,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:30",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "2666:25:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:30",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "2693:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:30"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:30"
									},
									"scope": 2719,
									"src": "2647:312:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2458,
										"nodeType": "Block",
										"src": "3790:96:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2452,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "3829:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2453,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "3837:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2451,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2499,
															2543
														],
														"referencedDeclaration": 2543,
														"src": "3807:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2450,
												"id": 2457,
												"nodeType": "Return",
												"src": "3800:79:30"
											}
										]
									},
									"documentation": {
										"id": 2442,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:30",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "3723:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "3739:17:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:30"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "3776:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:30"
									},
									"scope": 2719,
									"src": "3701:185:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2478,
										"nodeType": "Block",
										"src": "4255:76:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2472,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "4294:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2473,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2464,
															"src": "4302:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2475,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "4311:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2471,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2499,
															2543
														],
														"referencedDeclaration": 2543,
														"src": "4272:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2470,
												"id": 2477,
												"nodeType": "Return",
												"src": "4265:59:30"
											}
										]
									},
									"documentation": {
										"id": 2460,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:30",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "4139:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "4163:17:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "4190:26:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:30"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "4241:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:30"
									},
									"scope": 2719,
									"src": "4108:223:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "4806:111:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2492,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "4845:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2484,
															"src": "4853:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2494,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2486,
															"src": "4859:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2491,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2499,
															2543
														],
														"referencedDeclaration": 2543,
														"src": "4823:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2490,
												"id": 2497,
												"nodeType": "Return",
												"src": "4816:94:30"
											}
										]
									},
									"documentation": {
										"id": 2480,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:30",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4724:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4740:17:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2483,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:30",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4759:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:30"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4792:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:30"
									},
									"scope": 2719,
									"src": "4693:224:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "5344:267:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2516,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2719",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2719",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2514,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:30",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:30",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2519,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2506,
																"src": "5387:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2523,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:30"
											},
											{
												"assignments": [
													2525,
													2527
												],
												"declarations": [
													{
														"constant": false,
														"id": 2525,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:30",
														"nodeType": "VariableDeclaration",
														"scope": 2542,
														"src": "5446:12:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2524,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2527,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:30",
														"nodeType": "VariableDeclaration",
														"scope": 2542,
														"src": "5460:23:30",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2526,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2534,
												"initialValue": {
													"arguments": [
														{
															"id": 2532,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "5513:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2528,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2502,
																"src": "5487:6:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:30",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2530,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2506,
																"src": "5506:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2536,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "5562:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2537,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "5570:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2538,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2527,
															"src": "5579:10:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2539,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2508,
															"src": "5591:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2535,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2674,
														"src": "5535:26:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2512,
												"id": 2541,
												"nodeType": "Return",
												"src": "5528:76:30"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:30",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "5205:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "5229:17:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2503,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:30",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "5256:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "5279:26:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:30"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "5330:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:30"
									},
									"scope": 2719,
									"src": "5165:446:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2559,
										"nodeType": "Block",
										"src": "5888:97:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2554,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "5924:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2548,
															"src": "5932:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2553,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2560,
															2589
														],
														"referencedDeclaration": 2589,
														"src": "5905:18:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2552,
												"id": 2558,
												"nodeType": "Return",
												"src": "5898:80:30"
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:30",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "5816:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "5832:17:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:30"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "5874:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:30"
									},
									"scope": 2719,
									"src": "5788:197:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "6327:168:30",
										"statements": [
											{
												"assignments": [
													2573,
													2575
												],
												"declarations": [
													{
														"constant": false,
														"id": 2573,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:30",
														"nodeType": "VariableDeclaration",
														"scope": 2588,
														"src": "6338:12:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2572,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2575,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:30",
														"nodeType": "VariableDeclaration",
														"scope": 2588,
														"src": "6352:23:30",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2574,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2580,
												"initialValue": {
													"arguments": [
														{
															"id": 2578,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "6397:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "6379:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:30",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2582,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "6446:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2583,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "6454:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2584,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "6463:10:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2585,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "6475:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2581,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2674,
														"src": "6419:26:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2571,
												"id": 2587,
												"nodeType": "Return",
												"src": "6412:76:30"
											}
										]
									},
									"documentation": {
										"id": 2561,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:30",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "6206:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "6230:17:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "6257:26:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2566,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:30"
									},
									"returnParameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "6313:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:30"
									},
									"scope": 2719,
									"src": "6169:326:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2605,
										"nodeType": "Block",
										"src": "6771:101:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2600,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "6809:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "6817:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2599,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2606,
															2635
														],
														"referencedDeclaration": 2635,
														"src": "6788:20:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2598,
												"id": 2604,
												"nodeType": "Return",
												"src": "6781:84:30"
											}
										]
									},
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:30",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "6704:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "6720:17:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:30"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "6757:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:30"
									},
									"scope": 2719,
									"src": "6674:198:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2634,
										"nodeType": "Block",
										"src": "7213:170:30",
										"statements": [
											{
												"assignments": [
													2619,
													2621
												],
												"declarations": [
													{
														"constant": false,
														"id": 2619,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:30",
														"nodeType": "VariableDeclaration",
														"scope": 2634,
														"src": "7224:12:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2618,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2621,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:30",
														"nodeType": "VariableDeclaration",
														"scope": 2634,
														"src": "7238:23:30",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2620,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2626,
												"initialValue": {
													"arguments": [
														{
															"id": 2624,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "7285:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2622,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2609,
															"src": "7265:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:30",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2609,
															"src": "7334:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2629,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "7342:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2630,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "7351:10:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2631,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "7363:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2627,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2674,
														"src": "7307:26:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2617,
												"id": 2633,
												"nodeType": "Return",
												"src": "7300:76:30"
											}
										]
									},
									"documentation": {
										"id": 2607,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:30",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "7097:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "7121:17:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "7148:26:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:30"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "7199:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:30"
									},
									"scope": 2719,
									"src": "7058:325:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "7865:434:30",
										"statements": [
											{
												"condition": {
													"id": 2649,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2640,
													"src": "7879:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2671,
													"nodeType": "Block",
													"src": "8235:58:30",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2667,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "8257:10:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2668,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "8269:12:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2666,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2718,
																	"src": "8249:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2670,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:30"
														}
													]
												},
												"id": 2672,
												"nodeType": "IfStatement",
												"src": "7875:418:30",
												"trueBody": {
													"id": 2665,
													"nodeType": "Block",
													"src": "7888:341:30",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2650,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "7906:10:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:30",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2662,
															"nodeType": "IfStatement",
															"src": "7902:286:30",
															"trueBody": {
																"id": 2661,
																"nodeType": "Block",
																"src": "7930:258:30",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2656,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2638,
																							"src": "8132:6:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2655,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2407,
																						"src": "8121:10:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2657,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:30",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2658,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2654,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:30",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2660,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:30"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2663,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "8208:10:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2648,
															"id": 2664,
															"nodeType": "Return",
															"src": "8201:17:30"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2636,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:30",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "7716:14:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "7740:12:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:30",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "7762:23:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "7795:26:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:30"
									},
									"returnParameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "7851:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:30"
									},
									"scope": 2719,
									"src": "7671:628:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "8680:135:30",
										"statements": [
											{
												"condition": {
													"id": 2686,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2677,
													"src": "8694:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2695,
													"nodeType": "Block",
													"src": "8751:58:30",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2691,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2679,
																		"src": "8773:10:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2692,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2681,
																		"src": "8785:12:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2690,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2718,
																	"src": "8765:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2694,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:30"
														}
													]
												},
												"id": 2696,
												"nodeType": "IfStatement",
												"src": "8690:119:30",
												"trueBody": {
													"id": 2689,
													"nodeType": "Block",
													"src": "8703:42:30",
													"statements": [
														{
															"expression": {
																"id": 2687,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "8724:10:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2685,
															"id": 2688,
															"nodeType": "Return",
															"src": "8717:17:30"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:30",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "8555:12:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:30",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "8577:23:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "8610:26:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:30"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "8666:12:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:30"
									},
									"scope": 2719,
									"src": "8520:295:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2717,
										"nodeType": "Block",
										"src": "8904:457:30",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2705,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2700,
															"src": "8980:10:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:30",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2715,
													"nodeType": "Block",
													"src": "9310:45:30",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2712,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2702,
																		"src": "9331:12:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2711,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2714,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:30"
														}
													]
												},
												"id": 2716,
												"nodeType": "IfStatement",
												"src": "8976:379:30",
												"trueBody": {
													"id": 2710,
													"nodeType": "Block",
													"src": "9003:301:30",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:30",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:30",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:30"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:30"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:30"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:30",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:30",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:30"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:30"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:30"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:30"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:30"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:30"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:30"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 2700,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:30",
																	"valueSize": 1
																},
																{
																	"declaration": 2700,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:30",
																	"valueSize": 1
																}
															],
															"id": 2709,
															"nodeType": "InlineAssembly",
															"src": "9152:142:30"
														}
													]
												}
											}
										]
									},
									"id": 2718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:30",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "8838:23:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2699,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "8863:26:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:30"
									},
									"returnParameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:30"
									},
									"scope": 2719,
									"src": "8821:540:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2720,
							"src": "194:9169:30",
							"usedErrors": []
						}
					],
					"src": "101:9263:30"
				},
				"id": 30
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2829
						]
					},
					"id": 2830,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2721,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:31"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2722,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:31",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 2829,
							"linearizedBaseContracts": [
								2829
							],
							"name": "StorageSlot",
							"nameLocation": "1428:11:31",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2725,
									"members": [
										{
											"constant": false,
											"id": 2724,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1483:5:31",
											"nodeType": "VariableDeclaration",
											"scope": 2725,
											"src": "1475:13:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2723,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1475:7:31",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1453:11:31",
									"nodeType": "StructDefinition",
									"scope": 2829,
									"src": "1446:49:31",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2728,
									"members": [
										{
											"constant": false,
											"id": 2727,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1535:5:31",
											"nodeType": "VariableDeclaration",
											"scope": 2728,
											"src": "1530:10:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2726,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1530:4:31",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1508:11:31",
									"nodeType": "StructDefinition",
									"scope": 2829,
									"src": "1501:46:31",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2731,
									"members": [
										{
											"constant": false,
											"id": 2730,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1590:5:31",
											"nodeType": "VariableDeclaration",
											"scope": 2731,
											"src": "1582:13:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2729,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1560:11:31",
									"nodeType": "StructDefinition",
									"scope": 2829,
									"src": "1553:49:31",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2734,
									"members": [
										{
											"constant": false,
											"id": 2733,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1645:5:31",
											"nodeType": "VariableDeclaration",
											"scope": 2734,
											"src": "1637:13:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2732,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1615:11:31",
									"nodeType": "StructDefinition",
									"scope": 2829,
									"src": "1608:49:31",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2737,
									"members": [
										{
											"constant": false,
											"id": 2736,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1698:5:31",
											"nodeType": "VariableDeclaration",
											"scope": 2737,
											"src": "1691:12:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2735,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1691:6:31",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1670:10:31",
									"nodeType": "StructDefinition",
									"scope": 2829,
									"src": "1663:47:31",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2740,
									"members": [
										{
											"constant": false,
											"id": 2739,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1749:5:31",
											"nodeType": "VariableDeclaration",
											"scope": 2740,
											"src": "1743:11:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2738,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1743:5:31",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1723:9:31",
									"nodeType": "StructDefinition",
									"scope": 2829,
									"src": "1716:45:31",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2750,
										"nodeType": "Block",
										"src": "1943:106:31",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2005:38:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2019:14:31",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2029:4:31"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:31"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2747,
														"isOffset": false,
														"isSlot": true,
														"src": "2019:6:31",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2743,
														"isOffset": false,
														"isSlot": false,
														"src": "2029:4:31",
														"valueSize": 1
													}
												],
												"id": 2749,
												"nodeType": "InlineAssembly",
												"src": "1996:47:31"
											}
										]
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "1767:87:31",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1868:14:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1891:4:31",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "1883:12:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:14:31"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1940:1:31",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "1920:21:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2725_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2745,
														"name": "AddressSlot",
														"nameLocations": [
															"1920:11:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2725,
														"src": "1920:11:31"
													},
													"referencedDeclaration": 2725,
													"src": "1920:11:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2725_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:23:31"
									},
									"scope": 2829,
									"src": "1859:190:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2761,
										"nodeType": "Block",
										"src": "2231:106:31",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2293:38:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2307:14:31",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2317:4:31"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:31"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2758,
														"isOffset": false,
														"isSlot": true,
														"src": "2307:6:31",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2754,
														"isOffset": false,
														"isSlot": false,
														"src": "2317:4:31",
														"valueSize": 1
													}
												],
												"id": 2760,
												"nodeType": "InlineAssembly",
												"src": "2284:47:31"
											}
										]
									},
									"documentation": {
										"id": 2752,
										"nodeType": "StructuredDocumentation",
										"src": "2055:87:31",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2156:14:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2179:4:31",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "2171:12:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:14:31"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2228:1:31",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "2208:21:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2728_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2757,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2756,
														"name": "BooleanSlot",
														"nameLocations": [
															"2208:11:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2728,
														"src": "2208:11:31"
													},
													"referencedDeclaration": 2728,
													"src": "2208:11:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2728_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:23:31"
									},
									"scope": 2829,
									"src": "2147:190:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "2519:106:31",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2581:38:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2595:14:31",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2605:4:31"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:31"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2769,
														"isOffset": false,
														"isSlot": true,
														"src": "2595:6:31",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2765,
														"isOffset": false,
														"isSlot": false,
														"src": "2605:4:31",
														"valueSize": 1
													}
												],
												"id": 2771,
												"nodeType": "InlineAssembly",
												"src": "2572:47:31"
											}
										]
									},
									"documentation": {
										"id": 2763,
										"nodeType": "StructuredDocumentation",
										"src": "2343:87:31",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2444:14:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2467:4:31",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "2459:12:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2764,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:14:31"
									},
									"returnParameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2516:1:31",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "2496:21:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2731_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2767,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2496:11:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2731,
														"src": "2496:11:31"
													},
													"referencedDeclaration": 2731,
													"src": "2496:11:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2731_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:23:31"
									},
									"scope": 2829,
									"src": "2435:190:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2783,
										"nodeType": "Block",
										"src": "2807:106:31",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2869:38:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2883:14:31",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2893:4:31"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:31"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2780,
														"isOffset": false,
														"isSlot": true,
														"src": "2883:6:31",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2776,
														"isOffset": false,
														"isSlot": false,
														"src": "2893:4:31",
														"valueSize": 1
													}
												],
												"id": 2782,
												"nodeType": "InlineAssembly",
												"src": "2860:47:31"
											}
										]
									},
									"documentation": {
										"id": 2774,
										"nodeType": "StructuredDocumentation",
										"src": "2631:87:31",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2732:14:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2755:4:31",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "2747:12:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2775,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:14:31"
									},
									"returnParameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2804:1:31",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "2784:21:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2734_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2778,
														"name": "Uint256Slot",
														"nameLocations": [
															"2784:11:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2734,
														"src": "2784:11:31"
													},
													"referencedDeclaration": 2734,
													"src": "2784:11:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2734_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:23:31"
									},
									"scope": 2829,
									"src": "2723:190:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2794,
										"nodeType": "Block",
										"src": "3092:106:31",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3154:38:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3168:14:31",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3178:4:31"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:31"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2791,
														"isOffset": false,
														"isSlot": true,
														"src": "3168:6:31",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2787,
														"isOffset": false,
														"isSlot": false,
														"src": "3178:4:31",
														"valueSize": 1
													}
												],
												"id": 2793,
												"nodeType": "InlineAssembly",
												"src": "3145:47:31"
											}
										]
									},
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "2919:86:31",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3019:13:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3041:4:31",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "3033:12:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2786,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:14:31"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3089:1:31",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "3070:20:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2737_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2789,
														"name": "StringSlot",
														"nameLocations": [
															"3070:10:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "3070:10:31"
													},
													"referencedDeclaration": 2737,
													"src": "3070:10:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2737_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:22:31"
									},
									"scope": 2829,
									"src": "3010:188:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2805,
										"nodeType": "Block",
										"src": "3400:112:31",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3462:44:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3476:20:31",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3486:10:31"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:31"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2802,
														"isOffset": false,
														"isSlot": true,
														"src": "3476:6:31",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2798,
														"isOffset": false,
														"isSlot": true,
														"src": "3486:10:31",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2804,
												"nodeType": "InlineAssembly",
												"src": "3453:53:31"
											}
										]
									},
									"documentation": {
										"id": 2796,
										"nodeType": "StructuredDocumentation",
										"src": "3204:101:31",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3319:13:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3348:5:31",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "3333:20:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3333:6:31",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:22:31"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3397:1:31",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "3378:20:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2737_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2800,
														"name": "StringSlot",
														"nameLocations": [
															"3378:10:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2737,
														"src": "3378:10:31"
													},
													"referencedDeclaration": 2737,
													"src": "3378:10:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2737_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:22:31"
									},
									"scope": 2829,
									"src": "3310:202:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2816,
										"nodeType": "Block",
										"src": "3688:106:31",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3750:38:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3764:14:31",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3774:4:31"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:31"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2813,
														"isOffset": false,
														"isSlot": true,
														"src": "3764:6:31",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2809,
														"isOffset": false,
														"isSlot": false,
														"src": "3774:4:31",
														"valueSize": 1
													}
												],
												"id": 2815,
												"nodeType": "InlineAssembly",
												"src": "3741:47:31"
											}
										]
									},
									"documentation": {
										"id": 2807,
										"nodeType": "StructuredDocumentation",
										"src": "3518:85:31",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3617:12:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3638:4:31",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "3630:12:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2808,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:14:31"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3685:1:31",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "3667:19:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2740_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2812,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2811,
														"name": "BytesSlot",
														"nameLocations": [
															"3667:9:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2740,
														"src": "3667:9:31"
													},
													"referencedDeclaration": 2740,
													"src": "3667:9:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2740_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:21:31"
									},
									"scope": 2829,
									"src": "3608:186:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2827,
										"nodeType": "Block",
										"src": "3991:112:31",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4053:44:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4067:20:31",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4077:10:31"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:31"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2824,
														"isOffset": false,
														"isSlot": true,
														"src": "4067:6:31",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2820,
														"isOffset": false,
														"isSlot": true,
														"src": "4077:10:31",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2826,
												"nodeType": "InlineAssembly",
												"src": "4044:53:31"
											}
										]
									},
									"documentation": {
										"id": 2818,
										"nodeType": "StructuredDocumentation",
										"src": "3800:99:31",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3913:12:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3940:5:31",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "3926:19:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3926:5:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:21:31"
									},
									"returnParameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3988:1:31",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "3970:19:31",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2740_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2823,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2822,
														"name": "BytesSlot",
														"nameLocations": [
															"3970:9:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2740,
														"src": "3970:9:31"
													},
													"referencedDeclaration": 2740,
													"src": "3970:9:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2740_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:21:31"
									},
									"scope": 2829,
									"src": "3904:199:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2830,
							"src": "1420:2685:31",
							"usedErrors": []
						}
					],
					"src": "193:3913:31"
				},
				"id": 31
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
					"exportedSymbols": {
						"IDAO": [
							2980
						]
					},
					"id": 2981,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2831,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:32"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDAO",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2832,
								"nodeType": "StructuredDocumentation",
								"src": "76:189:32",
								"text": "@title IDAO\n @author Aragon Association - 2022-2023\n @notice The interface required for DAOs within the Aragon App DAO framework.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": false,
							"id": 2980,
							"linearizedBaseContracts": [
								2980
							],
							"name": "IDAO",
							"nameLocation": "275:4:32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDAO.Action",
									"id": 2839,
									"members": [
										{
											"constant": false,
											"id": 2834,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "628:2:32",
											"nodeType": "VariableDeclaration",
											"scope": 2839,
											"src": "620:10:32",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2833,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "620:7:32",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2836,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "649:5:32",
											"nodeType": "VariableDeclaration",
											"scope": 2839,
											"src": "641:13:32",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2835,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "641:7:32",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2838,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "671:4:32",
											"nodeType": "VariableDeclaration",
											"scope": 2839,
											"src": "665:10:32",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2837,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "665:5:32",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Action",
									"nameLocation": "602:6:32",
									"nodeType": "StructDefinition",
									"scope": 2980,
									"src": "595:88:32",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2840,
										"nodeType": "StructuredDocumentation",
										"src": "691:505:32",
										"text": "@notice Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\n @param _where The address of the contract.\n @param _who The address of a EOA or contract to give the permissions.\n @param _permissionId The permission identifier.\n @param _data The optional data passed to the `PermissionCondition` registered.\n @return Returns true if the address has permission, false if not."
									},
									"functionSelector": "fdef9106",
									"id": 2853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasPermission",
									"nameLocation": "1211:13:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "_where",
												"nameLocation": "1243:6:32",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "1235:14:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "1268:4:32",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "1260:12:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "_permissionId",
												"nameLocation": "1291:13:32",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "1283:21:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2845,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1328:5:32",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "1315:18:32",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1315:5:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:116:32"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "1364:4:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:6:32"
									},
									"scope": 2980,
									"src": "1202:168:32",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2854,
										"nodeType": "StructuredDocumentation",
										"src": "1378:126:32",
										"text": "@notice Updates the DAO metadata (e.g., an IPFS hash).\n @param _metadata The IPFS hash of the new metadata object."
									},
									"functionSelector": "ee57e36f",
									"id": 2859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMetadata",
									"nameLocation": "1519:11:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "1546:9:32",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "1531:24:32",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1531:5:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:26:32"
									},
									"returnParameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:0:32"
									},
									"scope": 2980,
									"src": "1510:56:32",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2860,
										"nodeType": "StructuredDocumentation",
										"src": "1574:120:32",
										"text": "@notice Emitted when the DAO metadata is updated.\n @param metadata The IPFS hash of the new metadata object."
									},
									"eventSelector": "bb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed",
									"id": 2864,
									"name": "MetadataSet",
									"nameLocation": "1706:11:32",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1724:8:32",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "1718:14:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2861,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1718:5:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:16:32"
									},
									"src": "1700:34:32"
								},
								{
									"documentation": {
										"id": 2865,
										"nodeType": "StructuredDocumentation",
										"src": "1742:869:32",
										"text": "@notice Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\n @param _callId The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\n @param _actions The array of actions.\n @param _allowFailureMap A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\n @return The array of results obtained from the executed actions in `bytes`.\n @return The resulting failure map containing the actions have actually failed."
									},
									"functionSelector": "c71bf324",
									"id": 2881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "2626:7:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "_callId",
												"nameLocation": "2652:7:32",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "2644:15:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "_actions",
												"nameLocation": "2686:8:32",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "2670:24:32",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Action_$2839_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDAO.Action[]"
												},
												"typeName": {
													"baseType": {
														"id": 2869,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2868,
															"name": "Action",
															"nameLocations": [
																"2670:6:32"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2839,
															"src": "2670:6:32"
														},
														"referencedDeclaration": 2839,
														"src": "2670:6:32",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Action_$2839_storage_ptr",
															"typeString": "struct IDAO.Action"
														}
													},
													"id": 2870,
													"nodeType": "ArrayTypeName",
													"src": "2670:8:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Action_$2839_storage_$dyn_storage_ptr",
														"typeString": "struct IDAO.Action[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "_allowFailureMap",
												"nameLocation": "2713:16:32",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "2705:24:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:103:32"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "2755:14:32",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2875,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2755:5:32",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2876,
													"nodeType": "ArrayTypeName",
													"src": "2755:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "2771:7:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:25:32"
									},
									"scope": 2980,
									"src": "2617:163:32",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2882,
										"nodeType": "StructuredDocumentation",
										"src": "2788:618:32",
										"text": "@notice Emitted when a proposal is executed.\n @param actor The address of the caller.\n @param callId The ID of the call.\n @param actions The array of actions executed.\n @param allowFailureMap The allow failure map encoding which actions are allowed to fail.\n @param failureMap The failure map encoding which actions have failed.\n @param execResults The array with the results of the executed actions.\n @dev The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce."
									},
									"eventSelector": "d4e57c2049f004fb297ef78591cd409503ceb6b2c722d7ffed032fc99e5f3b58",
									"id": 2899,
									"name": "Executed",
									"nameLocation": "3418:8:32",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"indexed": true,
												"mutability": "mutable",
												"name": "actor",
												"nameLocation": "3453:5:32",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "3437:21:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2886,
												"indexed": false,
												"mutability": "mutable",
												"name": "callId",
												"nameLocation": "3477:6:32",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "3469:14:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2885,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"indexed": false,
												"mutability": "mutable",
												"name": "actions",
												"nameLocation": "3503:7:32",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "3494:16:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Action_$2839_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDAO.Action[]"
												},
												"typeName": {
													"baseType": {
														"id": 2888,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2887,
															"name": "Action",
															"nameLocations": [
																"3494:6:32"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2839,
															"src": "3494:6:32"
														},
														"referencedDeclaration": 2839,
														"src": "3494:6:32",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Action_$2839_storage_ptr",
															"typeString": "struct IDAO.Action"
														}
													},
													"id": 2889,
													"nodeType": "ArrayTypeName",
													"src": "3494:8:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Action_$2839_storage_$dyn_storage_ptr",
														"typeString": "struct IDAO.Action[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowFailureMap",
												"nameLocation": "3529:15:32",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "3521:23:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2894,
												"indexed": false,
												"mutability": "mutable",
												"name": "failureMap",
												"nameLocation": "3563:10:32",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "3555:18:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2897,
												"indexed": false,
												"mutability": "mutable",
												"name": "execResults",
												"nameLocation": "3592:11:32",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "3584:19:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2895,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "3584:5:32",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2896,
													"nodeType": "ArrayTypeName",
													"src": "3584:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:184:32"
									},
									"src": "3412:199:32"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2900,
										"nodeType": "StructuredDocumentation",
										"src": "3619:282:32",
										"text": "@notice Emitted when a standard callback is registered.\n @param interfaceId The ID of the interface.\n @param callbackSelector The selector of the callback function.\n @param magicNumber The magic number to be registered for the callback function selector."
									},
									"eventSelector": "fc72fd547553f7a663e0048e590afc9c47b56a4242e960f31cf4c62e23d308b9",
									"id": 2908,
									"name": "StandardCallbackRegistered",
									"nameLocation": "3913:26:32",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"indexed": false,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3957:11:32",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "3950:18:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2901,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3950:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2904,
												"indexed": false,
												"mutability": "mutable",
												"name": "callbackSelector",
												"nameLocation": "3986:16:32",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "3979:23:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2903,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3979:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2906,
												"indexed": false,
												"mutability": "mutable",
												"name": "magicNumber",
												"nameLocation": "4020:11:32",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "4013:18:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2905,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4013:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3939:99:32"
									},
									"src": "3907:132:32"
								},
								{
									"documentation": {
										"id": 2909,
										"nodeType": "StructuredDocumentation",
										"src": "4047:301:32",
										"text": "@notice Deposits (native) tokens to the DAO contract with a reference string.\n @param _token The address of the token or address(0) in case of the native token.\n @param _amount The amount of tokens to deposit.\n @param _reference The reference describing the deposit reason."
									},
									"functionSelector": "bfe07da6",
									"id": 2918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "4363:7:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4379:6:32",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "4371:14:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4395:7:32",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "4387:15:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "_reference",
												"nameLocation": "4420:10:32",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "4404:26:32",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2914,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4404:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:61:32"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4448:0:32"
									},
									"scope": 2980,
									"src": "4354:95:32",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "4457:301:32",
										"text": "@notice Emitted when a token deposit has been made to the DAO.\n @param sender The address of the sender.\n @param token The address of the deposited token.\n @param amount The amount of tokens deposited.\n @param _reference The reference describing the deposit reason."
									},
									"eventSelector": "2bc500cf071be2d1c1458ed6ff484cd4db4345ada8943dee7ff29e7af3558f76",
									"id": 2929,
									"name": "Deposited",
									"nameLocation": "4770:9:32",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4806:6:32",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "4790:22:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2923,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4839:5:32",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "4823:21:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2925,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4863:6:32",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "4855:14:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4855:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2927,
												"indexed": false,
												"mutability": "mutable",
												"name": "_reference",
												"nameLocation": "4887:10:32",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "4880:17:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2926,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4880:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4779:125:32"
									},
									"src": "4764:141:32"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2930,
										"nodeType": "StructuredDocumentation",
										"src": "4913:403:32",
										"text": "@notice Emitted when a native token deposit has been made to the DAO.\n @dev This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\n @param sender The address of the sender.\n @param amount The amount of native tokens deposited."
									},
									"eventSelector": "62c2c8e34665db7c56b2cabd7f5fb9702ccd352ffa8150147e450797e9f8e8f3",
									"id": 2936,
									"name": "NativeTokenDeposited",
									"nameLocation": "5328:20:32",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5357:6:32",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "5349:14:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5349:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2934,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5373:6:32",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "5365:14:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5348:32:32"
									},
									"src": "5322:59:32"
								},
								{
									"documentation": {
										"id": 2937,
										"nodeType": "StructuredDocumentation",
										"src": "5389:141:32",
										"text": "@notice Setter for the trusted forwarder verifying the meta transaction.\n @param _trustedForwarder The trusted forwarder address."
									},
									"functionSelector": "da742228",
									"id": 2942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTrustedForwarder",
									"nameLocation": "5545:19:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "_trustedForwarder",
												"nameLocation": "5573:17:32",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "5565:25:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:27:32"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5600:0:32"
									},
									"scope": 2980,
									"src": "5536:65:32",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2943,
										"nodeType": "StructuredDocumentation",
										"src": "5609:124:32",
										"text": "@notice Getter for the trusted forwarder verifying the meta transaction.\n @return The trusted forwarder address."
									},
									"functionSelector": "ce1b815f",
									"id": 2948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedForwarder",
									"nameLocation": "5748:19:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5767:2:32"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "5793:7:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5793:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:9:32"
									},
									"scope": 2980,
									"src": "5739:63:32",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2949,
										"nodeType": "StructuredDocumentation",
										"src": "5810:119:32",
										"text": "@notice Emitted when a new TrustedForwarder is set on the DAO.\n @param forwarder the new forwarder address."
									},
									"eventSelector": "d91237492a9e30cd2faf361fc103998a382ff0ec2b1b07dc1cbebb76ae2f1ea2",
									"id": 2953,
									"name": "TrustedForwarderSet",
									"nameLocation": "5941:19:32",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"indexed": false,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "5969:9:32",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "5961:17:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:19:32"
									},
									"src": "5935:45:32"
								},
								{
									"documentation": {
										"id": 2954,
										"nodeType": "StructuredDocumentation",
										"src": "5988:381:32",
										"text": "@notice Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\n @param _hash The hash of the data to be signed.\n @param _signature The signature byte array associated with `_hash`.\n @return Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not."
									},
									"functionSelector": "1626ba7e",
									"id": 2963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "6384:16:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "6409:5:32",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "6401:13:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2955,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "6429:10:32",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "6416:23:32",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6416:5:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6400:40:32"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "6459:6:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2960,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6459:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6458:8:32"
									},
									"scope": 2980,
									"src": "6375:92:32",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2964,
										"nodeType": "StructuredDocumentation",
										"src": "6475:388:32",
										"text": "@notice Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\n @param _interfaceId The ID of the interface.\n @param _callbackSelector The selector of the callback function.\n @param _magicNumber The magic number to be registered for the function signature."
									},
									"functionSelector": "c4a50145",
									"id": 2973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerStandardCallback",
									"nameLocation": "6878:24:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "_interfaceId",
												"nameLocation": "6920:12:32",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "6913:19:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2965,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6913:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "_callbackSelector",
												"nameLocation": "6950:17:32",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "6943:24:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2967,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "_magicNumber",
												"nameLocation": "6985:12:32",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "6978:19:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2969,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6978:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6902:102:32"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7013:0:32"
									},
									"scope": 2980,
									"src": "6869:145:32",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2974,
										"nodeType": "StructuredDocumentation",
										"src": "7022:159:32",
										"text": "@notice Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\n @dev Introduced in v1.0.0. Removed in v1.4.0."
									},
									"functionSelector": "3e2ab0d9",
									"id": 2979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSignatureValidator",
									"nameLocation": "7196:21:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "7218:7:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:9:32"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7235:0:32"
									},
									"scope": 2980,
									"src": "7187:49:32",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2981,
							"src": "265:6974:32",
							"usedErrors": []
						}
					],
					"src": "49:7192:32"
				},
				"id": 32
			},
			"packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1190
						],
						"DaoAuthorizableUpgradeable": [
							3045
						],
						"IDAO": [
							2980
						],
						"_auth": [
							3095
						]
					},
					"id": 3046,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2982,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:33"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/ContextUpgradeable.sol",
							"id": 2984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3046,
							"sourceUnit": 1191,
							"src": "76:146:33",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2983,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1190,
										"src": "84:18:33",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../dao/IDAO.sol",
							"id": 2986,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3046,
							"sourceUnit": 2981,
							"src": "226:40:33",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2985,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2980,
										"src": "234:4:33",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/utils/auth.sol",
							"file": "../../utils/auth.sol",
							"id": 2988,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3046,
							"sourceUnit": 3096,
							"src": "268:43:33",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2987,
										"name": "_auth",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3095,
										"src": "276:5:33",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2990,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"783:18:33"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1190,
										"src": "783:18:33"
									},
									"id": 2991,
									"nodeType": "InheritanceSpecifier",
									"src": "783:18:33"
								}
							],
							"canonicalName": "DaoAuthorizableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2989,
								"nodeType": "StructuredDocumentation",
								"src": "315:420:33",
								"text": "@title DaoAuthorizableUpgradeable\n @author Aragon Association - 2022-2023\n @notice An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.\n @dev Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 3045,
							"linearizedBaseContracts": [
								3045,
								1190,
								682
							],
							"name": "DaoAuthorizableUpgradeable",
							"nameLocation": "753:26:33",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 2992,
										"nodeType": "StructuredDocumentation",
										"src": "809:80:33",
										"text": "@notice The associated DAO managing the permissions of inheriting contracts."
									},
									"id": 2995,
									"mutability": "mutable",
									"name": "dao_",
									"nameLocation": "908:4:33",
									"nodeType": "VariableDeclaration",
									"scope": 3045,
									"src": "895:17:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDAO_$2980",
										"typeString": "contract IDAO"
									},
									"typeName": {
										"id": 2994,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2993,
											"name": "IDAO",
											"nameLocations": [
												"895:4:33"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2980,
											"src": "895:4:33"
										},
										"referencedDeclaration": 2980,
										"src": "895:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDAO_$2980",
											"typeString": "contract IDAO"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3008,
										"nodeType": "Block",
										"src": "1123:30:33",
										"statements": [
											{
												"expression": {
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3004,
														"name": "dao_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2995,
														"src": "1134:4:33",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$2980",
															"typeString": "contract IDAO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3005,
														"name": "_dao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "1141:4:33",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$2980",
															"typeString": "contract IDAO"
														}
													},
													"src": "1134:11:33",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2980",
														"typeString": "contract IDAO"
													}
												},
												"id": 3007,
												"nodeType": "ExpressionStatement",
												"src": "1134:11:33"
											}
										]
									},
									"documentation": {
										"id": 2996,
										"nodeType": "StructuredDocumentation",
										"src": "921:116:33",
										"text": "@notice Initializes the contract by setting the associated DAO.\n @param _dao The associated DAO address."
									},
									"id": 3009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3001,
												"name": "onlyInitializing",
												"nameLocations": [
													"1106:16:33"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 627,
												"src": "1106:16:33"
											},
											"nodeType": "ModifierInvocation",
											"src": "1106:16:33"
										}
									],
									"name": "__DaoAuthorizableUpgradeable_init",
									"nameLocation": "1052:33:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "_dao",
												"nameLocation": "1091:4:33",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "1086:9:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2980",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 2998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2997,
														"name": "IDAO",
														"nameLocations": [
															"1086:4:33"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2980,
														"src": "1086:4:33"
													},
													"referencedDeclaration": 2980,
													"src": "1086:4:33",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2980",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:11:33"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:0:33"
									},
									"scope": 3045,
									"src": "1043:110:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3018,
										"nodeType": "Block",
										"src": "1281:30:33",
										"statements": [
											{
												"expression": {
													"id": 3016,
													"name": "dao_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2995,
													"src": "1299:4:33",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2980",
														"typeString": "contract IDAO"
													}
												},
												"functionReturnParameters": 3015,
												"id": 3017,
												"nodeType": "Return",
												"src": "1292:11:33"
											}
										]
									},
									"documentation": {
										"id": 3010,
										"nodeType": "StructuredDocumentation",
										"src": "1161:72:33",
										"text": "@notice Returns the DAO contract.\n @return The DAO contract."
									},
									"functionSelector": "4162169f",
									"id": 3019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dao",
									"nameLocation": "1248:3:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1251:2:33"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "1275:4:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2980",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 3013,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3012,
														"name": "IDAO",
														"nameLocations": [
															"1275:4:33"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2980,
														"src": "1275:4:33"
													},
													"referencedDeclaration": 2980,
													"src": "1275:4:33",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2980",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:6:33"
									},
									"scope": 3045,
									"src": "1239:72:33",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3038,
										"nodeType": "Block",
										"src": "1645:98:33",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3025,
															"name": "dao_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "1662:4:33",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															}
														},
														{
															"arguments": [
																{
																	"id": 3028,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1676:4:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DaoAuthorizableUpgradeable_$3045",
																		"typeString": "contract DaoAuthorizableUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DaoAuthorizableUpgradeable_$3045",
																		"typeString": "contract DaoAuthorizableUpgradeable"
																	}
																],
																"id": 3027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1668:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3026,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1668:7:33",
																	"typeDescriptions": {}
																}
															},
															"id": 3029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1668:13:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3030,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "1683:10:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1683:12:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3032,
															"name": "_permissionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3022,
															"src": "1697:13:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3033,
																"name": "_msgData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "1712:8:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
																	"typeString": "function () view returns (bytes calldata)"
																}
															},
															"id": 3034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1712:10:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 3024,
														"name": "_auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3095,
														"src": "1656:5:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IDAO_$2980_$_t_address_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (contract IDAO,address,address,bytes32,bytes calldata) view"
														}
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1656:67:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3036,
												"nodeType": "ExpressionStatement",
												"src": "1656:67:33"
											},
											{
												"id": 3037,
												"nodeType": "PlaceholderStatement",
												"src": "1734:1:33"
											}
										]
									},
									"documentation": {
										"id": 3020,
										"nodeType": "StructuredDocumentation",
										"src": "1319:283:33",
										"text": "@notice A modifier to make functions on inheriting contracts authorized. Permissions to call the function are checked through the associated DAO's permission manager.\n @param _permissionId The permission identifier required to call the method this modifier is applied to."
									},
									"id": 3039,
									"name": "auth",
									"nameLocation": "1617:4:33",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "_permissionId",
												"nameLocation": "1630:13:33",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "1622:21:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3021,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:23:33"
									},
									"src": "1608:135:33",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3040,
										"nodeType": "StructuredDocumentation",
										"src": "1751:273:33",
										"text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
									},
									"id": 3044,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "2050:5:33",
									"nodeType": "VariableDeclaration",
									"scope": 3045,
									"src": "2030:25:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 3041,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2030:7:33",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3043,
										"length": {
											"hexValue": "3439",
											"id": 3042,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2038:2:33",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2030:11:33",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 3046,
							"src": "735:1324:33",
							"usedErrors": []
						}
					],
					"src": "49:2012:33"
				},
				"id": 33
			},
			"packages/contracts/src/core/utils/auth.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/core/utils/auth.sol",
					"exportedSymbols": {
						"DaoUnauthorized": [
							3060
						],
						"IDAO": [
							2980
						],
						"_auth": [
							3095
						]
					},
					"id": 3096,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3047,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:34"
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../dao/IDAO.sol",
							"id": 3049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3096,
							"sourceUnit": 2981,
							"src": "76:37:34",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3048,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2980,
										"src": "84:4:34",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 3050,
								"nodeType": "StructuredDocumentation",
								"src": "117:294:34",
								"text": "@notice Thrown if a call is unauthorized in the associated DAO.\n @param dao The associated DAO.\n @param where The context in which the authorization reverted.\n @param who The address (EOA or contract) missing the permission.\n @param permissionId The permission identifier."
							},
							"errorSelector": "32dbe3b4",
							"id": 3060,
							"name": "DaoUnauthorized",
							"nameLocation": "417:15:34",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3059,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3052,
										"mutability": "mutable",
										"name": "dao",
										"nameLocation": "441:3:34",
										"nodeType": "VariableDeclaration",
										"scope": 3060,
										"src": "433:11:34",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3051,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:34",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3054,
										"mutability": "mutable",
										"name": "where",
										"nameLocation": "454:5:34",
										"nodeType": "VariableDeclaration",
										"scope": 3060,
										"src": "446:13:34",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3053,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "446:7:34",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3056,
										"mutability": "mutable",
										"name": "who",
										"nameLocation": "469:3:34",
										"nodeType": "VariableDeclaration",
										"scope": 3060,
										"src": "461:11:34",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3055,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "461:7:34",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3058,
										"mutability": "mutable",
										"name": "permissionId",
										"nameLocation": "482:12:34",
										"nodeType": "VariableDeclaration",
										"scope": 3060,
										"src": "474:20:34",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 3057,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "474:7:34",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "432:63:34"
							},
							"src": "411:85:34"
						},
						{
							"body": {
								"id": 3094,
								"nodeType": "Block",
								"src": "1191:243:34",
								"statements": [
									{
										"condition": {
											"id": 3082,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "!",
											"prefix": true,
											"src": "1202:55:34",
											"subExpression": {
												"arguments": [
													{
														"id": 3077,
														"name": "_where",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "1222:6:34",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 3078,
														"name": "_who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3068,
														"src": "1230:4:34",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 3079,
														"name": "_permissionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3070,
														"src": "1236:13:34",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													{
														"id": 3080,
														"name": "_data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3072,
														"src": "1251:5:34",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														{
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													],
													"expression": {
														"id": 3075,
														"name": "_dao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "1203:4:34",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDAO_$2980",
															"typeString": "contract IDAO"
														}
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1208:13:34",
													"memberName": "hasPermission",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2853,
													"src": "1203:18:34",
													"typeDescriptions": {
														"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
														"typeString": "function (address,address,bytes32,bytes memory) view external returns (bool)"
													}
												},
												"id": 3081,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1203:54:34",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 3093,
										"nodeType": "IfStatement",
										"src": "1198:232:34",
										"trueBody": {
											"errorCall": {
												"arguments": [
													{
														"arguments": [
															{
																"id": 3086,
																"name": "_dao",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3064,
																"src": "1319:4:34",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDAO_$2980",
																	"typeString": "contract IDAO"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IDAO_$2980",
																	"typeString": "contract IDAO"
																}
															],
															"id": 3085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1311:7:34",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3084,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1311:7:34",
																"typeDescriptions": {}
															}
														},
														"id": 3087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1311:13:34",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 3088,
														"name": "_where",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "1346:6:34",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 3089,
														"name": "_who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3068,
														"src": "1372:4:34",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													{
														"id": 3090,
														"name": "_permissionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3070,
														"src": "1405:13:34",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													],
													"id": 3083,
													"name": "DaoUnauthorized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3060,
													"src": "1275:15:34",
													"typeDescriptions": {
														"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$_t_bytes32_$returns$__$",
														"typeString": "function (address,address,address,bytes32) pure"
													}
												},
												"id": 3091,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [
													"1306:3:34",
													"1339:5:34",
													"1367:3:34",
													"1391:12:34"
												],
												"names": [
													"dao",
													"where",
													"who",
													"permissionId"
												],
												"nodeType": "FunctionCall",
												"src": "1275:155:34",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_tuple$__$",
													"typeString": "tuple()"
												}
											},
											"id": 3092,
											"nodeType": "RevertStatement",
											"src": "1268:162:34"
										}
									}
								]
							},
							"documentation": {
								"id": 3061,
								"nodeType": "StructuredDocumentation",
								"src": "500:557:34",
								"text": "@notice A free function checking if a caller is granted permissions on a target contract via a permission identifier that redirects the approval to a `PermissionCondition` if this was specified in the setup.\n @param _where The address of the target contract for which `who` receives permission.\n @param _who The address (EOA or contract) owning the permission.\n @param _permissionId The permission identifier.\n @param _data The optional data passed to the `PermissionCondition` registered.\n @custom:security-contact sirt@aragon.org"
							},
							"id": 3095,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_auth",
							"nameLocation": "1066:5:34",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3073,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3064,
										"mutability": "mutable",
										"name": "_dao",
										"nameLocation": "1083:4:34",
										"nodeType": "VariableDeclaration",
										"scope": 3095,
										"src": "1078:9:34",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDAO_$2980",
											"typeString": "contract IDAO"
										},
										"typeName": {
											"id": 3063,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3062,
												"name": "IDAO",
												"nameLocations": [
													"1078:4:34"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2980,
												"src": "1078:4:34"
											},
											"referencedDeclaration": 2980,
											"src": "1078:4:34",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IDAO_$2980",
												"typeString": "contract IDAO"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3066,
										"mutability": "mutable",
										"name": "_where",
										"nameLocation": "1102:6:34",
										"nodeType": "VariableDeclaration",
										"scope": 3095,
										"src": "1094:14:34",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3065,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1094:7:34",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3068,
										"mutability": "mutable",
										"name": "_who",
										"nameLocation": "1123:4:34",
										"nodeType": "VariableDeclaration",
										"scope": 3095,
										"src": "1115:12:34",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3067,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1115:7:34",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3070,
										"mutability": "mutable",
										"name": "_permissionId",
										"nameLocation": "1142:13:34",
										"nodeType": "VariableDeclaration",
										"scope": 3095,
										"src": "1134:21:34",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 3069,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1134:7:34",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3072,
										"mutability": "mutable",
										"name": "_data",
										"nameLocation": "1177:5:34",
										"nodeType": "VariableDeclaration",
										"scope": 3095,
										"src": "1162:20:34",
										"stateVariable": false,
										"storageLocation": "calldata",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_calldata_ptr",
											"typeString": "bytes"
										},
										"typeName": {
											"id": 3071,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1162:5:34",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1071:114:34"
							},
							"returnParameters": {
								"id": 3074,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1191:0:34"
							},
							"scope": 3096,
							"src": "1057:377:34",
							"stateMutability": "view",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "49:1387:34"
				},
				"id": 34
			},
			"packages/contracts/src/framework/dao/DAORegistry.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/dao/DAORegistry.sol",
					"exportedSymbols": {
						"DAORegistry": [
							3243
						],
						"ENSSubdomainRegistrar": [
							3659
						],
						"IDAO": [
							2980
						],
						"InterfaceBasedRegistry": [
							3360
						],
						"ProtocolVersion": [
							3693
						],
						"isSubdomainValid": [
							3433
						]
					},
					"id": 3244,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:35"
						},
						{
							"absolutePath": "packages/contracts/src/utils/protocol/ProtocolVersion.sol",
							"file": "../../utils/protocol/ProtocolVersion.sol",
							"id": 3099,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3244,
							"sourceUnit": 3694,
							"src": "76:73:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3098,
										"name": "ProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3693,
										"src": "84:15:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../core/dao/IDAO.sol",
							"id": 3101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3244,
							"sourceUnit": 2981,
							"src": "151:45:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3100,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2980,
										"src": "159:4:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
							"file": "../utils/ens/ENSSubdomainRegistrar.sol",
							"id": 3103,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3244,
							"sourceUnit": 3660,
							"src": "198:77:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3102,
										"name": "ENSSubdomainRegistrar",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3659,
										"src": "206:21:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
							"file": "../utils/InterfaceBasedRegistry.sol",
							"id": 3105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3244,
							"sourceUnit": 3361,
							"src": "277:75:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3104,
										"name": "InterfaceBasedRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3360,
										"src": "285:22:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/framework/utils/RegistryUtils.sol",
							"file": "../utils/RegistryUtils.sol",
							"id": 3107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3244,
							"sourceUnit": 3434,
							"src": "354:60:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3106,
										"name": "isSubdomainValid",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3433,
										"src": "362:16:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3109,
										"name": "InterfaceBasedRegistry",
										"nameLocations": [
											"650:22:35"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3360,
										"src": "650:22:35"
									},
									"id": 3110,
									"nodeType": "InheritanceSpecifier",
									"src": "650:22:35"
								},
								{
									"baseName": {
										"id": 3111,
										"name": "ProtocolVersion",
										"nameLocations": [
											"674:15:35"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3693,
										"src": "674:15:35"
									},
									"id": 3112,
									"nodeType": "InheritanceSpecifier",
									"src": "674:15:35"
								}
							],
							"canonicalName": "DAORegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3108,
								"nodeType": "StructuredDocumentation",
								"src": "418:208:35",
								"text": "@title Register your unique DAO subdomain\n @author Aragon Association - 2022-2023\n @notice This contract provides the possibility to register a DAO.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 3243,
							"linearizedBaseContracts": [
								3243,
								3693,
								3671,
								3360,
								3045,
								1190,
								818,
								503,
								169,
								179,
								682
							],
							"name": "DAORegistry",
							"nameLocation": "635:11:35",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3113,
										"nodeType": "StructuredDocumentation",
										"src": "697:78:35",
										"text": "@notice The ID of the permission required to call the `register` function."
									},
									"functionSelector": "a2298b4b",
									"id": 3118,
									"mutability": "constant",
									"name": "REGISTER_DAO_PERMISSION_ID",
									"nameLocation": "805:26:35",
									"nodeType": "VariableDeclaration",
									"scope": 3243,
									"src": "781:89:35",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3114,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:35",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "52454749535445525f44414f5f5045524d495353494f4e",
												"id": 3116,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "844:25:35",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_de5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215",
													"typeString": "literal_string \"REGISTER_DAO_PERMISSION\""
												},
												"value": "REGISTER_DAO_PERMISSION"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_de5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc54856215",
													"typeString": "literal_string \"REGISTER_DAO_PERMISSION\""
												}
											],
											"id": 3115,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "834:9:35",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "834:36:35",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3119,
										"nodeType": "StructuredDocumentation",
										"src": "879:71:35",
										"text": "@notice The ENS subdomain registrar registering the DAO subdomains."
									},
									"functionSelector": "00077393",
									"id": 3122,
									"mutability": "mutable",
									"name": "subdomainRegistrar",
									"nameLocation": "985:18:35",
									"nodeType": "VariableDeclaration",
									"scope": 3243,
									"src": "956:47:35",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
										"typeString": "contract ENSSubdomainRegistrar"
									},
									"typeName": {
										"id": 3121,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3120,
											"name": "ENSSubdomainRegistrar",
											"nameLocations": [
												"956:21:35"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3659,
											"src": "956:21:35"
										},
										"referencedDeclaration": 3659,
										"src": "956:21:35",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
											"typeString": "contract ENSSubdomainRegistrar"
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3123,
										"nodeType": "StructuredDocumentation",
										"src": "1012:76:35",
										"text": "@notice Thrown if the DAO subdomain doesn't match the regex `[0-9a-z\\-]`"
									},
									"errorSelector": "3a5bf49b",
									"id": 3127,
									"name": "InvalidDaoSubdomain",
									"nameLocation": "1100:19:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "subdomain",
												"nameLocation": "1127:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 3127,
												"src": "1120:16:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1120:6:35",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:18:35"
									},
									"src": "1094:44:35"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3128,
										"nodeType": "StructuredDocumentation",
										"src": "1146:199:35",
										"text": "@notice Emitted when a new DAO is registered.\n @param dao The address of the DAO contract.\n @param creator The address of the creator.\n @param subdomain The DAO subdomain."
									},
									"eventSelector": "bc0b11fe649bb4d67c7fb40936163e5423f45c3ae83fbd8f8f8c75e1a3fa97af",
									"id": 3136,
									"name": "DAORegistered",
									"nameLocation": "1357:13:35",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"indexed": true,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "1387:3:35",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "1371:19:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3132,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "1408:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "1392:23:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3134,
												"indexed": false,
												"mutability": "mutable",
												"name": "subdomain",
												"nameLocation": "1424:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "1417:16:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1417:6:35",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:64:35"
									},
									"src": "1351:84:35"
								},
								{
									"body": {
										"id": 3143,
										"nodeType": "Block",
										"src": "1616:41:35",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3140,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "1627:20:35",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1627:22:35",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3142,
												"nodeType": "ExpressionStatement",
												"src": "1627:22:35"
											}
										]
									},
									"documentation": {
										"id": 3137,
										"nodeType": "StructuredDocumentation",
										"src": "1443:153:35",
										"text": "@dev Used to disallow initializing the implementation contract by an attacker for extra safety.\n @custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 3144,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:2:35"
									},
									"returnParameters": {
										"id": 3139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:0:35"
									},
									"scope": 3243,
									"src": "1602:55:35",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3168,
										"nodeType": "Block",
										"src": "1997:137:35",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3157,
															"name": "_managingDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3148,
															"src": "2038:12:35",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3159,
																		"name": "IDAO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2980,
																		"src": "2057:4:35",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDAO_$2980_$",
																			"typeString": "type(contract IDAO)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDAO_$2980_$",
																			"typeString": "type(contract IDAO)"
																		}
																	],
																	"id": 3158,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2052:4:35",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2052:10:35",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDAO_$2980",
																	"typeString": "type(contract IDAO)"
																}
															},
															"id": 3161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2063:11:35",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2052:22:35",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 3156,
														"name": "__InterfaceBasedRegistry_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "2008:29:35",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IDAO_$2980_$_t_bytes4_$returns$__$",
															"typeString": "function (contract IDAO,bytes4)"
														}
													},
													"id": 3162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:67:35",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3163,
												"nodeType": "ExpressionStatement",
												"src": "2008:67:35"
											},
											{
												"expression": {
													"id": 3166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3164,
														"name": "subdomainRegistrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "2086:18:35",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
															"typeString": "contract ENSSubdomainRegistrar"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3165,
														"name": "_subdomainRegistrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3151,
														"src": "2107:19:35",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
															"typeString": "contract ENSSubdomainRegistrar"
														}
													},
													"src": "2086:40:35",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
														"typeString": "contract ENSSubdomainRegistrar"
													}
												},
												"id": 3167,
												"nodeType": "ExpressionStatement",
												"src": "2086:40:35"
											}
										]
									},
									"documentation": {
										"id": 3145,
										"nodeType": "StructuredDocumentation",
										"src": "1665:198:35",
										"text": "@notice Initializes the contract.\n @param _managingDao the managing DAO address.\n @param _subdomainRegistrar The `ENSSubdomainRegistrar` where `ENS` subdomain will be registered."
									},
									"functionSelector": "485cc955",
									"id": 3169,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3153,
												"name": "initializer",
												"nameLocations": [
													"1985:11:35"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 584,
												"src": "1985:11:35"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:11:35"
										}
									],
									"name": "initialize",
									"nameLocation": "1878:10:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "_managingDao",
												"nameLocation": "1904:12:35",
												"nodeType": "VariableDeclaration",
												"scope": 3169,
												"src": "1899:17:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2980",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 3147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3146,
														"name": "IDAO",
														"nameLocations": [
															"1899:4:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2980,
														"src": "1899:4:35"
													},
													"referencedDeclaration": 2980,
													"src": "1899:4:35",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2980",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "_subdomainRegistrar",
												"nameLocation": "1949:19:35",
												"nodeType": "VariableDeclaration",
												"scope": 3169,
												"src": "1927:41:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
													"typeString": "contract ENSSubdomainRegistrar"
												},
												"typeName": {
													"id": 3150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3149,
														"name": "ENSSubdomainRegistrar",
														"nameLocations": [
															"1927:21:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3659,
														"src": "1927:21:35"
													},
													"referencedDeclaration": 3659,
													"src": "1927:21:35",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
														"typeString": "contract ENSSubdomainRegistrar"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:87:35"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1997:0:35"
									},
									"scope": 3243,
									"src": "1869:265:35",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3236,
										"nodeType": "Block",
										"src": "2694:467:35",
										"statements": [
											{
												"assignments": [
													3184
												],
												"declarations": [
													{
														"constant": false,
														"id": 3184,
														"mutability": "mutable",
														"name": "daoAddr",
														"nameLocation": "2713:7:35",
														"nodeType": "VariableDeclaration",
														"scope": 3236,
														"src": "2705:15:35",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3183,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2705:7:35",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3189,
												"initialValue": {
													"arguments": [
														{
															"id": 3187,
															"name": "dao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3173,
															"src": "2731:3:35",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															}
														],
														"id": 3186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2723:7:35",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 3185,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2723:7:35",
															"typeDescriptions": {}
														}
													},
													"id": 3188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:12:35",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2705:30:35"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3191,
															"name": "daoAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "2758:7:35",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3190,
														"name": "_register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3354,
														"src": "2748:9:35",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2748:18:35",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3193,
												"nodeType": "ExpressionStatement",
												"src": "2748:18:35"
											},
											{
												"condition": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 3196,
																			"name": "subdomain",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3177,
																			"src": "2790:9:35",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		],
																		"id": 3195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2784:5:35",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 3194,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2784:5:35",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2784:16:35",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 3198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2801:6:35",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2784:23:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2810:1:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2784:27:35",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3201,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2783:29:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3229,
												"nodeType": "IfStatement",
												"src": "2779:315:35",
												"trueBody": {
													"id": 3228,
													"nodeType": "Block",
													"src": "2814:280:35",
													"statements": [
														{
															"condition": {
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2833:28:35",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 3203,
																			"name": "subdomain",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3177,
																			"src": "2851:9:35",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		],
																		"id": 3202,
																		"name": "isSubdomainValid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3433,
																		"src": "2834:16:35",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$returns$_t_bool_$",
																			"typeString": "function (string calldata) pure returns (bool)"
																		}
																	},
																	"id": 3204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2834:27:35",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3211,
															"nodeType": "IfStatement",
															"src": "2829:119:35",
															"trueBody": {
																"id": 3210,
																"nodeType": "Block",
																"src": "2863:85:35",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3207,
																					"name": "subdomain",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3177,
																					"src": "2921:9:35",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_calldata_ptr",
																						"typeString": "string calldata"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_calldata_ptr",
																						"typeString": "string calldata"
																					}
																				],
																				"id": 3206,
																				"name": "InvalidDaoSubdomain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3127,
																				"src": "2889:19:35",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 3208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [
																				"2910:9:35"
																			],
																			"names": [
																				"subdomain"
																			],
																			"nodeType": "FunctionCall",
																			"src": "2889:43:35",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3209,
																		"nodeType": "RevertStatement",
																		"src": "2882:50:35"
																	}
																]
															}
														},
														{
															"assignments": [
																3213
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3213,
																	"mutability": "mutable",
																	"name": "labelhash",
																	"nameLocation": "2972:9:35",
																	"nodeType": "VariableDeclaration",
																	"scope": 3228,
																	"src": "2964:17:35",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 3212,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2964:7:35",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3220,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3217,
																				"name": "subdomain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3177,
																				"src": "3000:9:35",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			],
																			"id": 3216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2994:5:35",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 3215,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "2994:5:35",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2994:16:35",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 3214,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2984:9:35",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:27:35",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2964:47:35"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3224,
																		"name": "labelhash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3213,
																		"src": "3063:9:35",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 3225,
																		"name": "daoAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3184,
																		"src": "3074:7:35",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3221,
																		"name": "subdomainRegistrar",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3122,
																		"src": "3028:18:35",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
																			"typeString": "contract ENSSubdomainRegistrar"
																		}
																	},
																	"id": 3223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3047:15:35",
																	"memberName": "registerSubnode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3626,
																	"src": "3028:34:35",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address) external"
																	}
																},
																"id": 3226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:54:35",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3227,
															"nodeType": "ExpressionStatement",
															"src": "3028:54:35"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3231,
															"name": "daoAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "3125:7:35",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3232,
															"name": "creator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3175,
															"src": "3134:7:35",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3233,
															"name": "subdomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "3143:9:35",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 3230,
														"name": "DAORegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3136,
														"src": "3111:13:35",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,string memory)"
														}
													},
													"id": 3234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3111:42:35",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3235,
												"nodeType": "EmitStatement",
												"src": "3106:47:35"
											}
										]
									},
									"documentation": {
										"id": 3170,
										"nodeType": "StructuredDocumentation",
										"src": "2142:398:35",
										"text": "@notice Registers a DAO by its address. If a non-empty subdomain name is provided that is not taken already, the DAO becomes the owner of the ENS name.\n @dev A subdomain is unique within the Aragon DAO framework and can get stored here.\n @param dao The address of the DAO contract.\n @param creator The address of the creator.\n @param subdomain The DAO subdomain."
									},
									"functionSelector": "ede49739",
									"id": 3237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3180,
													"name": "REGISTER_DAO_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3118,
													"src": "2666:26:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3179,
												"name": "auth",
												"nameLocations": [
													"2661:4:35"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3039,
												"src": "2661:4:35"
											},
											"nodeType": "ModifierInvocation",
											"src": "2661:32:35"
										}
									],
									"name": "register",
									"nameLocation": "2555:8:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "2579:3:35",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "2574:8:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2980",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 3172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3171,
														"name": "IDAO",
														"nameLocations": [
															"2574:4:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2980,
														"src": "2574:4:35"
													},
													"referencedDeclaration": 2980,
													"src": "2574:4:35",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2980",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "2601:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "2593:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "subdomain",
												"nameLocation": "2635:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "2619:25:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2619:6:35",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:88:35"
									},
									"returnParameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2694:0:35"
									},
									"scope": 3243,
									"src": "2546:615:35",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3238,
										"nodeType": "StructuredDocumentation",
										"src": "3169:273:35",
										"text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
									},
									"id": 3242,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3468:5:35",
									"nodeType": "VariableDeclaration",
									"scope": 3243,
									"src": "3448:25:35",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 3239,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3448:7:35",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3241,
										"length": {
											"hexValue": "3439",
											"id": 3240,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3456:2:35",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3448:11:35",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 3244,
							"src": "626:2851:35",
							"usedErrors": [
								3060,
								3127,
								3280,
								3285,
								3290
							]
						}
					],
					"src": "49:3430:35"
				},
				"id": 35
			},
			"packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/utils/InterfaceBasedRegistry.sol",
					"exportedSymbols": {
						"DaoAuthorizableUpgradeable": [
							3045
						],
						"ERC165CheckerUpgradeable": [
							1494
						],
						"IDAO": [
							2980
						],
						"InterfaceBasedRegistry": [
							3360
						],
						"UUPSUpgradeable": [
							818
						]
					},
					"id": 3361,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3245,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:36"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
							"id": 3247,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3361,
							"sourceUnit": 819,
							"src": "76:146:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3246,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 818,
										"src": "84:15:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/contracts-upgradeable/v4.9.3/contracts/utils/introspection/ERC165CheckerUpgradeable.sol",
							"id": 3249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3361,
							"sourceUnit": 1495,
							"src": "224:172:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3248,
										"name": "ERC165CheckerUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1494,
										"src": "232:24:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
							"file": "../../core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
							"id": 3251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3361,
							"sourceUnit": 3046,
							"src": "400:109:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3250,
										"name": "DaoAuthorizableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3045,
										"src": "408:26:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../core/dao/IDAO.sol",
							"id": 3253,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3361,
							"sourceUnit": 2981,
							"src": "511:45:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3252,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2980,
										"src": "519:4:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3255,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"825:15:36"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 818,
										"src": "825:15:36"
									},
									"id": 3256,
									"nodeType": "InheritanceSpecifier",
									"src": "825:15:36"
								},
								{
									"baseName": {
										"id": 3257,
										"name": "DaoAuthorizableUpgradeable",
										"nameLocations": [
											"842:26:36"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3045,
										"src": "842:26:36"
									},
									"id": 3258,
									"nodeType": "InheritanceSpecifier",
									"src": "842:26:36"
								}
							],
							"canonicalName": "InterfaceBasedRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3254,
								"nodeType": "StructuredDocumentation",
								"src": "560:221:36",
								"text": "@title InterfaceBasedRegistry\n @author Aragon Association - 2022-2023\n @notice An [ERC-165](https://eips.ethereum.org/EIPS/eip-165)-based registry for contracts.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 3360,
							"linearizedBaseContracts": [
								3360,
								3045,
								1190,
								818,
								503,
								169,
								179,
								682
							],
							"name": "InterfaceBasedRegistry",
							"nameLocation": "799:22:36",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3261,
									"libraryName": {
										"id": 3259,
										"name": "ERC165CheckerUpgradeable",
										"nameLocations": [
											"882:24:36"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1494,
										"src": "882:24:36"
									},
									"nodeType": "UsingForDirective",
									"src": "876:43:36",
									"typeName": {
										"id": 3260,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "911:7:36",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 3262,
										"nodeType": "StructuredDocumentation",
										"src": "927:87:36",
										"text": "@notice The ID of the permission required to call the `_authorizeUpgrade` function."
									},
									"functionSelector": "74574eb7",
									"id": 3267,
									"mutability": "constant",
									"name": "UPGRADE_REGISTRY_PERMISSION_ID",
									"nameLocation": "1044:30:36",
									"nodeType": "VariableDeclaration",
									"scope": 3360,
									"src": "1020:106:36",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3263,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1020:7:36",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "555047524144455f52454749535452595f5045524d495353494f4e",
												"id": 3265,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1096:29:36",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932",
													"typeString": "literal_string \"UPGRADE_REGISTRY_PERMISSION\""
												},
												"value": "UPGRADE_REGISTRY_PERMISSION"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa72932",
													"typeString": "literal_string \"UPGRADE_REGISTRY_PERMISSION\""
												}
											],
											"id": 3264,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1086:9:36",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3266,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1086:40:36",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3268,
										"nodeType": "StructuredDocumentation",
										"src": "1135:135:36",
										"text": "@notice The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID that the target contracts being registered must support."
									},
									"functionSelector": "44162ef8",
									"id": 3270,
									"mutability": "mutable",
									"name": "targetInterfaceId",
									"nameLocation": "1290:17:36",
									"nodeType": "VariableDeclaration",
									"scope": 3360,
									"src": "1276:31:36",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 3269,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1276:6:36",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3271,
										"nodeType": "StructuredDocumentation",
										"src": "1316:105:36",
										"text": "@notice The mapping containing the registry entries returning true for registered contract addresses."
									},
									"functionSelector": "f29ee125",
									"id": 3275,
									"mutability": "mutable",
									"name": "entries",
									"nameLocation": "1459:7:36",
									"nodeType": "VariableDeclaration",
									"scope": 3360,
									"src": "1427:39:36",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3274,
										"keyType": {
											"id": 3272,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1435:7:36",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1427:24:36",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 3273,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1446:4:36",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3276,
										"nodeType": "StructuredDocumentation",
										"src": "1475:130:36",
										"text": "@notice Thrown if the contract is already registered.\n @param registrant The address of the contract to be registered."
									},
									"errorSelector": "fdcce17f",
									"id": 3280,
									"name": "ContractAlreadyRegistered",
									"nameLocation": "1617:25:36",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3278,
												"mutability": "mutable",
												"name": "registrant",
												"nameLocation": "1651:10:36",
												"nodeType": "VariableDeclaration",
												"scope": 3280,
												"src": "1643:18:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1643:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:20:36"
									},
									"src": "1611:52:36"
								},
								{
									"documentation": {
										"id": 3281,
										"nodeType": "StructuredDocumentation",
										"src": "1671:148:36",
										"text": "@notice Thrown if the contract does not support the required interface.\n @param registrant The address of the contract to be registered."
									},
									"errorSelector": "71023c8a",
									"id": 3285,
									"name": "ContractInterfaceInvalid",
									"nameLocation": "1831:24:36",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "registrant",
												"nameLocation": "1864:10:36",
												"nodeType": "VariableDeclaration",
												"scope": 3285,
												"src": "1856:18:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:20:36"
									},
									"src": "1825:51:36"
								},
								{
									"documentation": {
										"id": 3286,
										"nodeType": "StructuredDocumentation",
										"src": "1884:115:36",
										"text": "@notice Thrown if the contract does not support ERC165.\n @param registrant The address of the contract."
									},
									"errorSelector": "cd9f9d17",
									"id": 3290,
									"name": "ContractERC165SupportInvalid",
									"nameLocation": "2011:28:36",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3288,
												"mutability": "mutable",
												"name": "registrant",
												"nameLocation": "2048:10:36",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "2040:18:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:20:36"
									},
									"src": "2005:55:36"
								},
								{
									"body": {
										"id": 3309,
										"nodeType": "Block",
										"src": "2551:117:36",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3302,
															"name": "_managingDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3294,
															"src": "2596:12:36",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															}
														],
														"id": 3301,
														"name": "__DaoAuthorizableUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3009,
														"src": "2562:33:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IDAO_$2980_$returns$__$",
															"typeString": "function (contract IDAO)"
														}
													},
													"id": 3303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:47:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3304,
												"nodeType": "ExpressionStatement",
												"src": "2562:47:36"
											},
											{
												"expression": {
													"id": 3307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3305,
														"name": "targetInterfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "2622:17:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3306,
														"name": "_targetInterfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3296,
														"src": "2642:18:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2622:38:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 3308,
												"nodeType": "ExpressionStatement",
												"src": "2622:38:36"
											}
										]
									},
									"documentation": {
										"id": 3291,
										"nodeType": "StructuredDocumentation",
										"src": "2068:333:36",
										"text": "@notice Initializes the component.\n @dev This is required for the UUPS upgradability pattern.\n @param _managingDao The interface of the DAO managing the components permissions.\n @param _targetInterfaceId The [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface id of the contracts to be registered."
									},
									"id": 3310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3299,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3298,
												"name": "onlyInitializing",
												"nameLocations": [
													"2534:16:36"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 627,
												"src": "2534:16:36"
											},
											"nodeType": "ModifierInvocation",
											"src": "2534:16:36"
										}
									],
									"name": "__InterfaceBasedRegistry_init",
									"nameLocation": "2416:29:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3294,
												"mutability": "mutable",
												"name": "_managingDao",
												"nameLocation": "2461:12:36",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "2456:17:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2980",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 3293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3292,
														"name": "IDAO",
														"nameLocations": [
															"2456:4:36"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2980,
														"src": "2456:4:36"
													},
													"referencedDeclaration": 2980,
													"src": "2456:4:36",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2980",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "_targetInterfaceId",
												"nameLocation": "2491:18:36",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "2484:25:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3295,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2484:6:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2445:71:36"
									},
									"returnParameters": {
										"id": 3300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2551:0:36"
									},
									"scope": 3360,
									"src": "2407:261:36",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										812
									],
									"body": {
										"id": 3320,
										"nodeType": "Block",
										"src": "3130:2:36",
										"statements": []
									},
									"documentation": {
										"id": 3311,
										"nodeType": "StructuredDocumentation",
										"src": "2676:333:36",
										"text": "@notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\n @dev The caller must have the `UPGRADE_REGISTRY_PERMISSION_ID` permission."
									},
									"id": 3321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3317,
													"name": "UPGRADE_REGISTRY_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3267,
													"src": "3098:30:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3316,
												"name": "auth",
												"nameLocations": [
													"3093:4:36"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3039,
												"src": "3093:4:36"
											},
											"nodeType": "ModifierInvocation",
											"src": "3093:36:36"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "3024:17:36",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3315,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3084:8:36"
									},
									"parameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "3052:7:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:25:36"
									},
									"returnParameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3130:0:36"
									},
									"scope": 3360,
									"src": "3015:117:36",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3353,
										"nodeType": "Block",
										"src": "3475:414:36",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 3327,
														"name": "entries",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3275,
														"src": "3490:7:36",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3329,
													"indexExpression": {
														"id": 3328,
														"name": "_registrant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3324,
														"src": "3498:11:36",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3490:20:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3335,
												"nodeType": "IfStatement",
												"src": "3486:112:36",
												"trueBody": {
													"id": 3334,
													"nodeType": "Block",
													"src": "3512:86:36",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3331,
																		"name": "_registrant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3324,
																		"src": "3573:11:36",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3330,
																	"name": "ContractAlreadyRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3280,
																	"src": "3534:25:36",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"3561:10:36"
																],
																"names": [
																	"registrant"
																],
																"nodeType": "FunctionCall",
																"src": "3534:52:36",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3333,
															"nodeType": "RevertStatement",
															"src": "3527:59:36"
														}
													]
												}
											},
											{
												"condition": {
													"id": 3340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3720:49:36",
													"subExpression": {
														"arguments": [
															{
																"id": 3338,
																"name": "targetInterfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3270,
																"src": "3751:17:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 3336,
																"name": "_registrant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3324,
																"src": "3721:11:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3733:17:36",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1350,
															"src": "3721:29:36",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$bound_to$_t_address_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 3339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3721:48:36",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3346,
												"nodeType": "IfStatement",
												"src": "3716:126:36",
												"trueBody": {
													"id": 3345,
													"nodeType": "Block",
													"src": "3771:71:36",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3342,
																		"name": "_registrant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3324,
																		"src": "3818:11:36",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3341,
																	"name": "ContractInterfaceInvalid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3285,
																	"src": "3793:24:36",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:37:36",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3344,
															"nodeType": "RevertStatement",
															"src": "3786:44:36"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3347,
															"name": "entries",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3275,
															"src": "3854:7:36",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3349,
														"indexExpression": {
															"id": 3348,
															"name": "_registrant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3324,
															"src": "3862:11:36",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3854:20:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3877:4:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3854:27:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3352,
												"nodeType": "ExpressionStatement",
												"src": "3854:27:36"
											}
										]
									},
									"documentation": {
										"id": 3322,
										"nodeType": "StructuredDocumentation",
										"src": "3140:280:36",
										"text": "@notice Register an [ERC-165](https://eips.ethereum.org/EIPS/eip-165) contract address.\n @dev The managing DAO needs to grant REGISTER_PERMISSION_ID to registrar.\n @param _registrant The address of an [ERC-165](https://eips.ethereum.org/EIPS/eip-165) contract."
									},
									"id": 3354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_register",
									"nameLocation": "3435:9:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "_registrant",
												"nameLocation": "3453:11:36",
												"nodeType": "VariableDeclaration",
												"scope": 3354,
												"src": "3445:19:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3445:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3444:21:36"
									},
									"returnParameters": {
										"id": 3326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:36"
									},
									"scope": 3360,
									"src": "3426:463:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3355,
										"nodeType": "StructuredDocumentation",
										"src": "3897:273:36",
										"text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
									},
									"id": 3359,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4196:5:36",
									"nodeType": "VariableDeclaration",
									"scope": 3360,
									"src": "4176:25:36",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$48_storage",
										"typeString": "uint256[48]"
									},
									"typeName": {
										"baseType": {
											"id": 3356,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4176:7:36",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3358,
										"length": {
											"hexValue": "3438",
											"id": 3357,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4184:2:36",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_48_by_1",
												"typeString": "int_const 48"
											},
											"value": "48"
										},
										"nodeType": "ArrayTypeName",
										"src": "4176:11:36",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$48_storage_ptr",
											"typeString": "uint256[48]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 3361,
							"src": "781:3424:36",
							"usedErrors": [
								3060,
								3280,
								3285,
								3290
							]
						}
					],
					"src": "49:4158:36"
				},
				"id": 36
			},
			"packages/contracts/src/framework/utils/RegistryUtils.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/utils/RegistryUtils.sol",
					"exportedSymbols": {
						"isSubdomainValid": [
							3433
						]
					},
					"id": 3434,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:37"
						},
						{
							"body": {
								"id": 3432,
								"nodeType": "Block",
								"src": "731:610:37",
								"statements": [
									{
										"assignments": [
											3371
										],
										"declarations": [
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "nameBytes",
												"nameLocation": "753:9:37",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "738:24:37",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "738:5:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 3376,
										"initialValue": {
											"arguments": [
												{
													"id": 3374,
													"name": "subDomain",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3365,
													"src": "771:9:37",
													"typeDescriptions": {
														"typeIdentifier": "t_string_calldata_ptr",
														"typeString": "string calldata"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_string_calldata_ptr",
														"typeString": "string calldata"
													}
												],
												"id": 3373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "765:5:37",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
													"typeString": "type(bytes storage pointer)"
												},
												"typeName": {
													"id": 3372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "765:5:37",
													"typeDescriptions": {}
												}
											},
											"id": 3375,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "765:16:37",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_calldata_ptr",
												"typeString": "bytes calldata"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "738:43:37"
									},
									{
										"assignments": [
											3378
										],
										"declarations": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "nameLength",
												"nameLocation": "796:10:37",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "788:18:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 3381,
										"initialValue": {
											"expression": {
												"id": 3379,
												"name": "nameBytes",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3371,
												"src": "809:9:37",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes calldata"
												}
											},
											"id": 3380,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "819:6:37",
											"memberName": "length",
											"nodeType": "MemberAccess",
											"src": "809:16:37",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "788:37:37"
									},
									{
										"body": {
											"id": 3428,
											"nodeType": "Block",
											"src": "869:451:37",
											"statements": [
												{
													"assignments": [
														3392
													],
													"declarations": [
														{
															"constant": false,
															"id": 3392,
															"mutability": "mutable",
															"name": "char",
															"nameLocation": "886:4:37",
															"nodeType": "VariableDeclaration",
															"scope": 3428,
															"src": "880:10:37",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 3391,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "880:5:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3399,
													"initialValue": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 3395,
																	"name": "nameBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "899:9:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 3397,
																"indexExpression": {
																	"id": 3396,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3383,
																	"src": "909:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "899:12:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															],
															"id": 3394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "893:5:37",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 3393,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "893:5:37",
																"typeDescriptions": {}
															}
														},
														"id": 3398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "893:19:37",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "880:32:37"
												},
												{
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 3402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3400,
																"name": "char",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3392,
																"src": "964:4:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "3936",
																"id": 3401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "971:2:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_96_by_1",
																	"typeString": "int_const 96"
																},
																"value": "96"
															},
															"src": "964:9:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 3405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3403,
																"name": "char",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3392,
																"src": "977:4:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "313233",
																"id": 3404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "984:3:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_123_by_1",
																	"typeString": "int_const 123"
																},
																"value": "123"
															},
															"src": "977:10:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "964:23:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3409,
													"nodeType": "IfStatement",
													"src": "960:64:37",
													"trueBody": {
														"id": 3408,
														"nodeType": "Block",
														"src": "989:35:37",
														"statements": [
															{
																"id": 3407,
																"nodeType": "Continue",
																"src": "1004:8:37"
															}
														]
													}
												},
												{
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 3412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3410,
																"name": "char",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3392,
																"src": "1075:4:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "3437",
																"id": 3411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1082:2:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_47_by_1",
																	"typeString": "int_const 47"
																},
																"value": "47"
															},
															"src": "1075:9:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 3415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3413,
																"name": "char",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3392,
																"src": "1088:4:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3538",
																"id": 3414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1095:2:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_58_by_1",
																	"typeString": "int_const 58"
																},
																"value": "58"
															},
															"src": "1088:9:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1075:22:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3419,
													"nodeType": "IfStatement",
													"src": "1071:63:37",
													"trueBody": {
														"id": 3418,
														"nodeType": "Block",
														"src": "1099:35:37",
														"statements": [
															{
																"id": 3417,
																"nodeType": "Continue",
																"src": "1114:8:37"
															}
														]
													}
												},
												{
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3420,
															"name": "char",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3392,
															"src": "1175:4:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3435",
															"id": 3421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1183:2:37",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45_by_1",
																"typeString": "int_const 45"
															},
															"value": "45"
														},
														"src": "1175:10:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3425,
													"nodeType": "IfStatement",
													"src": "1171:51:37",
													"trueBody": {
														"id": 3424,
														"nodeType": "Block",
														"src": "1187:35:37",
														"statements": [
															{
																"id": 3423,
																"nodeType": "Continue",
																"src": "1202:8:37"
															}
														]
													}
												},
												{
													"expression": {
														"hexValue": "66616c7365",
														"id": 3426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1307:5:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 3369,
													"id": 3427,
													"nodeType": "Return",
													"src": "1300:12:37"
												}
											]
										},
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 3387,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 3385,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3383,
												"src": "848:1:37",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "<",
											"rightExpression": {
												"id": 3386,
												"name": "nameLength",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3378,
												"src": "852:10:37",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "848:14:37",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 3429,
										"initializationExpression": {
											"assignments": [
												3383
											],
											"declarations": [
												{
													"constant": false,
													"id": 3383,
													"mutability": "mutable",
													"name": "i",
													"nameLocation": "845:1:37",
													"nodeType": "VariableDeclaration",
													"scope": 3429,
													"src": "837:9:37",
													"stateVariable": false,
													"storageLocation": "default",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"typeName": {
														"id": 3382,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "837:7:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"visibility": "internal"
												}
											],
											"id": 3384,
											"nodeType": "VariableDeclarationStatement",
											"src": "837:9:37"
										},
										"loopExpression": {
											"expression": {
												"id": 3389,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "UnaryOperation",
												"operator": "++",
												"prefix": false,
												"src": "864:3:37",
												"subExpression": {
													"id": 3388,
													"name": "i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3383,
													"src": "864:1:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 3390,
											"nodeType": "ExpressionStatement",
											"src": "864:3:37"
										},
										"nodeType": "ForStatement",
										"src": "832:488:37"
									},
									{
										"expression": {
											"hexValue": "74727565",
											"id": 3430,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "bool",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1333:4:37",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"value": "true"
										},
										"functionReturnParameters": 3369,
										"id": 3431,
										"nodeType": "Return",
										"src": "1326:11:37"
									}
								]
							},
							"documentation": {
								"id": 3363,
								"nodeType": "StructuredDocumentation",
								"src": "76:582:37",
								"text": "@notice Validates that a subdomain name is composed only from characters in the allowed character set:\n - the lowercase letters `a-z`\n - the digits `0-9`\n - the hyphen `-`\n @dev This function allows empty (zero-length) subdomains. If this should not be allowed, make sure to add a respective check when using this function in your code.\n @param subDomain The name of the DAO.\n @return `true` if the name is valid or `false` if at least one char is invalid.\n @dev Aborts on the first invalid char found.\n @custom:security-contact sirt@aragon.org"
							},
							"id": 3433,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "isSubdomainValid",
							"nameLocation": "667:16:37",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 3366,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3365,
										"mutability": "mutable",
										"name": "subDomain",
										"nameLocation": "700:9:37",
										"nodeType": "VariableDeclaration",
										"scope": 3433,
										"src": "684:25:37",
										"stateVariable": false,
										"storageLocation": "calldata",
										"typeDescriptions": {
											"typeIdentifier": "t_string_calldata_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 3364,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "684:6:37",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "683:27:37"
							},
							"returnParameters": {
								"id": 3369,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3368,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 3433,
										"src": "725:4:37",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 3367,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "725:4:37",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "724:6:37"
							},
							"scope": 3434,
							"src": "658:683:37",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "49:1294:37"
				},
				"id": 37
			},
			"packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/utils/ens/ENSSubdomainRegistrar.sol",
					"exportedSymbols": {
						"DaoAuthorizableUpgradeable": [
							3045
						],
						"ENS": [
							148
						],
						"ENSSubdomainRegistrar": [
							3659
						],
						"IABIResolver": [
							1726
						],
						"IAddrResolver": [
							1744
						],
						"IAddressResolver": [
							1765
						],
						"IContentHashResolver": [
							1782
						],
						"IDAO": [
							2980
						],
						"IDNSRecordResolver": [
							1815
						],
						"IDNSZoneResolver": [
							1834
						],
						"IERC165": [
							11
						],
						"IExtendedResolver": [
							1846
						],
						"IInterfaceResolver": [
							1867
						],
						"INameResolver": [
							1884
						],
						"IPubkeyResolver": [
							1905
						],
						"ITextResolver": [
							1928
						],
						"ProtocolVersion": [
							3693
						],
						"Resolver": [
							1705
						],
						"UUPSUpgradeable": [
							2389
						]
					},
					"id": 3660,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3435,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:38"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
							"file": "https://raw.githubusercontent.com/ensdomains/ens-contracts/v0.0.19/contracts/registry/ENS.sol",
							"id": 3436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3660,
							"sourceUnit": 149,
							"src": "76:103:38",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/ens-contracts/staging/contracts/resolvers/Resolver.sol",
							"id": 3437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3660,
							"sourceUnit": 1706,
							"src": "181:107:38",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/utils/protocol/ProtocolVersion.sol",
							"file": "../../../utils/protocol/ProtocolVersion.sol",
							"id": 3439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3660,
							"sourceUnit": 3694,
							"src": "292:76:38",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3438,
										"name": "ProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3693,
										"src": "300:15:38",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/v4.9.3/contracts/proxy/utils/UUPSUpgradeable.sol",
							"id": 3441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3660,
							"sourceUnit": 2390,
							"src": "370:147:38",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3440,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2389,
										"src": "378:15:38",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
							"file": "../../../core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol",
							"id": 3443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3660,
							"sourceUnit": 3046,
							"src": "519:112:38",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3442,
										"name": "DaoAuthorizableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3045,
										"src": "527:26:38",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../../core/dao/IDAO.sol",
							"id": 3445,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3660,
							"sourceUnit": 2981,
							"src": "633:48:38",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3444,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2980,
										"src": "641:4:38",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3447,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"1207:15:38"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2389,
										"src": "1207:15:38"
									},
									"id": 3448,
									"nodeType": "InheritanceSpecifier",
									"src": "1207:15:38"
								},
								{
									"baseName": {
										"id": 3449,
										"name": "DaoAuthorizableUpgradeable",
										"nameLocations": [
											"1224:26:38"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3045,
										"src": "1224:26:38"
									},
									"id": 3450,
									"nodeType": "InheritanceSpecifier",
									"src": "1224:26:38"
								},
								{
									"baseName": {
										"id": 3451,
										"name": "ProtocolVersion",
										"nameLocations": [
											"1252:15:38"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3693,
										"src": "1252:15:38"
									},
									"id": 3452,
									"nodeType": "InheritanceSpecifier",
									"src": "1252:15:38"
								}
							],
							"canonicalName": "ENSSubdomainRegistrar",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3446,
								"nodeType": "StructuredDocumentation",
								"src": "685:488:38",
								"text": "@title ENSSubdomainRegistrar\n @author Aragon Association - 2022-2023\n @notice This contract registers ENS subdomains under a parent domain specified in the initialization process and maintains ownership of the subdomain since only the resolver address is set. This contract must either be the domain node owner or an approved operator of the node owner. The default resolver being used is the one specified in the parent domain.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 3659,
							"linearizedBaseContracts": [
								3659,
								3693,
								3671,
								3045,
								1190,
								682,
								2389,
								2263,
								1949,
								1959
							],
							"name": "ENSSubdomainRegistrar",
							"nameLocation": "1182:21:38",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3453,
										"nodeType": "StructuredDocumentation",
										"src": "1275:87:38",
										"text": "@notice The ID of the permission required to call the `_authorizeUpgrade` function."
									},
									"functionSelector": "af7b2fed",
									"id": 3458,
									"mutability": "constant",
									"name": "UPGRADE_REGISTRAR_PERMISSION_ID",
									"nameLocation": "1392:31:38",
									"nodeType": "VariableDeclaration",
									"scope": 3659,
									"src": "1368:108:38",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3454,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1368:7:38",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "555047524144455f5245474953545241525f5045524d495353494f4e",
												"id": 3456,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1445:30:38",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff",
													"typeString": "literal_string \"UPGRADE_REGISTRAR_PERMISSION\""
												},
												"value": "UPGRADE_REGISTRAR_PERMISSION"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a1fcba4efb1e94b7648f5e0504bfd39734aead5f17965d12705915d771c859ff",
													"typeString": "literal_string \"UPGRADE_REGISTRAR_PERMISSION\""
												}
											],
											"id": 3455,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1435:9:38",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1435:41:38",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3459,
										"nodeType": "StructuredDocumentation",
										"src": "1485:110:38",
										"text": "@notice The ID of the permission required to call the `registerSubnode` and `setDefaultResolver` function."
									},
									"functionSelector": "9848ba51",
									"id": 3464,
									"mutability": "constant",
									"name": "REGISTER_ENS_SUBDOMAIN_PERMISSION_ID",
									"nameLocation": "1625:36:38",
									"nodeType": "VariableDeclaration",
									"scope": 3659,
									"src": "1601:118:38",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3460,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1601:7:38",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "52454749535445525f454e535f535542444f4d41494e5f5045524d495353494f4e",
												"id": 3462,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1683:35:38",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_bbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14",
													"typeString": "literal_string \"REGISTER_ENS_SUBDOMAIN_PERMISSION\""
												},
												"value": "REGISTER_ENS_SUBDOMAIN_PERMISSION"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_bbdfd23f099d7ed9f535e0f97d2123efb1332b16e023b8359b3b879eaecd3c14",
													"typeString": "literal_string \"REGISTER_ENS_SUBDOMAIN_PERMISSION\""
												}
											],
											"id": 3461,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1673:9:38",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1673:46:38",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3465,
										"nodeType": "StructuredDocumentation",
										"src": "1728:37:38",
										"text": "@notice The ENS registry contract"
									},
									"functionSelector": "3f15457f",
									"id": 3468,
									"mutability": "mutable",
									"name": "ens",
									"nameLocation": "1782:3:38",
									"nodeType": "VariableDeclaration",
									"scope": 3659,
									"src": "1771:14:38",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ENS_$148",
										"typeString": "contract ENS"
									},
									"typeName": {
										"id": 3467,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3466,
											"name": "ENS",
											"nameLocations": [
												"1771:3:38"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 148,
											"src": "1771:3:38"
										},
										"referencedDeclaration": 148,
										"src": "1771:3:38",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ENS_$148",
											"typeString": "contract ENS"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3469,
										"nodeType": "StructuredDocumentation",
										"src": "1794:74:38",
										"text": "@notice The namehash of the domain on which subdomains are registered."
									},
									"functionSelector": "d70754ec",
									"id": 3471,
									"mutability": "mutable",
									"name": "node",
									"nameLocation": "1889:4:38",
									"nodeType": "VariableDeclaration",
									"scope": 3659,
									"src": "1874:19:38",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3470,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1874:7:38",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3472,
										"nodeType": "StructuredDocumentation",
										"src": "1902:78:38",
										"text": "@notice The address of the ENS resolver resolving the names to an address."
									},
									"functionSelector": "04f3bcec",
									"id": 3474,
									"mutability": "mutable",
									"name": "resolver",
									"nameLocation": "2001:8:38",
									"nodeType": "VariableDeclaration",
									"scope": 3659,
									"src": "1986:23:38",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3473,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1986:7:38",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3475,
										"nodeType": "StructuredDocumentation",
										"src": "2018:152:38",
										"text": "@notice Thrown if the subnode is already registered.\n @param subnode The subnode namehash.\n @param nodeOwner The node owner address."
									},
									"errorSelector": "01f95aba",
									"id": 3481,
									"name": "AlreadyRegistered",
									"nameLocation": "2182:17:38",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3477,
												"mutability": "mutable",
												"name": "subnode",
												"nameLocation": "2208:7:38",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "2200:15:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3479,
												"mutability": "mutable",
												"name": "nodeOwner",
												"nameLocation": "2225:9:38",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "2217:17:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:38",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2199:36:38"
									},
									"src": "2176:60:38"
								},
								{
									"documentation": {
										"id": 3482,
										"nodeType": "StructuredDocumentation",
										"src": "2244:141:38",
										"text": "@notice Thrown if node's resolver is invalid.\n @param node The node namehash.\n @param resolver The node resolver address."
									},
									"errorSelector": "1ae12f8a",
									"id": 3488,
									"name": "InvalidResolver",
									"nameLocation": "2397:15:38",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3484,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "2421:4:38",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "2413:12:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3483,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3486,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "2435:8:38",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "2427:16:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:38",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:32:38"
									},
									"src": "2391:54:38"
								},
								{
									"body": {
										"id": 3495,
										"nodeType": "Block",
										"src": "2626:41:38",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3492,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2637:20:38",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2637:22:38",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3494,
												"nodeType": "ExpressionStatement",
												"src": "2637:22:38"
											}
										]
									},
									"documentation": {
										"id": 3489,
										"nodeType": "StructuredDocumentation",
										"src": "2453:153:38",
										"text": "@dev Used to disallow initializing the implementation contract by an attacker for extra safety.\n @custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 3496,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2623:2:38"
									},
									"returnParameters": {
										"id": 3491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2626:0:38"
									},
									"scope": 3659,
									"src": "2612:55:38",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3546,
										"nodeType": "Block",
										"src": "3361:335:38",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3511,
															"name": "_managingDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3500,
															"src": "3406:12:38",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDAO_$2980",
																"typeString": "contract IDAO"
															}
														],
														"id": 3510,
														"name": "__DaoAuthorizableUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3009,
														"src": "3372:33:38",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IDAO_$2980_$returns$__$",
															"typeString": "function (contract IDAO)"
														}
													},
													"id": 3512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3372:47:38",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3513,
												"nodeType": "ExpressionStatement",
												"src": "3372:47:38"
											},
											{
												"expression": {
													"id": 3516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3514,
														"name": "ens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3468,
														"src": "3432:3:38",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENS_$148",
															"typeString": "contract ENS"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3515,
														"name": "_ens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3503,
														"src": "3438:4:38",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENS_$148",
															"typeString": "contract ENS"
														}
													},
													"src": "3432:10:38",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENS_$148",
														"typeString": "contract ENS"
													}
												},
												"id": 3517,
												"nodeType": "ExpressionStatement",
												"src": "3432:10:38"
											},
											{
												"expression": {
													"id": 3520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3518,
														"name": "node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3471,
														"src": "3453:4:38",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3519,
														"name": "_node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3505,
														"src": "3460:5:38",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3453:12:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3521,
												"nodeType": "ExpressionStatement",
												"src": "3453:12:38"
											},
											{
												"assignments": [
													3523
												],
												"declarations": [
													{
														"constant": false,
														"id": 3523,
														"mutability": "mutable",
														"name": "nodeResolver",
														"nameLocation": "3486:12:38",
														"nodeType": "VariableDeclaration",
														"scope": 3546,
														"src": "3478:20:38",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3522,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3478:7:38",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3528,
												"initialValue": {
													"arguments": [
														{
															"id": 3526,
															"name": "_node",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3505,
															"src": "3514:5:38",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3524,
															"name": "ens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3468,
															"src": "3501:3:38",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENS_$148",
																"typeString": "contract ENS"
															}
														},
														"id": 3525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3505:8:38",
														"memberName": "resolver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "3501:12:38",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32) view external returns (address)"
														}
													},
													"id": 3527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:19:38",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3478:42:38"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3529,
														"name": "nodeResolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3523,
														"src": "3537:12:38",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3561:1:38",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3553:7:38",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3530,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3553:7:38",
																"typeDescriptions": {}
															}
														},
														"id": 3533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3553:10:38",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3537:26:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3541,
												"nodeType": "IfStatement",
												"src": "3533:120:38",
												"trueBody": {
													"id": 3540,
													"nodeType": "Block",
													"src": "3565:88:38",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3536,
																		"name": "_node",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3505,
																		"src": "3610:5:38",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 3537,
																		"name": "nodeResolver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3523,
																		"src": "3627:12:38",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3535,
																	"name": "InvalidResolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3488,
																	"src": "3587:15:38",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address) pure"
																	}
																},
																"id": 3538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"3604:4:38",
																	"3617:8:38"
																],
																"names": [
																	"node",
																	"resolver"
																],
																"nodeType": "FunctionCall",
																"src": "3587:54:38",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3539,
															"nodeType": "RevertStatement",
															"src": "3580:61:38"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3542,
														"name": "resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3474,
														"src": "3665:8:38",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3543,
														"name": "nodeResolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3523,
														"src": "3676:12:38",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3665:23:38",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3545,
												"nodeType": "ExpressionStatement",
												"src": "3665:23:38"
											}
										]
									},
									"documentation": {
										"id": 3497,
										"nodeType": "StructuredDocumentation",
										"src": "2675:595:38",
										"text": "@notice Initializes the component by\n - checking that the contract is the domain node owner or an approved operator\n - initializing the underlying component\n - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID\n - setting the ENS contract, the domain node hash, and resolver.\n @param _managingDao The interface of the DAO managing the components permissions.\n @param _ens The interface of the ENS registry to be used.\n @param _node The ENS parent domain node under which the subdomains are to be registered."
									},
									"functionSelector": "6133f985",
									"id": 3547,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3508,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3507,
												"name": "initializer",
												"nameLocations": [
													"3349:11:38"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 584,
												"src": "3349:11:38"
											},
											"nodeType": "ModifierInvocation",
											"src": "3349:11:38"
										}
									],
									"name": "initialize",
									"nameLocation": "3285:10:38",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3500,
												"mutability": "mutable",
												"name": "_managingDao",
												"nameLocation": "3301:12:38",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "3296:17:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IDAO_$2980",
													"typeString": "contract IDAO"
												},
												"typeName": {
													"id": 3499,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3498,
														"name": "IDAO",
														"nameLocations": [
															"3296:4:38"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2980,
														"src": "3296:4:38"
													},
													"referencedDeclaration": 2980,
													"src": "3296:4:38",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDAO_$2980",
														"typeString": "contract IDAO"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3503,
												"mutability": "mutable",
												"name": "_ens",
												"nameLocation": "3319:4:38",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "3315:8:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ENS_$148",
													"typeString": "contract ENS"
												},
												"typeName": {
													"id": 3502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3501,
														"name": "ENS",
														"nameLocations": [
															"3315:3:38"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 148,
														"src": "3315:3:38"
													},
													"referencedDeclaration": 148,
													"src": "3315:3:38",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENS_$148",
														"typeString": "contract ENS"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3505,
												"mutability": "mutable",
												"name": "_node",
												"nameLocation": "3333:5:38",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "3325:13:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3325:7:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3295:44:38"
									},
									"returnParameters": {
										"id": 3509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3361:0:38"
									},
									"scope": 3659,
									"src": "3276:420:38",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2388
									],
									"body": {
										"id": 3557,
										"nodeType": "Block",
										"src": "4160:2:38",
										"statements": []
									},
									"documentation": {
										"id": 3548,
										"nodeType": "StructuredDocumentation",
										"src": "3704:334:38",
										"text": "@notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\n @dev The caller must have the `UPGRADE_REGISTRAR_PERMISSION_ID` permission."
									},
									"id": 3558,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3554,
													"name": "UPGRADE_REGISTRAR_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3458,
													"src": "4127:31:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3555,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3553,
												"name": "auth",
												"nameLocations": [
													"4122:4:38"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3039,
												"src": "4122:4:38"
											},
											"nodeType": "ModifierInvocation",
											"src": "4122:37:38"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "4053:17:38",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3552,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4113:8:38"
									},
									"parameters": {
										"id": 3551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3558,
												"src": "4081:7:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:38",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:25:38"
									},
									"returnParameters": {
										"id": 3556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4160:0:38"
									},
									"scope": 3659,
									"src": "4044:118:38",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3625,
										"nodeType": "Block",
										"src": "4687:416:38",
										"statements": [
											{
												"assignments": [
													3570
												],
												"declarations": [
													{
														"constant": false,
														"id": 3570,
														"mutability": "mutable",
														"name": "subnode",
														"nameLocation": "4706:7:38",
														"nodeType": "VariableDeclaration",
														"scope": 3625,
														"src": "4698:15:38",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3569,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4698:7:38",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3578,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3574,
																	"name": "node",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3471,
																	"src": "4743:4:38",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3575,
																	"name": "_label",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3561,
																	"src": "4749:6:38",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 3572,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4726:3:38",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4730:12:38",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4726:16:38",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4726:30:38",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3571,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4716:9:38",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4716:41:38",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4698:59:38"
											},
											{
												"assignments": [
													3580
												],
												"declarations": [
													{
														"constant": false,
														"id": 3580,
														"mutability": "mutable",
														"name": "currentOwner",
														"nameLocation": "4776:12:38",
														"nodeType": "VariableDeclaration",
														"scope": 3625,
														"src": "4768:20:38",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3579,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4768:7:38",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3585,
												"initialValue": {
													"arguments": [
														{
															"id": 3583,
															"name": "subnode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3570,
															"src": "4801:7:38",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3581,
															"name": "ens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3468,
															"src": "4791:3:38",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENS_$148",
																"typeString": "contract ENS"
															}
														},
														"id": 3582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4795:5:38",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 117,
														"src": "4791:9:38",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32) view external returns (address)"
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4791:18:38",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:41:38"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3586,
														"name": "currentOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3580,
														"src": "4826:12:38",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4850:1:38",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4842:7:38",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4842:7:38",
																"typeDescriptions": {}
															}
														},
														"id": 3590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4842:10:38",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4826:26:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3598,
												"nodeType": "IfStatement",
												"src": "4822:106:38",
												"trueBody": {
													"id": 3597,
													"nodeType": "Block",
													"src": "4854:74:38",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3593,
																		"name": "subnode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3570,
																		"src": "4894:7:38",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 3594,
																		"name": "currentOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3580,
																		"src": "4903:12:38",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3592,
																	"name": "AlreadyRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3481,
																	"src": "4876:17:38",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address) pure"
																	}
																},
																"id": 3595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4876:40:38",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3596,
															"nodeType": "RevertStatement",
															"src": "4869:47:38"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3602,
															"name": "node",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3471,
															"src": "4960:4:38",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3603,
															"name": "_label",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3561,
															"src": "4966:6:38",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 3606,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4982:4:38",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
																		"typeString": "contract ENSSubdomainRegistrar"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ENSSubdomainRegistrar_$3659",
																		"typeString": "contract ENSSubdomainRegistrar"
																	}
																],
																"id": 3605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4974:7:38",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3604,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4974:7:38",
																	"typeDescriptions": {}
																}
															},
															"id": 3607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4974:13:38",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3599,
															"name": "ens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3468,
															"src": "4940:3:38",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENS_$148",
																"typeString": "contract ENS"
															}
														},
														"id": 3601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4944:15:38",
														"memberName": "setSubnodeOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 82,
														"src": "4940:19:38",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,address) external returns (bytes32)"
														}
													},
													"id": 3608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4940:48:38",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3609,
												"nodeType": "ExpressionStatement",
												"src": "4940:48:38"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3613,
															"name": "subnode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3570,
															"src": "5015:7:38",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3614,
															"name": "resolver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3474,
															"src": "5024:8:38",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3610,
															"name": "ens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3468,
															"src": "4999:3:38",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENS_$148",
																"typeString": "contract ENS"
															}
														},
														"id": 3612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5003:11:38",
														"memberName": "setResolver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "4999:15:38",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) external"
														}
													},
													"id": 3615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:34:38",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3616,
												"nodeType": "ExpressionStatement",
												"src": "4999:34:38"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3621,
															"name": "subnode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3570,
															"src": "5071:7:38",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3622,
															"name": "_targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3563,
															"src": "5080:14:38",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3618,
																	"name": "resolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3474,
																	"src": "5053:8:38",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3617,
																"name": "Resolver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "5044:8:38",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Resolver_$1705_$",
																	"typeString": "type(contract Resolver)"
																}
															},
															"id": 3619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5044:18:38",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Resolver_$1705",
																"typeString": "contract Resolver"
															}
														},
														"id": 3620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5063:7:38",
														"memberName": "setAddr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1599,
														"src": "5044:26:38",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) external"
														}
													},
													"id": 3623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5044:51:38",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3624,
												"nodeType": "ExpressionStatement",
												"src": "5044:51:38"
											}
										]
									},
									"documentation": {
										"id": 3559,
										"nodeType": "StructuredDocumentation",
										"src": "4170:369:38",
										"text": "@notice Registers a new subdomain with this registrar as the owner and set the target address in the resolver.\n @dev It reverts with no message if this contract isn't the owner nor an approved operator for the given node.\n @param _label The labelhash of the subdomain name.\n @param _targetAddress The address to which the subdomain resolves."
									},
									"functionSelector": "89bb4145",
									"id": 3626,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3566,
													"name": "REGISTER_ENS_SUBDOMAIN_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3464,
													"src": "4649:36:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3567,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3565,
												"name": "auth",
												"nameLocations": [
													"4644:4:38"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3039,
												"src": "4644:4:38"
											},
											"nodeType": "ModifierInvocation",
											"src": "4644:42:38"
										}
									],
									"name": "registerSubnode",
									"nameLocation": "4554:15:38",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "_label",
												"nameLocation": "4588:6:38",
												"nodeType": "VariableDeclaration",
												"scope": 3626,
												"src": "4580:14:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3560,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3563,
												"mutability": "mutable",
												"name": "_targetAddress",
												"nameLocation": "4613:14:38",
												"nodeType": "VariableDeclaration",
												"scope": 3626,
												"src": "4605:22:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4605:7:38",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4569:65:38"
									},
									"returnParameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4687:0:38"
									},
									"scope": 3659,
									"src": "4545:558:38",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3652,
										"nodeType": "Block",
										"src": "5393:164:38",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3635,
														"name": "_resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3629,
														"src": "5408:9:38",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5429:1:38",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5421:7:38",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3636,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5421:7:38",
																"typeDescriptions": {}
															}
														},
														"id": 3639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5421:10:38",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5408:23:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3647,
												"nodeType": "IfStatement",
												"src": "5404:113:38",
												"trueBody": {
													"id": 3646,
													"nodeType": "Block",
													"src": "5433:84:38",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3642,
																		"name": "node",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3471,
																		"src": "5478:4:38",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 3643,
																		"name": "_resolver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3629,
																		"src": "5494:9:38",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3641,
																	"name": "InvalidResolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3488,
																	"src": "5455:15:38",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address) pure"
																	}
																},
																"id": 3644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"5472:4:38",
																	"5484:8:38"
																],
																"names": [
																	"node",
																	"resolver"
																],
																"nodeType": "FunctionCall",
																"src": "5455:50:38",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3645,
															"nodeType": "RevertStatement",
															"src": "5448:57:38"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3648,
														"name": "resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3474,
														"src": "5529:8:38",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3649,
														"name": "_resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3629,
														"src": "5540:9:38",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5529:20:38",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3651,
												"nodeType": "ExpressionStatement",
												"src": "5529:20:38"
											}
										]
									},
									"documentation": {
										"id": 3627,
										"nodeType": "StructuredDocumentation",
										"src": "5111:161:38",
										"text": "@notice Sets the default resolver contract address that the subdomains being registered will use.\n @param _resolver The resolver contract to be used."
									},
									"functionSelector": "c66485b2",
									"id": 3653,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3632,
													"name": "REGISTER_ENS_SUBDOMAIN_PERMISSION_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3464,
													"src": "5355:36:38",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3633,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3631,
												"name": "auth",
												"nameLocations": [
													"5350:4:38"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3039,
												"src": "5350:4:38"
											},
											"nodeType": "ModifierInvocation",
											"src": "5350:42:38"
										}
									],
									"name": "setDefaultResolver",
									"nameLocation": "5287:18:38",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3629,
												"mutability": "mutable",
												"name": "_resolver",
												"nameLocation": "5324:9:38",
												"nodeType": "VariableDeclaration",
												"scope": 3653,
												"src": "5316:17:38",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:38",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5305:35:38"
									},
									"returnParameters": {
										"id": 3634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5393:0:38"
									},
									"scope": 3659,
									"src": "5278:279:38",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3654,
										"nodeType": "StructuredDocumentation",
										"src": "5565:273:38",
										"text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
									},
									"id": 3658,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "5864:5:38",
									"nodeType": "VariableDeclaration",
									"scope": 3659,
									"src": "5844:25:38",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$47_storage",
										"typeString": "uint256[47]"
									},
									"typeName": {
										"baseType": {
											"id": 3655,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5844:7:38",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3657,
										"length": {
											"hexValue": "3437",
											"id": 3656,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5852:2:38",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_47_by_1",
												"typeString": "int_const 47"
											},
											"value": "47"
										},
										"nodeType": "ArrayTypeName",
										"src": "5844:11:38",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$47_storage_ptr",
											"typeString": "uint256[47]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 3660,
							"src": "1173:4700:38",
							"usedErrors": [
								3060,
								3481,
								3488
							]
						}
					],
					"src": "49:5826:38"
				},
				"id": 38
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/protocol/IProtocolVersion.sol",
					"exportedSymbols": {
						"IProtocolVersion": [
							3671
						]
					},
					"id": 3672,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:39"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProtocolVersion",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3662,
								"nodeType": "StructuredDocumentation",
								"src": "76:203:39",
								"text": "@title IProtocolVersion\n @author Aragon Association - 2022-2023\n @notice An interface defining the semantic Aragon OSx protocol version number.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": false,
							"id": 3671,
							"linearizedBaseContracts": [
								3671
							],
							"name": "IProtocolVersion",
							"nameLocation": "289:16:39",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3663,
										"nodeType": "StructuredDocumentation",
										"src": "313:446:39",
										"text": "@notice Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\n @return _version Returns the semantic Aragon OSx protocol version number.\n @dev This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts."
									},
									"functionSelector": "2ae9c600",
									"id": 3670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolVersion",
									"nameLocation": "774:15:39",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:39"
									},
									"returnParameters": {
										"id": 3669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3668,
												"mutability": "mutable",
												"name": "_version",
												"nameLocation": "831:8:39",
												"nodeType": "VariableDeclaration",
												"scope": 3670,
												"src": "815:24:39",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
													"typeString": "uint8[3]"
												},
												"typeName": {
													"baseType": {
														"id": 3665,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "815:5:39",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 3667,
													"length": {
														"hexValue": "33",
														"id": 3666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "821:1:39",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "815:8:39",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
														"typeString": "uint8[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:26:39"
									},
									"scope": 3671,
									"src": "765:76:39",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3672,
							"src": "279:565:39",
							"usedErrors": []
						}
					],
					"src": "49:797:39"
				},
				"id": 39
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/protocol/ProtocolVersion.sol",
					"exportedSymbols": {
						"IProtocolVersion": [
							3671
						],
						"ProtocolVersion": [
							3693
						]
					},
					"id": 3694,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3673,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:40"
						},
						{
							"absolutePath": "packages/contracts/src/utils/protocol/IProtocolVersion.sol",
							"file": "./IProtocolVersion.sol",
							"id": 3675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3694,
							"sourceUnit": 3672,
							"src": "76:56:40",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3674,
										"name": "IProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3671,
										"src": "84:16:40",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3677,
										"name": "IProtocolVersion",
										"nameLocations": [
											"518:16:40"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3671,
										"src": "518:16:40"
									},
									"id": 3678,
									"nodeType": "InheritanceSpecifier",
									"src": "518:16:40"
								}
							],
							"canonicalName": "ProtocolVersion",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3676,
								"nodeType": "StructuredDocumentation",
								"src": "136:345:40",
								"text": "@title ProtocolVersion\n @author Aragon Association - 2023\n @notice An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\n @dev Do not add any new variables to this contract that would shift down storage in the inheritance chain.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 3693,
							"linearizedBaseContracts": [
								3693,
								3671
							],
							"name": "ProtocolVersion",
							"nameLocation": "499:15:40",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										3670
									],
									"body": {
										"id": 3691,
										"nodeType": "Block",
										"src": "721:35:40",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 3686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "740:1:40",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "34",
															"id": 3687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "743:1:40",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														{
															"hexValue": "30",
															"id": 3688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "746:1:40",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 3689,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "739:9:40",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
														"typeString": "uint8[3] memory"
													}
												},
												"functionReturnParameters": 3685,
												"id": 3690,
												"nodeType": "Return",
												"src": "732:16:40"
											}
										]
									},
									"documentation": {
										"id": 3679,
										"nodeType": "StructuredDocumentation",
										"src": "618:32:40",
										"text": "@inheritdoc IProtocolVersion"
									},
									"functionSelector": "2ae9c600",
									"id": 3692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "protocolVersion",
									"nameLocation": "665:15:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:40"
									},
									"returnParameters": {
										"id": 3685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3692,
												"src": "704:15:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
													"typeString": "uint8[3]"
												},
												"typeName": {
													"baseType": {
														"id": 3681,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "704:5:40",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 3683,
													"length": {
														"hexValue": "33",
														"id": 3682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "710:1:40",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "704:8:40",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
														"typeString": "uint8[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:17:40"
									},
									"scope": 3693,
									"src": "656:100:40",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3694,
							"src": "481:278:40",
							"usedErrors": []
						}
					],
					"src": "49:712:40"
				},
				"id": 40
			}
		}
	}
}